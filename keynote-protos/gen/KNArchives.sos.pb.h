// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KNArchives.sos.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_KNArchives_2esos_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_KNArchives_2esos_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "TSPMessages.pb.h"
#include "KNArchives.pb.h"
#include "TSDArchives.sos.pb.h"
#include "TSSArchives.sos.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_KNArchives_2esos_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_KNArchives_2esos_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_KNArchives_2esos_2eproto;
namespace KNSOS {
class MotionBackgroundStylePropertyChangeSetArchive;
struct MotionBackgroundStylePropertyChangeSetArchiveDefaultTypeInternal;
extern MotionBackgroundStylePropertyChangeSetArchiveDefaultTypeInternal _MotionBackgroundStylePropertyChangeSetArchive_default_instance_;
class SlideStylePropertyChangeSetArchive;
struct SlideStylePropertyChangeSetArchiveDefaultTypeInternal;
extern SlideStylePropertyChangeSetArchiveDefaultTypeInternal _SlideStylePropertyChangeSetArchive_default_instance_;
class SpecSetTransitionAttributesArchive;
struct SpecSetTransitionAttributesArchiveDefaultTypeInternal;
extern SpecSetTransitionAttributesArchiveDefaultTypeInternal _SpecSetTransitionAttributesArchive_default_instance_;
class SpecTransitionAttributesArchive;
struct SpecTransitionAttributesArchiveDefaultTypeInternal;
extern SpecTransitionAttributesArchiveDefaultTypeInternal _SpecTransitionAttributesArchive_default_instance_;
}  // namespace KNSOS
PROTOBUF_NAMESPACE_OPEN
template<> ::KNSOS::MotionBackgroundStylePropertyChangeSetArchive* Arena::CreateMaybeMessage<::KNSOS::MotionBackgroundStylePropertyChangeSetArchive>(Arena*);
template<> ::KNSOS::SlideStylePropertyChangeSetArchive* Arena::CreateMaybeMessage<::KNSOS::SlideStylePropertyChangeSetArchive>(Arena*);
template<> ::KNSOS::SpecSetTransitionAttributesArchive* Arena::CreateMaybeMessage<::KNSOS::SpecSetTransitionAttributesArchive>(Arena*);
template<> ::KNSOS::SpecTransitionAttributesArchive* Arena::CreateMaybeMessage<::KNSOS::SpecTransitionAttributesArchive>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace KNSOS {

// ===================================================================

class SpecSetTransitionAttributesArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:KNSOS.SpecSetTransitionAttributesArchive) */ {
 public:
  inline SpecSetTransitionAttributesArchive() : SpecSetTransitionAttributesArchive(nullptr) {}
  ~SpecSetTransitionAttributesArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecSetTransitionAttributesArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetTransitionAttributesArchive(const SpecSetTransitionAttributesArchive& from);
  SpecSetTransitionAttributesArchive(SpecSetTransitionAttributesArchive&& from) noexcept
    : SpecSetTransitionAttributesArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetTransitionAttributesArchive& operator=(const SpecSetTransitionAttributesArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetTransitionAttributesArchive& operator=(SpecSetTransitionAttributesArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetTransitionAttributesArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetTransitionAttributesArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetTransitionAttributesArchive*>(
               &_SpecSetTransitionAttributesArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SpecSetTransitionAttributesArchive& a, SpecSetTransitionAttributesArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetTransitionAttributesArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetTransitionAttributesArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecSetTransitionAttributesArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecSetTransitionAttributesArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetTransitionAttributesArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecSetTransitionAttributesArchive& from) {
    SpecSetTransitionAttributesArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetTransitionAttributesArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "KNSOS.SpecSetTransitionAttributesArchive";
  }
  protected:
  explicit SpecSetTransitionAttributesArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransitionAttributesFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // optional .KN.TransitionAttributesArchive transition_attributes = 1;
  bool has_transition_attributes() const;
  private:
  bool _internal_has_transition_attributes() const;
  public:
  void clear_transition_attributes();
  const ::KN::TransitionAttributesArchive& transition_attributes() const;
  PROTOBUF_NODISCARD ::KN::TransitionAttributesArchive* release_transition_attributes();
  ::KN::TransitionAttributesArchive* mutable_transition_attributes();
  void set_allocated_transition_attributes(::KN::TransitionAttributesArchive* transition_attributes);
  private:
  const ::KN::TransitionAttributesArchive& _internal_transition_attributes() const;
  ::KN::TransitionAttributesArchive* _internal_mutable_transition_attributes();
  public:
  void unsafe_arena_set_allocated_transition_attributes(
      ::KN::TransitionAttributesArchive* transition_attributes);
  ::KN::TransitionAttributesArchive* unsafe_arena_release_transition_attributes();

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:KNSOS.SpecSetTransitionAttributesArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::KN::TransitionAttributesArchive* transition_attributes_;
    bool unset_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_KNArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecTransitionAttributesArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:KNSOS.SpecTransitionAttributesArchive) */ {
 public:
  inline SpecTransitionAttributesArchive() : SpecTransitionAttributesArchive(nullptr) {}
  ~SpecTransitionAttributesArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecTransitionAttributesArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecTransitionAttributesArchive(const SpecTransitionAttributesArchive& from);
  SpecTransitionAttributesArchive(SpecTransitionAttributesArchive&& from) noexcept
    : SpecTransitionAttributesArchive() {
    *this = ::std::move(from);
  }

  inline SpecTransitionAttributesArchive& operator=(const SpecTransitionAttributesArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecTransitionAttributesArchive& operator=(SpecTransitionAttributesArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecTransitionAttributesArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecTransitionAttributesArchive* internal_default_instance() {
    return reinterpret_cast<const SpecTransitionAttributesArchive*>(
               &_SpecTransitionAttributesArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SpecTransitionAttributesArchive& a, SpecTransitionAttributesArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecTransitionAttributesArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecTransitionAttributesArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecTransitionAttributesArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecTransitionAttributesArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecTransitionAttributesArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecTransitionAttributesArchive& from) {
    SpecTransitionAttributesArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecTransitionAttributesArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "KNSOS.SpecTransitionAttributesArchive";
  }
  protected:
  explicit SpecTransitionAttributesArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecSetTransitionAttributesFieldNumber = 1,
  };
  // optional .KNSOS.SpecSetTransitionAttributesArchive spec_set_transition_attributes = 1;
  bool has_spec_set_transition_attributes() const;
  private:
  bool _internal_has_spec_set_transition_attributes() const;
  public:
  void clear_spec_set_transition_attributes();
  const ::KNSOS::SpecSetTransitionAttributesArchive& spec_set_transition_attributes() const;
  PROTOBUF_NODISCARD ::KNSOS::SpecSetTransitionAttributesArchive* release_spec_set_transition_attributes();
  ::KNSOS::SpecSetTransitionAttributesArchive* mutable_spec_set_transition_attributes();
  void set_allocated_spec_set_transition_attributes(::KNSOS::SpecSetTransitionAttributesArchive* spec_set_transition_attributes);
  private:
  const ::KNSOS::SpecSetTransitionAttributesArchive& _internal_spec_set_transition_attributes() const;
  ::KNSOS::SpecSetTransitionAttributesArchive* _internal_mutable_spec_set_transition_attributes();
  public:
  void unsafe_arena_set_allocated_spec_set_transition_attributes(
      ::KNSOS::SpecSetTransitionAttributesArchive* spec_set_transition_attributes);
  ::KNSOS::SpecSetTransitionAttributesArchive* unsafe_arena_release_spec_set_transition_attributes();

  // @@protoc_insertion_point(class_scope:KNSOS.SpecTransitionAttributesArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::KNSOS::SpecSetTransitionAttributesArchive* spec_set_transition_attributes_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_KNArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class MotionBackgroundStylePropertyChangeSetArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:KNSOS.MotionBackgroundStylePropertyChangeSetArchive) */ {
 public:
  inline MotionBackgroundStylePropertyChangeSetArchive() : MotionBackgroundStylePropertyChangeSetArchive(nullptr) {}
  ~MotionBackgroundStylePropertyChangeSetArchive() override;
  explicit PROTOBUF_CONSTEXPR MotionBackgroundStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MotionBackgroundStylePropertyChangeSetArchive(const MotionBackgroundStylePropertyChangeSetArchive& from);
  MotionBackgroundStylePropertyChangeSetArchive(MotionBackgroundStylePropertyChangeSetArchive&& from) noexcept
    : MotionBackgroundStylePropertyChangeSetArchive() {
    *this = ::std::move(from);
  }

  inline MotionBackgroundStylePropertyChangeSetArchive& operator=(const MotionBackgroundStylePropertyChangeSetArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotionBackgroundStylePropertyChangeSetArchive& operator=(MotionBackgroundStylePropertyChangeSetArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotionBackgroundStylePropertyChangeSetArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const MotionBackgroundStylePropertyChangeSetArchive* internal_default_instance() {
    return reinterpret_cast<const MotionBackgroundStylePropertyChangeSetArchive*>(
               &_MotionBackgroundStylePropertyChangeSetArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MotionBackgroundStylePropertyChangeSetArchive& a, MotionBackgroundStylePropertyChangeSetArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(MotionBackgroundStylePropertyChangeSetArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotionBackgroundStylePropertyChangeSetArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotionBackgroundStylePropertyChangeSetArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MotionBackgroundStylePropertyChangeSetArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MotionBackgroundStylePropertyChangeSetArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MotionBackgroundStylePropertyChangeSetArchive& from) {
    MotionBackgroundStylePropertyChangeSetArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotionBackgroundStylePropertyChangeSetArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "KNSOS.MotionBackgroundStylePropertyChangeSetArchive";
  }
  protected:
  explicit MotionBackgroundStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kVariantFieldNumber = 3,
    kColorGradientFieldNumber = 5,
    kRandomSeedFieldNumber = 7,
    kColorBlurSigmaFieldNumber = 9,
    kColorContrastFieldNumber = 11,
    kColorGammaFieldNumber = 13,
    kColorSaturationFieldNumber = 15,
    kColorBrightnessFieldNumber = 17,
    kColorHueFieldNumber = 19,
    kColorVibranceFieldNumber = 21,
    kNoiseAmplitudeFieldNumber = 23,
    kNoiseMovementFieldNumber = 25,
    kNoiseOctavesFieldNumber = 27,
    kNoiseScaleFieldNumber = 29,
    kNoiseScaleHorizontalFieldNumber = 31,
    kNoiseScaleVerticalFieldNumber = 33,
    kNoiseGainFieldNumber = 35,
    kNoiseLacunarityFieldNumber = 37,
    kNoiseSpeedFieldNumber = 39,
    kColorPaletteOffsetFieldNumber = 41,
    kZoomFieldNumber = 43,
    kInvertFieldNumber = 45,
    kBlendModeFieldNumber = 47,
    kSourceBlendFactorFieldNumber = 49,
    kDestBlendFactorFieldNumber = 51,
    kMotionFieldNumber = 53,
    kBackgroundColorFieldNumber = 55,
    kForegroundColorFieldNumber = 57,
    kLineColorFieldNumber = 59,
    kPointColorFieldNumber = 61,
    kAlphaFieldNumber = 63,
    kBorderFieldNumber = 65,
    kBlendFieldNumber = 67,
    kBrightnessFieldNumber = 69,
    kBorderLightnessFieldNumber = 71,
    kContrastFieldNumber = 73,
    kDampingFieldNumber = 75,
    kDensityFieldNumber = 77,
    kDiffusePowerFieldNumber = 79,
    kDistortionFieldNumber = 81,
    kEntropyFieldNumber = 83,
    kExposureFieldNumber = 85,
    kFilterFieldNumber = 87,
    kFogDistanceFieldNumber = 89,
    kFogPowerFieldNumber = 91,
    kGammaFieldNumber = 93,
    kGrainAmountFieldNumber = 95,
    kGrainIntensityFieldNumber = 97,
    kHueFieldNumber = 99,
    kLightnessFieldNumber = 101,
    kLineAlphaFieldNumber = 103,
    kLineCenterFieldNumber = 105,
    kLineFadeFieldNumber = 107,
    kLineFadePowerFieldNumber = 109,
    kLineLengthFieldNumber = 111,
    kLineWidthFieldNumber = 113,
    kNoiseSizeScaleFieldNumber = 115,
    kNoiseSizeWeightFieldNumber = 117,
    kNoiseVarianceFieldNumber = 119,
    kOffsetFieldNumber = 121,
    kMotionBackgroundOpacityFieldNumber = 123,
    kPointDepthAlphaFieldNumber = 125,
    kPointSizeFieldNumber = 127,
    kPowerFieldNumber = 129,
    kRadiusFieldNumber = 131,
    kRefractionFieldNumber = 133,
    kResolutionFieldNumber = 135,
    kSaturationFieldNumber = 137,
    kScaleFieldNumber = 139,
    kShadowAlphaFieldNumber = 141,
    kShadowAngleFieldNumber = 143,
    kShadowOffsetFieldNumber = 145,
    kShadowScaleFieldNumber = 147,
    kShadowValueFieldNumber = 149,
    kSpeedFieldNumber = 151,
    kTexturePowerFieldNumber = 153,
    kTimeFieldNumber = 155,
    kDrawPointsFieldNumber = 157,
    kDrawLinesFieldNumber = 159,
    kDrawShadowsFieldNumber = 161,
    kPixelsPerDivisionFieldNumber = 163,
    kSymmetryFieldNumber = 165,
    kLockFocusFieldNumber = 167,
    kAmplitudeFieldNumber = 169,
    kEnvelopeFieldNumber = 171,
    kYOffsetFieldNumber = 173,
    kFocusFieldNumber = 175,
    kBlurFieldNumber = 177,
    kGrainSpeedFieldNumber = 179,
    kMeshColorFieldNumber = 181,
    kAngleFieldNumber = 183,
    kMeshLineWidthFieldNumber = 185,
    kDeltaTimeFieldNumber = 187,
    kThresholdFieldNumber = 189,
    kTimeStartFieldNumber = 191,
    kInstanceCountFieldNumber = 193,
    kExtrusionFieldNumber = 195,
    kNoiseOffsetFieldNumber = 197,
    kColorHueOffsetFieldNumber = 199,
    kShadowHueFieldNumber = 201,
    kShadowHueOffsetFieldNumber = 203,
    kShadowSaturationFieldNumber = 205,
    kShadowBrightnessFieldNumber = 207,
    kShadowIntensityFieldNumber = 209,
    kShadowPowerFieldNumber = 211,
    kNoiseOctavesIterationsFieldNumber = 213,
    kNameUndefinedFieldNumber = 2,
    kVariantUndefinedFieldNumber = 4,
    kColorGradientUndefinedFieldNumber = 6,
    kRandomSeedUndefinedFieldNumber = 8,
    kColorBlurSigmaUndefinedFieldNumber = 10,
    kColorContrastUndefinedFieldNumber = 12,
    kColorGammaUndefinedFieldNumber = 14,
    kColorSaturationUndefinedFieldNumber = 16,
    kColorBrightnessUndefinedFieldNumber = 18,
    kColorHueUndefinedFieldNumber = 20,
    kColorVibranceUndefinedFieldNumber = 22,
    kNoiseAmplitudeUndefinedFieldNumber = 24,
    kNoiseMovementUndefinedFieldNumber = 26,
    kNoiseOctavesUndefinedFieldNumber = 28,
    kNoiseScaleUndefinedFieldNumber = 30,
    kNoiseScaleHorizontalUndefinedFieldNumber = 32,
    kNoiseScaleVerticalUndefinedFieldNumber = 34,
    kNoiseGainUndefinedFieldNumber = 36,
    kNoiseLacunarityUndefinedFieldNumber = 38,
    kNoiseSpeedUndefinedFieldNumber = 40,
    kColorPaletteOffsetUndefinedFieldNumber = 42,
    kZoomUndefinedFieldNumber = 44,
    kInvertUndefinedFieldNumber = 46,
    kBlendModeUndefinedFieldNumber = 48,
    kSourceBlendFactorUndefinedFieldNumber = 50,
    kDestBlendFactorUndefinedFieldNumber = 52,
    kMotionUndefinedFieldNumber = 54,
    kBackgroundColorUndefinedFieldNumber = 56,
    kForegroundColorUndefinedFieldNumber = 58,
    kLineColorUndefinedFieldNumber = 60,
    kPointColorUndefinedFieldNumber = 62,
    kAlphaUndefinedFieldNumber = 64,
    kBorderUndefinedFieldNumber = 66,
    kBlendUndefinedFieldNumber = 68,
    kBrightnessUndefinedFieldNumber = 70,
    kBorderLightnessUndefinedFieldNumber = 72,
    kContrastUndefinedFieldNumber = 74,
    kDampingUndefinedFieldNumber = 76,
    kDensityUndefinedFieldNumber = 78,
    kDiffusePowerUndefinedFieldNumber = 80,
    kDistortionUndefinedFieldNumber = 82,
    kEntropyUndefinedFieldNumber = 84,
    kExposureUndefinedFieldNumber = 86,
    kFilterUndefinedFieldNumber = 88,
    kFogDistanceUndefinedFieldNumber = 90,
    kFogPowerUndefinedFieldNumber = 92,
    kGammaUndefinedFieldNumber = 94,
    kGrainAmountUndefinedFieldNumber = 96,
    kGrainIntensityUndefinedFieldNumber = 98,
    kHueUndefinedFieldNumber = 100,
    kLightnessUndefinedFieldNumber = 102,
    kLineAlphaUndefinedFieldNumber = 104,
    kLineCenterUndefinedFieldNumber = 106,
    kLineFadeUndefinedFieldNumber = 108,
    kLineFadePowerUndefinedFieldNumber = 110,
    kLineLengthUndefinedFieldNumber = 112,
    kLineWidthUndefinedFieldNumber = 114,
    kNoiseSizeScaleUndefinedFieldNumber = 116,
    kNoiseSizeWeightUndefinedFieldNumber = 118,
    kNoiseVarianceUndefinedFieldNumber = 120,
    kOffsetUndefinedFieldNumber = 122,
    kMotionBackgroundOpacityUndefinedFieldNumber = 124,
    kPointDepthAlphaUndefinedFieldNumber = 126,
    kPointSizeUndefinedFieldNumber = 128,
    kPowerUndefinedFieldNumber = 130,
    kRadiusUndefinedFieldNumber = 132,
    kRefractionUndefinedFieldNumber = 134,
    kResolutionUndefinedFieldNumber = 136,
    kSaturationUndefinedFieldNumber = 138,
    kScaleUndefinedFieldNumber = 140,
    kShadowAlphaUndefinedFieldNumber = 142,
    kShadowAngleUndefinedFieldNumber = 144,
    kShadowOffsetUndefinedFieldNumber = 146,
    kShadowScaleUndefinedFieldNumber = 148,
    kShadowValueUndefinedFieldNumber = 150,
    kSpeedUndefinedFieldNumber = 152,
    kTexturePowerUndefinedFieldNumber = 154,
    kTimeUndefinedFieldNumber = 156,
    kDrawPointsUndefinedFieldNumber = 158,
    kDrawLinesUndefinedFieldNumber = 160,
    kDrawShadowsUndefinedFieldNumber = 162,
    kPixelsPerDivisionUndefinedFieldNumber = 164,
    kSymmetryUndefinedFieldNumber = 166,
    kLockFocusUndefinedFieldNumber = 168,
    kAmplitudeUndefinedFieldNumber = 170,
    kEnvelopeUndefinedFieldNumber = 172,
    kYOffsetUndefinedFieldNumber = 174,
    kFocusUndefinedFieldNumber = 176,
    kBlurUndefinedFieldNumber = 178,
    kGrainSpeedUndefinedFieldNumber = 180,
    kMeshColorUndefinedFieldNumber = 182,
    kAngleUndefinedFieldNumber = 184,
    kMeshLineWidthUndefinedFieldNumber = 186,
    kDeltaTimeUndefinedFieldNumber = 188,
    kThresholdUndefinedFieldNumber = 190,
    kTimeStartUndefinedFieldNumber = 192,
    kInstanceCountUndefinedFieldNumber = 194,
    kExtrusionUndefinedFieldNumber = 196,
    kNoiseOffsetUndefinedFieldNumber = 198,
    kColorHueOffsetUndefinedFieldNumber = 200,
    kShadowHueUndefinedFieldNumber = 202,
    kShadowHueOffsetUndefinedFieldNumber = 204,
    kShadowSaturationUndefinedFieldNumber = 206,
    kShadowBrightnessUndefinedFieldNumber = 208,
    kShadowIntensityUndefinedFieldNumber = 210,
    kShadowPowerUndefinedFieldNumber = 212,
    kNoiseOctavesIterationsUndefinedFieldNumber = 214,
  };
  // optional .TSSSOS.SpecStringArchive name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const ::TSSSOS::SpecStringArchive& name() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecStringArchive* release_name();
  ::TSSSOS::SpecStringArchive* mutable_name();
  void set_allocated_name(::TSSSOS::SpecStringArchive* name);
  private:
  const ::TSSSOS::SpecStringArchive& _internal_name() const;
  ::TSSSOS::SpecStringArchive* _internal_mutable_name();
  public:
  void unsafe_arena_set_allocated_name(
      ::TSSSOS::SpecStringArchive* name);
  ::TSSSOS::SpecStringArchive* unsafe_arena_release_name();

  // optional .TSSSOS.SpecStringArchive variant = 3;
  bool has_variant() const;
  private:
  bool _internal_has_variant() const;
  public:
  void clear_variant();
  const ::TSSSOS::SpecStringArchive& variant() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecStringArchive* release_variant();
  ::TSSSOS::SpecStringArchive* mutable_variant();
  void set_allocated_variant(::TSSSOS::SpecStringArchive* variant);
  private:
  const ::TSSSOS::SpecStringArchive& _internal_variant() const;
  ::TSSSOS::SpecStringArchive* _internal_mutable_variant();
  public:
  void unsafe_arena_set_allocated_variant(
      ::TSSSOS::SpecStringArchive* variant);
  ::TSSSOS::SpecStringArchive* unsafe_arena_release_variant();

  // optional .TSDSOS.SpecFillArchive color_gradient = 5;
  bool has_color_gradient() const;
  private:
  bool _internal_has_color_gradient() const;
  public:
  void clear_color_gradient();
  const ::TSDSOS::SpecFillArchive& color_gradient() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecFillArchive* release_color_gradient();
  ::TSDSOS::SpecFillArchive* mutable_color_gradient();
  void set_allocated_color_gradient(::TSDSOS::SpecFillArchive* color_gradient);
  private:
  const ::TSDSOS::SpecFillArchive& _internal_color_gradient() const;
  ::TSDSOS::SpecFillArchive* _internal_mutable_color_gradient();
  public:
  void unsafe_arena_set_allocated_color_gradient(
      ::TSDSOS::SpecFillArchive* color_gradient);
  ::TSDSOS::SpecFillArchive* unsafe_arena_release_color_gradient();

  // optional .TSSSOS.SpecIntegerArchive random_seed = 7;
  bool has_random_seed() const;
  private:
  bool _internal_has_random_seed() const;
  public:
  void clear_random_seed();
  const ::TSSSOS::SpecIntegerArchive& random_seed() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecIntegerArchive* release_random_seed();
  ::TSSSOS::SpecIntegerArchive* mutable_random_seed();
  void set_allocated_random_seed(::TSSSOS::SpecIntegerArchive* random_seed);
  private:
  const ::TSSSOS::SpecIntegerArchive& _internal_random_seed() const;
  ::TSSSOS::SpecIntegerArchive* _internal_mutable_random_seed();
  public:
  void unsafe_arena_set_allocated_random_seed(
      ::TSSSOS::SpecIntegerArchive* random_seed);
  ::TSSSOS::SpecIntegerArchive* unsafe_arena_release_random_seed();

  // optional .TSSSOS.SpecDoubleArchive color_blur_sigma = 9;
  bool has_color_blur_sigma() const;
  private:
  bool _internal_has_color_blur_sigma() const;
  public:
  void clear_color_blur_sigma();
  const ::TSSSOS::SpecDoubleArchive& color_blur_sigma() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_color_blur_sigma();
  ::TSSSOS::SpecDoubleArchive* mutable_color_blur_sigma();
  void set_allocated_color_blur_sigma(::TSSSOS::SpecDoubleArchive* color_blur_sigma);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_color_blur_sigma() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_color_blur_sigma();
  public:
  void unsafe_arena_set_allocated_color_blur_sigma(
      ::TSSSOS::SpecDoubleArchive* color_blur_sigma);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_color_blur_sigma();

  // optional .TSSSOS.SpecDoubleArchive color_contrast = 11;
  bool has_color_contrast() const;
  private:
  bool _internal_has_color_contrast() const;
  public:
  void clear_color_contrast();
  const ::TSSSOS::SpecDoubleArchive& color_contrast() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_color_contrast();
  ::TSSSOS::SpecDoubleArchive* mutable_color_contrast();
  void set_allocated_color_contrast(::TSSSOS::SpecDoubleArchive* color_contrast);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_color_contrast() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_color_contrast();
  public:
  void unsafe_arena_set_allocated_color_contrast(
      ::TSSSOS::SpecDoubleArchive* color_contrast);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_color_contrast();

  // optional .TSSSOS.SpecDoubleArchive color_gamma = 13;
  bool has_color_gamma() const;
  private:
  bool _internal_has_color_gamma() const;
  public:
  void clear_color_gamma();
  const ::TSSSOS::SpecDoubleArchive& color_gamma() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_color_gamma();
  ::TSSSOS::SpecDoubleArchive* mutable_color_gamma();
  void set_allocated_color_gamma(::TSSSOS::SpecDoubleArchive* color_gamma);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_color_gamma() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_color_gamma();
  public:
  void unsafe_arena_set_allocated_color_gamma(
      ::TSSSOS::SpecDoubleArchive* color_gamma);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_color_gamma();

  // optional .TSSSOS.SpecDoubleArchive color_saturation = 15;
  bool has_color_saturation() const;
  private:
  bool _internal_has_color_saturation() const;
  public:
  void clear_color_saturation();
  const ::TSSSOS::SpecDoubleArchive& color_saturation() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_color_saturation();
  ::TSSSOS::SpecDoubleArchive* mutable_color_saturation();
  void set_allocated_color_saturation(::TSSSOS::SpecDoubleArchive* color_saturation);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_color_saturation() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_color_saturation();
  public:
  void unsafe_arena_set_allocated_color_saturation(
      ::TSSSOS::SpecDoubleArchive* color_saturation);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_color_saturation();

  // optional .TSSSOS.SpecDoubleArchive color_brightness = 17;
  bool has_color_brightness() const;
  private:
  bool _internal_has_color_brightness() const;
  public:
  void clear_color_brightness();
  const ::TSSSOS::SpecDoubleArchive& color_brightness() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_color_brightness();
  ::TSSSOS::SpecDoubleArchive* mutable_color_brightness();
  void set_allocated_color_brightness(::TSSSOS::SpecDoubleArchive* color_brightness);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_color_brightness() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_color_brightness();
  public:
  void unsafe_arena_set_allocated_color_brightness(
      ::TSSSOS::SpecDoubleArchive* color_brightness);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_color_brightness();

  // optional .TSSSOS.SpecDoubleArchive color_hue = 19;
  bool has_color_hue() const;
  private:
  bool _internal_has_color_hue() const;
  public:
  void clear_color_hue();
  const ::TSSSOS::SpecDoubleArchive& color_hue() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_color_hue();
  ::TSSSOS::SpecDoubleArchive* mutable_color_hue();
  void set_allocated_color_hue(::TSSSOS::SpecDoubleArchive* color_hue);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_color_hue() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_color_hue();
  public:
  void unsafe_arena_set_allocated_color_hue(
      ::TSSSOS::SpecDoubleArchive* color_hue);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_color_hue();

  // optional .TSSSOS.SpecDoubleArchive color_vibrance = 21;
  bool has_color_vibrance() const;
  private:
  bool _internal_has_color_vibrance() const;
  public:
  void clear_color_vibrance();
  const ::TSSSOS::SpecDoubleArchive& color_vibrance() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_color_vibrance();
  ::TSSSOS::SpecDoubleArchive* mutable_color_vibrance();
  void set_allocated_color_vibrance(::TSSSOS::SpecDoubleArchive* color_vibrance);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_color_vibrance() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_color_vibrance();
  public:
  void unsafe_arena_set_allocated_color_vibrance(
      ::TSSSOS::SpecDoubleArchive* color_vibrance);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_color_vibrance();

  // optional .TSSSOS.SpecDoubleArchive noise_amplitude = 23;
  bool has_noise_amplitude() const;
  private:
  bool _internal_has_noise_amplitude() const;
  public:
  void clear_noise_amplitude();
  const ::TSSSOS::SpecDoubleArchive& noise_amplitude() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_amplitude();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_amplitude();
  void set_allocated_noise_amplitude(::TSSSOS::SpecDoubleArchive* noise_amplitude);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_amplitude() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_amplitude();
  public:
  void unsafe_arena_set_allocated_noise_amplitude(
      ::TSSSOS::SpecDoubleArchive* noise_amplitude);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_amplitude();

  // optional .TSSSOS.SpecDoubleArchive noise_movement = 25;
  bool has_noise_movement() const;
  private:
  bool _internal_has_noise_movement() const;
  public:
  void clear_noise_movement();
  const ::TSSSOS::SpecDoubleArchive& noise_movement() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_movement();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_movement();
  void set_allocated_noise_movement(::TSSSOS::SpecDoubleArchive* noise_movement);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_movement() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_movement();
  public:
  void unsafe_arena_set_allocated_noise_movement(
      ::TSSSOS::SpecDoubleArchive* noise_movement);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_movement();

  // optional .TSSSOS.SpecDoubleArchive noise_octaves = 27;
  bool has_noise_octaves() const;
  private:
  bool _internal_has_noise_octaves() const;
  public:
  void clear_noise_octaves();
  const ::TSSSOS::SpecDoubleArchive& noise_octaves() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_octaves();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_octaves();
  void set_allocated_noise_octaves(::TSSSOS::SpecDoubleArchive* noise_octaves);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_octaves() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_octaves();
  public:
  void unsafe_arena_set_allocated_noise_octaves(
      ::TSSSOS::SpecDoubleArchive* noise_octaves);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_octaves();

  // optional .TSSSOS.SpecDoubleArchive noise_scale = 29;
  bool has_noise_scale() const;
  private:
  bool _internal_has_noise_scale() const;
  public:
  void clear_noise_scale();
  const ::TSSSOS::SpecDoubleArchive& noise_scale() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_scale();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_scale();
  void set_allocated_noise_scale(::TSSSOS::SpecDoubleArchive* noise_scale);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_scale() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_scale();
  public:
  void unsafe_arena_set_allocated_noise_scale(
      ::TSSSOS::SpecDoubleArchive* noise_scale);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_scale();

  // optional .TSSSOS.SpecDoubleArchive noise_scale_horizontal = 31;
  bool has_noise_scale_horizontal() const;
  private:
  bool _internal_has_noise_scale_horizontal() const;
  public:
  void clear_noise_scale_horizontal();
  const ::TSSSOS::SpecDoubleArchive& noise_scale_horizontal() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_scale_horizontal();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_scale_horizontal();
  void set_allocated_noise_scale_horizontal(::TSSSOS::SpecDoubleArchive* noise_scale_horizontal);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_scale_horizontal() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_scale_horizontal();
  public:
  void unsafe_arena_set_allocated_noise_scale_horizontal(
      ::TSSSOS::SpecDoubleArchive* noise_scale_horizontal);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_scale_horizontal();

  // optional .TSSSOS.SpecDoubleArchive noise_scale_vertical = 33;
  bool has_noise_scale_vertical() const;
  private:
  bool _internal_has_noise_scale_vertical() const;
  public:
  void clear_noise_scale_vertical();
  const ::TSSSOS::SpecDoubleArchive& noise_scale_vertical() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_scale_vertical();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_scale_vertical();
  void set_allocated_noise_scale_vertical(::TSSSOS::SpecDoubleArchive* noise_scale_vertical);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_scale_vertical() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_scale_vertical();
  public:
  void unsafe_arena_set_allocated_noise_scale_vertical(
      ::TSSSOS::SpecDoubleArchive* noise_scale_vertical);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_scale_vertical();

  // optional .TSSSOS.SpecDoubleArchive noise_gain = 35;
  bool has_noise_gain() const;
  private:
  bool _internal_has_noise_gain() const;
  public:
  void clear_noise_gain();
  const ::TSSSOS::SpecDoubleArchive& noise_gain() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_gain();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_gain();
  void set_allocated_noise_gain(::TSSSOS::SpecDoubleArchive* noise_gain);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_gain() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_gain();
  public:
  void unsafe_arena_set_allocated_noise_gain(
      ::TSSSOS::SpecDoubleArchive* noise_gain);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_gain();

  // optional .TSSSOS.SpecDoubleArchive noise_lacunarity = 37;
  bool has_noise_lacunarity() const;
  private:
  bool _internal_has_noise_lacunarity() const;
  public:
  void clear_noise_lacunarity();
  const ::TSSSOS::SpecDoubleArchive& noise_lacunarity() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_lacunarity();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_lacunarity();
  void set_allocated_noise_lacunarity(::TSSSOS::SpecDoubleArchive* noise_lacunarity);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_lacunarity() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_lacunarity();
  public:
  void unsafe_arena_set_allocated_noise_lacunarity(
      ::TSSSOS::SpecDoubleArchive* noise_lacunarity);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_lacunarity();

  // optional .TSSSOS.SpecDoubleArchive noise_speed = 39;
  bool has_noise_speed() const;
  private:
  bool _internal_has_noise_speed() const;
  public:
  void clear_noise_speed();
  const ::TSSSOS::SpecDoubleArchive& noise_speed() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_speed();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_speed();
  void set_allocated_noise_speed(::TSSSOS::SpecDoubleArchive* noise_speed);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_speed() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_speed();
  public:
  void unsafe_arena_set_allocated_noise_speed(
      ::TSSSOS::SpecDoubleArchive* noise_speed);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_speed();

  // optional .TSSSOS.SpecIntegerArchive color_palette_offset = 41;
  bool has_color_palette_offset() const;
  private:
  bool _internal_has_color_palette_offset() const;
  public:
  void clear_color_palette_offset();
  const ::TSSSOS::SpecIntegerArchive& color_palette_offset() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecIntegerArchive* release_color_palette_offset();
  ::TSSSOS::SpecIntegerArchive* mutable_color_palette_offset();
  void set_allocated_color_palette_offset(::TSSSOS::SpecIntegerArchive* color_palette_offset);
  private:
  const ::TSSSOS::SpecIntegerArchive& _internal_color_palette_offset() const;
  ::TSSSOS::SpecIntegerArchive* _internal_mutable_color_palette_offset();
  public:
  void unsafe_arena_set_allocated_color_palette_offset(
      ::TSSSOS::SpecIntegerArchive* color_palette_offset);
  ::TSSSOS::SpecIntegerArchive* unsafe_arena_release_color_palette_offset();

  // optional .TSSSOS.SpecDoubleArchive zoom = 43;
  bool has_zoom() const;
  private:
  bool _internal_has_zoom() const;
  public:
  void clear_zoom();
  const ::TSSSOS::SpecDoubleArchive& zoom() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_zoom();
  ::TSSSOS::SpecDoubleArchive* mutable_zoom();
  void set_allocated_zoom(::TSSSOS::SpecDoubleArchive* zoom);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_zoom() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_zoom();
  public:
  void unsafe_arena_set_allocated_zoom(
      ::TSSSOS::SpecDoubleArchive* zoom);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_zoom();

  // optional .TSSSOS.SpecBoolArchive invert = 45;
  bool has_invert() const;
  private:
  bool _internal_has_invert() const;
  public:
  void clear_invert();
  const ::TSSSOS::SpecBoolArchive& invert() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecBoolArchive* release_invert();
  ::TSSSOS::SpecBoolArchive* mutable_invert();
  void set_allocated_invert(::TSSSOS::SpecBoolArchive* invert);
  private:
  const ::TSSSOS::SpecBoolArchive& _internal_invert() const;
  ::TSSSOS::SpecBoolArchive* _internal_mutable_invert();
  public:
  void unsafe_arena_set_allocated_invert(
      ::TSSSOS::SpecBoolArchive* invert);
  ::TSSSOS::SpecBoolArchive* unsafe_arena_release_invert();

  // optional .TSSSOS.SpecStringArchive blend_mode = 47;
  bool has_blend_mode() const;
  private:
  bool _internal_has_blend_mode() const;
  public:
  void clear_blend_mode();
  const ::TSSSOS::SpecStringArchive& blend_mode() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecStringArchive* release_blend_mode();
  ::TSSSOS::SpecStringArchive* mutable_blend_mode();
  void set_allocated_blend_mode(::TSSSOS::SpecStringArchive* blend_mode);
  private:
  const ::TSSSOS::SpecStringArchive& _internal_blend_mode() const;
  ::TSSSOS::SpecStringArchive* _internal_mutable_blend_mode();
  public:
  void unsafe_arena_set_allocated_blend_mode(
      ::TSSSOS::SpecStringArchive* blend_mode);
  ::TSSSOS::SpecStringArchive* unsafe_arena_release_blend_mode();

  // optional .TSSSOS.SpecStringArchive source_blend_factor = 49;
  bool has_source_blend_factor() const;
  private:
  bool _internal_has_source_blend_factor() const;
  public:
  void clear_source_blend_factor();
  const ::TSSSOS::SpecStringArchive& source_blend_factor() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecStringArchive* release_source_blend_factor();
  ::TSSSOS::SpecStringArchive* mutable_source_blend_factor();
  void set_allocated_source_blend_factor(::TSSSOS::SpecStringArchive* source_blend_factor);
  private:
  const ::TSSSOS::SpecStringArchive& _internal_source_blend_factor() const;
  ::TSSSOS::SpecStringArchive* _internal_mutable_source_blend_factor();
  public:
  void unsafe_arena_set_allocated_source_blend_factor(
      ::TSSSOS::SpecStringArchive* source_blend_factor);
  ::TSSSOS::SpecStringArchive* unsafe_arena_release_source_blend_factor();

  // optional .TSSSOS.SpecStringArchive dest_blend_factor = 51;
  bool has_dest_blend_factor() const;
  private:
  bool _internal_has_dest_blend_factor() const;
  public:
  void clear_dest_blend_factor();
  const ::TSSSOS::SpecStringArchive& dest_blend_factor() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecStringArchive* release_dest_blend_factor();
  ::TSSSOS::SpecStringArchive* mutable_dest_blend_factor();
  void set_allocated_dest_blend_factor(::TSSSOS::SpecStringArchive* dest_blend_factor);
  private:
  const ::TSSSOS::SpecStringArchive& _internal_dest_blend_factor() const;
  ::TSSSOS::SpecStringArchive* _internal_mutable_dest_blend_factor();
  public:
  void unsafe_arena_set_allocated_dest_blend_factor(
      ::TSSSOS::SpecStringArchive* dest_blend_factor);
  ::TSSSOS::SpecStringArchive* unsafe_arena_release_dest_blend_factor();

  // optional .TSSSOS.SpecStringArchive motion = 53;
  bool has_motion() const;
  private:
  bool _internal_has_motion() const;
  public:
  void clear_motion();
  const ::TSSSOS::SpecStringArchive& motion() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecStringArchive* release_motion();
  ::TSSSOS::SpecStringArchive* mutable_motion();
  void set_allocated_motion(::TSSSOS::SpecStringArchive* motion);
  private:
  const ::TSSSOS::SpecStringArchive& _internal_motion() const;
  ::TSSSOS::SpecStringArchive* _internal_mutable_motion();
  public:
  void unsafe_arena_set_allocated_motion(
      ::TSSSOS::SpecStringArchive* motion);
  ::TSSSOS::SpecStringArchive* unsafe_arena_release_motion();

  // optional .TSSSOS.SpecColorArchive background_color = 55;
  bool has_background_color() const;
  private:
  bool _internal_has_background_color() const;
  public:
  void clear_background_color();
  const ::TSSSOS::SpecColorArchive& background_color() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecColorArchive* release_background_color();
  ::TSSSOS::SpecColorArchive* mutable_background_color();
  void set_allocated_background_color(::TSSSOS::SpecColorArchive* background_color);
  private:
  const ::TSSSOS::SpecColorArchive& _internal_background_color() const;
  ::TSSSOS::SpecColorArchive* _internal_mutable_background_color();
  public:
  void unsafe_arena_set_allocated_background_color(
      ::TSSSOS::SpecColorArchive* background_color);
  ::TSSSOS::SpecColorArchive* unsafe_arena_release_background_color();

  // optional .TSSSOS.SpecColorArchive foreground_color = 57;
  bool has_foreground_color() const;
  private:
  bool _internal_has_foreground_color() const;
  public:
  void clear_foreground_color();
  const ::TSSSOS::SpecColorArchive& foreground_color() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecColorArchive* release_foreground_color();
  ::TSSSOS::SpecColorArchive* mutable_foreground_color();
  void set_allocated_foreground_color(::TSSSOS::SpecColorArchive* foreground_color);
  private:
  const ::TSSSOS::SpecColorArchive& _internal_foreground_color() const;
  ::TSSSOS::SpecColorArchive* _internal_mutable_foreground_color();
  public:
  void unsafe_arena_set_allocated_foreground_color(
      ::TSSSOS::SpecColorArchive* foreground_color);
  ::TSSSOS::SpecColorArchive* unsafe_arena_release_foreground_color();

  // optional .TSSSOS.SpecColorArchive line_color = 59;
  bool has_line_color() const;
  private:
  bool _internal_has_line_color() const;
  public:
  void clear_line_color();
  const ::TSSSOS::SpecColorArchive& line_color() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecColorArchive* release_line_color();
  ::TSSSOS::SpecColorArchive* mutable_line_color();
  void set_allocated_line_color(::TSSSOS::SpecColorArchive* line_color);
  private:
  const ::TSSSOS::SpecColorArchive& _internal_line_color() const;
  ::TSSSOS::SpecColorArchive* _internal_mutable_line_color();
  public:
  void unsafe_arena_set_allocated_line_color(
      ::TSSSOS::SpecColorArchive* line_color);
  ::TSSSOS::SpecColorArchive* unsafe_arena_release_line_color();

  // optional .TSSSOS.SpecColorArchive point_color = 61;
  bool has_point_color() const;
  private:
  bool _internal_has_point_color() const;
  public:
  void clear_point_color();
  const ::TSSSOS::SpecColorArchive& point_color() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecColorArchive* release_point_color();
  ::TSSSOS::SpecColorArchive* mutable_point_color();
  void set_allocated_point_color(::TSSSOS::SpecColorArchive* point_color);
  private:
  const ::TSSSOS::SpecColorArchive& _internal_point_color() const;
  ::TSSSOS::SpecColorArchive* _internal_mutable_point_color();
  public:
  void unsafe_arena_set_allocated_point_color(
      ::TSSSOS::SpecColorArchive* point_color);
  ::TSSSOS::SpecColorArchive* unsafe_arena_release_point_color();

  // optional .TSSSOS.SpecDoubleArchive alpha = 63;
  bool has_alpha() const;
  private:
  bool _internal_has_alpha() const;
  public:
  void clear_alpha();
  const ::TSSSOS::SpecDoubleArchive& alpha() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_alpha();
  ::TSSSOS::SpecDoubleArchive* mutable_alpha();
  void set_allocated_alpha(::TSSSOS::SpecDoubleArchive* alpha);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_alpha() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_alpha();
  public:
  void unsafe_arena_set_allocated_alpha(
      ::TSSSOS::SpecDoubleArchive* alpha);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_alpha();

  // optional .TSSSOS.SpecDoubleArchive border = 65;
  bool has_border() const;
  private:
  bool _internal_has_border() const;
  public:
  void clear_border();
  const ::TSSSOS::SpecDoubleArchive& border() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_border();
  ::TSSSOS::SpecDoubleArchive* mutable_border();
  void set_allocated_border(::TSSSOS::SpecDoubleArchive* border);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_border() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_border();
  public:
  void unsafe_arena_set_allocated_border(
      ::TSSSOS::SpecDoubleArchive* border);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_border();

  // optional .TSSSOS.SpecDoubleArchive blend = 67;
  bool has_blend() const;
  private:
  bool _internal_has_blend() const;
  public:
  void clear_blend();
  const ::TSSSOS::SpecDoubleArchive& blend() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_blend();
  ::TSSSOS::SpecDoubleArchive* mutable_blend();
  void set_allocated_blend(::TSSSOS::SpecDoubleArchive* blend);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_blend() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_blend();
  public:
  void unsafe_arena_set_allocated_blend(
      ::TSSSOS::SpecDoubleArchive* blend);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_blend();

  // optional .TSSSOS.SpecDoubleArchive brightness = 69;
  bool has_brightness() const;
  private:
  bool _internal_has_brightness() const;
  public:
  void clear_brightness();
  const ::TSSSOS::SpecDoubleArchive& brightness() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_brightness();
  ::TSSSOS::SpecDoubleArchive* mutable_brightness();
  void set_allocated_brightness(::TSSSOS::SpecDoubleArchive* brightness);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_brightness() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_brightness();
  public:
  void unsafe_arena_set_allocated_brightness(
      ::TSSSOS::SpecDoubleArchive* brightness);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_brightness();

  // optional .TSSSOS.SpecDoubleArchive border_lightness = 71;
  bool has_border_lightness() const;
  private:
  bool _internal_has_border_lightness() const;
  public:
  void clear_border_lightness();
  const ::TSSSOS::SpecDoubleArchive& border_lightness() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_border_lightness();
  ::TSSSOS::SpecDoubleArchive* mutable_border_lightness();
  void set_allocated_border_lightness(::TSSSOS::SpecDoubleArchive* border_lightness);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_border_lightness() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_border_lightness();
  public:
  void unsafe_arena_set_allocated_border_lightness(
      ::TSSSOS::SpecDoubleArchive* border_lightness);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_border_lightness();

  // optional .TSSSOS.SpecDoubleArchive contrast = 73;
  bool has_contrast() const;
  private:
  bool _internal_has_contrast() const;
  public:
  void clear_contrast();
  const ::TSSSOS::SpecDoubleArchive& contrast() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_contrast();
  ::TSSSOS::SpecDoubleArchive* mutable_contrast();
  void set_allocated_contrast(::TSSSOS::SpecDoubleArchive* contrast);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_contrast() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_contrast();
  public:
  void unsafe_arena_set_allocated_contrast(
      ::TSSSOS::SpecDoubleArchive* contrast);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_contrast();

  // optional .TSSSOS.SpecDoubleArchive damping = 75;
  bool has_damping() const;
  private:
  bool _internal_has_damping() const;
  public:
  void clear_damping();
  const ::TSSSOS::SpecDoubleArchive& damping() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_damping();
  ::TSSSOS::SpecDoubleArchive* mutable_damping();
  void set_allocated_damping(::TSSSOS::SpecDoubleArchive* damping);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_damping() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_damping();
  public:
  void unsafe_arena_set_allocated_damping(
      ::TSSSOS::SpecDoubleArchive* damping);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_damping();

  // optional .TSSSOS.SpecDoubleArchive density = 77;
  bool has_density() const;
  private:
  bool _internal_has_density() const;
  public:
  void clear_density();
  const ::TSSSOS::SpecDoubleArchive& density() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_density();
  ::TSSSOS::SpecDoubleArchive* mutable_density();
  void set_allocated_density(::TSSSOS::SpecDoubleArchive* density);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_density() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_density();
  public:
  void unsafe_arena_set_allocated_density(
      ::TSSSOS::SpecDoubleArchive* density);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_density();

  // optional .TSSSOS.SpecDoubleArchive diffuse_power = 79;
  bool has_diffuse_power() const;
  private:
  bool _internal_has_diffuse_power() const;
  public:
  void clear_diffuse_power();
  const ::TSSSOS::SpecDoubleArchive& diffuse_power() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_diffuse_power();
  ::TSSSOS::SpecDoubleArchive* mutable_diffuse_power();
  void set_allocated_diffuse_power(::TSSSOS::SpecDoubleArchive* diffuse_power);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_diffuse_power() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_diffuse_power();
  public:
  void unsafe_arena_set_allocated_diffuse_power(
      ::TSSSOS::SpecDoubleArchive* diffuse_power);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_diffuse_power();

  // optional .TSSSOS.SpecDoubleArchive distortion = 81;
  bool has_distortion() const;
  private:
  bool _internal_has_distortion() const;
  public:
  void clear_distortion();
  const ::TSSSOS::SpecDoubleArchive& distortion() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_distortion();
  ::TSSSOS::SpecDoubleArchive* mutable_distortion();
  void set_allocated_distortion(::TSSSOS::SpecDoubleArchive* distortion);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_distortion() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_distortion();
  public:
  void unsafe_arena_set_allocated_distortion(
      ::TSSSOS::SpecDoubleArchive* distortion);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_distortion();

  // optional .TSSSOS.SpecDoubleArchive entropy = 83;
  bool has_entropy() const;
  private:
  bool _internal_has_entropy() const;
  public:
  void clear_entropy();
  const ::TSSSOS::SpecDoubleArchive& entropy() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_entropy();
  ::TSSSOS::SpecDoubleArchive* mutable_entropy();
  void set_allocated_entropy(::TSSSOS::SpecDoubleArchive* entropy);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_entropy() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_entropy();
  public:
  void unsafe_arena_set_allocated_entropy(
      ::TSSSOS::SpecDoubleArchive* entropy);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_entropy();

  // optional .TSSSOS.SpecDoubleArchive exposure = 85;
  bool has_exposure() const;
  private:
  bool _internal_has_exposure() const;
  public:
  void clear_exposure();
  const ::TSSSOS::SpecDoubleArchive& exposure() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_exposure();
  ::TSSSOS::SpecDoubleArchive* mutable_exposure();
  void set_allocated_exposure(::TSSSOS::SpecDoubleArchive* exposure);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_exposure() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_exposure();
  public:
  void unsafe_arena_set_allocated_exposure(
      ::TSSSOS::SpecDoubleArchive* exposure);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_exposure();

  // optional .TSSSOS.SpecDoubleArchive filter = 87;
  bool has_filter() const;
  private:
  bool _internal_has_filter() const;
  public:
  void clear_filter();
  const ::TSSSOS::SpecDoubleArchive& filter() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_filter();
  ::TSSSOS::SpecDoubleArchive* mutable_filter();
  void set_allocated_filter(::TSSSOS::SpecDoubleArchive* filter);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_filter() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_filter();
  public:
  void unsafe_arena_set_allocated_filter(
      ::TSSSOS::SpecDoubleArchive* filter);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_filter();

  // optional .TSSSOS.SpecDoubleArchive fog_distance = 89;
  bool has_fog_distance() const;
  private:
  bool _internal_has_fog_distance() const;
  public:
  void clear_fog_distance();
  const ::TSSSOS::SpecDoubleArchive& fog_distance() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_fog_distance();
  ::TSSSOS::SpecDoubleArchive* mutable_fog_distance();
  void set_allocated_fog_distance(::TSSSOS::SpecDoubleArchive* fog_distance);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_fog_distance() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_fog_distance();
  public:
  void unsafe_arena_set_allocated_fog_distance(
      ::TSSSOS::SpecDoubleArchive* fog_distance);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_fog_distance();

  // optional .TSSSOS.SpecDoubleArchive fog_power = 91;
  bool has_fog_power() const;
  private:
  bool _internal_has_fog_power() const;
  public:
  void clear_fog_power();
  const ::TSSSOS::SpecDoubleArchive& fog_power() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_fog_power();
  ::TSSSOS::SpecDoubleArchive* mutable_fog_power();
  void set_allocated_fog_power(::TSSSOS::SpecDoubleArchive* fog_power);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_fog_power() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_fog_power();
  public:
  void unsafe_arena_set_allocated_fog_power(
      ::TSSSOS::SpecDoubleArchive* fog_power);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_fog_power();

  // optional .TSSSOS.SpecDoubleArchive gamma = 93;
  bool has_gamma() const;
  private:
  bool _internal_has_gamma() const;
  public:
  void clear_gamma();
  const ::TSSSOS::SpecDoubleArchive& gamma() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_gamma();
  ::TSSSOS::SpecDoubleArchive* mutable_gamma();
  void set_allocated_gamma(::TSSSOS::SpecDoubleArchive* gamma);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_gamma() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_gamma();
  public:
  void unsafe_arena_set_allocated_gamma(
      ::TSSSOS::SpecDoubleArchive* gamma);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_gamma();

  // optional .TSSSOS.SpecDoubleArchive grain_amount = 95;
  bool has_grain_amount() const;
  private:
  bool _internal_has_grain_amount() const;
  public:
  void clear_grain_amount();
  const ::TSSSOS::SpecDoubleArchive& grain_amount() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_grain_amount();
  ::TSSSOS::SpecDoubleArchive* mutable_grain_amount();
  void set_allocated_grain_amount(::TSSSOS::SpecDoubleArchive* grain_amount);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_grain_amount() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_grain_amount();
  public:
  void unsafe_arena_set_allocated_grain_amount(
      ::TSSSOS::SpecDoubleArchive* grain_amount);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_grain_amount();

  // optional .TSSSOS.SpecDoubleArchive grain_intensity = 97;
  bool has_grain_intensity() const;
  private:
  bool _internal_has_grain_intensity() const;
  public:
  void clear_grain_intensity();
  const ::TSSSOS::SpecDoubleArchive& grain_intensity() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_grain_intensity();
  ::TSSSOS::SpecDoubleArchive* mutable_grain_intensity();
  void set_allocated_grain_intensity(::TSSSOS::SpecDoubleArchive* grain_intensity);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_grain_intensity() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_grain_intensity();
  public:
  void unsafe_arena_set_allocated_grain_intensity(
      ::TSSSOS::SpecDoubleArchive* grain_intensity);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_grain_intensity();

  // optional .TSSSOS.SpecDoubleArchive hue = 99;
  bool has_hue() const;
  private:
  bool _internal_has_hue() const;
  public:
  void clear_hue();
  const ::TSSSOS::SpecDoubleArchive& hue() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_hue();
  ::TSSSOS::SpecDoubleArchive* mutable_hue();
  void set_allocated_hue(::TSSSOS::SpecDoubleArchive* hue);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_hue() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_hue();
  public:
  void unsafe_arena_set_allocated_hue(
      ::TSSSOS::SpecDoubleArchive* hue);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_hue();

  // optional .TSSSOS.SpecDoubleArchive lightness = 101;
  bool has_lightness() const;
  private:
  bool _internal_has_lightness() const;
  public:
  void clear_lightness();
  const ::TSSSOS::SpecDoubleArchive& lightness() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_lightness();
  ::TSSSOS::SpecDoubleArchive* mutable_lightness();
  void set_allocated_lightness(::TSSSOS::SpecDoubleArchive* lightness);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_lightness() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_lightness();
  public:
  void unsafe_arena_set_allocated_lightness(
      ::TSSSOS::SpecDoubleArchive* lightness);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_lightness();

  // optional .TSSSOS.SpecDoubleArchive line_alpha = 103;
  bool has_line_alpha() const;
  private:
  bool _internal_has_line_alpha() const;
  public:
  void clear_line_alpha();
  const ::TSSSOS::SpecDoubleArchive& line_alpha() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_line_alpha();
  ::TSSSOS::SpecDoubleArchive* mutable_line_alpha();
  void set_allocated_line_alpha(::TSSSOS::SpecDoubleArchive* line_alpha);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_line_alpha() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_line_alpha();
  public:
  void unsafe_arena_set_allocated_line_alpha(
      ::TSSSOS::SpecDoubleArchive* line_alpha);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_line_alpha();

  // optional .TSSSOS.SpecDoubleArchive line_center = 105;
  bool has_line_center() const;
  private:
  bool _internal_has_line_center() const;
  public:
  void clear_line_center();
  const ::TSSSOS::SpecDoubleArchive& line_center() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_line_center();
  ::TSSSOS::SpecDoubleArchive* mutable_line_center();
  void set_allocated_line_center(::TSSSOS::SpecDoubleArchive* line_center);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_line_center() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_line_center();
  public:
  void unsafe_arena_set_allocated_line_center(
      ::TSSSOS::SpecDoubleArchive* line_center);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_line_center();

  // optional .TSSSOS.SpecDoubleArchive line_fade = 107;
  bool has_line_fade() const;
  private:
  bool _internal_has_line_fade() const;
  public:
  void clear_line_fade();
  const ::TSSSOS::SpecDoubleArchive& line_fade() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_line_fade();
  ::TSSSOS::SpecDoubleArchive* mutable_line_fade();
  void set_allocated_line_fade(::TSSSOS::SpecDoubleArchive* line_fade);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_line_fade() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_line_fade();
  public:
  void unsafe_arena_set_allocated_line_fade(
      ::TSSSOS::SpecDoubleArchive* line_fade);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_line_fade();

  // optional .TSSSOS.SpecDoubleArchive line_fade_power = 109;
  bool has_line_fade_power() const;
  private:
  bool _internal_has_line_fade_power() const;
  public:
  void clear_line_fade_power();
  const ::TSSSOS::SpecDoubleArchive& line_fade_power() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_line_fade_power();
  ::TSSSOS::SpecDoubleArchive* mutable_line_fade_power();
  void set_allocated_line_fade_power(::TSSSOS::SpecDoubleArchive* line_fade_power);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_line_fade_power() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_line_fade_power();
  public:
  void unsafe_arena_set_allocated_line_fade_power(
      ::TSSSOS::SpecDoubleArchive* line_fade_power);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_line_fade_power();

  // optional .TSSSOS.SpecDoubleArchive line_length = 111;
  bool has_line_length() const;
  private:
  bool _internal_has_line_length() const;
  public:
  void clear_line_length();
  const ::TSSSOS::SpecDoubleArchive& line_length() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_line_length();
  ::TSSSOS::SpecDoubleArchive* mutable_line_length();
  void set_allocated_line_length(::TSSSOS::SpecDoubleArchive* line_length);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_line_length() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_line_length();
  public:
  void unsafe_arena_set_allocated_line_length(
      ::TSSSOS::SpecDoubleArchive* line_length);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_line_length();

  // optional .TSSSOS.SpecDoubleArchive line_width = 113;
  bool has_line_width() const;
  private:
  bool _internal_has_line_width() const;
  public:
  void clear_line_width();
  const ::TSSSOS::SpecDoubleArchive& line_width() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_line_width();
  ::TSSSOS::SpecDoubleArchive* mutable_line_width();
  void set_allocated_line_width(::TSSSOS::SpecDoubleArchive* line_width);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_line_width() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_line_width();
  public:
  void unsafe_arena_set_allocated_line_width(
      ::TSSSOS::SpecDoubleArchive* line_width);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_line_width();

  // optional .TSSSOS.SpecDoubleArchive noise_size_scale = 115;
  bool has_noise_size_scale() const;
  private:
  bool _internal_has_noise_size_scale() const;
  public:
  void clear_noise_size_scale();
  const ::TSSSOS::SpecDoubleArchive& noise_size_scale() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_size_scale();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_size_scale();
  void set_allocated_noise_size_scale(::TSSSOS::SpecDoubleArchive* noise_size_scale);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_size_scale() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_size_scale();
  public:
  void unsafe_arena_set_allocated_noise_size_scale(
      ::TSSSOS::SpecDoubleArchive* noise_size_scale);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_size_scale();

  // optional .TSSSOS.SpecDoubleArchive noise_size_weight = 117;
  bool has_noise_size_weight() const;
  private:
  bool _internal_has_noise_size_weight() const;
  public:
  void clear_noise_size_weight();
  const ::TSSSOS::SpecDoubleArchive& noise_size_weight() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_size_weight();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_size_weight();
  void set_allocated_noise_size_weight(::TSSSOS::SpecDoubleArchive* noise_size_weight);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_size_weight() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_size_weight();
  public:
  void unsafe_arena_set_allocated_noise_size_weight(
      ::TSSSOS::SpecDoubleArchive* noise_size_weight);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_size_weight();

  // optional .TSSSOS.SpecDoubleArchive noise_variance = 119;
  bool has_noise_variance() const;
  private:
  bool _internal_has_noise_variance() const;
  public:
  void clear_noise_variance();
  const ::TSSSOS::SpecDoubleArchive& noise_variance() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_variance();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_variance();
  void set_allocated_noise_variance(::TSSSOS::SpecDoubleArchive* noise_variance);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_variance() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_variance();
  public:
  void unsafe_arena_set_allocated_noise_variance(
      ::TSSSOS::SpecDoubleArchive* noise_variance);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_variance();

  // optional .TSSSOS.SpecDoubleArchive offset = 121;
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  const ::TSSSOS::SpecDoubleArchive& offset() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_offset();
  ::TSSSOS::SpecDoubleArchive* mutable_offset();
  void set_allocated_offset(::TSSSOS::SpecDoubleArchive* offset);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_offset() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_offset();
  public:
  void unsafe_arena_set_allocated_offset(
      ::TSSSOS::SpecDoubleArchive* offset);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_offset();

  // optional .TSSSOS.SpecDoubleArchive motion_background_opacity = 123;
  bool has_motion_background_opacity() const;
  private:
  bool _internal_has_motion_background_opacity() const;
  public:
  void clear_motion_background_opacity();
  const ::TSSSOS::SpecDoubleArchive& motion_background_opacity() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_motion_background_opacity();
  ::TSSSOS::SpecDoubleArchive* mutable_motion_background_opacity();
  void set_allocated_motion_background_opacity(::TSSSOS::SpecDoubleArchive* motion_background_opacity);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_motion_background_opacity() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_motion_background_opacity();
  public:
  void unsafe_arena_set_allocated_motion_background_opacity(
      ::TSSSOS::SpecDoubleArchive* motion_background_opacity);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_motion_background_opacity();

  // optional .TSSSOS.SpecDoubleArchive point_depth_alpha = 125;
  bool has_point_depth_alpha() const;
  private:
  bool _internal_has_point_depth_alpha() const;
  public:
  void clear_point_depth_alpha();
  const ::TSSSOS::SpecDoubleArchive& point_depth_alpha() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_point_depth_alpha();
  ::TSSSOS::SpecDoubleArchive* mutable_point_depth_alpha();
  void set_allocated_point_depth_alpha(::TSSSOS::SpecDoubleArchive* point_depth_alpha);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_point_depth_alpha() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_point_depth_alpha();
  public:
  void unsafe_arena_set_allocated_point_depth_alpha(
      ::TSSSOS::SpecDoubleArchive* point_depth_alpha);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_point_depth_alpha();

  // optional .TSSSOS.SpecDoubleArchive point_size = 127;
  bool has_point_size() const;
  private:
  bool _internal_has_point_size() const;
  public:
  void clear_point_size();
  const ::TSSSOS::SpecDoubleArchive& point_size() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_point_size();
  ::TSSSOS::SpecDoubleArchive* mutable_point_size();
  void set_allocated_point_size(::TSSSOS::SpecDoubleArchive* point_size);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_point_size() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_point_size();
  public:
  void unsafe_arena_set_allocated_point_size(
      ::TSSSOS::SpecDoubleArchive* point_size);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_point_size();

  // optional .TSSSOS.SpecDoubleArchive power = 129;
  bool has_power() const;
  private:
  bool _internal_has_power() const;
  public:
  void clear_power();
  const ::TSSSOS::SpecDoubleArchive& power() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_power();
  ::TSSSOS::SpecDoubleArchive* mutable_power();
  void set_allocated_power(::TSSSOS::SpecDoubleArchive* power);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_power() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_power();
  public:
  void unsafe_arena_set_allocated_power(
      ::TSSSOS::SpecDoubleArchive* power);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_power();

  // optional .TSSSOS.SpecDoubleArchive radius = 131;
  bool has_radius() const;
  private:
  bool _internal_has_radius() const;
  public:
  void clear_radius();
  const ::TSSSOS::SpecDoubleArchive& radius() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_radius();
  ::TSSSOS::SpecDoubleArchive* mutable_radius();
  void set_allocated_radius(::TSSSOS::SpecDoubleArchive* radius);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_radius() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_radius();
  public:
  void unsafe_arena_set_allocated_radius(
      ::TSSSOS::SpecDoubleArchive* radius);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_radius();

  // optional .TSSSOS.SpecDoubleArchive refraction = 133;
  bool has_refraction() const;
  private:
  bool _internal_has_refraction() const;
  public:
  void clear_refraction();
  const ::TSSSOS::SpecDoubleArchive& refraction() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_refraction();
  ::TSSSOS::SpecDoubleArchive* mutable_refraction();
  void set_allocated_refraction(::TSSSOS::SpecDoubleArchive* refraction);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_refraction() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_refraction();
  public:
  void unsafe_arena_set_allocated_refraction(
      ::TSSSOS::SpecDoubleArchive* refraction);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_refraction();

  // optional .TSSSOS.SpecDoubleArchive resolution = 135;
  bool has_resolution() const;
  private:
  bool _internal_has_resolution() const;
  public:
  void clear_resolution();
  const ::TSSSOS::SpecDoubleArchive& resolution() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_resolution();
  ::TSSSOS::SpecDoubleArchive* mutable_resolution();
  void set_allocated_resolution(::TSSSOS::SpecDoubleArchive* resolution);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_resolution() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_resolution();
  public:
  void unsafe_arena_set_allocated_resolution(
      ::TSSSOS::SpecDoubleArchive* resolution);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_resolution();

  // optional .TSSSOS.SpecDoubleArchive saturation = 137;
  bool has_saturation() const;
  private:
  bool _internal_has_saturation() const;
  public:
  void clear_saturation();
  const ::TSSSOS::SpecDoubleArchive& saturation() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_saturation();
  ::TSSSOS::SpecDoubleArchive* mutable_saturation();
  void set_allocated_saturation(::TSSSOS::SpecDoubleArchive* saturation);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_saturation() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_saturation();
  public:
  void unsafe_arena_set_allocated_saturation(
      ::TSSSOS::SpecDoubleArchive* saturation);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_saturation();

  // optional .TSSSOS.SpecDoubleArchive scale = 139;
  bool has_scale() const;
  private:
  bool _internal_has_scale() const;
  public:
  void clear_scale();
  const ::TSSSOS::SpecDoubleArchive& scale() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_scale();
  ::TSSSOS::SpecDoubleArchive* mutable_scale();
  void set_allocated_scale(::TSSSOS::SpecDoubleArchive* scale);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_scale() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_scale();
  public:
  void unsafe_arena_set_allocated_scale(
      ::TSSSOS::SpecDoubleArchive* scale);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_scale();

  // optional .TSSSOS.SpecDoubleArchive shadow_alpha = 141;
  bool has_shadow_alpha() const;
  private:
  bool _internal_has_shadow_alpha() const;
  public:
  void clear_shadow_alpha();
  const ::TSSSOS::SpecDoubleArchive& shadow_alpha() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_shadow_alpha();
  ::TSSSOS::SpecDoubleArchive* mutable_shadow_alpha();
  void set_allocated_shadow_alpha(::TSSSOS::SpecDoubleArchive* shadow_alpha);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_shadow_alpha() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_shadow_alpha();
  public:
  void unsafe_arena_set_allocated_shadow_alpha(
      ::TSSSOS::SpecDoubleArchive* shadow_alpha);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_shadow_alpha();

  // optional .TSSSOS.SpecDoubleArchive shadow_angle = 143;
  bool has_shadow_angle() const;
  private:
  bool _internal_has_shadow_angle() const;
  public:
  void clear_shadow_angle();
  const ::TSSSOS::SpecDoubleArchive& shadow_angle() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_shadow_angle();
  ::TSSSOS::SpecDoubleArchive* mutable_shadow_angle();
  void set_allocated_shadow_angle(::TSSSOS::SpecDoubleArchive* shadow_angle);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_shadow_angle() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_shadow_angle();
  public:
  void unsafe_arena_set_allocated_shadow_angle(
      ::TSSSOS::SpecDoubleArchive* shadow_angle);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_shadow_angle();

  // optional .TSSSOS.SpecDoubleArchive shadow_offset = 145;
  bool has_shadow_offset() const;
  private:
  bool _internal_has_shadow_offset() const;
  public:
  void clear_shadow_offset();
  const ::TSSSOS::SpecDoubleArchive& shadow_offset() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_shadow_offset();
  ::TSSSOS::SpecDoubleArchive* mutable_shadow_offset();
  void set_allocated_shadow_offset(::TSSSOS::SpecDoubleArchive* shadow_offset);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_shadow_offset() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_shadow_offset();
  public:
  void unsafe_arena_set_allocated_shadow_offset(
      ::TSSSOS::SpecDoubleArchive* shadow_offset);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_shadow_offset();

  // optional .TSSSOS.SpecDoubleArchive shadow_scale = 147;
  bool has_shadow_scale() const;
  private:
  bool _internal_has_shadow_scale() const;
  public:
  void clear_shadow_scale();
  const ::TSSSOS::SpecDoubleArchive& shadow_scale() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_shadow_scale();
  ::TSSSOS::SpecDoubleArchive* mutable_shadow_scale();
  void set_allocated_shadow_scale(::TSSSOS::SpecDoubleArchive* shadow_scale);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_shadow_scale() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_shadow_scale();
  public:
  void unsafe_arena_set_allocated_shadow_scale(
      ::TSSSOS::SpecDoubleArchive* shadow_scale);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_shadow_scale();

  // optional .TSSSOS.SpecDoubleArchive shadow_value = 149;
  bool has_shadow_value() const;
  private:
  bool _internal_has_shadow_value() const;
  public:
  void clear_shadow_value();
  const ::TSSSOS::SpecDoubleArchive& shadow_value() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_shadow_value();
  ::TSSSOS::SpecDoubleArchive* mutable_shadow_value();
  void set_allocated_shadow_value(::TSSSOS::SpecDoubleArchive* shadow_value);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_shadow_value() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_shadow_value();
  public:
  void unsafe_arena_set_allocated_shadow_value(
      ::TSSSOS::SpecDoubleArchive* shadow_value);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_shadow_value();

  // optional .TSSSOS.SpecDoubleArchive speed = 151;
  bool has_speed() const;
  private:
  bool _internal_has_speed() const;
  public:
  void clear_speed();
  const ::TSSSOS::SpecDoubleArchive& speed() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_speed();
  ::TSSSOS::SpecDoubleArchive* mutable_speed();
  void set_allocated_speed(::TSSSOS::SpecDoubleArchive* speed);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_speed() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_speed();
  public:
  void unsafe_arena_set_allocated_speed(
      ::TSSSOS::SpecDoubleArchive* speed);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_speed();

  // optional .TSSSOS.SpecDoubleArchive texture_power = 153;
  bool has_texture_power() const;
  private:
  bool _internal_has_texture_power() const;
  public:
  void clear_texture_power();
  const ::TSSSOS::SpecDoubleArchive& texture_power() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_texture_power();
  ::TSSSOS::SpecDoubleArchive* mutable_texture_power();
  void set_allocated_texture_power(::TSSSOS::SpecDoubleArchive* texture_power);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_texture_power() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_texture_power();
  public:
  void unsafe_arena_set_allocated_texture_power(
      ::TSSSOS::SpecDoubleArchive* texture_power);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_texture_power();

  // optional .TSSSOS.SpecDoubleArchive time = 155;
  bool has_time() const;
  private:
  bool _internal_has_time() const;
  public:
  void clear_time();
  const ::TSSSOS::SpecDoubleArchive& time() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_time();
  ::TSSSOS::SpecDoubleArchive* mutable_time();
  void set_allocated_time(::TSSSOS::SpecDoubleArchive* time);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_time() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_time();
  public:
  void unsafe_arena_set_allocated_time(
      ::TSSSOS::SpecDoubleArchive* time);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_time();

  // optional .TSSSOS.SpecBoolArchive draw_points = 157;
  bool has_draw_points() const;
  private:
  bool _internal_has_draw_points() const;
  public:
  void clear_draw_points();
  const ::TSSSOS::SpecBoolArchive& draw_points() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecBoolArchive* release_draw_points();
  ::TSSSOS::SpecBoolArchive* mutable_draw_points();
  void set_allocated_draw_points(::TSSSOS::SpecBoolArchive* draw_points);
  private:
  const ::TSSSOS::SpecBoolArchive& _internal_draw_points() const;
  ::TSSSOS::SpecBoolArchive* _internal_mutable_draw_points();
  public:
  void unsafe_arena_set_allocated_draw_points(
      ::TSSSOS::SpecBoolArchive* draw_points);
  ::TSSSOS::SpecBoolArchive* unsafe_arena_release_draw_points();

  // optional .TSSSOS.SpecBoolArchive draw_lines = 159;
  bool has_draw_lines() const;
  private:
  bool _internal_has_draw_lines() const;
  public:
  void clear_draw_lines();
  const ::TSSSOS::SpecBoolArchive& draw_lines() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecBoolArchive* release_draw_lines();
  ::TSSSOS::SpecBoolArchive* mutable_draw_lines();
  void set_allocated_draw_lines(::TSSSOS::SpecBoolArchive* draw_lines);
  private:
  const ::TSSSOS::SpecBoolArchive& _internal_draw_lines() const;
  ::TSSSOS::SpecBoolArchive* _internal_mutable_draw_lines();
  public:
  void unsafe_arena_set_allocated_draw_lines(
      ::TSSSOS::SpecBoolArchive* draw_lines);
  ::TSSSOS::SpecBoolArchive* unsafe_arena_release_draw_lines();

  // optional .TSSSOS.SpecBoolArchive draw_shadows = 161;
  bool has_draw_shadows() const;
  private:
  bool _internal_has_draw_shadows() const;
  public:
  void clear_draw_shadows();
  const ::TSSSOS::SpecBoolArchive& draw_shadows() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecBoolArchive* release_draw_shadows();
  ::TSSSOS::SpecBoolArchive* mutable_draw_shadows();
  void set_allocated_draw_shadows(::TSSSOS::SpecBoolArchive* draw_shadows);
  private:
  const ::TSSSOS::SpecBoolArchive& _internal_draw_shadows() const;
  ::TSSSOS::SpecBoolArchive* _internal_mutable_draw_shadows();
  public:
  void unsafe_arena_set_allocated_draw_shadows(
      ::TSSSOS::SpecBoolArchive* draw_shadows);
  ::TSSSOS::SpecBoolArchive* unsafe_arena_release_draw_shadows();

  // optional .TSSSOS.SpecIntegerArchive pixels_per_division = 163;
  bool has_pixels_per_division() const;
  private:
  bool _internal_has_pixels_per_division() const;
  public:
  void clear_pixels_per_division();
  const ::TSSSOS::SpecIntegerArchive& pixels_per_division() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecIntegerArchive* release_pixels_per_division();
  ::TSSSOS::SpecIntegerArchive* mutable_pixels_per_division();
  void set_allocated_pixels_per_division(::TSSSOS::SpecIntegerArchive* pixels_per_division);
  private:
  const ::TSSSOS::SpecIntegerArchive& _internal_pixels_per_division() const;
  ::TSSSOS::SpecIntegerArchive* _internal_mutable_pixels_per_division();
  public:
  void unsafe_arena_set_allocated_pixels_per_division(
      ::TSSSOS::SpecIntegerArchive* pixels_per_division);
  ::TSSSOS::SpecIntegerArchive* unsafe_arena_release_pixels_per_division();

  // optional .TSSSOS.SpecBoolArchive symmetry = 165;
  bool has_symmetry() const;
  private:
  bool _internal_has_symmetry() const;
  public:
  void clear_symmetry();
  const ::TSSSOS::SpecBoolArchive& symmetry() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecBoolArchive* release_symmetry();
  ::TSSSOS::SpecBoolArchive* mutable_symmetry();
  void set_allocated_symmetry(::TSSSOS::SpecBoolArchive* symmetry);
  private:
  const ::TSSSOS::SpecBoolArchive& _internal_symmetry() const;
  ::TSSSOS::SpecBoolArchive* _internal_mutable_symmetry();
  public:
  void unsafe_arena_set_allocated_symmetry(
      ::TSSSOS::SpecBoolArchive* symmetry);
  ::TSSSOS::SpecBoolArchive* unsafe_arena_release_symmetry();

  // optional .TSSSOS.SpecBoolArchive lock_focus = 167;
  bool has_lock_focus() const;
  private:
  bool _internal_has_lock_focus() const;
  public:
  void clear_lock_focus();
  const ::TSSSOS::SpecBoolArchive& lock_focus() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecBoolArchive* release_lock_focus();
  ::TSSSOS::SpecBoolArchive* mutable_lock_focus();
  void set_allocated_lock_focus(::TSSSOS::SpecBoolArchive* lock_focus);
  private:
  const ::TSSSOS::SpecBoolArchive& _internal_lock_focus() const;
  ::TSSSOS::SpecBoolArchive* _internal_mutable_lock_focus();
  public:
  void unsafe_arena_set_allocated_lock_focus(
      ::TSSSOS::SpecBoolArchive* lock_focus);
  ::TSSSOS::SpecBoolArchive* unsafe_arena_release_lock_focus();

  // optional .TSSSOS.SpecDoubleArchive amplitude = 169;
  bool has_amplitude() const;
  private:
  bool _internal_has_amplitude() const;
  public:
  void clear_amplitude();
  const ::TSSSOS::SpecDoubleArchive& amplitude() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_amplitude();
  ::TSSSOS::SpecDoubleArchive* mutable_amplitude();
  void set_allocated_amplitude(::TSSSOS::SpecDoubleArchive* amplitude);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_amplitude() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_amplitude();
  public:
  void unsafe_arena_set_allocated_amplitude(
      ::TSSSOS::SpecDoubleArchive* amplitude);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_amplitude();

  // optional .TSSSOS.SpecDoubleArchive envelope = 171;
  bool has_envelope() const;
  private:
  bool _internal_has_envelope() const;
  public:
  void clear_envelope();
  const ::TSSSOS::SpecDoubleArchive& envelope() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_envelope();
  ::TSSSOS::SpecDoubleArchive* mutable_envelope();
  void set_allocated_envelope(::TSSSOS::SpecDoubleArchive* envelope);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_envelope() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_envelope();
  public:
  void unsafe_arena_set_allocated_envelope(
      ::TSSSOS::SpecDoubleArchive* envelope);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_envelope();

  // optional .TSSSOS.SpecDoubleArchive y_offset = 173;
  bool has_y_offset() const;
  private:
  bool _internal_has_y_offset() const;
  public:
  void clear_y_offset();
  const ::TSSSOS::SpecDoubleArchive& y_offset() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_y_offset();
  ::TSSSOS::SpecDoubleArchive* mutable_y_offset();
  void set_allocated_y_offset(::TSSSOS::SpecDoubleArchive* y_offset);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_y_offset() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_y_offset();
  public:
  void unsafe_arena_set_allocated_y_offset(
      ::TSSSOS::SpecDoubleArchive* y_offset);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_y_offset();

  // optional .TSSSOS.SpecDoubleArchive focus = 175;
  bool has_focus() const;
  private:
  bool _internal_has_focus() const;
  public:
  void clear_focus();
  const ::TSSSOS::SpecDoubleArchive& focus() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_focus();
  ::TSSSOS::SpecDoubleArchive* mutable_focus();
  void set_allocated_focus(::TSSSOS::SpecDoubleArchive* focus);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_focus() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_focus();
  public:
  void unsafe_arena_set_allocated_focus(
      ::TSSSOS::SpecDoubleArchive* focus);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_focus();

  // optional .TSSSOS.SpecDoubleArchive blur = 177;
  bool has_blur() const;
  private:
  bool _internal_has_blur() const;
  public:
  void clear_blur();
  const ::TSSSOS::SpecDoubleArchive& blur() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_blur();
  ::TSSSOS::SpecDoubleArchive* mutable_blur();
  void set_allocated_blur(::TSSSOS::SpecDoubleArchive* blur);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_blur() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_blur();
  public:
  void unsafe_arena_set_allocated_blur(
      ::TSSSOS::SpecDoubleArchive* blur);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_blur();

  // optional .TSSSOS.SpecDoubleArchive grain_speed = 179;
  bool has_grain_speed() const;
  private:
  bool _internal_has_grain_speed() const;
  public:
  void clear_grain_speed();
  const ::TSSSOS::SpecDoubleArchive& grain_speed() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_grain_speed();
  ::TSSSOS::SpecDoubleArchive* mutable_grain_speed();
  void set_allocated_grain_speed(::TSSSOS::SpecDoubleArchive* grain_speed);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_grain_speed() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_grain_speed();
  public:
  void unsafe_arena_set_allocated_grain_speed(
      ::TSSSOS::SpecDoubleArchive* grain_speed);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_grain_speed();

  // optional .TSSSOS.SpecColorArchive mesh_color = 181;
  bool has_mesh_color() const;
  private:
  bool _internal_has_mesh_color() const;
  public:
  void clear_mesh_color();
  const ::TSSSOS::SpecColorArchive& mesh_color() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecColorArchive* release_mesh_color();
  ::TSSSOS::SpecColorArchive* mutable_mesh_color();
  void set_allocated_mesh_color(::TSSSOS::SpecColorArchive* mesh_color);
  private:
  const ::TSSSOS::SpecColorArchive& _internal_mesh_color() const;
  ::TSSSOS::SpecColorArchive* _internal_mutable_mesh_color();
  public:
  void unsafe_arena_set_allocated_mesh_color(
      ::TSSSOS::SpecColorArchive* mesh_color);
  ::TSSSOS::SpecColorArchive* unsafe_arena_release_mesh_color();

  // optional .TSSSOS.SpecDoubleArchive angle = 183;
  bool has_angle() const;
  private:
  bool _internal_has_angle() const;
  public:
  void clear_angle();
  const ::TSSSOS::SpecDoubleArchive& angle() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_angle();
  ::TSSSOS::SpecDoubleArchive* mutable_angle();
  void set_allocated_angle(::TSSSOS::SpecDoubleArchive* angle);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_angle() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_angle();
  public:
  void unsafe_arena_set_allocated_angle(
      ::TSSSOS::SpecDoubleArchive* angle);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_angle();

  // optional .TSSSOS.SpecDoubleArchive mesh_line_width = 185;
  bool has_mesh_line_width() const;
  private:
  bool _internal_has_mesh_line_width() const;
  public:
  void clear_mesh_line_width();
  const ::TSSSOS::SpecDoubleArchive& mesh_line_width() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_mesh_line_width();
  ::TSSSOS::SpecDoubleArchive* mutable_mesh_line_width();
  void set_allocated_mesh_line_width(::TSSSOS::SpecDoubleArchive* mesh_line_width);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_mesh_line_width() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_mesh_line_width();
  public:
  void unsafe_arena_set_allocated_mesh_line_width(
      ::TSSSOS::SpecDoubleArchive* mesh_line_width);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_mesh_line_width();

  // optional .TSSSOS.SpecDoubleArchive delta_time = 187;
  bool has_delta_time() const;
  private:
  bool _internal_has_delta_time() const;
  public:
  void clear_delta_time();
  const ::TSSSOS::SpecDoubleArchive& delta_time() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_delta_time();
  ::TSSSOS::SpecDoubleArchive* mutable_delta_time();
  void set_allocated_delta_time(::TSSSOS::SpecDoubleArchive* delta_time);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_delta_time() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_delta_time();
  public:
  void unsafe_arena_set_allocated_delta_time(
      ::TSSSOS::SpecDoubleArchive* delta_time);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_delta_time();

  // optional .TSSSOS.SpecDoubleArchive threshold = 189;
  bool has_threshold() const;
  private:
  bool _internal_has_threshold() const;
  public:
  void clear_threshold();
  const ::TSSSOS::SpecDoubleArchive& threshold() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_threshold();
  ::TSSSOS::SpecDoubleArchive* mutable_threshold();
  void set_allocated_threshold(::TSSSOS::SpecDoubleArchive* threshold);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_threshold() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_threshold();
  public:
  void unsafe_arena_set_allocated_threshold(
      ::TSSSOS::SpecDoubleArchive* threshold);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_threshold();

  // optional .TSSSOS.SpecDoubleArchive time_start = 191;
  bool has_time_start() const;
  private:
  bool _internal_has_time_start() const;
  public:
  void clear_time_start();
  const ::TSSSOS::SpecDoubleArchive& time_start() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_time_start();
  ::TSSSOS::SpecDoubleArchive* mutable_time_start();
  void set_allocated_time_start(::TSSSOS::SpecDoubleArchive* time_start);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_time_start() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_time_start();
  public:
  void unsafe_arena_set_allocated_time_start(
      ::TSSSOS::SpecDoubleArchive* time_start);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_time_start();

  // optional .TSSSOS.SpecIntegerArchive instance_count = 193;
  bool has_instance_count() const;
  private:
  bool _internal_has_instance_count() const;
  public:
  void clear_instance_count();
  const ::TSSSOS::SpecIntegerArchive& instance_count() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecIntegerArchive* release_instance_count();
  ::TSSSOS::SpecIntegerArchive* mutable_instance_count();
  void set_allocated_instance_count(::TSSSOS::SpecIntegerArchive* instance_count);
  private:
  const ::TSSSOS::SpecIntegerArchive& _internal_instance_count() const;
  ::TSSSOS::SpecIntegerArchive* _internal_mutable_instance_count();
  public:
  void unsafe_arena_set_allocated_instance_count(
      ::TSSSOS::SpecIntegerArchive* instance_count);
  ::TSSSOS::SpecIntegerArchive* unsafe_arena_release_instance_count();

  // optional .TSSSOS.SpecDoubleArchive extrusion = 195;
  bool has_extrusion() const;
  private:
  bool _internal_has_extrusion() const;
  public:
  void clear_extrusion();
  const ::TSSSOS::SpecDoubleArchive& extrusion() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_extrusion();
  ::TSSSOS::SpecDoubleArchive* mutable_extrusion();
  void set_allocated_extrusion(::TSSSOS::SpecDoubleArchive* extrusion);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_extrusion() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_extrusion();
  public:
  void unsafe_arena_set_allocated_extrusion(
      ::TSSSOS::SpecDoubleArchive* extrusion);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_extrusion();

  // optional .TSSSOS.SpecDoubleArchive noise_offset = 197;
  bool has_noise_offset() const;
  private:
  bool _internal_has_noise_offset() const;
  public:
  void clear_noise_offset();
  const ::TSSSOS::SpecDoubleArchive& noise_offset() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_noise_offset();
  ::TSSSOS::SpecDoubleArchive* mutable_noise_offset();
  void set_allocated_noise_offset(::TSSSOS::SpecDoubleArchive* noise_offset);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_noise_offset() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_noise_offset();
  public:
  void unsafe_arena_set_allocated_noise_offset(
      ::TSSSOS::SpecDoubleArchive* noise_offset);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_noise_offset();

  // optional .TSSSOS.SpecDoubleArchive color_hue_offset = 199;
  bool has_color_hue_offset() const;
  private:
  bool _internal_has_color_hue_offset() const;
  public:
  void clear_color_hue_offset();
  const ::TSSSOS::SpecDoubleArchive& color_hue_offset() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_color_hue_offset();
  ::TSSSOS::SpecDoubleArchive* mutable_color_hue_offset();
  void set_allocated_color_hue_offset(::TSSSOS::SpecDoubleArchive* color_hue_offset);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_color_hue_offset() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_color_hue_offset();
  public:
  void unsafe_arena_set_allocated_color_hue_offset(
      ::TSSSOS::SpecDoubleArchive* color_hue_offset);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_color_hue_offset();

  // optional .TSSSOS.SpecDoubleArchive shadow_hue = 201;
  bool has_shadow_hue() const;
  private:
  bool _internal_has_shadow_hue() const;
  public:
  void clear_shadow_hue();
  const ::TSSSOS::SpecDoubleArchive& shadow_hue() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_shadow_hue();
  ::TSSSOS::SpecDoubleArchive* mutable_shadow_hue();
  void set_allocated_shadow_hue(::TSSSOS::SpecDoubleArchive* shadow_hue);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_shadow_hue() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_shadow_hue();
  public:
  void unsafe_arena_set_allocated_shadow_hue(
      ::TSSSOS::SpecDoubleArchive* shadow_hue);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_shadow_hue();

  // optional .TSSSOS.SpecDoubleArchive shadow_hue_offset = 203;
  bool has_shadow_hue_offset() const;
  private:
  bool _internal_has_shadow_hue_offset() const;
  public:
  void clear_shadow_hue_offset();
  const ::TSSSOS::SpecDoubleArchive& shadow_hue_offset() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_shadow_hue_offset();
  ::TSSSOS::SpecDoubleArchive* mutable_shadow_hue_offset();
  void set_allocated_shadow_hue_offset(::TSSSOS::SpecDoubleArchive* shadow_hue_offset);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_shadow_hue_offset() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_shadow_hue_offset();
  public:
  void unsafe_arena_set_allocated_shadow_hue_offset(
      ::TSSSOS::SpecDoubleArchive* shadow_hue_offset);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_shadow_hue_offset();

  // optional .TSSSOS.SpecDoubleArchive shadow_saturation = 205;
  bool has_shadow_saturation() const;
  private:
  bool _internal_has_shadow_saturation() const;
  public:
  void clear_shadow_saturation();
  const ::TSSSOS::SpecDoubleArchive& shadow_saturation() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_shadow_saturation();
  ::TSSSOS::SpecDoubleArchive* mutable_shadow_saturation();
  void set_allocated_shadow_saturation(::TSSSOS::SpecDoubleArchive* shadow_saturation);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_shadow_saturation() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_shadow_saturation();
  public:
  void unsafe_arena_set_allocated_shadow_saturation(
      ::TSSSOS::SpecDoubleArchive* shadow_saturation);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_shadow_saturation();

  // optional .TSSSOS.SpecDoubleArchive shadow_brightness = 207;
  bool has_shadow_brightness() const;
  private:
  bool _internal_has_shadow_brightness() const;
  public:
  void clear_shadow_brightness();
  const ::TSSSOS::SpecDoubleArchive& shadow_brightness() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_shadow_brightness();
  ::TSSSOS::SpecDoubleArchive* mutable_shadow_brightness();
  void set_allocated_shadow_brightness(::TSSSOS::SpecDoubleArchive* shadow_brightness);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_shadow_brightness() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_shadow_brightness();
  public:
  void unsafe_arena_set_allocated_shadow_brightness(
      ::TSSSOS::SpecDoubleArchive* shadow_brightness);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_shadow_brightness();

  // optional .TSSSOS.SpecDoubleArchive shadow_intensity = 209;
  bool has_shadow_intensity() const;
  private:
  bool _internal_has_shadow_intensity() const;
  public:
  void clear_shadow_intensity();
  const ::TSSSOS::SpecDoubleArchive& shadow_intensity() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_shadow_intensity();
  ::TSSSOS::SpecDoubleArchive* mutable_shadow_intensity();
  void set_allocated_shadow_intensity(::TSSSOS::SpecDoubleArchive* shadow_intensity);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_shadow_intensity() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_shadow_intensity();
  public:
  void unsafe_arena_set_allocated_shadow_intensity(
      ::TSSSOS::SpecDoubleArchive* shadow_intensity);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_shadow_intensity();

  // optional .TSSSOS.SpecDoubleArchive shadow_power = 211;
  bool has_shadow_power() const;
  private:
  bool _internal_has_shadow_power() const;
  public:
  void clear_shadow_power();
  const ::TSSSOS::SpecDoubleArchive& shadow_power() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_shadow_power();
  ::TSSSOS::SpecDoubleArchive* mutable_shadow_power();
  void set_allocated_shadow_power(::TSSSOS::SpecDoubleArchive* shadow_power);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_shadow_power() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_shadow_power();
  public:
  void unsafe_arena_set_allocated_shadow_power(
      ::TSSSOS::SpecDoubleArchive* shadow_power);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_shadow_power();

  // optional .TSSSOS.SpecIntegerArchive noise_octaves_iterations = 213;
  bool has_noise_octaves_iterations() const;
  private:
  bool _internal_has_noise_octaves_iterations() const;
  public:
  void clear_noise_octaves_iterations();
  const ::TSSSOS::SpecIntegerArchive& noise_octaves_iterations() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecIntegerArchive* release_noise_octaves_iterations();
  ::TSSSOS::SpecIntegerArchive* mutable_noise_octaves_iterations();
  void set_allocated_noise_octaves_iterations(::TSSSOS::SpecIntegerArchive* noise_octaves_iterations);
  private:
  const ::TSSSOS::SpecIntegerArchive& _internal_noise_octaves_iterations() const;
  ::TSSSOS::SpecIntegerArchive* _internal_mutable_noise_octaves_iterations();
  public:
  void unsafe_arena_set_allocated_noise_octaves_iterations(
      ::TSSSOS::SpecIntegerArchive* noise_octaves_iterations);
  ::TSSSOS::SpecIntegerArchive* unsafe_arena_release_noise_octaves_iterations();

  // optional bool name_undefined = 2;
  bool has_name_undefined() const;
  private:
  bool _internal_has_name_undefined() const;
  public:
  void clear_name_undefined();
  bool name_undefined() const;
  void set_name_undefined(bool value);
  private:
  bool _internal_name_undefined() const;
  void _internal_set_name_undefined(bool value);
  public:

  // optional bool variant_undefined = 4;
  bool has_variant_undefined() const;
  private:
  bool _internal_has_variant_undefined() const;
  public:
  void clear_variant_undefined();
  bool variant_undefined() const;
  void set_variant_undefined(bool value);
  private:
  bool _internal_variant_undefined() const;
  void _internal_set_variant_undefined(bool value);
  public:

  // optional bool color_gradient_undefined = 6;
  bool has_color_gradient_undefined() const;
  private:
  bool _internal_has_color_gradient_undefined() const;
  public:
  void clear_color_gradient_undefined();
  bool color_gradient_undefined() const;
  void set_color_gradient_undefined(bool value);
  private:
  bool _internal_color_gradient_undefined() const;
  void _internal_set_color_gradient_undefined(bool value);
  public:

  // optional bool random_seed_undefined = 8;
  bool has_random_seed_undefined() const;
  private:
  bool _internal_has_random_seed_undefined() const;
  public:
  void clear_random_seed_undefined();
  bool random_seed_undefined() const;
  void set_random_seed_undefined(bool value);
  private:
  bool _internal_random_seed_undefined() const;
  void _internal_set_random_seed_undefined(bool value);
  public:

  // optional bool color_blur_sigma_undefined = 10;
  bool has_color_blur_sigma_undefined() const;
  private:
  bool _internal_has_color_blur_sigma_undefined() const;
  public:
  void clear_color_blur_sigma_undefined();
  bool color_blur_sigma_undefined() const;
  void set_color_blur_sigma_undefined(bool value);
  private:
  bool _internal_color_blur_sigma_undefined() const;
  void _internal_set_color_blur_sigma_undefined(bool value);
  public:

  // optional bool color_contrast_undefined = 12;
  bool has_color_contrast_undefined() const;
  private:
  bool _internal_has_color_contrast_undefined() const;
  public:
  void clear_color_contrast_undefined();
  bool color_contrast_undefined() const;
  void set_color_contrast_undefined(bool value);
  private:
  bool _internal_color_contrast_undefined() const;
  void _internal_set_color_contrast_undefined(bool value);
  public:

  // optional bool color_gamma_undefined = 14;
  bool has_color_gamma_undefined() const;
  private:
  bool _internal_has_color_gamma_undefined() const;
  public:
  void clear_color_gamma_undefined();
  bool color_gamma_undefined() const;
  void set_color_gamma_undefined(bool value);
  private:
  bool _internal_color_gamma_undefined() const;
  void _internal_set_color_gamma_undefined(bool value);
  public:

  // optional bool color_saturation_undefined = 16;
  bool has_color_saturation_undefined() const;
  private:
  bool _internal_has_color_saturation_undefined() const;
  public:
  void clear_color_saturation_undefined();
  bool color_saturation_undefined() const;
  void set_color_saturation_undefined(bool value);
  private:
  bool _internal_color_saturation_undefined() const;
  void _internal_set_color_saturation_undefined(bool value);
  public:

  // optional bool color_brightness_undefined = 18;
  bool has_color_brightness_undefined() const;
  private:
  bool _internal_has_color_brightness_undefined() const;
  public:
  void clear_color_brightness_undefined();
  bool color_brightness_undefined() const;
  void set_color_brightness_undefined(bool value);
  private:
  bool _internal_color_brightness_undefined() const;
  void _internal_set_color_brightness_undefined(bool value);
  public:

  // optional bool color_hue_undefined = 20;
  bool has_color_hue_undefined() const;
  private:
  bool _internal_has_color_hue_undefined() const;
  public:
  void clear_color_hue_undefined();
  bool color_hue_undefined() const;
  void set_color_hue_undefined(bool value);
  private:
  bool _internal_color_hue_undefined() const;
  void _internal_set_color_hue_undefined(bool value);
  public:

  // optional bool color_vibrance_undefined = 22;
  bool has_color_vibrance_undefined() const;
  private:
  bool _internal_has_color_vibrance_undefined() const;
  public:
  void clear_color_vibrance_undefined();
  bool color_vibrance_undefined() const;
  void set_color_vibrance_undefined(bool value);
  private:
  bool _internal_color_vibrance_undefined() const;
  void _internal_set_color_vibrance_undefined(bool value);
  public:

  // optional bool noise_amplitude_undefined = 24;
  bool has_noise_amplitude_undefined() const;
  private:
  bool _internal_has_noise_amplitude_undefined() const;
  public:
  void clear_noise_amplitude_undefined();
  bool noise_amplitude_undefined() const;
  void set_noise_amplitude_undefined(bool value);
  private:
  bool _internal_noise_amplitude_undefined() const;
  void _internal_set_noise_amplitude_undefined(bool value);
  public:

  // optional bool noise_movement_undefined = 26;
  bool has_noise_movement_undefined() const;
  private:
  bool _internal_has_noise_movement_undefined() const;
  public:
  void clear_noise_movement_undefined();
  bool noise_movement_undefined() const;
  void set_noise_movement_undefined(bool value);
  private:
  bool _internal_noise_movement_undefined() const;
  void _internal_set_noise_movement_undefined(bool value);
  public:

  // optional bool noise_octaves_undefined = 28;
  bool has_noise_octaves_undefined() const;
  private:
  bool _internal_has_noise_octaves_undefined() const;
  public:
  void clear_noise_octaves_undefined();
  bool noise_octaves_undefined() const;
  void set_noise_octaves_undefined(bool value);
  private:
  bool _internal_noise_octaves_undefined() const;
  void _internal_set_noise_octaves_undefined(bool value);
  public:

  // optional bool noise_scale_undefined = 30;
  bool has_noise_scale_undefined() const;
  private:
  bool _internal_has_noise_scale_undefined() const;
  public:
  void clear_noise_scale_undefined();
  bool noise_scale_undefined() const;
  void set_noise_scale_undefined(bool value);
  private:
  bool _internal_noise_scale_undefined() const;
  void _internal_set_noise_scale_undefined(bool value);
  public:

  // optional bool noise_scale_horizontal_undefined = 32;
  bool has_noise_scale_horizontal_undefined() const;
  private:
  bool _internal_has_noise_scale_horizontal_undefined() const;
  public:
  void clear_noise_scale_horizontal_undefined();
  bool noise_scale_horizontal_undefined() const;
  void set_noise_scale_horizontal_undefined(bool value);
  private:
  bool _internal_noise_scale_horizontal_undefined() const;
  void _internal_set_noise_scale_horizontal_undefined(bool value);
  public:

  // optional bool noise_scale_vertical_undefined = 34;
  bool has_noise_scale_vertical_undefined() const;
  private:
  bool _internal_has_noise_scale_vertical_undefined() const;
  public:
  void clear_noise_scale_vertical_undefined();
  bool noise_scale_vertical_undefined() const;
  void set_noise_scale_vertical_undefined(bool value);
  private:
  bool _internal_noise_scale_vertical_undefined() const;
  void _internal_set_noise_scale_vertical_undefined(bool value);
  public:

  // optional bool noise_gain_undefined = 36;
  bool has_noise_gain_undefined() const;
  private:
  bool _internal_has_noise_gain_undefined() const;
  public:
  void clear_noise_gain_undefined();
  bool noise_gain_undefined() const;
  void set_noise_gain_undefined(bool value);
  private:
  bool _internal_noise_gain_undefined() const;
  void _internal_set_noise_gain_undefined(bool value);
  public:

  // optional bool noise_lacunarity_undefined = 38;
  bool has_noise_lacunarity_undefined() const;
  private:
  bool _internal_has_noise_lacunarity_undefined() const;
  public:
  void clear_noise_lacunarity_undefined();
  bool noise_lacunarity_undefined() const;
  void set_noise_lacunarity_undefined(bool value);
  private:
  bool _internal_noise_lacunarity_undefined() const;
  void _internal_set_noise_lacunarity_undefined(bool value);
  public:

  // optional bool noise_speed_undefined = 40;
  bool has_noise_speed_undefined() const;
  private:
  bool _internal_has_noise_speed_undefined() const;
  public:
  void clear_noise_speed_undefined();
  bool noise_speed_undefined() const;
  void set_noise_speed_undefined(bool value);
  private:
  bool _internal_noise_speed_undefined() const;
  void _internal_set_noise_speed_undefined(bool value);
  public:

  // optional bool color_palette_offset_undefined = 42;
  bool has_color_palette_offset_undefined() const;
  private:
  bool _internal_has_color_palette_offset_undefined() const;
  public:
  void clear_color_palette_offset_undefined();
  bool color_palette_offset_undefined() const;
  void set_color_palette_offset_undefined(bool value);
  private:
  bool _internal_color_palette_offset_undefined() const;
  void _internal_set_color_palette_offset_undefined(bool value);
  public:

  // optional bool zoom_undefined = 44;
  bool has_zoom_undefined() const;
  private:
  bool _internal_has_zoom_undefined() const;
  public:
  void clear_zoom_undefined();
  bool zoom_undefined() const;
  void set_zoom_undefined(bool value);
  private:
  bool _internal_zoom_undefined() const;
  void _internal_set_zoom_undefined(bool value);
  public:

  // optional bool invert_undefined = 46;
  bool has_invert_undefined() const;
  private:
  bool _internal_has_invert_undefined() const;
  public:
  void clear_invert_undefined();
  bool invert_undefined() const;
  void set_invert_undefined(bool value);
  private:
  bool _internal_invert_undefined() const;
  void _internal_set_invert_undefined(bool value);
  public:

  // optional bool blend_mode_undefined = 48;
  bool has_blend_mode_undefined() const;
  private:
  bool _internal_has_blend_mode_undefined() const;
  public:
  void clear_blend_mode_undefined();
  bool blend_mode_undefined() const;
  void set_blend_mode_undefined(bool value);
  private:
  bool _internal_blend_mode_undefined() const;
  void _internal_set_blend_mode_undefined(bool value);
  public:

  // optional bool source_blend_factor_undefined = 50;
  bool has_source_blend_factor_undefined() const;
  private:
  bool _internal_has_source_blend_factor_undefined() const;
  public:
  void clear_source_blend_factor_undefined();
  bool source_blend_factor_undefined() const;
  void set_source_blend_factor_undefined(bool value);
  private:
  bool _internal_source_blend_factor_undefined() const;
  void _internal_set_source_blend_factor_undefined(bool value);
  public:

  // optional bool dest_blend_factor_undefined = 52;
  bool has_dest_blend_factor_undefined() const;
  private:
  bool _internal_has_dest_blend_factor_undefined() const;
  public:
  void clear_dest_blend_factor_undefined();
  bool dest_blend_factor_undefined() const;
  void set_dest_blend_factor_undefined(bool value);
  private:
  bool _internal_dest_blend_factor_undefined() const;
  void _internal_set_dest_blend_factor_undefined(bool value);
  public:

  // optional bool motion_undefined = 54;
  bool has_motion_undefined() const;
  private:
  bool _internal_has_motion_undefined() const;
  public:
  void clear_motion_undefined();
  bool motion_undefined() const;
  void set_motion_undefined(bool value);
  private:
  bool _internal_motion_undefined() const;
  void _internal_set_motion_undefined(bool value);
  public:

  // optional bool background_color_undefined = 56;
  bool has_background_color_undefined() const;
  private:
  bool _internal_has_background_color_undefined() const;
  public:
  void clear_background_color_undefined();
  bool background_color_undefined() const;
  void set_background_color_undefined(bool value);
  private:
  bool _internal_background_color_undefined() const;
  void _internal_set_background_color_undefined(bool value);
  public:

  // optional bool foreground_color_undefined = 58;
  bool has_foreground_color_undefined() const;
  private:
  bool _internal_has_foreground_color_undefined() const;
  public:
  void clear_foreground_color_undefined();
  bool foreground_color_undefined() const;
  void set_foreground_color_undefined(bool value);
  private:
  bool _internal_foreground_color_undefined() const;
  void _internal_set_foreground_color_undefined(bool value);
  public:

  // optional bool line_color_undefined = 60;
  bool has_line_color_undefined() const;
  private:
  bool _internal_has_line_color_undefined() const;
  public:
  void clear_line_color_undefined();
  bool line_color_undefined() const;
  void set_line_color_undefined(bool value);
  private:
  bool _internal_line_color_undefined() const;
  void _internal_set_line_color_undefined(bool value);
  public:

  // optional bool point_color_undefined = 62;
  bool has_point_color_undefined() const;
  private:
  bool _internal_has_point_color_undefined() const;
  public:
  void clear_point_color_undefined();
  bool point_color_undefined() const;
  void set_point_color_undefined(bool value);
  private:
  bool _internal_point_color_undefined() const;
  void _internal_set_point_color_undefined(bool value);
  public:

  // optional bool alpha_undefined = 64;
  bool has_alpha_undefined() const;
  private:
  bool _internal_has_alpha_undefined() const;
  public:
  void clear_alpha_undefined();
  bool alpha_undefined() const;
  void set_alpha_undefined(bool value);
  private:
  bool _internal_alpha_undefined() const;
  void _internal_set_alpha_undefined(bool value);
  public:

  // optional bool border_undefined = 66;
  bool has_border_undefined() const;
  private:
  bool _internal_has_border_undefined() const;
  public:
  void clear_border_undefined();
  bool border_undefined() const;
  void set_border_undefined(bool value);
  private:
  bool _internal_border_undefined() const;
  void _internal_set_border_undefined(bool value);
  public:

  // optional bool blend_undefined = 68;
  bool has_blend_undefined() const;
  private:
  bool _internal_has_blend_undefined() const;
  public:
  void clear_blend_undefined();
  bool blend_undefined() const;
  void set_blend_undefined(bool value);
  private:
  bool _internal_blend_undefined() const;
  void _internal_set_blend_undefined(bool value);
  public:

  // optional bool brightness_undefined = 70;
  bool has_brightness_undefined() const;
  private:
  bool _internal_has_brightness_undefined() const;
  public:
  void clear_brightness_undefined();
  bool brightness_undefined() const;
  void set_brightness_undefined(bool value);
  private:
  bool _internal_brightness_undefined() const;
  void _internal_set_brightness_undefined(bool value);
  public:

  // optional bool border_lightness_undefined = 72;
  bool has_border_lightness_undefined() const;
  private:
  bool _internal_has_border_lightness_undefined() const;
  public:
  void clear_border_lightness_undefined();
  bool border_lightness_undefined() const;
  void set_border_lightness_undefined(bool value);
  private:
  bool _internal_border_lightness_undefined() const;
  void _internal_set_border_lightness_undefined(bool value);
  public:

  // optional bool contrast_undefined = 74;
  bool has_contrast_undefined() const;
  private:
  bool _internal_has_contrast_undefined() const;
  public:
  void clear_contrast_undefined();
  bool contrast_undefined() const;
  void set_contrast_undefined(bool value);
  private:
  bool _internal_contrast_undefined() const;
  void _internal_set_contrast_undefined(bool value);
  public:

  // optional bool damping_undefined = 76;
  bool has_damping_undefined() const;
  private:
  bool _internal_has_damping_undefined() const;
  public:
  void clear_damping_undefined();
  bool damping_undefined() const;
  void set_damping_undefined(bool value);
  private:
  bool _internal_damping_undefined() const;
  void _internal_set_damping_undefined(bool value);
  public:

  // optional bool density_undefined = 78;
  bool has_density_undefined() const;
  private:
  bool _internal_has_density_undefined() const;
  public:
  void clear_density_undefined();
  bool density_undefined() const;
  void set_density_undefined(bool value);
  private:
  bool _internal_density_undefined() const;
  void _internal_set_density_undefined(bool value);
  public:

  // optional bool diffuse_power_undefined = 80;
  bool has_diffuse_power_undefined() const;
  private:
  bool _internal_has_diffuse_power_undefined() const;
  public:
  void clear_diffuse_power_undefined();
  bool diffuse_power_undefined() const;
  void set_diffuse_power_undefined(bool value);
  private:
  bool _internal_diffuse_power_undefined() const;
  void _internal_set_diffuse_power_undefined(bool value);
  public:

  // optional bool distortion_undefined = 82;
  bool has_distortion_undefined() const;
  private:
  bool _internal_has_distortion_undefined() const;
  public:
  void clear_distortion_undefined();
  bool distortion_undefined() const;
  void set_distortion_undefined(bool value);
  private:
  bool _internal_distortion_undefined() const;
  void _internal_set_distortion_undefined(bool value);
  public:

  // optional bool entropy_undefined = 84;
  bool has_entropy_undefined() const;
  private:
  bool _internal_has_entropy_undefined() const;
  public:
  void clear_entropy_undefined();
  bool entropy_undefined() const;
  void set_entropy_undefined(bool value);
  private:
  bool _internal_entropy_undefined() const;
  void _internal_set_entropy_undefined(bool value);
  public:

  // optional bool exposure_undefined = 86;
  bool has_exposure_undefined() const;
  private:
  bool _internal_has_exposure_undefined() const;
  public:
  void clear_exposure_undefined();
  bool exposure_undefined() const;
  void set_exposure_undefined(bool value);
  private:
  bool _internal_exposure_undefined() const;
  void _internal_set_exposure_undefined(bool value);
  public:

  // optional bool filter_undefined = 88;
  bool has_filter_undefined() const;
  private:
  bool _internal_has_filter_undefined() const;
  public:
  void clear_filter_undefined();
  bool filter_undefined() const;
  void set_filter_undefined(bool value);
  private:
  bool _internal_filter_undefined() const;
  void _internal_set_filter_undefined(bool value);
  public:

  // optional bool fog_distance_undefined = 90;
  bool has_fog_distance_undefined() const;
  private:
  bool _internal_has_fog_distance_undefined() const;
  public:
  void clear_fog_distance_undefined();
  bool fog_distance_undefined() const;
  void set_fog_distance_undefined(bool value);
  private:
  bool _internal_fog_distance_undefined() const;
  void _internal_set_fog_distance_undefined(bool value);
  public:

  // optional bool fog_power_undefined = 92;
  bool has_fog_power_undefined() const;
  private:
  bool _internal_has_fog_power_undefined() const;
  public:
  void clear_fog_power_undefined();
  bool fog_power_undefined() const;
  void set_fog_power_undefined(bool value);
  private:
  bool _internal_fog_power_undefined() const;
  void _internal_set_fog_power_undefined(bool value);
  public:

  // optional bool gamma_undefined = 94;
  bool has_gamma_undefined() const;
  private:
  bool _internal_has_gamma_undefined() const;
  public:
  void clear_gamma_undefined();
  bool gamma_undefined() const;
  void set_gamma_undefined(bool value);
  private:
  bool _internal_gamma_undefined() const;
  void _internal_set_gamma_undefined(bool value);
  public:

  // optional bool grain_amount_undefined = 96;
  bool has_grain_amount_undefined() const;
  private:
  bool _internal_has_grain_amount_undefined() const;
  public:
  void clear_grain_amount_undefined();
  bool grain_amount_undefined() const;
  void set_grain_amount_undefined(bool value);
  private:
  bool _internal_grain_amount_undefined() const;
  void _internal_set_grain_amount_undefined(bool value);
  public:

  // optional bool grain_intensity_undefined = 98;
  bool has_grain_intensity_undefined() const;
  private:
  bool _internal_has_grain_intensity_undefined() const;
  public:
  void clear_grain_intensity_undefined();
  bool grain_intensity_undefined() const;
  void set_grain_intensity_undefined(bool value);
  private:
  bool _internal_grain_intensity_undefined() const;
  void _internal_set_grain_intensity_undefined(bool value);
  public:

  // optional bool hue_undefined = 100;
  bool has_hue_undefined() const;
  private:
  bool _internal_has_hue_undefined() const;
  public:
  void clear_hue_undefined();
  bool hue_undefined() const;
  void set_hue_undefined(bool value);
  private:
  bool _internal_hue_undefined() const;
  void _internal_set_hue_undefined(bool value);
  public:

  // optional bool lightness_undefined = 102;
  bool has_lightness_undefined() const;
  private:
  bool _internal_has_lightness_undefined() const;
  public:
  void clear_lightness_undefined();
  bool lightness_undefined() const;
  void set_lightness_undefined(bool value);
  private:
  bool _internal_lightness_undefined() const;
  void _internal_set_lightness_undefined(bool value);
  public:

  // optional bool line_alpha_undefined = 104;
  bool has_line_alpha_undefined() const;
  private:
  bool _internal_has_line_alpha_undefined() const;
  public:
  void clear_line_alpha_undefined();
  bool line_alpha_undefined() const;
  void set_line_alpha_undefined(bool value);
  private:
  bool _internal_line_alpha_undefined() const;
  void _internal_set_line_alpha_undefined(bool value);
  public:

  // optional bool line_center_undefined = 106;
  bool has_line_center_undefined() const;
  private:
  bool _internal_has_line_center_undefined() const;
  public:
  void clear_line_center_undefined();
  bool line_center_undefined() const;
  void set_line_center_undefined(bool value);
  private:
  bool _internal_line_center_undefined() const;
  void _internal_set_line_center_undefined(bool value);
  public:

  // optional bool line_fade_undefined = 108;
  bool has_line_fade_undefined() const;
  private:
  bool _internal_has_line_fade_undefined() const;
  public:
  void clear_line_fade_undefined();
  bool line_fade_undefined() const;
  void set_line_fade_undefined(bool value);
  private:
  bool _internal_line_fade_undefined() const;
  void _internal_set_line_fade_undefined(bool value);
  public:

  // optional bool line_fade_power_undefined = 110;
  bool has_line_fade_power_undefined() const;
  private:
  bool _internal_has_line_fade_power_undefined() const;
  public:
  void clear_line_fade_power_undefined();
  bool line_fade_power_undefined() const;
  void set_line_fade_power_undefined(bool value);
  private:
  bool _internal_line_fade_power_undefined() const;
  void _internal_set_line_fade_power_undefined(bool value);
  public:

  // optional bool line_length_undefined = 112;
  bool has_line_length_undefined() const;
  private:
  bool _internal_has_line_length_undefined() const;
  public:
  void clear_line_length_undefined();
  bool line_length_undefined() const;
  void set_line_length_undefined(bool value);
  private:
  bool _internal_line_length_undefined() const;
  void _internal_set_line_length_undefined(bool value);
  public:

  // optional bool line_width_undefined = 114;
  bool has_line_width_undefined() const;
  private:
  bool _internal_has_line_width_undefined() const;
  public:
  void clear_line_width_undefined();
  bool line_width_undefined() const;
  void set_line_width_undefined(bool value);
  private:
  bool _internal_line_width_undefined() const;
  void _internal_set_line_width_undefined(bool value);
  public:

  // optional bool noise_size_scale_undefined = 116;
  bool has_noise_size_scale_undefined() const;
  private:
  bool _internal_has_noise_size_scale_undefined() const;
  public:
  void clear_noise_size_scale_undefined();
  bool noise_size_scale_undefined() const;
  void set_noise_size_scale_undefined(bool value);
  private:
  bool _internal_noise_size_scale_undefined() const;
  void _internal_set_noise_size_scale_undefined(bool value);
  public:

  // optional bool noise_size_weight_undefined = 118;
  bool has_noise_size_weight_undefined() const;
  private:
  bool _internal_has_noise_size_weight_undefined() const;
  public:
  void clear_noise_size_weight_undefined();
  bool noise_size_weight_undefined() const;
  void set_noise_size_weight_undefined(bool value);
  private:
  bool _internal_noise_size_weight_undefined() const;
  void _internal_set_noise_size_weight_undefined(bool value);
  public:

  // optional bool noise_variance_undefined = 120;
  bool has_noise_variance_undefined() const;
  private:
  bool _internal_has_noise_variance_undefined() const;
  public:
  void clear_noise_variance_undefined();
  bool noise_variance_undefined() const;
  void set_noise_variance_undefined(bool value);
  private:
  bool _internal_noise_variance_undefined() const;
  void _internal_set_noise_variance_undefined(bool value);
  public:

  // optional bool offset_undefined = 122;
  bool has_offset_undefined() const;
  private:
  bool _internal_has_offset_undefined() const;
  public:
  void clear_offset_undefined();
  bool offset_undefined() const;
  void set_offset_undefined(bool value);
  private:
  bool _internal_offset_undefined() const;
  void _internal_set_offset_undefined(bool value);
  public:

  // optional bool motion_background_opacity_undefined = 124;
  bool has_motion_background_opacity_undefined() const;
  private:
  bool _internal_has_motion_background_opacity_undefined() const;
  public:
  void clear_motion_background_opacity_undefined();
  bool motion_background_opacity_undefined() const;
  void set_motion_background_opacity_undefined(bool value);
  private:
  bool _internal_motion_background_opacity_undefined() const;
  void _internal_set_motion_background_opacity_undefined(bool value);
  public:

  // optional bool point_depth_alpha_undefined = 126;
  bool has_point_depth_alpha_undefined() const;
  private:
  bool _internal_has_point_depth_alpha_undefined() const;
  public:
  void clear_point_depth_alpha_undefined();
  bool point_depth_alpha_undefined() const;
  void set_point_depth_alpha_undefined(bool value);
  private:
  bool _internal_point_depth_alpha_undefined() const;
  void _internal_set_point_depth_alpha_undefined(bool value);
  public:

  // optional bool point_size_undefined = 128;
  bool has_point_size_undefined() const;
  private:
  bool _internal_has_point_size_undefined() const;
  public:
  void clear_point_size_undefined();
  bool point_size_undefined() const;
  void set_point_size_undefined(bool value);
  private:
  bool _internal_point_size_undefined() const;
  void _internal_set_point_size_undefined(bool value);
  public:

  // optional bool power_undefined = 130;
  bool has_power_undefined() const;
  private:
  bool _internal_has_power_undefined() const;
  public:
  void clear_power_undefined();
  bool power_undefined() const;
  void set_power_undefined(bool value);
  private:
  bool _internal_power_undefined() const;
  void _internal_set_power_undefined(bool value);
  public:

  // optional bool radius_undefined = 132;
  bool has_radius_undefined() const;
  private:
  bool _internal_has_radius_undefined() const;
  public:
  void clear_radius_undefined();
  bool radius_undefined() const;
  void set_radius_undefined(bool value);
  private:
  bool _internal_radius_undefined() const;
  void _internal_set_radius_undefined(bool value);
  public:

  // optional bool refraction_undefined = 134;
  bool has_refraction_undefined() const;
  private:
  bool _internal_has_refraction_undefined() const;
  public:
  void clear_refraction_undefined();
  bool refraction_undefined() const;
  void set_refraction_undefined(bool value);
  private:
  bool _internal_refraction_undefined() const;
  void _internal_set_refraction_undefined(bool value);
  public:

  // optional bool resolution_undefined = 136;
  bool has_resolution_undefined() const;
  private:
  bool _internal_has_resolution_undefined() const;
  public:
  void clear_resolution_undefined();
  bool resolution_undefined() const;
  void set_resolution_undefined(bool value);
  private:
  bool _internal_resolution_undefined() const;
  void _internal_set_resolution_undefined(bool value);
  public:

  // optional bool saturation_undefined = 138;
  bool has_saturation_undefined() const;
  private:
  bool _internal_has_saturation_undefined() const;
  public:
  void clear_saturation_undefined();
  bool saturation_undefined() const;
  void set_saturation_undefined(bool value);
  private:
  bool _internal_saturation_undefined() const;
  void _internal_set_saturation_undefined(bool value);
  public:

  // optional bool scale_undefined = 140;
  bool has_scale_undefined() const;
  private:
  bool _internal_has_scale_undefined() const;
  public:
  void clear_scale_undefined();
  bool scale_undefined() const;
  void set_scale_undefined(bool value);
  private:
  bool _internal_scale_undefined() const;
  void _internal_set_scale_undefined(bool value);
  public:

  // optional bool shadow_alpha_undefined = 142;
  bool has_shadow_alpha_undefined() const;
  private:
  bool _internal_has_shadow_alpha_undefined() const;
  public:
  void clear_shadow_alpha_undefined();
  bool shadow_alpha_undefined() const;
  void set_shadow_alpha_undefined(bool value);
  private:
  bool _internal_shadow_alpha_undefined() const;
  void _internal_set_shadow_alpha_undefined(bool value);
  public:

  // optional bool shadow_angle_undefined = 144;
  bool has_shadow_angle_undefined() const;
  private:
  bool _internal_has_shadow_angle_undefined() const;
  public:
  void clear_shadow_angle_undefined();
  bool shadow_angle_undefined() const;
  void set_shadow_angle_undefined(bool value);
  private:
  bool _internal_shadow_angle_undefined() const;
  void _internal_set_shadow_angle_undefined(bool value);
  public:

  // optional bool shadow_offset_undefined = 146;
  bool has_shadow_offset_undefined() const;
  private:
  bool _internal_has_shadow_offset_undefined() const;
  public:
  void clear_shadow_offset_undefined();
  bool shadow_offset_undefined() const;
  void set_shadow_offset_undefined(bool value);
  private:
  bool _internal_shadow_offset_undefined() const;
  void _internal_set_shadow_offset_undefined(bool value);
  public:

  // optional bool shadow_scale_undefined = 148;
  bool has_shadow_scale_undefined() const;
  private:
  bool _internal_has_shadow_scale_undefined() const;
  public:
  void clear_shadow_scale_undefined();
  bool shadow_scale_undefined() const;
  void set_shadow_scale_undefined(bool value);
  private:
  bool _internal_shadow_scale_undefined() const;
  void _internal_set_shadow_scale_undefined(bool value);
  public:

  // optional bool shadow_value_undefined = 150;
  bool has_shadow_value_undefined() const;
  private:
  bool _internal_has_shadow_value_undefined() const;
  public:
  void clear_shadow_value_undefined();
  bool shadow_value_undefined() const;
  void set_shadow_value_undefined(bool value);
  private:
  bool _internal_shadow_value_undefined() const;
  void _internal_set_shadow_value_undefined(bool value);
  public:

  // optional bool speed_undefined = 152;
  bool has_speed_undefined() const;
  private:
  bool _internal_has_speed_undefined() const;
  public:
  void clear_speed_undefined();
  bool speed_undefined() const;
  void set_speed_undefined(bool value);
  private:
  bool _internal_speed_undefined() const;
  void _internal_set_speed_undefined(bool value);
  public:

  // optional bool texture_power_undefined = 154;
  bool has_texture_power_undefined() const;
  private:
  bool _internal_has_texture_power_undefined() const;
  public:
  void clear_texture_power_undefined();
  bool texture_power_undefined() const;
  void set_texture_power_undefined(bool value);
  private:
  bool _internal_texture_power_undefined() const;
  void _internal_set_texture_power_undefined(bool value);
  public:

  // optional bool time_undefined = 156;
  bool has_time_undefined() const;
  private:
  bool _internal_has_time_undefined() const;
  public:
  void clear_time_undefined();
  bool time_undefined() const;
  void set_time_undefined(bool value);
  private:
  bool _internal_time_undefined() const;
  void _internal_set_time_undefined(bool value);
  public:

  // optional bool draw_points_undefined = 158;
  bool has_draw_points_undefined() const;
  private:
  bool _internal_has_draw_points_undefined() const;
  public:
  void clear_draw_points_undefined();
  bool draw_points_undefined() const;
  void set_draw_points_undefined(bool value);
  private:
  bool _internal_draw_points_undefined() const;
  void _internal_set_draw_points_undefined(bool value);
  public:

  // optional bool draw_lines_undefined = 160;
  bool has_draw_lines_undefined() const;
  private:
  bool _internal_has_draw_lines_undefined() const;
  public:
  void clear_draw_lines_undefined();
  bool draw_lines_undefined() const;
  void set_draw_lines_undefined(bool value);
  private:
  bool _internal_draw_lines_undefined() const;
  void _internal_set_draw_lines_undefined(bool value);
  public:

  // optional bool draw_shadows_undefined = 162;
  bool has_draw_shadows_undefined() const;
  private:
  bool _internal_has_draw_shadows_undefined() const;
  public:
  void clear_draw_shadows_undefined();
  bool draw_shadows_undefined() const;
  void set_draw_shadows_undefined(bool value);
  private:
  bool _internal_draw_shadows_undefined() const;
  void _internal_set_draw_shadows_undefined(bool value);
  public:

  // optional bool pixels_per_division_undefined = 164;
  bool has_pixels_per_division_undefined() const;
  private:
  bool _internal_has_pixels_per_division_undefined() const;
  public:
  void clear_pixels_per_division_undefined();
  bool pixels_per_division_undefined() const;
  void set_pixels_per_division_undefined(bool value);
  private:
  bool _internal_pixels_per_division_undefined() const;
  void _internal_set_pixels_per_division_undefined(bool value);
  public:

  // optional bool symmetry_undefined = 166;
  bool has_symmetry_undefined() const;
  private:
  bool _internal_has_symmetry_undefined() const;
  public:
  void clear_symmetry_undefined();
  bool symmetry_undefined() const;
  void set_symmetry_undefined(bool value);
  private:
  bool _internal_symmetry_undefined() const;
  void _internal_set_symmetry_undefined(bool value);
  public:

  // optional bool lock_focus_undefined = 168;
  bool has_lock_focus_undefined() const;
  private:
  bool _internal_has_lock_focus_undefined() const;
  public:
  void clear_lock_focus_undefined();
  bool lock_focus_undefined() const;
  void set_lock_focus_undefined(bool value);
  private:
  bool _internal_lock_focus_undefined() const;
  void _internal_set_lock_focus_undefined(bool value);
  public:

  // optional bool amplitude_undefined = 170;
  bool has_amplitude_undefined() const;
  private:
  bool _internal_has_amplitude_undefined() const;
  public:
  void clear_amplitude_undefined();
  bool amplitude_undefined() const;
  void set_amplitude_undefined(bool value);
  private:
  bool _internal_amplitude_undefined() const;
  void _internal_set_amplitude_undefined(bool value);
  public:

  // optional bool envelope_undefined = 172;
  bool has_envelope_undefined() const;
  private:
  bool _internal_has_envelope_undefined() const;
  public:
  void clear_envelope_undefined();
  bool envelope_undefined() const;
  void set_envelope_undefined(bool value);
  private:
  bool _internal_envelope_undefined() const;
  void _internal_set_envelope_undefined(bool value);
  public:

  // optional bool y_offset_undefined = 174;
  bool has_y_offset_undefined() const;
  private:
  bool _internal_has_y_offset_undefined() const;
  public:
  void clear_y_offset_undefined();
  bool y_offset_undefined() const;
  void set_y_offset_undefined(bool value);
  private:
  bool _internal_y_offset_undefined() const;
  void _internal_set_y_offset_undefined(bool value);
  public:

  // optional bool focus_undefined = 176;
  bool has_focus_undefined() const;
  private:
  bool _internal_has_focus_undefined() const;
  public:
  void clear_focus_undefined();
  bool focus_undefined() const;
  void set_focus_undefined(bool value);
  private:
  bool _internal_focus_undefined() const;
  void _internal_set_focus_undefined(bool value);
  public:

  // optional bool blur_undefined = 178;
  bool has_blur_undefined() const;
  private:
  bool _internal_has_blur_undefined() const;
  public:
  void clear_blur_undefined();
  bool blur_undefined() const;
  void set_blur_undefined(bool value);
  private:
  bool _internal_blur_undefined() const;
  void _internal_set_blur_undefined(bool value);
  public:

  // optional bool grain_speed_undefined = 180;
  bool has_grain_speed_undefined() const;
  private:
  bool _internal_has_grain_speed_undefined() const;
  public:
  void clear_grain_speed_undefined();
  bool grain_speed_undefined() const;
  void set_grain_speed_undefined(bool value);
  private:
  bool _internal_grain_speed_undefined() const;
  void _internal_set_grain_speed_undefined(bool value);
  public:

  // optional bool mesh_color_undefined = 182;
  bool has_mesh_color_undefined() const;
  private:
  bool _internal_has_mesh_color_undefined() const;
  public:
  void clear_mesh_color_undefined();
  bool mesh_color_undefined() const;
  void set_mesh_color_undefined(bool value);
  private:
  bool _internal_mesh_color_undefined() const;
  void _internal_set_mesh_color_undefined(bool value);
  public:

  // optional bool angle_undefined = 184;
  bool has_angle_undefined() const;
  private:
  bool _internal_has_angle_undefined() const;
  public:
  void clear_angle_undefined();
  bool angle_undefined() const;
  void set_angle_undefined(bool value);
  private:
  bool _internal_angle_undefined() const;
  void _internal_set_angle_undefined(bool value);
  public:

  // optional bool mesh_line_width_undefined = 186;
  bool has_mesh_line_width_undefined() const;
  private:
  bool _internal_has_mesh_line_width_undefined() const;
  public:
  void clear_mesh_line_width_undefined();
  bool mesh_line_width_undefined() const;
  void set_mesh_line_width_undefined(bool value);
  private:
  bool _internal_mesh_line_width_undefined() const;
  void _internal_set_mesh_line_width_undefined(bool value);
  public:

  // optional bool delta_time_undefined = 188;
  bool has_delta_time_undefined() const;
  private:
  bool _internal_has_delta_time_undefined() const;
  public:
  void clear_delta_time_undefined();
  bool delta_time_undefined() const;
  void set_delta_time_undefined(bool value);
  private:
  bool _internal_delta_time_undefined() const;
  void _internal_set_delta_time_undefined(bool value);
  public:

  // optional bool threshold_undefined = 190;
  bool has_threshold_undefined() const;
  private:
  bool _internal_has_threshold_undefined() const;
  public:
  void clear_threshold_undefined();
  bool threshold_undefined() const;
  void set_threshold_undefined(bool value);
  private:
  bool _internal_threshold_undefined() const;
  void _internal_set_threshold_undefined(bool value);
  public:

  // optional bool time_start_undefined = 192;
  bool has_time_start_undefined() const;
  private:
  bool _internal_has_time_start_undefined() const;
  public:
  void clear_time_start_undefined();
  bool time_start_undefined() const;
  void set_time_start_undefined(bool value);
  private:
  bool _internal_time_start_undefined() const;
  void _internal_set_time_start_undefined(bool value);
  public:

  // optional bool instance_count_undefined = 194;
  bool has_instance_count_undefined() const;
  private:
  bool _internal_has_instance_count_undefined() const;
  public:
  void clear_instance_count_undefined();
  bool instance_count_undefined() const;
  void set_instance_count_undefined(bool value);
  private:
  bool _internal_instance_count_undefined() const;
  void _internal_set_instance_count_undefined(bool value);
  public:

  // optional bool extrusion_undefined = 196;
  bool has_extrusion_undefined() const;
  private:
  bool _internal_has_extrusion_undefined() const;
  public:
  void clear_extrusion_undefined();
  bool extrusion_undefined() const;
  void set_extrusion_undefined(bool value);
  private:
  bool _internal_extrusion_undefined() const;
  void _internal_set_extrusion_undefined(bool value);
  public:

  // optional bool noise_offset_undefined = 198;
  bool has_noise_offset_undefined() const;
  private:
  bool _internal_has_noise_offset_undefined() const;
  public:
  void clear_noise_offset_undefined();
  bool noise_offset_undefined() const;
  void set_noise_offset_undefined(bool value);
  private:
  bool _internal_noise_offset_undefined() const;
  void _internal_set_noise_offset_undefined(bool value);
  public:

  // optional bool color_hue_offset_undefined = 200;
  bool has_color_hue_offset_undefined() const;
  private:
  bool _internal_has_color_hue_offset_undefined() const;
  public:
  void clear_color_hue_offset_undefined();
  bool color_hue_offset_undefined() const;
  void set_color_hue_offset_undefined(bool value);
  private:
  bool _internal_color_hue_offset_undefined() const;
  void _internal_set_color_hue_offset_undefined(bool value);
  public:

  // optional bool shadow_hue_undefined = 202;
  bool has_shadow_hue_undefined() const;
  private:
  bool _internal_has_shadow_hue_undefined() const;
  public:
  void clear_shadow_hue_undefined();
  bool shadow_hue_undefined() const;
  void set_shadow_hue_undefined(bool value);
  private:
  bool _internal_shadow_hue_undefined() const;
  void _internal_set_shadow_hue_undefined(bool value);
  public:

  // optional bool shadow_hue_offset_undefined = 204;
  bool has_shadow_hue_offset_undefined() const;
  private:
  bool _internal_has_shadow_hue_offset_undefined() const;
  public:
  void clear_shadow_hue_offset_undefined();
  bool shadow_hue_offset_undefined() const;
  void set_shadow_hue_offset_undefined(bool value);
  private:
  bool _internal_shadow_hue_offset_undefined() const;
  void _internal_set_shadow_hue_offset_undefined(bool value);
  public:

  // optional bool shadow_saturation_undefined = 206;
  bool has_shadow_saturation_undefined() const;
  private:
  bool _internal_has_shadow_saturation_undefined() const;
  public:
  void clear_shadow_saturation_undefined();
  bool shadow_saturation_undefined() const;
  void set_shadow_saturation_undefined(bool value);
  private:
  bool _internal_shadow_saturation_undefined() const;
  void _internal_set_shadow_saturation_undefined(bool value);
  public:

  // optional bool shadow_brightness_undefined = 208;
  bool has_shadow_brightness_undefined() const;
  private:
  bool _internal_has_shadow_brightness_undefined() const;
  public:
  void clear_shadow_brightness_undefined();
  bool shadow_brightness_undefined() const;
  void set_shadow_brightness_undefined(bool value);
  private:
  bool _internal_shadow_brightness_undefined() const;
  void _internal_set_shadow_brightness_undefined(bool value);
  public:

  // optional bool shadow_intensity_undefined = 210;
  bool has_shadow_intensity_undefined() const;
  private:
  bool _internal_has_shadow_intensity_undefined() const;
  public:
  void clear_shadow_intensity_undefined();
  bool shadow_intensity_undefined() const;
  void set_shadow_intensity_undefined(bool value);
  private:
  bool _internal_shadow_intensity_undefined() const;
  void _internal_set_shadow_intensity_undefined(bool value);
  public:

  // optional bool shadow_power_undefined = 212;
  bool has_shadow_power_undefined() const;
  private:
  bool _internal_has_shadow_power_undefined() const;
  public:
  void clear_shadow_power_undefined();
  bool shadow_power_undefined() const;
  void set_shadow_power_undefined(bool value);
  private:
  bool _internal_shadow_power_undefined() const;
  void _internal_set_shadow_power_undefined(bool value);
  public:

  // optional bool noise_octaves_iterations_undefined = 214;
  bool has_noise_octaves_iterations_undefined() const;
  private:
  bool _internal_has_noise_octaves_iterations_undefined() const;
  public:
  void clear_noise_octaves_iterations_undefined();
  bool noise_octaves_iterations_undefined() const;
  void set_noise_octaves_iterations_undefined(bool value);
  private:
  bool _internal_noise_octaves_iterations_undefined() const;
  void _internal_set_noise_octaves_iterations_undefined(bool value);
  public:

  // @@protoc_insertion_point(class_scope:KNSOS.MotionBackgroundStylePropertyChangeSetArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<7> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSSSOS::SpecStringArchive* name_;
    ::TSSSOS::SpecStringArchive* variant_;
    ::TSDSOS::SpecFillArchive* color_gradient_;
    ::TSSSOS::SpecIntegerArchive* random_seed_;
    ::TSSSOS::SpecDoubleArchive* color_blur_sigma_;
    ::TSSSOS::SpecDoubleArchive* color_contrast_;
    ::TSSSOS::SpecDoubleArchive* color_gamma_;
    ::TSSSOS::SpecDoubleArchive* color_saturation_;
    ::TSSSOS::SpecDoubleArchive* color_brightness_;
    ::TSSSOS::SpecDoubleArchive* color_hue_;
    ::TSSSOS::SpecDoubleArchive* color_vibrance_;
    ::TSSSOS::SpecDoubleArchive* noise_amplitude_;
    ::TSSSOS::SpecDoubleArchive* noise_movement_;
    ::TSSSOS::SpecDoubleArchive* noise_octaves_;
    ::TSSSOS::SpecDoubleArchive* noise_scale_;
    ::TSSSOS::SpecDoubleArchive* noise_scale_horizontal_;
    ::TSSSOS::SpecDoubleArchive* noise_scale_vertical_;
    ::TSSSOS::SpecDoubleArchive* noise_gain_;
    ::TSSSOS::SpecDoubleArchive* noise_lacunarity_;
    ::TSSSOS::SpecDoubleArchive* noise_speed_;
    ::TSSSOS::SpecIntegerArchive* color_palette_offset_;
    ::TSSSOS::SpecDoubleArchive* zoom_;
    ::TSSSOS::SpecBoolArchive* invert_;
    ::TSSSOS::SpecStringArchive* blend_mode_;
    ::TSSSOS::SpecStringArchive* source_blend_factor_;
    ::TSSSOS::SpecStringArchive* dest_blend_factor_;
    ::TSSSOS::SpecStringArchive* motion_;
    ::TSSSOS::SpecColorArchive* background_color_;
    ::TSSSOS::SpecColorArchive* foreground_color_;
    ::TSSSOS::SpecColorArchive* line_color_;
    ::TSSSOS::SpecColorArchive* point_color_;
    ::TSSSOS::SpecDoubleArchive* alpha_;
    ::TSSSOS::SpecDoubleArchive* border_;
    ::TSSSOS::SpecDoubleArchive* blend_;
    ::TSSSOS::SpecDoubleArchive* brightness_;
    ::TSSSOS::SpecDoubleArchive* border_lightness_;
    ::TSSSOS::SpecDoubleArchive* contrast_;
    ::TSSSOS::SpecDoubleArchive* damping_;
    ::TSSSOS::SpecDoubleArchive* density_;
    ::TSSSOS::SpecDoubleArchive* diffuse_power_;
    ::TSSSOS::SpecDoubleArchive* distortion_;
    ::TSSSOS::SpecDoubleArchive* entropy_;
    ::TSSSOS::SpecDoubleArchive* exposure_;
    ::TSSSOS::SpecDoubleArchive* filter_;
    ::TSSSOS::SpecDoubleArchive* fog_distance_;
    ::TSSSOS::SpecDoubleArchive* fog_power_;
    ::TSSSOS::SpecDoubleArchive* gamma_;
    ::TSSSOS::SpecDoubleArchive* grain_amount_;
    ::TSSSOS::SpecDoubleArchive* grain_intensity_;
    ::TSSSOS::SpecDoubleArchive* hue_;
    ::TSSSOS::SpecDoubleArchive* lightness_;
    ::TSSSOS::SpecDoubleArchive* line_alpha_;
    ::TSSSOS::SpecDoubleArchive* line_center_;
    ::TSSSOS::SpecDoubleArchive* line_fade_;
    ::TSSSOS::SpecDoubleArchive* line_fade_power_;
    ::TSSSOS::SpecDoubleArchive* line_length_;
    ::TSSSOS::SpecDoubleArchive* line_width_;
    ::TSSSOS::SpecDoubleArchive* noise_size_scale_;
    ::TSSSOS::SpecDoubleArchive* noise_size_weight_;
    ::TSSSOS::SpecDoubleArchive* noise_variance_;
    ::TSSSOS::SpecDoubleArchive* offset_;
    ::TSSSOS::SpecDoubleArchive* motion_background_opacity_;
    ::TSSSOS::SpecDoubleArchive* point_depth_alpha_;
    ::TSSSOS::SpecDoubleArchive* point_size_;
    ::TSSSOS::SpecDoubleArchive* power_;
    ::TSSSOS::SpecDoubleArchive* radius_;
    ::TSSSOS::SpecDoubleArchive* refraction_;
    ::TSSSOS::SpecDoubleArchive* resolution_;
    ::TSSSOS::SpecDoubleArchive* saturation_;
    ::TSSSOS::SpecDoubleArchive* scale_;
    ::TSSSOS::SpecDoubleArchive* shadow_alpha_;
    ::TSSSOS::SpecDoubleArchive* shadow_angle_;
    ::TSSSOS::SpecDoubleArchive* shadow_offset_;
    ::TSSSOS::SpecDoubleArchive* shadow_scale_;
    ::TSSSOS::SpecDoubleArchive* shadow_value_;
    ::TSSSOS::SpecDoubleArchive* speed_;
    ::TSSSOS::SpecDoubleArchive* texture_power_;
    ::TSSSOS::SpecDoubleArchive* time_;
    ::TSSSOS::SpecBoolArchive* draw_points_;
    ::TSSSOS::SpecBoolArchive* draw_lines_;
    ::TSSSOS::SpecBoolArchive* draw_shadows_;
    ::TSSSOS::SpecIntegerArchive* pixels_per_division_;
    ::TSSSOS::SpecBoolArchive* symmetry_;
    ::TSSSOS::SpecBoolArchive* lock_focus_;
    ::TSSSOS::SpecDoubleArchive* amplitude_;
    ::TSSSOS::SpecDoubleArchive* envelope_;
    ::TSSSOS::SpecDoubleArchive* y_offset_;
    ::TSSSOS::SpecDoubleArchive* focus_;
    ::TSSSOS::SpecDoubleArchive* blur_;
    ::TSSSOS::SpecDoubleArchive* grain_speed_;
    ::TSSSOS::SpecColorArchive* mesh_color_;
    ::TSSSOS::SpecDoubleArchive* angle_;
    ::TSSSOS::SpecDoubleArchive* mesh_line_width_;
    ::TSSSOS::SpecDoubleArchive* delta_time_;
    ::TSSSOS::SpecDoubleArchive* threshold_;
    ::TSSSOS::SpecDoubleArchive* time_start_;
    ::TSSSOS::SpecIntegerArchive* instance_count_;
    ::TSSSOS::SpecDoubleArchive* extrusion_;
    ::TSSSOS::SpecDoubleArchive* noise_offset_;
    ::TSSSOS::SpecDoubleArchive* color_hue_offset_;
    ::TSSSOS::SpecDoubleArchive* shadow_hue_;
    ::TSSSOS::SpecDoubleArchive* shadow_hue_offset_;
    ::TSSSOS::SpecDoubleArchive* shadow_saturation_;
    ::TSSSOS::SpecDoubleArchive* shadow_brightness_;
    ::TSSSOS::SpecDoubleArchive* shadow_intensity_;
    ::TSSSOS::SpecDoubleArchive* shadow_power_;
    ::TSSSOS::SpecIntegerArchive* noise_octaves_iterations_;
    bool name_undefined_;
    bool variant_undefined_;
    bool color_gradient_undefined_;
    bool random_seed_undefined_;
    bool color_blur_sigma_undefined_;
    bool color_contrast_undefined_;
    bool color_gamma_undefined_;
    bool color_saturation_undefined_;
    bool color_brightness_undefined_;
    bool color_hue_undefined_;
    bool color_vibrance_undefined_;
    bool noise_amplitude_undefined_;
    bool noise_movement_undefined_;
    bool noise_octaves_undefined_;
    bool noise_scale_undefined_;
    bool noise_scale_horizontal_undefined_;
    bool noise_scale_vertical_undefined_;
    bool noise_gain_undefined_;
    bool noise_lacunarity_undefined_;
    bool noise_speed_undefined_;
    bool color_palette_offset_undefined_;
    bool zoom_undefined_;
    bool invert_undefined_;
    bool blend_mode_undefined_;
    bool source_blend_factor_undefined_;
    bool dest_blend_factor_undefined_;
    bool motion_undefined_;
    bool background_color_undefined_;
    bool foreground_color_undefined_;
    bool line_color_undefined_;
    bool point_color_undefined_;
    bool alpha_undefined_;
    bool border_undefined_;
    bool blend_undefined_;
    bool brightness_undefined_;
    bool border_lightness_undefined_;
    bool contrast_undefined_;
    bool damping_undefined_;
    bool density_undefined_;
    bool diffuse_power_undefined_;
    bool distortion_undefined_;
    bool entropy_undefined_;
    bool exposure_undefined_;
    bool filter_undefined_;
    bool fog_distance_undefined_;
    bool fog_power_undefined_;
    bool gamma_undefined_;
    bool grain_amount_undefined_;
    bool grain_intensity_undefined_;
    bool hue_undefined_;
    bool lightness_undefined_;
    bool line_alpha_undefined_;
    bool line_center_undefined_;
    bool line_fade_undefined_;
    bool line_fade_power_undefined_;
    bool line_length_undefined_;
    bool line_width_undefined_;
    bool noise_size_scale_undefined_;
    bool noise_size_weight_undefined_;
    bool noise_variance_undefined_;
    bool offset_undefined_;
    bool motion_background_opacity_undefined_;
    bool point_depth_alpha_undefined_;
    bool point_size_undefined_;
    bool power_undefined_;
    bool radius_undefined_;
    bool refraction_undefined_;
    bool resolution_undefined_;
    bool saturation_undefined_;
    bool scale_undefined_;
    bool shadow_alpha_undefined_;
    bool shadow_angle_undefined_;
    bool shadow_offset_undefined_;
    bool shadow_scale_undefined_;
    bool shadow_value_undefined_;
    bool speed_undefined_;
    bool texture_power_undefined_;
    bool time_undefined_;
    bool draw_points_undefined_;
    bool draw_lines_undefined_;
    bool draw_shadows_undefined_;
    bool pixels_per_division_undefined_;
    bool symmetry_undefined_;
    bool lock_focus_undefined_;
    bool amplitude_undefined_;
    bool envelope_undefined_;
    bool y_offset_undefined_;
    bool focus_undefined_;
    bool blur_undefined_;
    bool grain_speed_undefined_;
    bool mesh_color_undefined_;
    bool angle_undefined_;
    bool mesh_line_width_undefined_;
    bool delta_time_undefined_;
    bool threshold_undefined_;
    bool time_start_undefined_;
    bool instance_count_undefined_;
    bool extrusion_undefined_;
    bool noise_offset_undefined_;
    bool color_hue_offset_undefined_;
    bool shadow_hue_undefined_;
    bool shadow_hue_offset_undefined_;
    bool shadow_saturation_undefined_;
    bool shadow_brightness_undefined_;
    bool shadow_intensity_undefined_;
    bool shadow_power_undefined_;
    bool noise_octaves_iterations_undefined_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_KNArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SlideStylePropertyChangeSetArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:KNSOS.SlideStylePropertyChangeSetArchive) */ {
 public:
  inline SlideStylePropertyChangeSetArchive() : SlideStylePropertyChangeSetArchive(nullptr) {}
  ~SlideStylePropertyChangeSetArchive() override;
  explicit PROTOBUF_CONSTEXPR SlideStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SlideStylePropertyChangeSetArchive(const SlideStylePropertyChangeSetArchive& from);
  SlideStylePropertyChangeSetArchive(SlideStylePropertyChangeSetArchive&& from) noexcept
    : SlideStylePropertyChangeSetArchive() {
    *this = ::std::move(from);
  }

  inline SlideStylePropertyChangeSetArchive& operator=(const SlideStylePropertyChangeSetArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SlideStylePropertyChangeSetArchive& operator=(SlideStylePropertyChangeSetArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SlideStylePropertyChangeSetArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SlideStylePropertyChangeSetArchive* internal_default_instance() {
    return reinterpret_cast<const SlideStylePropertyChangeSetArchive*>(
               &_SlideStylePropertyChangeSetArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SlideStylePropertyChangeSetArchive& a, SlideStylePropertyChangeSetArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SlideStylePropertyChangeSetArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SlideStylePropertyChangeSetArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SlideStylePropertyChangeSetArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SlideStylePropertyChangeSetArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SlideStylePropertyChangeSetArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SlideStylePropertyChangeSetArchive& from) {
    SlideStylePropertyChangeSetArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlideStylePropertyChangeSetArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "KNSOS.SlideStylePropertyChangeSetArchive";
  }
  protected:
  explicit SlideStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFillFieldNumber = 1,
    kSlideTransitionFieldNumber = 3,
    kFillUndefinedFieldNumber = 2,
    kSlideTransitionUndefinedFieldNumber = 4,
  };
  // optional .TSDSOS.SpecFillArchive fill = 1;
  bool has_fill() const;
  private:
  bool _internal_has_fill() const;
  public:
  void clear_fill();
  const ::TSDSOS::SpecFillArchive& fill() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecFillArchive* release_fill();
  ::TSDSOS::SpecFillArchive* mutable_fill();
  void set_allocated_fill(::TSDSOS::SpecFillArchive* fill);
  private:
  const ::TSDSOS::SpecFillArchive& _internal_fill() const;
  ::TSDSOS::SpecFillArchive* _internal_mutable_fill();
  public:
  void unsafe_arena_set_allocated_fill(
      ::TSDSOS::SpecFillArchive* fill);
  ::TSDSOS::SpecFillArchive* unsafe_arena_release_fill();

  // optional .KNSOS.SpecTransitionAttributesArchive slide_transition = 3;
  bool has_slide_transition() const;
  private:
  bool _internal_has_slide_transition() const;
  public:
  void clear_slide_transition();
  const ::KNSOS::SpecTransitionAttributesArchive& slide_transition() const;
  PROTOBUF_NODISCARD ::KNSOS::SpecTransitionAttributesArchive* release_slide_transition();
  ::KNSOS::SpecTransitionAttributesArchive* mutable_slide_transition();
  void set_allocated_slide_transition(::KNSOS::SpecTransitionAttributesArchive* slide_transition);
  private:
  const ::KNSOS::SpecTransitionAttributesArchive& _internal_slide_transition() const;
  ::KNSOS::SpecTransitionAttributesArchive* _internal_mutable_slide_transition();
  public:
  void unsafe_arena_set_allocated_slide_transition(
      ::KNSOS::SpecTransitionAttributesArchive* slide_transition);
  ::KNSOS::SpecTransitionAttributesArchive* unsafe_arena_release_slide_transition();

  // optional bool fill_undefined = 2;
  bool has_fill_undefined() const;
  private:
  bool _internal_has_fill_undefined() const;
  public:
  void clear_fill_undefined();
  bool fill_undefined() const;
  void set_fill_undefined(bool value);
  private:
  bool _internal_fill_undefined() const;
  void _internal_set_fill_undefined(bool value);
  public:

  // optional bool slide_transition_undefined = 4;
  bool has_slide_transition_undefined() const;
  private:
  bool _internal_has_slide_transition_undefined() const;
  public:
  void clear_slide_transition_undefined();
  bool slide_transition_undefined() const;
  void set_slide_transition_undefined(bool value);
  private:
  bool _internal_slide_transition_undefined() const;
  void _internal_set_slide_transition_undefined(bool value);
  public:

  // @@protoc_insertion_point(class_scope:KNSOS.SlideStylePropertyChangeSetArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSDSOS::SpecFillArchive* fill_;
    ::KNSOS::SpecTransitionAttributesArchive* slide_transition_;
    bool fill_undefined_;
    bool slide_transition_undefined_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_KNArchives_2esos_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SpecSetTransitionAttributesArchive

// optional .KN.TransitionAttributesArchive transition_attributes = 1;
inline bool SpecSetTransitionAttributesArchive::_internal_has_transition_attributes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transition_attributes_ != nullptr);
  return value;
}
inline bool SpecSetTransitionAttributesArchive::has_transition_attributes() const {
  return _internal_has_transition_attributes();
}
inline const ::KN::TransitionAttributesArchive& SpecSetTransitionAttributesArchive::_internal_transition_attributes() const {
  const ::KN::TransitionAttributesArchive* p = _impl_.transition_attributes_;
  return p != nullptr ? *p : reinterpret_cast<const ::KN::TransitionAttributesArchive&>(
      ::KN::_TransitionAttributesArchive_default_instance_);
}
inline const ::KN::TransitionAttributesArchive& SpecSetTransitionAttributesArchive::transition_attributes() const {
  // @@protoc_insertion_point(field_get:KNSOS.SpecSetTransitionAttributesArchive.transition_attributes)
  return _internal_transition_attributes();
}
inline void SpecSetTransitionAttributesArchive::unsafe_arena_set_allocated_transition_attributes(
    ::KN::TransitionAttributesArchive* transition_attributes) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transition_attributes_);
  }
  _impl_.transition_attributes_ = transition_attributes;
  if (transition_attributes) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.SpecSetTransitionAttributesArchive.transition_attributes)
}
inline ::KN::TransitionAttributesArchive* SpecSetTransitionAttributesArchive::release_transition_attributes() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::KN::TransitionAttributesArchive* temp = _impl_.transition_attributes_;
  _impl_.transition_attributes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::KN::TransitionAttributesArchive* SpecSetTransitionAttributesArchive::unsafe_arena_release_transition_attributes() {
  // @@protoc_insertion_point(field_release:KNSOS.SpecSetTransitionAttributesArchive.transition_attributes)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::KN::TransitionAttributesArchive* temp = _impl_.transition_attributes_;
  _impl_.transition_attributes_ = nullptr;
  return temp;
}
inline ::KN::TransitionAttributesArchive* SpecSetTransitionAttributesArchive::_internal_mutable_transition_attributes() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transition_attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::KN::TransitionAttributesArchive>(GetArenaForAllocation());
    _impl_.transition_attributes_ = p;
  }
  return _impl_.transition_attributes_;
}
inline ::KN::TransitionAttributesArchive* SpecSetTransitionAttributesArchive::mutable_transition_attributes() {
  ::KN::TransitionAttributesArchive* _msg = _internal_mutable_transition_attributes();
  // @@protoc_insertion_point(field_mutable:KNSOS.SpecSetTransitionAttributesArchive.transition_attributes)
  return _msg;
}
inline void SpecSetTransitionAttributesArchive::set_allocated_transition_attributes(::KN::TransitionAttributesArchive* transition_attributes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transition_attributes_);
  }
  if (transition_attributes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transition_attributes));
    if (message_arena != submessage_arena) {
      transition_attributes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transition_attributes, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transition_attributes_ = transition_attributes;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.SpecSetTransitionAttributesArchive.transition_attributes)
}

// required bool unset = 2;
inline bool SpecSetTransitionAttributesArchive::_internal_has_unset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetTransitionAttributesArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetTransitionAttributesArchive::clear_unset() {
  _impl_.unset_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetTransitionAttributesArchive::_internal_unset() const {
  return _impl_.unset_;
}
inline bool SpecSetTransitionAttributesArchive::unset() const {
  // @@protoc_insertion_point(field_get:KNSOS.SpecSetTransitionAttributesArchive.unset)
  return _internal_unset();
}
inline void SpecSetTransitionAttributesArchive::_internal_set_unset(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unset_ = value;
}
inline void SpecSetTransitionAttributesArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:KNSOS.SpecSetTransitionAttributesArchive.unset)
}

// -------------------------------------------------------------------

// SpecTransitionAttributesArchive

// optional .KNSOS.SpecSetTransitionAttributesArchive spec_set_transition_attributes = 1;
inline bool SpecTransitionAttributesArchive::_internal_has_spec_set_transition_attributes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_set_transition_attributes_ != nullptr);
  return value;
}
inline bool SpecTransitionAttributesArchive::has_spec_set_transition_attributes() const {
  return _internal_has_spec_set_transition_attributes();
}
inline void SpecTransitionAttributesArchive::clear_spec_set_transition_attributes() {
  if (_impl_.spec_set_transition_attributes_ != nullptr) _impl_.spec_set_transition_attributes_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::KNSOS::SpecSetTransitionAttributesArchive& SpecTransitionAttributesArchive::_internal_spec_set_transition_attributes() const {
  const ::KNSOS::SpecSetTransitionAttributesArchive* p = _impl_.spec_set_transition_attributes_;
  return p != nullptr ? *p : reinterpret_cast<const ::KNSOS::SpecSetTransitionAttributesArchive&>(
      ::KNSOS::_SpecSetTransitionAttributesArchive_default_instance_);
}
inline const ::KNSOS::SpecSetTransitionAttributesArchive& SpecTransitionAttributesArchive::spec_set_transition_attributes() const {
  // @@protoc_insertion_point(field_get:KNSOS.SpecTransitionAttributesArchive.spec_set_transition_attributes)
  return _internal_spec_set_transition_attributes();
}
inline void SpecTransitionAttributesArchive::unsafe_arena_set_allocated_spec_set_transition_attributes(
    ::KNSOS::SpecSetTransitionAttributesArchive* spec_set_transition_attributes) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_set_transition_attributes_);
  }
  _impl_.spec_set_transition_attributes_ = spec_set_transition_attributes;
  if (spec_set_transition_attributes) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.SpecTransitionAttributesArchive.spec_set_transition_attributes)
}
inline ::KNSOS::SpecSetTransitionAttributesArchive* SpecTransitionAttributesArchive::release_spec_set_transition_attributes() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::KNSOS::SpecSetTransitionAttributesArchive* temp = _impl_.spec_set_transition_attributes_;
  _impl_.spec_set_transition_attributes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::KNSOS::SpecSetTransitionAttributesArchive* SpecTransitionAttributesArchive::unsafe_arena_release_spec_set_transition_attributes() {
  // @@protoc_insertion_point(field_release:KNSOS.SpecTransitionAttributesArchive.spec_set_transition_attributes)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::KNSOS::SpecSetTransitionAttributesArchive* temp = _impl_.spec_set_transition_attributes_;
  _impl_.spec_set_transition_attributes_ = nullptr;
  return temp;
}
inline ::KNSOS::SpecSetTransitionAttributesArchive* SpecTransitionAttributesArchive::_internal_mutable_spec_set_transition_attributes() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.spec_set_transition_attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::KNSOS::SpecSetTransitionAttributesArchive>(GetArenaForAllocation());
    _impl_.spec_set_transition_attributes_ = p;
  }
  return _impl_.spec_set_transition_attributes_;
}
inline ::KNSOS::SpecSetTransitionAttributesArchive* SpecTransitionAttributesArchive::mutable_spec_set_transition_attributes() {
  ::KNSOS::SpecSetTransitionAttributesArchive* _msg = _internal_mutable_spec_set_transition_attributes();
  // @@protoc_insertion_point(field_mutable:KNSOS.SpecTransitionAttributesArchive.spec_set_transition_attributes)
  return _msg;
}
inline void SpecTransitionAttributesArchive::set_allocated_spec_set_transition_attributes(::KNSOS::SpecSetTransitionAttributesArchive* spec_set_transition_attributes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.spec_set_transition_attributes_;
  }
  if (spec_set_transition_attributes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(spec_set_transition_attributes);
    if (message_arena != submessage_arena) {
      spec_set_transition_attributes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_transition_attributes, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.spec_set_transition_attributes_ = spec_set_transition_attributes;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.SpecTransitionAttributesArchive.spec_set_transition_attributes)
}

// -------------------------------------------------------------------

// MotionBackgroundStylePropertyChangeSetArchive

// optional .TSSSOS.SpecStringArchive name = 1;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.name_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_name() const {
  return _internal_has_name();
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_name() const {
  const ::TSSSOS::SpecStringArchive* p = _impl_.name_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecStringArchive&>(
      ::TSSSOS::_SpecStringArchive_default_instance_);
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::name() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.name)
  return _internal_name();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_name(
    ::TSSSOS::SpecStringArchive* name) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.name_);
  }
  _impl_.name_ = name;
  if (name) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.name)
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::release_name() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.name_;
  _impl_.name_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.name)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.name_;
  _impl_.name_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.name_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecStringArchive>(GetArenaForAllocation());
    _impl_.name_ = p;
  }
  return _impl_.name_;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_name() {
  ::TSSSOS::SpecStringArchive* _msg = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.name)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_name(::TSSSOS::SpecStringArchive* name) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.name_);
  }
  if (name) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(name));
    if (message_arena != submessage_arena) {
      name = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_ = name;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.name)
}

// optional bool name_undefined = 2;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_name_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00000800u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_name_undefined() const {
  return _internal_has_name_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_name_undefined() {
  _impl_.name_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00000800u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_name_undefined() const {
  return _impl_.name_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::name_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.name_undefined)
  return _internal_name_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_name_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00000800u;
  _impl_.name_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_name_undefined(bool value) {
  _internal_set_name_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.name_undefined)
}

// optional .TSSSOS.SpecStringArchive variant = 3;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_variant() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.variant_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_variant() const {
  return _internal_has_variant();
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_variant() const {
  const ::TSSSOS::SpecStringArchive* p = _impl_.variant_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecStringArchive&>(
      ::TSSSOS::_SpecStringArchive_default_instance_);
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::variant() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.variant)
  return _internal_variant();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_variant(
    ::TSSSOS::SpecStringArchive* variant) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.variant_);
  }
  _impl_.variant_ = variant;
  if (variant) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.variant)
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::release_variant() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.variant_;
  _impl_.variant_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_variant() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.variant)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.variant_;
  _impl_.variant_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_variant() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.variant_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecStringArchive>(GetArenaForAllocation());
    _impl_.variant_ = p;
  }
  return _impl_.variant_;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_variant() {
  ::TSSSOS::SpecStringArchive* _msg = _internal_mutable_variant();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.variant)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_variant(::TSSSOS::SpecStringArchive* variant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.variant_);
  }
  if (variant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(variant));
    if (message_arena != submessage_arena) {
      variant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variant, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.variant_ = variant;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.variant)
}

// optional bool variant_undefined = 4;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_variant_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00001000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_variant_undefined() const {
  return _internal_has_variant_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_variant_undefined() {
  _impl_.variant_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00001000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_variant_undefined() const {
  return _impl_.variant_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::variant_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.variant_undefined)
  return _internal_variant_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_variant_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00001000u;
  _impl_.variant_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_variant_undefined(bool value) {
  _internal_set_variant_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.variant_undefined)
}

// optional .TSDSOS.SpecFillArchive color_gradient = 5;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_gradient() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.color_gradient_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_gradient() const {
  return _internal_has_color_gradient();
}
inline const ::TSDSOS::SpecFillArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_color_gradient() const {
  const ::TSDSOS::SpecFillArchive* p = _impl_.color_gradient_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecFillArchive&>(
      ::TSDSOS::_SpecFillArchive_default_instance_);
}
inline const ::TSDSOS::SpecFillArchive& MotionBackgroundStylePropertyChangeSetArchive::color_gradient() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gradient)
  return _internal_color_gradient();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_color_gradient(
    ::TSDSOS::SpecFillArchive* color_gradient) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_gradient_);
  }
  _impl_.color_gradient_ = color_gradient;
  if (color_gradient) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gradient)
}
inline ::TSDSOS::SpecFillArchive* MotionBackgroundStylePropertyChangeSetArchive::release_color_gradient() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSDSOS::SpecFillArchive* temp = _impl_.color_gradient_;
  _impl_.color_gradient_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecFillArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_color_gradient() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gradient)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSDSOS::SpecFillArchive* temp = _impl_.color_gradient_;
  _impl_.color_gradient_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecFillArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_color_gradient() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.color_gradient_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecFillArchive>(GetArenaForAllocation());
    _impl_.color_gradient_ = p;
  }
  return _impl_.color_gradient_;
}
inline ::TSDSOS::SpecFillArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_color_gradient() {
  ::TSDSOS::SpecFillArchive* _msg = _internal_mutable_color_gradient();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gradient)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_color_gradient(::TSDSOS::SpecFillArchive* color_gradient) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_gradient_);
  }
  if (color_gradient) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_gradient));
    if (message_arena != submessage_arena) {
      color_gradient = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_gradient, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.color_gradient_ = color_gradient;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gradient)
}

// optional bool color_gradient_undefined = 6;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_gradient_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00002000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_gradient_undefined() const {
  return _internal_has_color_gradient_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_color_gradient_undefined() {
  _impl_.color_gradient_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00002000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_color_gradient_undefined() const {
  return _impl_.color_gradient_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::color_gradient_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gradient_undefined)
  return _internal_color_gradient_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_color_gradient_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00002000u;
  _impl_.color_gradient_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_color_gradient_undefined(bool value) {
  _internal_set_color_gradient_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gradient_undefined)
}

// optional .TSSSOS.SpecIntegerArchive random_seed = 7;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_random_seed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.random_seed_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_random_seed() const {
  return _internal_has_random_seed();
}
inline const ::TSSSOS::SpecIntegerArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_random_seed() const {
  const ::TSSSOS::SpecIntegerArchive* p = _impl_.random_seed_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecIntegerArchive&>(
      ::TSSSOS::_SpecIntegerArchive_default_instance_);
}
inline const ::TSSSOS::SpecIntegerArchive& MotionBackgroundStylePropertyChangeSetArchive::random_seed() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.random_seed)
  return _internal_random_seed();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_random_seed(
    ::TSSSOS::SpecIntegerArchive* random_seed) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.random_seed_);
  }
  _impl_.random_seed_ = random_seed;
  if (random_seed) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.random_seed)
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::release_random_seed() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSSSOS::SpecIntegerArchive* temp = _impl_.random_seed_;
  _impl_.random_seed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_random_seed() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.random_seed)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSSSOS::SpecIntegerArchive* temp = _impl_.random_seed_;
  _impl_.random_seed_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_random_seed() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.random_seed_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecIntegerArchive>(GetArenaForAllocation());
    _impl_.random_seed_ = p;
  }
  return _impl_.random_seed_;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_random_seed() {
  ::TSSSOS::SpecIntegerArchive* _msg = _internal_mutable_random_seed();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.random_seed)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_random_seed(::TSSSOS::SpecIntegerArchive* random_seed) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.random_seed_);
  }
  if (random_seed) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(random_seed));
    if (message_arena != submessage_arena) {
      random_seed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, random_seed, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.random_seed_ = random_seed;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.random_seed)
}

// optional bool random_seed_undefined = 8;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_random_seed_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00004000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_random_seed_undefined() const {
  return _internal_has_random_seed_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_random_seed_undefined() {
  _impl_.random_seed_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00004000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_random_seed_undefined() const {
  return _impl_.random_seed_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::random_seed_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.random_seed_undefined)
  return _internal_random_seed_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_random_seed_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00004000u;
  _impl_.random_seed_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_random_seed_undefined(bool value) {
  _internal_set_random_seed_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.random_seed_undefined)
}

// optional .TSSSOS.SpecDoubleArchive color_blur_sigma = 9;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_blur_sigma() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.color_blur_sigma_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_blur_sigma() const {
  return _internal_has_color_blur_sigma();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_color_blur_sigma() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.color_blur_sigma_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::color_blur_sigma() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_blur_sigma)
  return _internal_color_blur_sigma();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_color_blur_sigma(
    ::TSSSOS::SpecDoubleArchive* color_blur_sigma) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_blur_sigma_);
  }
  _impl_.color_blur_sigma_ = color_blur_sigma;
  if (color_blur_sigma) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_blur_sigma)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_color_blur_sigma() {
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_blur_sigma_;
  _impl_.color_blur_sigma_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_color_blur_sigma() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_blur_sigma)
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_blur_sigma_;
  _impl_.color_blur_sigma_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_color_blur_sigma() {
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.color_blur_sigma_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.color_blur_sigma_ = p;
  }
  return _impl_.color_blur_sigma_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_color_blur_sigma() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_color_blur_sigma();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_blur_sigma)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_color_blur_sigma(::TSSSOS::SpecDoubleArchive* color_blur_sigma) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_blur_sigma_);
  }
  if (color_blur_sigma) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_blur_sigma));
    if (message_arena != submessage_arena) {
      color_blur_sigma = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_blur_sigma, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.color_blur_sigma_ = color_blur_sigma;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_blur_sigma)
}

// optional bool color_blur_sigma_undefined = 10;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_blur_sigma_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00008000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_blur_sigma_undefined() const {
  return _internal_has_color_blur_sigma_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_color_blur_sigma_undefined() {
  _impl_.color_blur_sigma_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00008000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_color_blur_sigma_undefined() const {
  return _impl_.color_blur_sigma_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::color_blur_sigma_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_blur_sigma_undefined)
  return _internal_color_blur_sigma_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_color_blur_sigma_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00008000u;
  _impl_.color_blur_sigma_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_color_blur_sigma_undefined(bool value) {
  _internal_set_color_blur_sigma_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_blur_sigma_undefined)
}

// optional .TSSSOS.SpecDoubleArchive color_contrast = 11;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_contrast() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.color_contrast_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_contrast() const {
  return _internal_has_color_contrast();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_color_contrast() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.color_contrast_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::color_contrast() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_contrast)
  return _internal_color_contrast();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_color_contrast(
    ::TSSSOS::SpecDoubleArchive* color_contrast) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_contrast_);
  }
  _impl_.color_contrast_ = color_contrast;
  if (color_contrast) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_contrast)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_color_contrast() {
  _impl_._has_bits_[0] &= ~0x00000020u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_contrast_;
  _impl_.color_contrast_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_color_contrast() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_contrast)
  _impl_._has_bits_[0] &= ~0x00000020u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_contrast_;
  _impl_.color_contrast_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_color_contrast() {
  _impl_._has_bits_[0] |= 0x00000020u;
  if (_impl_.color_contrast_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.color_contrast_ = p;
  }
  return _impl_.color_contrast_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_color_contrast() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_color_contrast();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_contrast)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_color_contrast(::TSSSOS::SpecDoubleArchive* color_contrast) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_contrast_);
  }
  if (color_contrast) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_contrast));
    if (message_arena != submessage_arena) {
      color_contrast = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_contrast, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.color_contrast_ = color_contrast;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_contrast)
}

// optional bool color_contrast_undefined = 12;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_contrast_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00010000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_contrast_undefined() const {
  return _internal_has_color_contrast_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_color_contrast_undefined() {
  _impl_.color_contrast_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00010000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_color_contrast_undefined() const {
  return _impl_.color_contrast_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::color_contrast_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_contrast_undefined)
  return _internal_color_contrast_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_color_contrast_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00010000u;
  _impl_.color_contrast_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_color_contrast_undefined(bool value) {
  _internal_set_color_contrast_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_contrast_undefined)
}

// optional .TSSSOS.SpecDoubleArchive color_gamma = 13;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_gamma() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.color_gamma_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_gamma() const {
  return _internal_has_color_gamma();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_color_gamma() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.color_gamma_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::color_gamma() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gamma)
  return _internal_color_gamma();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_color_gamma(
    ::TSSSOS::SpecDoubleArchive* color_gamma) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_gamma_);
  }
  _impl_.color_gamma_ = color_gamma;
  if (color_gamma) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gamma)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_color_gamma() {
  _impl_._has_bits_[0] &= ~0x00000040u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_gamma_;
  _impl_.color_gamma_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_color_gamma() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gamma)
  _impl_._has_bits_[0] &= ~0x00000040u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_gamma_;
  _impl_.color_gamma_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_color_gamma() {
  _impl_._has_bits_[0] |= 0x00000040u;
  if (_impl_.color_gamma_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.color_gamma_ = p;
  }
  return _impl_.color_gamma_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_color_gamma() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_color_gamma();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gamma)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_color_gamma(::TSSSOS::SpecDoubleArchive* color_gamma) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_gamma_);
  }
  if (color_gamma) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_gamma));
    if (message_arena != submessage_arena) {
      color_gamma = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_gamma, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.color_gamma_ = color_gamma;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gamma)
}

// optional bool color_gamma_undefined = 14;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_gamma_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00020000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_gamma_undefined() const {
  return _internal_has_color_gamma_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_color_gamma_undefined() {
  _impl_.color_gamma_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00020000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_color_gamma_undefined() const {
  return _impl_.color_gamma_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::color_gamma_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gamma_undefined)
  return _internal_color_gamma_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_color_gamma_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00020000u;
  _impl_.color_gamma_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_color_gamma_undefined(bool value) {
  _internal_set_color_gamma_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_gamma_undefined)
}

// optional .TSSSOS.SpecDoubleArchive color_saturation = 15;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_saturation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.color_saturation_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_saturation() const {
  return _internal_has_color_saturation();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_color_saturation() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.color_saturation_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::color_saturation() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_saturation)
  return _internal_color_saturation();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_color_saturation(
    ::TSSSOS::SpecDoubleArchive* color_saturation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_saturation_);
  }
  _impl_.color_saturation_ = color_saturation;
  if (color_saturation) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_saturation)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_color_saturation() {
  _impl_._has_bits_[0] &= ~0x00000080u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_saturation_;
  _impl_.color_saturation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_color_saturation() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_saturation)
  _impl_._has_bits_[0] &= ~0x00000080u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_saturation_;
  _impl_.color_saturation_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_color_saturation() {
  _impl_._has_bits_[0] |= 0x00000080u;
  if (_impl_.color_saturation_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.color_saturation_ = p;
  }
  return _impl_.color_saturation_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_color_saturation() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_color_saturation();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_saturation)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_color_saturation(::TSSSOS::SpecDoubleArchive* color_saturation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_saturation_);
  }
  if (color_saturation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_saturation));
    if (message_arena != submessage_arena) {
      color_saturation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_saturation, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.color_saturation_ = color_saturation;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_saturation)
}

// optional bool color_saturation_undefined = 16;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_saturation_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00040000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_saturation_undefined() const {
  return _internal_has_color_saturation_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_color_saturation_undefined() {
  _impl_.color_saturation_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00040000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_color_saturation_undefined() const {
  return _impl_.color_saturation_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::color_saturation_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_saturation_undefined)
  return _internal_color_saturation_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_color_saturation_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00040000u;
  _impl_.color_saturation_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_color_saturation_undefined(bool value) {
  _internal_set_color_saturation_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_saturation_undefined)
}

// optional .TSSSOS.SpecDoubleArchive color_brightness = 17;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_brightness() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.color_brightness_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_brightness() const {
  return _internal_has_color_brightness();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_color_brightness() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.color_brightness_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::color_brightness() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_brightness)
  return _internal_color_brightness();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_color_brightness(
    ::TSSSOS::SpecDoubleArchive* color_brightness) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_brightness_);
  }
  _impl_.color_brightness_ = color_brightness;
  if (color_brightness) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_brightness)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_color_brightness() {
  _impl_._has_bits_[0] &= ~0x00000100u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_brightness_;
  _impl_.color_brightness_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_color_brightness() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_brightness)
  _impl_._has_bits_[0] &= ~0x00000100u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_brightness_;
  _impl_.color_brightness_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_color_brightness() {
  _impl_._has_bits_[0] |= 0x00000100u;
  if (_impl_.color_brightness_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.color_brightness_ = p;
  }
  return _impl_.color_brightness_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_color_brightness() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_color_brightness();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_brightness)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_color_brightness(::TSSSOS::SpecDoubleArchive* color_brightness) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_brightness_);
  }
  if (color_brightness) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_brightness));
    if (message_arena != submessage_arena) {
      color_brightness = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_brightness, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.color_brightness_ = color_brightness;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_brightness)
}

// optional bool color_brightness_undefined = 18;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_brightness_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00080000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_brightness_undefined() const {
  return _internal_has_color_brightness_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_color_brightness_undefined() {
  _impl_.color_brightness_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00080000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_color_brightness_undefined() const {
  return _impl_.color_brightness_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::color_brightness_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_brightness_undefined)
  return _internal_color_brightness_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_color_brightness_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00080000u;
  _impl_.color_brightness_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_color_brightness_undefined(bool value) {
  _internal_set_color_brightness_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_brightness_undefined)
}

// optional .TSSSOS.SpecDoubleArchive color_hue = 19;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_hue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.color_hue_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_hue() const {
  return _internal_has_color_hue();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_color_hue() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.color_hue_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::color_hue() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue)
  return _internal_color_hue();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_color_hue(
    ::TSSSOS::SpecDoubleArchive* color_hue) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_hue_);
  }
  _impl_.color_hue_ = color_hue;
  if (color_hue) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_color_hue() {
  _impl_._has_bits_[0] &= ~0x00000200u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_hue_;
  _impl_.color_hue_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_color_hue() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue)
  _impl_._has_bits_[0] &= ~0x00000200u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_hue_;
  _impl_.color_hue_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_color_hue() {
  _impl_._has_bits_[0] |= 0x00000200u;
  if (_impl_.color_hue_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.color_hue_ = p;
  }
  return _impl_.color_hue_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_color_hue() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_color_hue();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_color_hue(::TSSSOS::SpecDoubleArchive* color_hue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_hue_);
  }
  if (color_hue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_hue));
    if (message_arena != submessage_arena) {
      color_hue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_hue, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  _impl_.color_hue_ = color_hue;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue)
}

// optional bool color_hue_undefined = 20;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_hue_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00100000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_hue_undefined() const {
  return _internal_has_color_hue_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_color_hue_undefined() {
  _impl_.color_hue_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00100000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_color_hue_undefined() const {
  return _impl_.color_hue_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::color_hue_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue_undefined)
  return _internal_color_hue_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_color_hue_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00100000u;
  _impl_.color_hue_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_color_hue_undefined(bool value) {
  _internal_set_color_hue_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue_undefined)
}

// optional .TSSSOS.SpecDoubleArchive color_vibrance = 21;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_vibrance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.color_vibrance_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_vibrance() const {
  return _internal_has_color_vibrance();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_color_vibrance() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.color_vibrance_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::color_vibrance() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_vibrance)
  return _internal_color_vibrance();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_color_vibrance(
    ::TSSSOS::SpecDoubleArchive* color_vibrance) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_vibrance_);
  }
  _impl_.color_vibrance_ = color_vibrance;
  if (color_vibrance) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_vibrance)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_color_vibrance() {
  _impl_._has_bits_[0] &= ~0x00000400u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_vibrance_;
  _impl_.color_vibrance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_color_vibrance() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_vibrance)
  _impl_._has_bits_[0] &= ~0x00000400u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_vibrance_;
  _impl_.color_vibrance_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_color_vibrance() {
  _impl_._has_bits_[0] |= 0x00000400u;
  if (_impl_.color_vibrance_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.color_vibrance_ = p;
  }
  return _impl_.color_vibrance_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_color_vibrance() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_color_vibrance();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_vibrance)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_color_vibrance(::TSSSOS::SpecDoubleArchive* color_vibrance) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_vibrance_);
  }
  if (color_vibrance) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_vibrance));
    if (message_arena != submessage_arena) {
      color_vibrance = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_vibrance, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  _impl_.color_vibrance_ = color_vibrance;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_vibrance)
}

// optional bool color_vibrance_undefined = 22;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_vibrance_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00200000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_vibrance_undefined() const {
  return _internal_has_color_vibrance_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_color_vibrance_undefined() {
  _impl_.color_vibrance_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00200000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_color_vibrance_undefined() const {
  return _impl_.color_vibrance_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::color_vibrance_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_vibrance_undefined)
  return _internal_color_vibrance_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_color_vibrance_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00200000u;
  _impl_.color_vibrance_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_color_vibrance_undefined(bool value) {
  _internal_set_color_vibrance_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_vibrance_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_amplitude = 23;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_amplitude() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_amplitude_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_amplitude() const {
  return _internal_has_noise_amplitude();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_amplitude() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_amplitude_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_amplitude() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_amplitude)
  return _internal_noise_amplitude();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_amplitude(
    ::TSSSOS::SpecDoubleArchive* noise_amplitude) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_amplitude_);
  }
  _impl_.noise_amplitude_ = noise_amplitude;
  if (noise_amplitude) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_amplitude)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_amplitude() {
  _impl_._has_bits_[0] &= ~0x00000800u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_amplitude_;
  _impl_.noise_amplitude_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_amplitude() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_amplitude)
  _impl_._has_bits_[0] &= ~0x00000800u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_amplitude_;
  _impl_.noise_amplitude_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_amplitude() {
  _impl_._has_bits_[0] |= 0x00000800u;
  if (_impl_.noise_amplitude_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_amplitude_ = p;
  }
  return _impl_.noise_amplitude_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_amplitude() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_amplitude();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_amplitude)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_amplitude(::TSSSOS::SpecDoubleArchive* noise_amplitude) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_amplitude_);
  }
  if (noise_amplitude) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_amplitude));
    if (message_arena != submessage_arena) {
      noise_amplitude = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_amplitude, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  _impl_.noise_amplitude_ = noise_amplitude;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_amplitude)
}

// optional bool noise_amplitude_undefined = 24;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_amplitude_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00400000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_amplitude_undefined() const {
  return _internal_has_noise_amplitude_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_amplitude_undefined() {
  _impl_.noise_amplitude_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00400000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_amplitude_undefined() const {
  return _impl_.noise_amplitude_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_amplitude_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_amplitude_undefined)
  return _internal_noise_amplitude_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_amplitude_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00400000u;
  _impl_.noise_amplitude_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_amplitude_undefined(bool value) {
  _internal_set_noise_amplitude_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_amplitude_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_movement = 25;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_movement() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_movement_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_movement() const {
  return _internal_has_noise_movement();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_movement() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_movement_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_movement() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_movement)
  return _internal_noise_movement();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_movement(
    ::TSSSOS::SpecDoubleArchive* noise_movement) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_movement_);
  }
  _impl_.noise_movement_ = noise_movement;
  if (noise_movement) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_movement)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_movement() {
  _impl_._has_bits_[0] &= ~0x00001000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_movement_;
  _impl_.noise_movement_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_movement() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_movement)
  _impl_._has_bits_[0] &= ~0x00001000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_movement_;
  _impl_.noise_movement_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_movement() {
  _impl_._has_bits_[0] |= 0x00001000u;
  if (_impl_.noise_movement_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_movement_ = p;
  }
  return _impl_.noise_movement_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_movement() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_movement();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_movement)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_movement(::TSSSOS::SpecDoubleArchive* noise_movement) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_movement_);
  }
  if (noise_movement) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_movement));
    if (message_arena != submessage_arena) {
      noise_movement = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_movement, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  _impl_.noise_movement_ = noise_movement;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_movement)
}

// optional bool noise_movement_undefined = 26;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_movement_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x00800000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_movement_undefined() const {
  return _internal_has_noise_movement_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_movement_undefined() {
  _impl_.noise_movement_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x00800000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_movement_undefined() const {
  return _impl_.noise_movement_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_movement_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_movement_undefined)
  return _internal_noise_movement_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_movement_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x00800000u;
  _impl_.noise_movement_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_movement_undefined(bool value) {
  _internal_set_noise_movement_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_movement_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_octaves = 27;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_octaves() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_octaves_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_octaves() const {
  return _internal_has_noise_octaves();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_octaves() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_octaves_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_octaves() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves)
  return _internal_noise_octaves();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_octaves(
    ::TSSSOS::SpecDoubleArchive* noise_octaves) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_octaves_);
  }
  _impl_.noise_octaves_ = noise_octaves;
  if (noise_octaves) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_octaves() {
  _impl_._has_bits_[0] &= ~0x00002000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_octaves_;
  _impl_.noise_octaves_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_octaves() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves)
  _impl_._has_bits_[0] &= ~0x00002000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_octaves_;
  _impl_.noise_octaves_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_octaves() {
  _impl_._has_bits_[0] |= 0x00002000u;
  if (_impl_.noise_octaves_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_octaves_ = p;
  }
  return _impl_.noise_octaves_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_octaves() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_octaves();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_octaves(::TSSSOS::SpecDoubleArchive* noise_octaves) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_octaves_);
  }
  if (noise_octaves) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_octaves));
    if (message_arena != submessage_arena) {
      noise_octaves = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_octaves, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  _impl_.noise_octaves_ = noise_octaves;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves)
}

// optional bool noise_octaves_undefined = 28;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_octaves_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x01000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_octaves_undefined() const {
  return _internal_has_noise_octaves_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_octaves_undefined() {
  _impl_.noise_octaves_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x01000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_octaves_undefined() const {
  return _impl_.noise_octaves_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_octaves_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves_undefined)
  return _internal_noise_octaves_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_octaves_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x01000000u;
  _impl_.noise_octaves_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_octaves_undefined(bool value) {
  _internal_set_noise_octaves_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_scale = 29;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_scale() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_scale_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_scale() const {
  return _internal_has_noise_scale();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_scale() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_scale_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_scale() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale)
  return _internal_noise_scale();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_scale(
    ::TSSSOS::SpecDoubleArchive* noise_scale) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_scale_);
  }
  _impl_.noise_scale_ = noise_scale;
  if (noise_scale) {
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_scale() {
  _impl_._has_bits_[0] &= ~0x00004000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_scale_;
  _impl_.noise_scale_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_scale() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale)
  _impl_._has_bits_[0] &= ~0x00004000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_scale_;
  _impl_.noise_scale_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_scale() {
  _impl_._has_bits_[0] |= 0x00004000u;
  if (_impl_.noise_scale_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_scale_ = p;
  }
  return _impl_.noise_scale_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_scale() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_scale();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_scale(::TSSSOS::SpecDoubleArchive* noise_scale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_scale_);
  }
  if (noise_scale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_scale));
    if (message_arena != submessage_arena) {
      noise_scale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_scale, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  _impl_.noise_scale_ = noise_scale;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale)
}

// optional bool noise_scale_undefined = 30;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_scale_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x02000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_scale_undefined() const {
  return _internal_has_noise_scale_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_scale_undefined() {
  _impl_.noise_scale_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x02000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_scale_undefined() const {
  return _impl_.noise_scale_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_scale_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_undefined)
  return _internal_noise_scale_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_scale_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x02000000u;
  _impl_.noise_scale_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_scale_undefined(bool value) {
  _internal_set_noise_scale_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_scale_horizontal = 31;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_scale_horizontal() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_scale_horizontal_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_scale_horizontal() const {
  return _internal_has_noise_scale_horizontal();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_scale_horizontal() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_scale_horizontal_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_scale_horizontal() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_horizontal)
  return _internal_noise_scale_horizontal();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_scale_horizontal(
    ::TSSSOS::SpecDoubleArchive* noise_scale_horizontal) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_scale_horizontal_);
  }
  _impl_.noise_scale_horizontal_ = noise_scale_horizontal;
  if (noise_scale_horizontal) {
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_horizontal)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_scale_horizontal() {
  _impl_._has_bits_[0] &= ~0x00008000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_scale_horizontal_;
  _impl_.noise_scale_horizontal_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_scale_horizontal() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_horizontal)
  _impl_._has_bits_[0] &= ~0x00008000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_scale_horizontal_;
  _impl_.noise_scale_horizontal_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_scale_horizontal() {
  _impl_._has_bits_[0] |= 0x00008000u;
  if (_impl_.noise_scale_horizontal_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_scale_horizontal_ = p;
  }
  return _impl_.noise_scale_horizontal_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_scale_horizontal() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_scale_horizontal();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_horizontal)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_scale_horizontal(::TSSSOS::SpecDoubleArchive* noise_scale_horizontal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_scale_horizontal_);
  }
  if (noise_scale_horizontal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_scale_horizontal));
    if (message_arena != submessage_arena) {
      noise_scale_horizontal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_scale_horizontal, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }
  _impl_.noise_scale_horizontal_ = noise_scale_horizontal;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_horizontal)
}

// optional bool noise_scale_horizontal_undefined = 32;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_scale_horizontal_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x04000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_scale_horizontal_undefined() const {
  return _internal_has_noise_scale_horizontal_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_scale_horizontal_undefined() {
  _impl_.noise_scale_horizontal_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x04000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_scale_horizontal_undefined() const {
  return _impl_.noise_scale_horizontal_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_scale_horizontal_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_horizontal_undefined)
  return _internal_noise_scale_horizontal_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_scale_horizontal_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x04000000u;
  _impl_.noise_scale_horizontal_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_scale_horizontal_undefined(bool value) {
  _internal_set_noise_scale_horizontal_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_horizontal_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_scale_vertical = 33;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_scale_vertical() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_scale_vertical_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_scale_vertical() const {
  return _internal_has_noise_scale_vertical();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_scale_vertical() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_scale_vertical_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_scale_vertical() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_vertical)
  return _internal_noise_scale_vertical();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_scale_vertical(
    ::TSSSOS::SpecDoubleArchive* noise_scale_vertical) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_scale_vertical_);
  }
  _impl_.noise_scale_vertical_ = noise_scale_vertical;
  if (noise_scale_vertical) {
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_vertical)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_scale_vertical() {
  _impl_._has_bits_[0] &= ~0x00010000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_scale_vertical_;
  _impl_.noise_scale_vertical_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_scale_vertical() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_vertical)
  _impl_._has_bits_[0] &= ~0x00010000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_scale_vertical_;
  _impl_.noise_scale_vertical_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_scale_vertical() {
  _impl_._has_bits_[0] |= 0x00010000u;
  if (_impl_.noise_scale_vertical_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_scale_vertical_ = p;
  }
  return _impl_.noise_scale_vertical_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_scale_vertical() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_scale_vertical();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_vertical)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_scale_vertical(::TSSSOS::SpecDoubleArchive* noise_scale_vertical) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_scale_vertical_);
  }
  if (noise_scale_vertical) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_scale_vertical));
    if (message_arena != submessage_arena) {
      noise_scale_vertical = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_scale_vertical, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }
  _impl_.noise_scale_vertical_ = noise_scale_vertical;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_vertical)
}

// optional bool noise_scale_vertical_undefined = 34;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_scale_vertical_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x08000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_scale_vertical_undefined() const {
  return _internal_has_noise_scale_vertical_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_scale_vertical_undefined() {
  _impl_.noise_scale_vertical_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x08000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_scale_vertical_undefined() const {
  return _impl_.noise_scale_vertical_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_scale_vertical_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_vertical_undefined)
  return _internal_noise_scale_vertical_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_scale_vertical_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x08000000u;
  _impl_.noise_scale_vertical_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_scale_vertical_undefined(bool value) {
  _internal_set_noise_scale_vertical_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_scale_vertical_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_gain = 35;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_gain() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_gain_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_gain() const {
  return _internal_has_noise_gain();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_gain() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_gain_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_gain() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_gain)
  return _internal_noise_gain();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_gain(
    ::TSSSOS::SpecDoubleArchive* noise_gain) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_gain_);
  }
  _impl_.noise_gain_ = noise_gain;
  if (noise_gain) {
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_gain)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_gain() {
  _impl_._has_bits_[0] &= ~0x00020000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_gain_;
  _impl_.noise_gain_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_gain() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_gain)
  _impl_._has_bits_[0] &= ~0x00020000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_gain_;
  _impl_.noise_gain_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_gain() {
  _impl_._has_bits_[0] |= 0x00020000u;
  if (_impl_.noise_gain_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_gain_ = p;
  }
  return _impl_.noise_gain_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_gain() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_gain();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_gain)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_gain(::TSSSOS::SpecDoubleArchive* noise_gain) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_gain_);
  }
  if (noise_gain) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_gain));
    if (message_arena != submessage_arena) {
      noise_gain = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_gain, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }
  _impl_.noise_gain_ = noise_gain;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_gain)
}

// optional bool noise_gain_undefined = 36;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_gain_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x10000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_gain_undefined() const {
  return _internal_has_noise_gain_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_gain_undefined() {
  _impl_.noise_gain_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x10000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_gain_undefined() const {
  return _impl_.noise_gain_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_gain_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_gain_undefined)
  return _internal_noise_gain_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_gain_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x10000000u;
  _impl_.noise_gain_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_gain_undefined(bool value) {
  _internal_set_noise_gain_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_gain_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_lacunarity = 37;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_lacunarity() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_lacunarity_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_lacunarity() const {
  return _internal_has_noise_lacunarity();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_lacunarity() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_lacunarity_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_lacunarity() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_lacunarity)
  return _internal_noise_lacunarity();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_lacunarity(
    ::TSSSOS::SpecDoubleArchive* noise_lacunarity) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_lacunarity_);
  }
  _impl_.noise_lacunarity_ = noise_lacunarity;
  if (noise_lacunarity) {
    _impl_._has_bits_[0] |= 0x00040000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00040000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_lacunarity)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_lacunarity() {
  _impl_._has_bits_[0] &= ~0x00040000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_lacunarity_;
  _impl_.noise_lacunarity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_lacunarity() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_lacunarity)
  _impl_._has_bits_[0] &= ~0x00040000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_lacunarity_;
  _impl_.noise_lacunarity_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_lacunarity() {
  _impl_._has_bits_[0] |= 0x00040000u;
  if (_impl_.noise_lacunarity_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_lacunarity_ = p;
  }
  return _impl_.noise_lacunarity_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_lacunarity() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_lacunarity();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_lacunarity)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_lacunarity(::TSSSOS::SpecDoubleArchive* noise_lacunarity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_lacunarity_);
  }
  if (noise_lacunarity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_lacunarity));
    if (message_arena != submessage_arena) {
      noise_lacunarity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_lacunarity, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00040000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00040000u;
  }
  _impl_.noise_lacunarity_ = noise_lacunarity;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_lacunarity)
}

// optional bool noise_lacunarity_undefined = 38;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_lacunarity_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x20000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_lacunarity_undefined() const {
  return _internal_has_noise_lacunarity_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_lacunarity_undefined() {
  _impl_.noise_lacunarity_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x20000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_lacunarity_undefined() const {
  return _impl_.noise_lacunarity_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_lacunarity_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_lacunarity_undefined)
  return _internal_noise_lacunarity_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_lacunarity_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x20000000u;
  _impl_.noise_lacunarity_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_lacunarity_undefined(bool value) {
  _internal_set_noise_lacunarity_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_lacunarity_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_speed = 39;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_speed() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_speed_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_speed() const {
  return _internal_has_noise_speed();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_speed() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_speed_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_speed() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_speed)
  return _internal_noise_speed();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_speed(
    ::TSSSOS::SpecDoubleArchive* noise_speed) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_speed_);
  }
  _impl_.noise_speed_ = noise_speed;
  if (noise_speed) {
    _impl_._has_bits_[0] |= 0x00080000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00080000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_speed)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_speed() {
  _impl_._has_bits_[0] &= ~0x00080000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_speed_;
  _impl_.noise_speed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_speed() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_speed)
  _impl_._has_bits_[0] &= ~0x00080000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_speed_;
  _impl_.noise_speed_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_speed() {
  _impl_._has_bits_[0] |= 0x00080000u;
  if (_impl_.noise_speed_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_speed_ = p;
  }
  return _impl_.noise_speed_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_speed() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_speed();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_speed)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_speed(::TSSSOS::SpecDoubleArchive* noise_speed) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_speed_);
  }
  if (noise_speed) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_speed));
    if (message_arena != submessage_arena) {
      noise_speed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_speed, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00080000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00080000u;
  }
  _impl_.noise_speed_ = noise_speed;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_speed)
}

// optional bool noise_speed_undefined = 40;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_speed_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x40000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_speed_undefined() const {
  return _internal_has_noise_speed_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_speed_undefined() {
  _impl_.noise_speed_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x40000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_speed_undefined() const {
  return _impl_.noise_speed_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_speed_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_speed_undefined)
  return _internal_noise_speed_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_speed_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x40000000u;
  _impl_.noise_speed_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_speed_undefined(bool value) {
  _internal_set_noise_speed_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_speed_undefined)
}

// optional .TSSSOS.SpecIntegerArchive color_palette_offset = 41;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_palette_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.color_palette_offset_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_palette_offset() const {
  return _internal_has_color_palette_offset();
}
inline const ::TSSSOS::SpecIntegerArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_color_palette_offset() const {
  const ::TSSSOS::SpecIntegerArchive* p = _impl_.color_palette_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecIntegerArchive&>(
      ::TSSSOS::_SpecIntegerArchive_default_instance_);
}
inline const ::TSSSOS::SpecIntegerArchive& MotionBackgroundStylePropertyChangeSetArchive::color_palette_offset() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_palette_offset)
  return _internal_color_palette_offset();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_color_palette_offset(
    ::TSSSOS::SpecIntegerArchive* color_palette_offset) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_palette_offset_);
  }
  _impl_.color_palette_offset_ = color_palette_offset;
  if (color_palette_offset) {
    _impl_._has_bits_[0] |= 0x00100000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00100000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_palette_offset)
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::release_color_palette_offset() {
  _impl_._has_bits_[0] &= ~0x00100000u;
  ::TSSSOS::SpecIntegerArchive* temp = _impl_.color_palette_offset_;
  _impl_.color_palette_offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_color_palette_offset() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_palette_offset)
  _impl_._has_bits_[0] &= ~0x00100000u;
  ::TSSSOS::SpecIntegerArchive* temp = _impl_.color_palette_offset_;
  _impl_.color_palette_offset_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_color_palette_offset() {
  _impl_._has_bits_[0] |= 0x00100000u;
  if (_impl_.color_palette_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecIntegerArchive>(GetArenaForAllocation());
    _impl_.color_palette_offset_ = p;
  }
  return _impl_.color_palette_offset_;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_color_palette_offset() {
  ::TSSSOS::SpecIntegerArchive* _msg = _internal_mutable_color_palette_offset();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_palette_offset)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_color_palette_offset(::TSSSOS::SpecIntegerArchive* color_palette_offset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_palette_offset_);
  }
  if (color_palette_offset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_palette_offset));
    if (message_arena != submessage_arena) {
      color_palette_offset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_palette_offset, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00100000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00100000u;
  }
  _impl_.color_palette_offset_ = color_palette_offset;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_palette_offset)
}

// optional bool color_palette_offset_undefined = 42;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_palette_offset_undefined() const {
  bool value = (_impl_._has_bits_[3] & 0x80000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_palette_offset_undefined() const {
  return _internal_has_color_palette_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_color_palette_offset_undefined() {
  _impl_.color_palette_offset_undefined_ = false;
  _impl_._has_bits_[3] &= ~0x80000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_color_palette_offset_undefined() const {
  return _impl_.color_palette_offset_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::color_palette_offset_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_palette_offset_undefined)
  return _internal_color_palette_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_color_palette_offset_undefined(bool value) {
  _impl_._has_bits_[3] |= 0x80000000u;
  _impl_.color_palette_offset_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_color_palette_offset_undefined(bool value) {
  _internal_set_color_palette_offset_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_palette_offset_undefined)
}

// optional .TSSSOS.SpecDoubleArchive zoom = 43;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_zoom() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.zoom_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_zoom() const {
  return _internal_has_zoom();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_zoom() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.zoom_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::zoom() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.zoom)
  return _internal_zoom();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_zoom(
    ::TSSSOS::SpecDoubleArchive* zoom) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.zoom_);
  }
  _impl_.zoom_ = zoom;
  if (zoom) {
    _impl_._has_bits_[0] |= 0x00200000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00200000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.zoom)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_zoom() {
  _impl_._has_bits_[0] &= ~0x00200000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.zoom_;
  _impl_.zoom_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_zoom() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.zoom)
  _impl_._has_bits_[0] &= ~0x00200000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.zoom_;
  _impl_.zoom_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_zoom() {
  _impl_._has_bits_[0] |= 0x00200000u;
  if (_impl_.zoom_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.zoom_ = p;
  }
  return _impl_.zoom_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_zoom() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_zoom();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.zoom)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_zoom(::TSSSOS::SpecDoubleArchive* zoom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.zoom_);
  }
  if (zoom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(zoom));
    if (message_arena != submessage_arena) {
      zoom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, zoom, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00200000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00200000u;
  }
  _impl_.zoom_ = zoom;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.zoom)
}

// optional bool zoom_undefined = 44;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_zoom_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000001u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_zoom_undefined() const {
  return _internal_has_zoom_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_zoom_undefined() {
  _impl_.zoom_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000001u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_zoom_undefined() const {
  return _impl_.zoom_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::zoom_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.zoom_undefined)
  return _internal_zoom_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_zoom_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000001u;
  _impl_.zoom_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_zoom_undefined(bool value) {
  _internal_set_zoom_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.zoom_undefined)
}

// optional .TSSSOS.SpecBoolArchive invert = 45;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_invert() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.invert_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_invert() const {
  return _internal_has_invert();
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_invert() const {
  const ::TSSSOS::SpecBoolArchive* p = _impl_.invert_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecBoolArchive&>(
      ::TSSSOS::_SpecBoolArchive_default_instance_);
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::invert() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.invert)
  return _internal_invert();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_invert(
    ::TSSSOS::SpecBoolArchive* invert) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.invert_);
  }
  _impl_.invert_ = invert;
  if (invert) {
    _impl_._has_bits_[0] |= 0x00400000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00400000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.invert)
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::release_invert() {
  _impl_._has_bits_[0] &= ~0x00400000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.invert_;
  _impl_.invert_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_invert() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.invert)
  _impl_._has_bits_[0] &= ~0x00400000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.invert_;
  _impl_.invert_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_invert() {
  _impl_._has_bits_[0] |= 0x00400000u;
  if (_impl_.invert_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecBoolArchive>(GetArenaForAllocation());
    _impl_.invert_ = p;
  }
  return _impl_.invert_;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_invert() {
  ::TSSSOS::SpecBoolArchive* _msg = _internal_mutable_invert();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.invert)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_invert(::TSSSOS::SpecBoolArchive* invert) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.invert_);
  }
  if (invert) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(invert));
    if (message_arena != submessage_arena) {
      invert = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, invert, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00400000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00400000u;
  }
  _impl_.invert_ = invert;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.invert)
}

// optional bool invert_undefined = 46;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_invert_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000002u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_invert_undefined() const {
  return _internal_has_invert_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_invert_undefined() {
  _impl_.invert_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000002u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_invert_undefined() const {
  return _impl_.invert_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::invert_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.invert_undefined)
  return _internal_invert_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_invert_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000002u;
  _impl_.invert_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_invert_undefined(bool value) {
  _internal_set_invert_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.invert_undefined)
}

// optional .TSSSOS.SpecStringArchive blend_mode = 47;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_blend_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.blend_mode_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_blend_mode() const {
  return _internal_has_blend_mode();
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_blend_mode() const {
  const ::TSSSOS::SpecStringArchive* p = _impl_.blend_mode_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecStringArchive&>(
      ::TSSSOS::_SpecStringArchive_default_instance_);
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::blend_mode() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend_mode)
  return _internal_blend_mode();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_blend_mode(
    ::TSSSOS::SpecStringArchive* blend_mode) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.blend_mode_);
  }
  _impl_.blend_mode_ = blend_mode;
  if (blend_mode) {
    _impl_._has_bits_[0] |= 0x00800000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00800000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend_mode)
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::release_blend_mode() {
  _impl_._has_bits_[0] &= ~0x00800000u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.blend_mode_;
  _impl_.blend_mode_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_blend_mode() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend_mode)
  _impl_._has_bits_[0] &= ~0x00800000u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.blend_mode_;
  _impl_.blend_mode_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_blend_mode() {
  _impl_._has_bits_[0] |= 0x00800000u;
  if (_impl_.blend_mode_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecStringArchive>(GetArenaForAllocation());
    _impl_.blend_mode_ = p;
  }
  return _impl_.blend_mode_;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_blend_mode() {
  ::TSSSOS::SpecStringArchive* _msg = _internal_mutable_blend_mode();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend_mode)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_blend_mode(::TSSSOS::SpecStringArchive* blend_mode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.blend_mode_);
  }
  if (blend_mode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blend_mode));
    if (message_arena != submessage_arena) {
      blend_mode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blend_mode, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00800000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00800000u;
  }
  _impl_.blend_mode_ = blend_mode;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend_mode)
}

// optional bool blend_mode_undefined = 48;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_blend_mode_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000004u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_blend_mode_undefined() const {
  return _internal_has_blend_mode_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_blend_mode_undefined() {
  _impl_.blend_mode_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000004u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_blend_mode_undefined() const {
  return _impl_.blend_mode_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::blend_mode_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend_mode_undefined)
  return _internal_blend_mode_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_blend_mode_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000004u;
  _impl_.blend_mode_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_blend_mode_undefined(bool value) {
  _internal_set_blend_mode_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend_mode_undefined)
}

// optional .TSSSOS.SpecStringArchive source_blend_factor = 49;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_source_blend_factor() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_blend_factor_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_source_blend_factor() const {
  return _internal_has_source_blend_factor();
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_source_blend_factor() const {
  const ::TSSSOS::SpecStringArchive* p = _impl_.source_blend_factor_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecStringArchive&>(
      ::TSSSOS::_SpecStringArchive_default_instance_);
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::source_blend_factor() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.source_blend_factor)
  return _internal_source_blend_factor();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_source_blend_factor(
    ::TSSSOS::SpecStringArchive* source_blend_factor) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.source_blend_factor_);
  }
  _impl_.source_blend_factor_ = source_blend_factor;
  if (source_blend_factor) {
    _impl_._has_bits_[0] |= 0x01000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x01000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.source_blend_factor)
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::release_source_blend_factor() {
  _impl_._has_bits_[0] &= ~0x01000000u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.source_blend_factor_;
  _impl_.source_blend_factor_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_source_blend_factor() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.source_blend_factor)
  _impl_._has_bits_[0] &= ~0x01000000u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.source_blend_factor_;
  _impl_.source_blend_factor_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_source_blend_factor() {
  _impl_._has_bits_[0] |= 0x01000000u;
  if (_impl_.source_blend_factor_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecStringArchive>(GetArenaForAllocation());
    _impl_.source_blend_factor_ = p;
  }
  return _impl_.source_blend_factor_;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_source_blend_factor() {
  ::TSSSOS::SpecStringArchive* _msg = _internal_mutable_source_blend_factor();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.source_blend_factor)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_source_blend_factor(::TSSSOS::SpecStringArchive* source_blend_factor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.source_blend_factor_);
  }
  if (source_blend_factor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(source_blend_factor));
    if (message_arena != submessage_arena) {
      source_blend_factor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, source_blend_factor, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x01000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x01000000u;
  }
  _impl_.source_blend_factor_ = source_blend_factor;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.source_blend_factor)
}

// optional bool source_blend_factor_undefined = 50;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_source_blend_factor_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000008u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_source_blend_factor_undefined() const {
  return _internal_has_source_blend_factor_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_source_blend_factor_undefined() {
  _impl_.source_blend_factor_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000008u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_source_blend_factor_undefined() const {
  return _impl_.source_blend_factor_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::source_blend_factor_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.source_blend_factor_undefined)
  return _internal_source_blend_factor_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_source_blend_factor_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000008u;
  _impl_.source_blend_factor_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_source_blend_factor_undefined(bool value) {
  _internal_set_source_blend_factor_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.source_blend_factor_undefined)
}

// optional .TSSSOS.SpecStringArchive dest_blend_factor = 51;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_dest_blend_factor() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dest_blend_factor_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_dest_blend_factor() const {
  return _internal_has_dest_blend_factor();
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_dest_blend_factor() const {
  const ::TSSSOS::SpecStringArchive* p = _impl_.dest_blend_factor_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecStringArchive&>(
      ::TSSSOS::_SpecStringArchive_default_instance_);
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::dest_blend_factor() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.dest_blend_factor)
  return _internal_dest_blend_factor();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_dest_blend_factor(
    ::TSSSOS::SpecStringArchive* dest_blend_factor) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.dest_blend_factor_);
  }
  _impl_.dest_blend_factor_ = dest_blend_factor;
  if (dest_blend_factor) {
    _impl_._has_bits_[0] |= 0x02000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x02000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.dest_blend_factor)
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::release_dest_blend_factor() {
  _impl_._has_bits_[0] &= ~0x02000000u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.dest_blend_factor_;
  _impl_.dest_blend_factor_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_dest_blend_factor() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.dest_blend_factor)
  _impl_._has_bits_[0] &= ~0x02000000u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.dest_blend_factor_;
  _impl_.dest_blend_factor_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_dest_blend_factor() {
  _impl_._has_bits_[0] |= 0x02000000u;
  if (_impl_.dest_blend_factor_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecStringArchive>(GetArenaForAllocation());
    _impl_.dest_blend_factor_ = p;
  }
  return _impl_.dest_blend_factor_;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_dest_blend_factor() {
  ::TSSSOS::SpecStringArchive* _msg = _internal_mutable_dest_blend_factor();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.dest_blend_factor)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_dest_blend_factor(::TSSSOS::SpecStringArchive* dest_blend_factor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.dest_blend_factor_);
  }
  if (dest_blend_factor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dest_blend_factor));
    if (message_arena != submessage_arena) {
      dest_blend_factor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dest_blend_factor, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x02000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x02000000u;
  }
  _impl_.dest_blend_factor_ = dest_blend_factor;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.dest_blend_factor)
}

// optional bool dest_blend_factor_undefined = 52;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_dest_blend_factor_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000010u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_dest_blend_factor_undefined() const {
  return _internal_has_dest_blend_factor_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_dest_blend_factor_undefined() {
  _impl_.dest_blend_factor_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000010u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_dest_blend_factor_undefined() const {
  return _impl_.dest_blend_factor_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::dest_blend_factor_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.dest_blend_factor_undefined)
  return _internal_dest_blend_factor_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_dest_blend_factor_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000010u;
  _impl_.dest_blend_factor_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_dest_blend_factor_undefined(bool value) {
  _internal_set_dest_blend_factor_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.dest_blend_factor_undefined)
}

// optional .TSSSOS.SpecStringArchive motion = 53;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_motion() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.motion_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_motion() const {
  return _internal_has_motion();
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_motion() const {
  const ::TSSSOS::SpecStringArchive* p = _impl_.motion_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecStringArchive&>(
      ::TSSSOS::_SpecStringArchive_default_instance_);
}
inline const ::TSSSOS::SpecStringArchive& MotionBackgroundStylePropertyChangeSetArchive::motion() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion)
  return _internal_motion();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_motion(
    ::TSSSOS::SpecStringArchive* motion) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.motion_);
  }
  _impl_.motion_ = motion;
  if (motion) {
    _impl_._has_bits_[0] |= 0x04000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x04000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion)
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::release_motion() {
  _impl_._has_bits_[0] &= ~0x04000000u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.motion_;
  _impl_.motion_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_motion() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion)
  _impl_._has_bits_[0] &= ~0x04000000u;
  ::TSSSOS::SpecStringArchive* temp = _impl_.motion_;
  _impl_.motion_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_motion() {
  _impl_._has_bits_[0] |= 0x04000000u;
  if (_impl_.motion_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecStringArchive>(GetArenaForAllocation());
    _impl_.motion_ = p;
  }
  return _impl_.motion_;
}
inline ::TSSSOS::SpecStringArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_motion() {
  ::TSSSOS::SpecStringArchive* _msg = _internal_mutable_motion();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_motion(::TSSSOS::SpecStringArchive* motion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.motion_);
  }
  if (motion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(motion));
    if (message_arena != submessage_arena) {
      motion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, motion, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x04000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x04000000u;
  }
  _impl_.motion_ = motion;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion)
}

// optional bool motion_undefined = 54;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_motion_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000020u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_motion_undefined() const {
  return _internal_has_motion_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_motion_undefined() {
  _impl_.motion_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000020u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_motion_undefined() const {
  return _impl_.motion_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::motion_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion_undefined)
  return _internal_motion_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_motion_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000020u;
  _impl_.motion_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_motion_undefined(bool value) {
  _internal_set_motion_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion_undefined)
}

// optional .TSSSOS.SpecColorArchive background_color = 55;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_background_color() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.background_color_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_background_color() const {
  return _internal_has_background_color();
}
inline const ::TSSSOS::SpecColorArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_background_color() const {
  const ::TSSSOS::SpecColorArchive* p = _impl_.background_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecColorArchive&>(
      ::TSSSOS::_SpecColorArchive_default_instance_);
}
inline const ::TSSSOS::SpecColorArchive& MotionBackgroundStylePropertyChangeSetArchive::background_color() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.background_color)
  return _internal_background_color();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_background_color(
    ::TSSSOS::SpecColorArchive* background_color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.background_color_);
  }
  _impl_.background_color_ = background_color;
  if (background_color) {
    _impl_._has_bits_[0] |= 0x08000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x08000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.background_color)
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::release_background_color() {
  _impl_._has_bits_[0] &= ~0x08000000u;
  ::TSSSOS::SpecColorArchive* temp = _impl_.background_color_;
  _impl_.background_color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_background_color() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.background_color)
  _impl_._has_bits_[0] &= ~0x08000000u;
  ::TSSSOS::SpecColorArchive* temp = _impl_.background_color_;
  _impl_.background_color_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_background_color() {
  _impl_._has_bits_[0] |= 0x08000000u;
  if (_impl_.background_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecColorArchive>(GetArenaForAllocation());
    _impl_.background_color_ = p;
  }
  return _impl_.background_color_;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_background_color() {
  ::TSSSOS::SpecColorArchive* _msg = _internal_mutable_background_color();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.background_color)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_background_color(::TSSSOS::SpecColorArchive* background_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.background_color_);
  }
  if (background_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(background_color));
    if (message_arena != submessage_arena) {
      background_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, background_color, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x08000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x08000000u;
  }
  _impl_.background_color_ = background_color;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.background_color)
}

// optional bool background_color_undefined = 56;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_background_color_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000040u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_background_color_undefined() const {
  return _internal_has_background_color_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_background_color_undefined() {
  _impl_.background_color_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000040u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_background_color_undefined() const {
  return _impl_.background_color_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::background_color_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.background_color_undefined)
  return _internal_background_color_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_background_color_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000040u;
  _impl_.background_color_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_background_color_undefined(bool value) {
  _internal_set_background_color_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.background_color_undefined)
}

// optional .TSSSOS.SpecColorArchive foreground_color = 57;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_foreground_color() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.foreground_color_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_foreground_color() const {
  return _internal_has_foreground_color();
}
inline const ::TSSSOS::SpecColorArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_foreground_color() const {
  const ::TSSSOS::SpecColorArchive* p = _impl_.foreground_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecColorArchive&>(
      ::TSSSOS::_SpecColorArchive_default_instance_);
}
inline const ::TSSSOS::SpecColorArchive& MotionBackgroundStylePropertyChangeSetArchive::foreground_color() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.foreground_color)
  return _internal_foreground_color();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_foreground_color(
    ::TSSSOS::SpecColorArchive* foreground_color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.foreground_color_);
  }
  _impl_.foreground_color_ = foreground_color;
  if (foreground_color) {
    _impl_._has_bits_[0] |= 0x10000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x10000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.foreground_color)
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::release_foreground_color() {
  _impl_._has_bits_[0] &= ~0x10000000u;
  ::TSSSOS::SpecColorArchive* temp = _impl_.foreground_color_;
  _impl_.foreground_color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_foreground_color() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.foreground_color)
  _impl_._has_bits_[0] &= ~0x10000000u;
  ::TSSSOS::SpecColorArchive* temp = _impl_.foreground_color_;
  _impl_.foreground_color_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_foreground_color() {
  _impl_._has_bits_[0] |= 0x10000000u;
  if (_impl_.foreground_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecColorArchive>(GetArenaForAllocation());
    _impl_.foreground_color_ = p;
  }
  return _impl_.foreground_color_;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_foreground_color() {
  ::TSSSOS::SpecColorArchive* _msg = _internal_mutable_foreground_color();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.foreground_color)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_foreground_color(::TSSSOS::SpecColorArchive* foreground_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.foreground_color_);
  }
  if (foreground_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(foreground_color));
    if (message_arena != submessage_arena) {
      foreground_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, foreground_color, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x10000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x10000000u;
  }
  _impl_.foreground_color_ = foreground_color;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.foreground_color)
}

// optional bool foreground_color_undefined = 58;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_foreground_color_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000080u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_foreground_color_undefined() const {
  return _internal_has_foreground_color_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_foreground_color_undefined() {
  _impl_.foreground_color_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000080u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_foreground_color_undefined() const {
  return _impl_.foreground_color_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::foreground_color_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.foreground_color_undefined)
  return _internal_foreground_color_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_foreground_color_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000080u;
  _impl_.foreground_color_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_foreground_color_undefined(bool value) {
  _internal_set_foreground_color_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.foreground_color_undefined)
}

// optional .TSSSOS.SpecColorArchive line_color = 59;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_color() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.line_color_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_color() const {
  return _internal_has_line_color();
}
inline const ::TSSSOS::SpecColorArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_line_color() const {
  const ::TSSSOS::SpecColorArchive* p = _impl_.line_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecColorArchive&>(
      ::TSSSOS::_SpecColorArchive_default_instance_);
}
inline const ::TSSSOS::SpecColorArchive& MotionBackgroundStylePropertyChangeSetArchive::line_color() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_color)
  return _internal_line_color();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_line_color(
    ::TSSSOS::SpecColorArchive* line_color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_color_);
  }
  _impl_.line_color_ = line_color;
  if (line_color) {
    _impl_._has_bits_[0] |= 0x20000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x20000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_color)
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::release_line_color() {
  _impl_._has_bits_[0] &= ~0x20000000u;
  ::TSSSOS::SpecColorArchive* temp = _impl_.line_color_;
  _impl_.line_color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_line_color() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_color)
  _impl_._has_bits_[0] &= ~0x20000000u;
  ::TSSSOS::SpecColorArchive* temp = _impl_.line_color_;
  _impl_.line_color_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_line_color() {
  _impl_._has_bits_[0] |= 0x20000000u;
  if (_impl_.line_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecColorArchive>(GetArenaForAllocation());
    _impl_.line_color_ = p;
  }
  return _impl_.line_color_;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_line_color() {
  ::TSSSOS::SpecColorArchive* _msg = _internal_mutable_line_color();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_color)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_line_color(::TSSSOS::SpecColorArchive* line_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_color_);
  }
  if (line_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line_color));
    if (message_arena != submessage_arena) {
      line_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line_color, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x20000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x20000000u;
  }
  _impl_.line_color_ = line_color;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_color)
}

// optional bool line_color_undefined = 60;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_color_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000100u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_color_undefined() const {
  return _internal_has_line_color_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_line_color_undefined() {
  _impl_.line_color_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000100u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_line_color_undefined() const {
  return _impl_.line_color_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::line_color_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_color_undefined)
  return _internal_line_color_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_line_color_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000100u;
  _impl_.line_color_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_line_color_undefined(bool value) {
  _internal_set_line_color_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_color_undefined)
}

// optional .TSSSOS.SpecColorArchive point_color = 61;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_point_color() const {
  bool value = (_impl_._has_bits_[0] & 0x40000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.point_color_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_point_color() const {
  return _internal_has_point_color();
}
inline const ::TSSSOS::SpecColorArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_point_color() const {
  const ::TSSSOS::SpecColorArchive* p = _impl_.point_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecColorArchive&>(
      ::TSSSOS::_SpecColorArchive_default_instance_);
}
inline const ::TSSSOS::SpecColorArchive& MotionBackgroundStylePropertyChangeSetArchive::point_color() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_color)
  return _internal_point_color();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_point_color(
    ::TSSSOS::SpecColorArchive* point_color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.point_color_);
  }
  _impl_.point_color_ = point_color;
  if (point_color) {
    _impl_._has_bits_[0] |= 0x40000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x40000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_color)
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::release_point_color() {
  _impl_._has_bits_[0] &= ~0x40000000u;
  ::TSSSOS::SpecColorArchive* temp = _impl_.point_color_;
  _impl_.point_color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_point_color() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_color)
  _impl_._has_bits_[0] &= ~0x40000000u;
  ::TSSSOS::SpecColorArchive* temp = _impl_.point_color_;
  _impl_.point_color_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_point_color() {
  _impl_._has_bits_[0] |= 0x40000000u;
  if (_impl_.point_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecColorArchive>(GetArenaForAllocation());
    _impl_.point_color_ = p;
  }
  return _impl_.point_color_;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_point_color() {
  ::TSSSOS::SpecColorArchive* _msg = _internal_mutable_point_color();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_color)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_point_color(::TSSSOS::SpecColorArchive* point_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.point_color_);
  }
  if (point_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(point_color));
    if (message_arena != submessage_arena) {
      point_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, point_color, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x40000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x40000000u;
  }
  _impl_.point_color_ = point_color;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_color)
}

// optional bool point_color_undefined = 62;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_point_color_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000200u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_point_color_undefined() const {
  return _internal_has_point_color_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_point_color_undefined() {
  _impl_.point_color_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000200u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_point_color_undefined() const {
  return _impl_.point_color_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::point_color_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_color_undefined)
  return _internal_point_color_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_point_color_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000200u;
  _impl_.point_color_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_point_color_undefined(bool value) {
  _internal_set_point_color_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_color_undefined)
}

// optional .TSSSOS.SpecDoubleArchive alpha = 63;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_alpha() const {
  bool value = (_impl_._has_bits_[0] & 0x80000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.alpha_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_alpha() const {
  return _internal_has_alpha();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_alpha() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.alpha_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::alpha() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.alpha)
  return _internal_alpha();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_alpha(
    ::TSSSOS::SpecDoubleArchive* alpha) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.alpha_);
  }
  _impl_.alpha_ = alpha;
  if (alpha) {
    _impl_._has_bits_[0] |= 0x80000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x80000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.alpha)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_alpha() {
  _impl_._has_bits_[0] &= ~0x80000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.alpha_;
  _impl_.alpha_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_alpha() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.alpha)
  _impl_._has_bits_[0] &= ~0x80000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.alpha_;
  _impl_.alpha_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_alpha() {
  _impl_._has_bits_[0] |= 0x80000000u;
  if (_impl_.alpha_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.alpha_ = p;
  }
  return _impl_.alpha_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_alpha() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_alpha();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.alpha)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_alpha(::TSSSOS::SpecDoubleArchive* alpha) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.alpha_);
  }
  if (alpha) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(alpha));
    if (message_arena != submessage_arena) {
      alpha = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, alpha, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x80000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x80000000u;
  }
  _impl_.alpha_ = alpha;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.alpha)
}

// optional bool alpha_undefined = 64;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_alpha_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000400u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_alpha_undefined() const {
  return _internal_has_alpha_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_alpha_undefined() {
  _impl_.alpha_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000400u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_alpha_undefined() const {
  return _impl_.alpha_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::alpha_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.alpha_undefined)
  return _internal_alpha_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_alpha_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000400u;
  _impl_.alpha_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_alpha_undefined(bool value) {
  _internal_set_alpha_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.alpha_undefined)
}

// optional .TSSSOS.SpecDoubleArchive border = 65;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_border() const {
  bool value = (_impl_._has_bits_[1] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.border_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_border() const {
  return _internal_has_border();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_border() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.border_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::border() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border)
  return _internal_border();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_border(
    ::TSSSOS::SpecDoubleArchive* border) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.border_);
  }
  _impl_.border_ = border;
  if (border) {
    _impl_._has_bits_[1] |= 0x00000001u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_border() {
  _impl_._has_bits_[1] &= ~0x00000001u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.border_;
  _impl_.border_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_border() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border)
  _impl_._has_bits_[1] &= ~0x00000001u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.border_;
  _impl_.border_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_border() {
  _impl_._has_bits_[1] |= 0x00000001u;
  if (_impl_.border_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.border_ = p;
  }
  return _impl_.border_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_border() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_border();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_border(::TSSSOS::SpecDoubleArchive* border) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.border_);
  }
  if (border) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(border));
    if (message_arena != submessage_arena) {
      border = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, border, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000001u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000001u;
  }
  _impl_.border_ = border;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border)
}

// optional bool border_undefined = 66;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_border_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00000800u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_border_undefined() const {
  return _internal_has_border_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_border_undefined() {
  _impl_.border_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00000800u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_border_undefined() const {
  return _impl_.border_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::border_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border_undefined)
  return _internal_border_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_border_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00000800u;
  _impl_.border_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_border_undefined(bool value) {
  _internal_set_border_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border_undefined)
}

// optional .TSSSOS.SpecDoubleArchive blend = 67;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_blend() const {
  bool value = (_impl_._has_bits_[1] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.blend_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_blend() const {
  return _internal_has_blend();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_blend() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.blend_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::blend() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend)
  return _internal_blend();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_blend(
    ::TSSSOS::SpecDoubleArchive* blend) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.blend_);
  }
  _impl_.blend_ = blend;
  if (blend) {
    _impl_._has_bits_[1] |= 0x00000002u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_blend() {
  _impl_._has_bits_[1] &= ~0x00000002u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.blend_;
  _impl_.blend_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_blend() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend)
  _impl_._has_bits_[1] &= ~0x00000002u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.blend_;
  _impl_.blend_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_blend() {
  _impl_._has_bits_[1] |= 0x00000002u;
  if (_impl_.blend_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.blend_ = p;
  }
  return _impl_.blend_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_blend() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_blend();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_blend(::TSSSOS::SpecDoubleArchive* blend) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.blend_);
  }
  if (blend) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blend));
    if (message_arena != submessage_arena) {
      blend = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blend, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000002u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000002u;
  }
  _impl_.blend_ = blend;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend)
}

// optional bool blend_undefined = 68;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_blend_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00001000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_blend_undefined() const {
  return _internal_has_blend_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_blend_undefined() {
  _impl_.blend_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00001000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_blend_undefined() const {
  return _impl_.blend_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::blend_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend_undefined)
  return _internal_blend_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_blend_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00001000u;
  _impl_.blend_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_blend_undefined(bool value) {
  _internal_set_blend_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blend_undefined)
}

// optional .TSSSOS.SpecDoubleArchive brightness = 69;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_brightness() const {
  bool value = (_impl_._has_bits_[1] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.brightness_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_brightness() const {
  return _internal_has_brightness();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_brightness() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.brightness_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::brightness() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.brightness)
  return _internal_brightness();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_brightness(
    ::TSSSOS::SpecDoubleArchive* brightness) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.brightness_);
  }
  _impl_.brightness_ = brightness;
  if (brightness) {
    _impl_._has_bits_[1] |= 0x00000004u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.brightness)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_brightness() {
  _impl_._has_bits_[1] &= ~0x00000004u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.brightness_;
  _impl_.brightness_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_brightness() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.brightness)
  _impl_._has_bits_[1] &= ~0x00000004u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.brightness_;
  _impl_.brightness_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_brightness() {
  _impl_._has_bits_[1] |= 0x00000004u;
  if (_impl_.brightness_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.brightness_ = p;
  }
  return _impl_.brightness_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_brightness() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_brightness();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.brightness)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_brightness(::TSSSOS::SpecDoubleArchive* brightness) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.brightness_);
  }
  if (brightness) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(brightness));
    if (message_arena != submessage_arena) {
      brightness = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, brightness, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000004u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000004u;
  }
  _impl_.brightness_ = brightness;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.brightness)
}

// optional bool brightness_undefined = 70;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_brightness_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00002000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_brightness_undefined() const {
  return _internal_has_brightness_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_brightness_undefined() {
  _impl_.brightness_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00002000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_brightness_undefined() const {
  return _impl_.brightness_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::brightness_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.brightness_undefined)
  return _internal_brightness_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_brightness_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00002000u;
  _impl_.brightness_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_brightness_undefined(bool value) {
  _internal_set_brightness_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.brightness_undefined)
}

// optional .TSSSOS.SpecDoubleArchive border_lightness = 71;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_border_lightness() const {
  bool value = (_impl_._has_bits_[1] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.border_lightness_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_border_lightness() const {
  return _internal_has_border_lightness();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_border_lightness() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.border_lightness_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::border_lightness() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border_lightness)
  return _internal_border_lightness();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_border_lightness(
    ::TSSSOS::SpecDoubleArchive* border_lightness) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.border_lightness_);
  }
  _impl_.border_lightness_ = border_lightness;
  if (border_lightness) {
    _impl_._has_bits_[1] |= 0x00000008u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border_lightness)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_border_lightness() {
  _impl_._has_bits_[1] &= ~0x00000008u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.border_lightness_;
  _impl_.border_lightness_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_border_lightness() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border_lightness)
  _impl_._has_bits_[1] &= ~0x00000008u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.border_lightness_;
  _impl_.border_lightness_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_border_lightness() {
  _impl_._has_bits_[1] |= 0x00000008u;
  if (_impl_.border_lightness_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.border_lightness_ = p;
  }
  return _impl_.border_lightness_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_border_lightness() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_border_lightness();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border_lightness)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_border_lightness(::TSSSOS::SpecDoubleArchive* border_lightness) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.border_lightness_);
  }
  if (border_lightness) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(border_lightness));
    if (message_arena != submessage_arena) {
      border_lightness = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, border_lightness, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000008u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000008u;
  }
  _impl_.border_lightness_ = border_lightness;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border_lightness)
}

// optional bool border_lightness_undefined = 72;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_border_lightness_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00004000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_border_lightness_undefined() const {
  return _internal_has_border_lightness_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_border_lightness_undefined() {
  _impl_.border_lightness_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00004000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_border_lightness_undefined() const {
  return _impl_.border_lightness_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::border_lightness_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border_lightness_undefined)
  return _internal_border_lightness_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_border_lightness_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00004000u;
  _impl_.border_lightness_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_border_lightness_undefined(bool value) {
  _internal_set_border_lightness_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.border_lightness_undefined)
}

// optional .TSSSOS.SpecDoubleArchive contrast = 73;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_contrast() const {
  bool value = (_impl_._has_bits_[1] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.contrast_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_contrast() const {
  return _internal_has_contrast();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_contrast() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.contrast_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::contrast() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.contrast)
  return _internal_contrast();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_contrast(
    ::TSSSOS::SpecDoubleArchive* contrast) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.contrast_);
  }
  _impl_.contrast_ = contrast;
  if (contrast) {
    _impl_._has_bits_[1] |= 0x00000010u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.contrast)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_contrast() {
  _impl_._has_bits_[1] &= ~0x00000010u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.contrast_;
  _impl_.contrast_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_contrast() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.contrast)
  _impl_._has_bits_[1] &= ~0x00000010u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.contrast_;
  _impl_.contrast_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_contrast() {
  _impl_._has_bits_[1] |= 0x00000010u;
  if (_impl_.contrast_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.contrast_ = p;
  }
  return _impl_.contrast_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_contrast() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_contrast();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.contrast)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_contrast(::TSSSOS::SpecDoubleArchive* contrast) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.contrast_);
  }
  if (contrast) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contrast));
    if (message_arena != submessage_arena) {
      contrast = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, contrast, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000010u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000010u;
  }
  _impl_.contrast_ = contrast;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.contrast)
}

// optional bool contrast_undefined = 74;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_contrast_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00008000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_contrast_undefined() const {
  return _internal_has_contrast_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_contrast_undefined() {
  _impl_.contrast_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00008000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_contrast_undefined() const {
  return _impl_.contrast_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::contrast_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.contrast_undefined)
  return _internal_contrast_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_contrast_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00008000u;
  _impl_.contrast_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_contrast_undefined(bool value) {
  _internal_set_contrast_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.contrast_undefined)
}

// optional .TSSSOS.SpecDoubleArchive damping = 75;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_damping() const {
  bool value = (_impl_._has_bits_[1] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.damping_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_damping() const {
  return _internal_has_damping();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_damping() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.damping_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::damping() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.damping)
  return _internal_damping();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_damping(
    ::TSSSOS::SpecDoubleArchive* damping) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.damping_);
  }
  _impl_.damping_ = damping;
  if (damping) {
    _impl_._has_bits_[1] |= 0x00000020u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.damping)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_damping() {
  _impl_._has_bits_[1] &= ~0x00000020u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.damping_;
  _impl_.damping_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_damping() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.damping)
  _impl_._has_bits_[1] &= ~0x00000020u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.damping_;
  _impl_.damping_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_damping() {
  _impl_._has_bits_[1] |= 0x00000020u;
  if (_impl_.damping_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.damping_ = p;
  }
  return _impl_.damping_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_damping() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_damping();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.damping)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_damping(::TSSSOS::SpecDoubleArchive* damping) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.damping_);
  }
  if (damping) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(damping));
    if (message_arena != submessage_arena) {
      damping = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, damping, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000020u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000020u;
  }
  _impl_.damping_ = damping;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.damping)
}

// optional bool damping_undefined = 76;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_damping_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00010000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_damping_undefined() const {
  return _internal_has_damping_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_damping_undefined() {
  _impl_.damping_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00010000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_damping_undefined() const {
  return _impl_.damping_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::damping_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.damping_undefined)
  return _internal_damping_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_damping_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00010000u;
  _impl_.damping_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_damping_undefined(bool value) {
  _internal_set_damping_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.damping_undefined)
}

// optional .TSSSOS.SpecDoubleArchive density = 77;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_density() const {
  bool value = (_impl_._has_bits_[1] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.density_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_density() const {
  return _internal_has_density();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_density() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.density_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::density() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.density)
  return _internal_density();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_density(
    ::TSSSOS::SpecDoubleArchive* density) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.density_);
  }
  _impl_.density_ = density;
  if (density) {
    _impl_._has_bits_[1] |= 0x00000040u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.density)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_density() {
  _impl_._has_bits_[1] &= ~0x00000040u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.density_;
  _impl_.density_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_density() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.density)
  _impl_._has_bits_[1] &= ~0x00000040u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.density_;
  _impl_.density_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_density() {
  _impl_._has_bits_[1] |= 0x00000040u;
  if (_impl_.density_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.density_ = p;
  }
  return _impl_.density_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_density() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_density();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.density)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_density(::TSSSOS::SpecDoubleArchive* density) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.density_);
  }
  if (density) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(density));
    if (message_arena != submessage_arena) {
      density = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, density, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000040u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000040u;
  }
  _impl_.density_ = density;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.density)
}

// optional bool density_undefined = 78;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_density_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00020000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_density_undefined() const {
  return _internal_has_density_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_density_undefined() {
  _impl_.density_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00020000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_density_undefined() const {
  return _impl_.density_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::density_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.density_undefined)
  return _internal_density_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_density_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00020000u;
  _impl_.density_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_density_undefined(bool value) {
  _internal_set_density_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.density_undefined)
}

// optional .TSSSOS.SpecDoubleArchive diffuse_power = 79;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_diffuse_power() const {
  bool value = (_impl_._has_bits_[1] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.diffuse_power_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_diffuse_power() const {
  return _internal_has_diffuse_power();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_diffuse_power() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.diffuse_power_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::diffuse_power() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.diffuse_power)
  return _internal_diffuse_power();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_diffuse_power(
    ::TSSSOS::SpecDoubleArchive* diffuse_power) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.diffuse_power_);
  }
  _impl_.diffuse_power_ = diffuse_power;
  if (diffuse_power) {
    _impl_._has_bits_[1] |= 0x00000080u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.diffuse_power)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_diffuse_power() {
  _impl_._has_bits_[1] &= ~0x00000080u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.diffuse_power_;
  _impl_.diffuse_power_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_diffuse_power() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.diffuse_power)
  _impl_._has_bits_[1] &= ~0x00000080u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.diffuse_power_;
  _impl_.diffuse_power_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_diffuse_power() {
  _impl_._has_bits_[1] |= 0x00000080u;
  if (_impl_.diffuse_power_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.diffuse_power_ = p;
  }
  return _impl_.diffuse_power_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_diffuse_power() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_diffuse_power();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.diffuse_power)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_diffuse_power(::TSSSOS::SpecDoubleArchive* diffuse_power) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.diffuse_power_);
  }
  if (diffuse_power) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(diffuse_power));
    if (message_arena != submessage_arena) {
      diffuse_power = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, diffuse_power, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000080u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000080u;
  }
  _impl_.diffuse_power_ = diffuse_power;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.diffuse_power)
}

// optional bool diffuse_power_undefined = 80;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_diffuse_power_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00040000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_diffuse_power_undefined() const {
  return _internal_has_diffuse_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_diffuse_power_undefined() {
  _impl_.diffuse_power_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00040000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_diffuse_power_undefined() const {
  return _impl_.diffuse_power_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::diffuse_power_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.diffuse_power_undefined)
  return _internal_diffuse_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_diffuse_power_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00040000u;
  _impl_.diffuse_power_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_diffuse_power_undefined(bool value) {
  _internal_set_diffuse_power_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.diffuse_power_undefined)
}

// optional .TSSSOS.SpecDoubleArchive distortion = 81;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_distortion() const {
  bool value = (_impl_._has_bits_[1] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.distortion_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_distortion() const {
  return _internal_has_distortion();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_distortion() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.distortion_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::distortion() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.distortion)
  return _internal_distortion();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_distortion(
    ::TSSSOS::SpecDoubleArchive* distortion) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.distortion_);
  }
  _impl_.distortion_ = distortion;
  if (distortion) {
    _impl_._has_bits_[1] |= 0x00000100u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.distortion)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_distortion() {
  _impl_._has_bits_[1] &= ~0x00000100u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.distortion_;
  _impl_.distortion_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_distortion() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.distortion)
  _impl_._has_bits_[1] &= ~0x00000100u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.distortion_;
  _impl_.distortion_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_distortion() {
  _impl_._has_bits_[1] |= 0x00000100u;
  if (_impl_.distortion_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.distortion_ = p;
  }
  return _impl_.distortion_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_distortion() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_distortion();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.distortion)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_distortion(::TSSSOS::SpecDoubleArchive* distortion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.distortion_);
  }
  if (distortion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(distortion));
    if (message_arena != submessage_arena) {
      distortion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, distortion, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000100u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000100u;
  }
  _impl_.distortion_ = distortion;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.distortion)
}

// optional bool distortion_undefined = 82;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_distortion_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00080000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_distortion_undefined() const {
  return _internal_has_distortion_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_distortion_undefined() {
  _impl_.distortion_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00080000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_distortion_undefined() const {
  return _impl_.distortion_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::distortion_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.distortion_undefined)
  return _internal_distortion_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_distortion_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00080000u;
  _impl_.distortion_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_distortion_undefined(bool value) {
  _internal_set_distortion_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.distortion_undefined)
}

// optional .TSSSOS.SpecDoubleArchive entropy = 83;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_entropy() const {
  bool value = (_impl_._has_bits_[1] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entropy_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_entropy() const {
  return _internal_has_entropy();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_entropy() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.entropy_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::entropy() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.entropy)
  return _internal_entropy();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_entropy(
    ::TSSSOS::SpecDoubleArchive* entropy) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entropy_);
  }
  _impl_.entropy_ = entropy;
  if (entropy) {
    _impl_._has_bits_[1] |= 0x00000200u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.entropy)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_entropy() {
  _impl_._has_bits_[1] &= ~0x00000200u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.entropy_;
  _impl_.entropy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_entropy() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.entropy)
  _impl_._has_bits_[1] &= ~0x00000200u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.entropy_;
  _impl_.entropy_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_entropy() {
  _impl_._has_bits_[1] |= 0x00000200u;
  if (_impl_.entropy_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.entropy_ = p;
  }
  return _impl_.entropy_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_entropy() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_entropy();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.entropy)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_entropy(::TSSSOS::SpecDoubleArchive* entropy) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entropy_);
  }
  if (entropy) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(entropy));
    if (message_arena != submessage_arena) {
      entropy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entropy, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000200u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000200u;
  }
  _impl_.entropy_ = entropy;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.entropy)
}

// optional bool entropy_undefined = 84;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_entropy_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00100000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_entropy_undefined() const {
  return _internal_has_entropy_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_entropy_undefined() {
  _impl_.entropy_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00100000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_entropy_undefined() const {
  return _impl_.entropy_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::entropy_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.entropy_undefined)
  return _internal_entropy_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_entropy_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00100000u;
  _impl_.entropy_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_entropy_undefined(bool value) {
  _internal_set_entropy_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.entropy_undefined)
}

// optional .TSSSOS.SpecDoubleArchive exposure = 85;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_exposure() const {
  bool value = (_impl_._has_bits_[1] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.exposure_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_exposure() const {
  return _internal_has_exposure();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_exposure() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.exposure_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::exposure() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.exposure)
  return _internal_exposure();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_exposure(
    ::TSSSOS::SpecDoubleArchive* exposure) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.exposure_);
  }
  _impl_.exposure_ = exposure;
  if (exposure) {
    _impl_._has_bits_[1] |= 0x00000400u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.exposure)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_exposure() {
  _impl_._has_bits_[1] &= ~0x00000400u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.exposure_;
  _impl_.exposure_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_exposure() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.exposure)
  _impl_._has_bits_[1] &= ~0x00000400u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.exposure_;
  _impl_.exposure_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_exposure() {
  _impl_._has_bits_[1] |= 0x00000400u;
  if (_impl_.exposure_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.exposure_ = p;
  }
  return _impl_.exposure_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_exposure() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_exposure();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.exposure)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_exposure(::TSSSOS::SpecDoubleArchive* exposure) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.exposure_);
  }
  if (exposure) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(exposure));
    if (message_arena != submessage_arena) {
      exposure = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, exposure, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000400u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000400u;
  }
  _impl_.exposure_ = exposure;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.exposure)
}

// optional bool exposure_undefined = 86;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_exposure_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00200000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_exposure_undefined() const {
  return _internal_has_exposure_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_exposure_undefined() {
  _impl_.exposure_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00200000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_exposure_undefined() const {
  return _impl_.exposure_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::exposure_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.exposure_undefined)
  return _internal_exposure_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_exposure_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00200000u;
  _impl_.exposure_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_exposure_undefined(bool value) {
  _internal_set_exposure_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.exposure_undefined)
}

// optional .TSSSOS.SpecDoubleArchive filter = 87;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_filter() const {
  bool value = (_impl_._has_bits_[1] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filter_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_filter() const {
  return _internal_has_filter();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_filter() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.filter_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::filter() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.filter)
  return _internal_filter();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_filter(
    ::TSSSOS::SpecDoubleArchive* filter) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.filter_);
  }
  _impl_.filter_ = filter;
  if (filter) {
    _impl_._has_bits_[1] |= 0x00000800u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.filter)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_filter() {
  _impl_._has_bits_[1] &= ~0x00000800u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.filter_;
  _impl_.filter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_filter() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.filter)
  _impl_._has_bits_[1] &= ~0x00000800u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.filter_;
  _impl_.filter_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_filter() {
  _impl_._has_bits_[1] |= 0x00000800u;
  if (_impl_.filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.filter_ = p;
  }
  return _impl_.filter_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_filter() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_filter();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.filter)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_filter(::TSSSOS::SpecDoubleArchive* filter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.filter_);
  }
  if (filter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filter));
    if (message_arena != submessage_arena) {
      filter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, filter, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00000800u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000800u;
  }
  _impl_.filter_ = filter;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.filter)
}

// optional bool filter_undefined = 88;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_filter_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00400000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_filter_undefined() const {
  return _internal_has_filter_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_filter_undefined() {
  _impl_.filter_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00400000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_filter_undefined() const {
  return _impl_.filter_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::filter_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.filter_undefined)
  return _internal_filter_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_filter_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00400000u;
  _impl_.filter_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_filter_undefined(bool value) {
  _internal_set_filter_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.filter_undefined)
}

// optional .TSSSOS.SpecDoubleArchive fog_distance = 89;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_fog_distance() const {
  bool value = (_impl_._has_bits_[1] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fog_distance_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_fog_distance() const {
  return _internal_has_fog_distance();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_fog_distance() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.fog_distance_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::fog_distance() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_distance)
  return _internal_fog_distance();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_fog_distance(
    ::TSSSOS::SpecDoubleArchive* fog_distance) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.fog_distance_);
  }
  _impl_.fog_distance_ = fog_distance;
  if (fog_distance) {
    _impl_._has_bits_[1] |= 0x00001000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_distance)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_fog_distance() {
  _impl_._has_bits_[1] &= ~0x00001000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.fog_distance_;
  _impl_.fog_distance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_fog_distance() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_distance)
  _impl_._has_bits_[1] &= ~0x00001000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.fog_distance_;
  _impl_.fog_distance_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_fog_distance() {
  _impl_._has_bits_[1] |= 0x00001000u;
  if (_impl_.fog_distance_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.fog_distance_ = p;
  }
  return _impl_.fog_distance_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_fog_distance() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_fog_distance();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_distance)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_fog_distance(::TSSSOS::SpecDoubleArchive* fog_distance) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.fog_distance_);
  }
  if (fog_distance) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fog_distance));
    if (message_arena != submessage_arena) {
      fog_distance = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fog_distance, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00001000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00001000u;
  }
  _impl_.fog_distance_ = fog_distance;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_distance)
}

// optional bool fog_distance_undefined = 90;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_fog_distance_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x00800000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_fog_distance_undefined() const {
  return _internal_has_fog_distance_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_fog_distance_undefined() {
  _impl_.fog_distance_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x00800000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_fog_distance_undefined() const {
  return _impl_.fog_distance_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::fog_distance_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_distance_undefined)
  return _internal_fog_distance_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_fog_distance_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x00800000u;
  _impl_.fog_distance_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_fog_distance_undefined(bool value) {
  _internal_set_fog_distance_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_distance_undefined)
}

// optional .TSSSOS.SpecDoubleArchive fog_power = 91;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_fog_power() const {
  bool value = (_impl_._has_bits_[1] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fog_power_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_fog_power() const {
  return _internal_has_fog_power();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_fog_power() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.fog_power_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::fog_power() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_power)
  return _internal_fog_power();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_fog_power(
    ::TSSSOS::SpecDoubleArchive* fog_power) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.fog_power_);
  }
  _impl_.fog_power_ = fog_power;
  if (fog_power) {
    _impl_._has_bits_[1] |= 0x00002000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_power)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_fog_power() {
  _impl_._has_bits_[1] &= ~0x00002000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.fog_power_;
  _impl_.fog_power_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_fog_power() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_power)
  _impl_._has_bits_[1] &= ~0x00002000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.fog_power_;
  _impl_.fog_power_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_fog_power() {
  _impl_._has_bits_[1] |= 0x00002000u;
  if (_impl_.fog_power_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.fog_power_ = p;
  }
  return _impl_.fog_power_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_fog_power() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_fog_power();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_power)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_fog_power(::TSSSOS::SpecDoubleArchive* fog_power) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.fog_power_);
  }
  if (fog_power) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fog_power));
    if (message_arena != submessage_arena) {
      fog_power = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fog_power, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00002000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00002000u;
  }
  _impl_.fog_power_ = fog_power;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_power)
}

// optional bool fog_power_undefined = 92;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_fog_power_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x01000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_fog_power_undefined() const {
  return _internal_has_fog_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_fog_power_undefined() {
  _impl_.fog_power_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x01000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_fog_power_undefined() const {
  return _impl_.fog_power_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::fog_power_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_power_undefined)
  return _internal_fog_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_fog_power_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x01000000u;
  _impl_.fog_power_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_fog_power_undefined(bool value) {
  _internal_set_fog_power_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.fog_power_undefined)
}

// optional .TSSSOS.SpecDoubleArchive gamma = 93;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_gamma() const {
  bool value = (_impl_._has_bits_[1] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gamma_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_gamma() const {
  return _internal_has_gamma();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_gamma() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.gamma_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::gamma() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.gamma)
  return _internal_gamma();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_gamma(
    ::TSSSOS::SpecDoubleArchive* gamma) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.gamma_);
  }
  _impl_.gamma_ = gamma;
  if (gamma) {
    _impl_._has_bits_[1] |= 0x00004000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00004000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.gamma)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_gamma() {
  _impl_._has_bits_[1] &= ~0x00004000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.gamma_;
  _impl_.gamma_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_gamma() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.gamma)
  _impl_._has_bits_[1] &= ~0x00004000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.gamma_;
  _impl_.gamma_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_gamma() {
  _impl_._has_bits_[1] |= 0x00004000u;
  if (_impl_.gamma_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.gamma_ = p;
  }
  return _impl_.gamma_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_gamma() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_gamma();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.gamma)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_gamma(::TSSSOS::SpecDoubleArchive* gamma) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.gamma_);
  }
  if (gamma) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(gamma));
    if (message_arena != submessage_arena) {
      gamma = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gamma, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00004000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00004000u;
  }
  _impl_.gamma_ = gamma;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.gamma)
}

// optional bool gamma_undefined = 94;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_gamma_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x02000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_gamma_undefined() const {
  return _internal_has_gamma_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_gamma_undefined() {
  _impl_.gamma_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x02000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_gamma_undefined() const {
  return _impl_.gamma_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::gamma_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.gamma_undefined)
  return _internal_gamma_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_gamma_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x02000000u;
  _impl_.gamma_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_gamma_undefined(bool value) {
  _internal_set_gamma_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.gamma_undefined)
}

// optional .TSSSOS.SpecDoubleArchive grain_amount = 95;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_grain_amount() const {
  bool value = (_impl_._has_bits_[1] & 0x00008000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.grain_amount_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_grain_amount() const {
  return _internal_has_grain_amount();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_grain_amount() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.grain_amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::grain_amount() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_amount)
  return _internal_grain_amount();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_grain_amount(
    ::TSSSOS::SpecDoubleArchive* grain_amount) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.grain_amount_);
  }
  _impl_.grain_amount_ = grain_amount;
  if (grain_amount) {
    _impl_._has_bits_[1] |= 0x00008000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00008000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_amount)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_grain_amount() {
  _impl_._has_bits_[1] &= ~0x00008000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.grain_amount_;
  _impl_.grain_amount_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_grain_amount() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_amount)
  _impl_._has_bits_[1] &= ~0x00008000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.grain_amount_;
  _impl_.grain_amount_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_grain_amount() {
  _impl_._has_bits_[1] |= 0x00008000u;
  if (_impl_.grain_amount_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.grain_amount_ = p;
  }
  return _impl_.grain_amount_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_grain_amount() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_grain_amount();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_amount)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_grain_amount(::TSSSOS::SpecDoubleArchive* grain_amount) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.grain_amount_);
  }
  if (grain_amount) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(grain_amount));
    if (message_arena != submessage_arena) {
      grain_amount = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, grain_amount, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00008000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00008000u;
  }
  _impl_.grain_amount_ = grain_amount;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_amount)
}

// optional bool grain_amount_undefined = 96;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_grain_amount_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x04000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_grain_amount_undefined() const {
  return _internal_has_grain_amount_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_grain_amount_undefined() {
  _impl_.grain_amount_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x04000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_grain_amount_undefined() const {
  return _impl_.grain_amount_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::grain_amount_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_amount_undefined)
  return _internal_grain_amount_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_grain_amount_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x04000000u;
  _impl_.grain_amount_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_grain_amount_undefined(bool value) {
  _internal_set_grain_amount_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_amount_undefined)
}

// optional .TSSSOS.SpecDoubleArchive grain_intensity = 97;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_grain_intensity() const {
  bool value = (_impl_._has_bits_[1] & 0x00010000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.grain_intensity_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_grain_intensity() const {
  return _internal_has_grain_intensity();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_grain_intensity() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.grain_intensity_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::grain_intensity() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_intensity)
  return _internal_grain_intensity();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_grain_intensity(
    ::TSSSOS::SpecDoubleArchive* grain_intensity) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.grain_intensity_);
  }
  _impl_.grain_intensity_ = grain_intensity;
  if (grain_intensity) {
    _impl_._has_bits_[1] |= 0x00010000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00010000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_intensity)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_grain_intensity() {
  _impl_._has_bits_[1] &= ~0x00010000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.grain_intensity_;
  _impl_.grain_intensity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_grain_intensity() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_intensity)
  _impl_._has_bits_[1] &= ~0x00010000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.grain_intensity_;
  _impl_.grain_intensity_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_grain_intensity() {
  _impl_._has_bits_[1] |= 0x00010000u;
  if (_impl_.grain_intensity_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.grain_intensity_ = p;
  }
  return _impl_.grain_intensity_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_grain_intensity() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_grain_intensity();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_intensity)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_grain_intensity(::TSSSOS::SpecDoubleArchive* grain_intensity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.grain_intensity_);
  }
  if (grain_intensity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(grain_intensity));
    if (message_arena != submessage_arena) {
      grain_intensity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, grain_intensity, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00010000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00010000u;
  }
  _impl_.grain_intensity_ = grain_intensity;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_intensity)
}

// optional bool grain_intensity_undefined = 98;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_grain_intensity_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x08000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_grain_intensity_undefined() const {
  return _internal_has_grain_intensity_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_grain_intensity_undefined() {
  _impl_.grain_intensity_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x08000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_grain_intensity_undefined() const {
  return _impl_.grain_intensity_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::grain_intensity_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_intensity_undefined)
  return _internal_grain_intensity_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_grain_intensity_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x08000000u;
  _impl_.grain_intensity_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_grain_intensity_undefined(bool value) {
  _internal_set_grain_intensity_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_intensity_undefined)
}

// optional .TSSSOS.SpecDoubleArchive hue = 99;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_hue() const {
  bool value = (_impl_._has_bits_[1] & 0x00020000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hue_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_hue() const {
  return _internal_has_hue();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_hue() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.hue_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::hue() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.hue)
  return _internal_hue();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_hue(
    ::TSSSOS::SpecDoubleArchive* hue) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hue_);
  }
  _impl_.hue_ = hue;
  if (hue) {
    _impl_._has_bits_[1] |= 0x00020000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00020000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.hue)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_hue() {
  _impl_._has_bits_[1] &= ~0x00020000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.hue_;
  _impl_.hue_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_hue() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.hue)
  _impl_._has_bits_[1] &= ~0x00020000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.hue_;
  _impl_.hue_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_hue() {
  _impl_._has_bits_[1] |= 0x00020000u;
  if (_impl_.hue_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.hue_ = p;
  }
  return _impl_.hue_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_hue() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_hue();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.hue)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_hue(::TSSSOS::SpecDoubleArchive* hue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hue_);
  }
  if (hue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hue));
    if (message_arena != submessage_arena) {
      hue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hue, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00020000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00020000u;
  }
  _impl_.hue_ = hue;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.hue)
}

// optional bool hue_undefined = 100;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_hue_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x10000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_hue_undefined() const {
  return _internal_has_hue_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_hue_undefined() {
  _impl_.hue_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x10000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_hue_undefined() const {
  return _impl_.hue_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::hue_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.hue_undefined)
  return _internal_hue_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_hue_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x10000000u;
  _impl_.hue_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_hue_undefined(bool value) {
  _internal_set_hue_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.hue_undefined)
}

// optional .TSSSOS.SpecDoubleArchive lightness = 101;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_lightness() const {
  bool value = (_impl_._has_bits_[1] & 0x00040000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lightness_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_lightness() const {
  return _internal_has_lightness();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_lightness() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.lightness_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::lightness() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lightness)
  return _internal_lightness();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_lightness(
    ::TSSSOS::SpecDoubleArchive* lightness) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.lightness_);
  }
  _impl_.lightness_ = lightness;
  if (lightness) {
    _impl_._has_bits_[1] |= 0x00040000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00040000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lightness)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_lightness() {
  _impl_._has_bits_[1] &= ~0x00040000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.lightness_;
  _impl_.lightness_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_lightness() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lightness)
  _impl_._has_bits_[1] &= ~0x00040000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.lightness_;
  _impl_.lightness_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_lightness() {
  _impl_._has_bits_[1] |= 0x00040000u;
  if (_impl_.lightness_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.lightness_ = p;
  }
  return _impl_.lightness_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_lightness() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_lightness();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lightness)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_lightness(::TSSSOS::SpecDoubleArchive* lightness) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.lightness_);
  }
  if (lightness) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lightness));
    if (message_arena != submessage_arena) {
      lightness = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lightness, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00040000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00040000u;
  }
  _impl_.lightness_ = lightness;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lightness)
}

// optional bool lightness_undefined = 102;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_lightness_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x20000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_lightness_undefined() const {
  return _internal_has_lightness_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_lightness_undefined() {
  _impl_.lightness_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x20000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_lightness_undefined() const {
  return _impl_.lightness_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::lightness_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lightness_undefined)
  return _internal_lightness_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_lightness_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x20000000u;
  _impl_.lightness_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_lightness_undefined(bool value) {
  _internal_set_lightness_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lightness_undefined)
}

// optional .TSSSOS.SpecDoubleArchive line_alpha = 103;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_alpha() const {
  bool value = (_impl_._has_bits_[1] & 0x00080000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.line_alpha_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_alpha() const {
  return _internal_has_line_alpha();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_line_alpha() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.line_alpha_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::line_alpha() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_alpha)
  return _internal_line_alpha();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_line_alpha(
    ::TSSSOS::SpecDoubleArchive* line_alpha) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_alpha_);
  }
  _impl_.line_alpha_ = line_alpha;
  if (line_alpha) {
    _impl_._has_bits_[1] |= 0x00080000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00080000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_alpha)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_line_alpha() {
  _impl_._has_bits_[1] &= ~0x00080000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_alpha_;
  _impl_.line_alpha_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_line_alpha() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_alpha)
  _impl_._has_bits_[1] &= ~0x00080000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_alpha_;
  _impl_.line_alpha_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_line_alpha() {
  _impl_._has_bits_[1] |= 0x00080000u;
  if (_impl_.line_alpha_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.line_alpha_ = p;
  }
  return _impl_.line_alpha_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_line_alpha() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_line_alpha();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_alpha)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_line_alpha(::TSSSOS::SpecDoubleArchive* line_alpha) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_alpha_);
  }
  if (line_alpha) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line_alpha));
    if (message_arena != submessage_arena) {
      line_alpha = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line_alpha, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00080000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00080000u;
  }
  _impl_.line_alpha_ = line_alpha;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_alpha)
}

// optional bool line_alpha_undefined = 104;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_alpha_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x40000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_alpha_undefined() const {
  return _internal_has_line_alpha_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_line_alpha_undefined() {
  _impl_.line_alpha_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x40000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_line_alpha_undefined() const {
  return _impl_.line_alpha_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::line_alpha_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_alpha_undefined)
  return _internal_line_alpha_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_line_alpha_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x40000000u;
  _impl_.line_alpha_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_line_alpha_undefined(bool value) {
  _internal_set_line_alpha_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_alpha_undefined)
}

// optional .TSSSOS.SpecDoubleArchive line_center = 105;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_center() const {
  bool value = (_impl_._has_bits_[1] & 0x00100000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.line_center_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_center() const {
  return _internal_has_line_center();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_line_center() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.line_center_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::line_center() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_center)
  return _internal_line_center();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_line_center(
    ::TSSSOS::SpecDoubleArchive* line_center) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_center_);
  }
  _impl_.line_center_ = line_center;
  if (line_center) {
    _impl_._has_bits_[1] |= 0x00100000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00100000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_center)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_line_center() {
  _impl_._has_bits_[1] &= ~0x00100000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_center_;
  _impl_.line_center_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_line_center() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_center)
  _impl_._has_bits_[1] &= ~0x00100000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_center_;
  _impl_.line_center_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_line_center() {
  _impl_._has_bits_[1] |= 0x00100000u;
  if (_impl_.line_center_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.line_center_ = p;
  }
  return _impl_.line_center_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_line_center() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_line_center();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_center)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_line_center(::TSSSOS::SpecDoubleArchive* line_center) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_center_);
  }
  if (line_center) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line_center));
    if (message_arena != submessage_arena) {
      line_center = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line_center, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00100000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00100000u;
  }
  _impl_.line_center_ = line_center;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_center)
}

// optional bool line_center_undefined = 106;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_center_undefined() const {
  bool value = (_impl_._has_bits_[4] & 0x80000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_center_undefined() const {
  return _internal_has_line_center_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_line_center_undefined() {
  _impl_.line_center_undefined_ = false;
  _impl_._has_bits_[4] &= ~0x80000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_line_center_undefined() const {
  return _impl_.line_center_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::line_center_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_center_undefined)
  return _internal_line_center_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_line_center_undefined(bool value) {
  _impl_._has_bits_[4] |= 0x80000000u;
  _impl_.line_center_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_line_center_undefined(bool value) {
  _internal_set_line_center_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_center_undefined)
}

// optional .TSSSOS.SpecDoubleArchive line_fade = 107;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_fade() const {
  bool value = (_impl_._has_bits_[1] & 0x00200000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.line_fade_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_fade() const {
  return _internal_has_line_fade();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_line_fade() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.line_fade_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::line_fade() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade)
  return _internal_line_fade();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_line_fade(
    ::TSSSOS::SpecDoubleArchive* line_fade) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_fade_);
  }
  _impl_.line_fade_ = line_fade;
  if (line_fade) {
    _impl_._has_bits_[1] |= 0x00200000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00200000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_line_fade() {
  _impl_._has_bits_[1] &= ~0x00200000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_fade_;
  _impl_.line_fade_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_line_fade() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade)
  _impl_._has_bits_[1] &= ~0x00200000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_fade_;
  _impl_.line_fade_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_line_fade() {
  _impl_._has_bits_[1] |= 0x00200000u;
  if (_impl_.line_fade_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.line_fade_ = p;
  }
  return _impl_.line_fade_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_line_fade() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_line_fade();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_line_fade(::TSSSOS::SpecDoubleArchive* line_fade) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_fade_);
  }
  if (line_fade) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line_fade));
    if (message_arena != submessage_arena) {
      line_fade = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line_fade, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00200000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00200000u;
  }
  _impl_.line_fade_ = line_fade;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade)
}

// optional bool line_fade_undefined = 108;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_fade_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000001u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_fade_undefined() const {
  return _internal_has_line_fade_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_line_fade_undefined() {
  _impl_.line_fade_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000001u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_line_fade_undefined() const {
  return _impl_.line_fade_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::line_fade_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade_undefined)
  return _internal_line_fade_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_line_fade_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000001u;
  _impl_.line_fade_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_line_fade_undefined(bool value) {
  _internal_set_line_fade_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade_undefined)
}

// optional .TSSSOS.SpecDoubleArchive line_fade_power = 109;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_fade_power() const {
  bool value = (_impl_._has_bits_[1] & 0x00400000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.line_fade_power_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_fade_power() const {
  return _internal_has_line_fade_power();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_line_fade_power() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.line_fade_power_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::line_fade_power() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade_power)
  return _internal_line_fade_power();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_line_fade_power(
    ::TSSSOS::SpecDoubleArchive* line_fade_power) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_fade_power_);
  }
  _impl_.line_fade_power_ = line_fade_power;
  if (line_fade_power) {
    _impl_._has_bits_[1] |= 0x00400000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00400000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade_power)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_line_fade_power() {
  _impl_._has_bits_[1] &= ~0x00400000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_fade_power_;
  _impl_.line_fade_power_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_line_fade_power() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade_power)
  _impl_._has_bits_[1] &= ~0x00400000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_fade_power_;
  _impl_.line_fade_power_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_line_fade_power() {
  _impl_._has_bits_[1] |= 0x00400000u;
  if (_impl_.line_fade_power_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.line_fade_power_ = p;
  }
  return _impl_.line_fade_power_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_line_fade_power() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_line_fade_power();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade_power)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_line_fade_power(::TSSSOS::SpecDoubleArchive* line_fade_power) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_fade_power_);
  }
  if (line_fade_power) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line_fade_power));
    if (message_arena != submessage_arena) {
      line_fade_power = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line_fade_power, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00400000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00400000u;
  }
  _impl_.line_fade_power_ = line_fade_power;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade_power)
}

// optional bool line_fade_power_undefined = 110;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_fade_power_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000002u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_fade_power_undefined() const {
  return _internal_has_line_fade_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_line_fade_power_undefined() {
  _impl_.line_fade_power_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000002u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_line_fade_power_undefined() const {
  return _impl_.line_fade_power_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::line_fade_power_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade_power_undefined)
  return _internal_line_fade_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_line_fade_power_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000002u;
  _impl_.line_fade_power_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_line_fade_power_undefined(bool value) {
  _internal_set_line_fade_power_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_fade_power_undefined)
}

// optional .TSSSOS.SpecDoubleArchive line_length = 111;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_length() const {
  bool value = (_impl_._has_bits_[1] & 0x00800000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.line_length_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_length() const {
  return _internal_has_line_length();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_line_length() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.line_length_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::line_length() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_length)
  return _internal_line_length();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_line_length(
    ::TSSSOS::SpecDoubleArchive* line_length) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_length_);
  }
  _impl_.line_length_ = line_length;
  if (line_length) {
    _impl_._has_bits_[1] |= 0x00800000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00800000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_length)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_line_length() {
  _impl_._has_bits_[1] &= ~0x00800000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_length_;
  _impl_.line_length_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_line_length() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_length)
  _impl_._has_bits_[1] &= ~0x00800000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_length_;
  _impl_.line_length_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_line_length() {
  _impl_._has_bits_[1] |= 0x00800000u;
  if (_impl_.line_length_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.line_length_ = p;
  }
  return _impl_.line_length_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_line_length() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_line_length();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_length)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_line_length(::TSSSOS::SpecDoubleArchive* line_length) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_length_);
  }
  if (line_length) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line_length));
    if (message_arena != submessage_arena) {
      line_length = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line_length, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x00800000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00800000u;
  }
  _impl_.line_length_ = line_length;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_length)
}

// optional bool line_length_undefined = 112;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_length_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000004u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_length_undefined() const {
  return _internal_has_line_length_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_line_length_undefined() {
  _impl_.line_length_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000004u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_line_length_undefined() const {
  return _impl_.line_length_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::line_length_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_length_undefined)
  return _internal_line_length_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_line_length_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000004u;
  _impl_.line_length_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_line_length_undefined(bool value) {
  _internal_set_line_length_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_length_undefined)
}

// optional .TSSSOS.SpecDoubleArchive line_width = 113;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_width() const {
  bool value = (_impl_._has_bits_[1] & 0x01000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.line_width_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_width() const {
  return _internal_has_line_width();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_line_width() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.line_width_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::line_width() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_width)
  return _internal_line_width();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_line_width(
    ::TSSSOS::SpecDoubleArchive* line_width) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_width_);
  }
  _impl_.line_width_ = line_width;
  if (line_width) {
    _impl_._has_bits_[1] |= 0x01000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x01000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_width)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_line_width() {
  _impl_._has_bits_[1] &= ~0x01000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_width_;
  _impl_.line_width_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_line_width() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_width)
  _impl_._has_bits_[1] &= ~0x01000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.line_width_;
  _impl_.line_width_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_line_width() {
  _impl_._has_bits_[1] |= 0x01000000u;
  if (_impl_.line_width_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.line_width_ = p;
  }
  return _impl_.line_width_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_line_width() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_line_width();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_width)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_line_width(::TSSSOS::SpecDoubleArchive* line_width) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_width_);
  }
  if (line_width) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line_width));
    if (message_arena != submessage_arena) {
      line_width = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line_width, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x01000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x01000000u;
  }
  _impl_.line_width_ = line_width;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_width)
}

// optional bool line_width_undefined = 114;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_line_width_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000008u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_line_width_undefined() const {
  return _internal_has_line_width_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_line_width_undefined() {
  _impl_.line_width_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000008u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_line_width_undefined() const {
  return _impl_.line_width_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::line_width_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_width_undefined)
  return _internal_line_width_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_line_width_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000008u;
  _impl_.line_width_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_line_width_undefined(bool value) {
  _internal_set_line_width_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.line_width_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_size_scale = 115;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_size_scale() const {
  bool value = (_impl_._has_bits_[1] & 0x02000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_size_scale_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_size_scale() const {
  return _internal_has_noise_size_scale();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_size_scale() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_size_scale_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_size_scale() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_scale)
  return _internal_noise_size_scale();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_size_scale(
    ::TSSSOS::SpecDoubleArchive* noise_size_scale) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_size_scale_);
  }
  _impl_.noise_size_scale_ = noise_size_scale;
  if (noise_size_scale) {
    _impl_._has_bits_[1] |= 0x02000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x02000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_scale)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_size_scale() {
  _impl_._has_bits_[1] &= ~0x02000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_size_scale_;
  _impl_.noise_size_scale_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_size_scale() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_scale)
  _impl_._has_bits_[1] &= ~0x02000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_size_scale_;
  _impl_.noise_size_scale_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_size_scale() {
  _impl_._has_bits_[1] |= 0x02000000u;
  if (_impl_.noise_size_scale_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_size_scale_ = p;
  }
  return _impl_.noise_size_scale_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_size_scale() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_size_scale();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_scale)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_size_scale(::TSSSOS::SpecDoubleArchive* noise_size_scale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_size_scale_);
  }
  if (noise_size_scale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_size_scale));
    if (message_arena != submessage_arena) {
      noise_size_scale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_size_scale, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x02000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x02000000u;
  }
  _impl_.noise_size_scale_ = noise_size_scale;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_scale)
}

// optional bool noise_size_scale_undefined = 116;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_size_scale_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000010u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_size_scale_undefined() const {
  return _internal_has_noise_size_scale_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_size_scale_undefined() {
  _impl_.noise_size_scale_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000010u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_size_scale_undefined() const {
  return _impl_.noise_size_scale_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_size_scale_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_scale_undefined)
  return _internal_noise_size_scale_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_size_scale_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000010u;
  _impl_.noise_size_scale_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_size_scale_undefined(bool value) {
  _internal_set_noise_size_scale_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_scale_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_size_weight = 117;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_size_weight() const {
  bool value = (_impl_._has_bits_[1] & 0x04000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_size_weight_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_size_weight() const {
  return _internal_has_noise_size_weight();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_size_weight() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_size_weight_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_size_weight() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_weight)
  return _internal_noise_size_weight();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_size_weight(
    ::TSSSOS::SpecDoubleArchive* noise_size_weight) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_size_weight_);
  }
  _impl_.noise_size_weight_ = noise_size_weight;
  if (noise_size_weight) {
    _impl_._has_bits_[1] |= 0x04000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x04000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_weight)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_size_weight() {
  _impl_._has_bits_[1] &= ~0x04000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_size_weight_;
  _impl_.noise_size_weight_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_size_weight() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_weight)
  _impl_._has_bits_[1] &= ~0x04000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_size_weight_;
  _impl_.noise_size_weight_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_size_weight() {
  _impl_._has_bits_[1] |= 0x04000000u;
  if (_impl_.noise_size_weight_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_size_weight_ = p;
  }
  return _impl_.noise_size_weight_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_size_weight() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_size_weight();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_weight)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_size_weight(::TSSSOS::SpecDoubleArchive* noise_size_weight) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_size_weight_);
  }
  if (noise_size_weight) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_size_weight));
    if (message_arena != submessage_arena) {
      noise_size_weight = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_size_weight, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x04000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x04000000u;
  }
  _impl_.noise_size_weight_ = noise_size_weight;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_weight)
}

// optional bool noise_size_weight_undefined = 118;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_size_weight_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000020u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_size_weight_undefined() const {
  return _internal_has_noise_size_weight_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_size_weight_undefined() {
  _impl_.noise_size_weight_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000020u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_size_weight_undefined() const {
  return _impl_.noise_size_weight_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_size_weight_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_weight_undefined)
  return _internal_noise_size_weight_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_size_weight_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000020u;
  _impl_.noise_size_weight_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_size_weight_undefined(bool value) {
  _internal_set_noise_size_weight_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_size_weight_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_variance = 119;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_variance() const {
  bool value = (_impl_._has_bits_[1] & 0x08000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_variance_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_variance() const {
  return _internal_has_noise_variance();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_variance() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_variance_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_variance() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_variance)
  return _internal_noise_variance();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_variance(
    ::TSSSOS::SpecDoubleArchive* noise_variance) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_variance_);
  }
  _impl_.noise_variance_ = noise_variance;
  if (noise_variance) {
    _impl_._has_bits_[1] |= 0x08000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x08000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_variance)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_variance() {
  _impl_._has_bits_[1] &= ~0x08000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_variance_;
  _impl_.noise_variance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_variance() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_variance)
  _impl_._has_bits_[1] &= ~0x08000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_variance_;
  _impl_.noise_variance_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_variance() {
  _impl_._has_bits_[1] |= 0x08000000u;
  if (_impl_.noise_variance_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_variance_ = p;
  }
  return _impl_.noise_variance_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_variance() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_variance();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_variance)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_variance(::TSSSOS::SpecDoubleArchive* noise_variance) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_variance_);
  }
  if (noise_variance) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_variance));
    if (message_arena != submessage_arena) {
      noise_variance = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_variance, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x08000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x08000000u;
  }
  _impl_.noise_variance_ = noise_variance;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_variance)
}

// optional bool noise_variance_undefined = 120;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_variance_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000040u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_variance_undefined() const {
  return _internal_has_noise_variance_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_variance_undefined() {
  _impl_.noise_variance_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000040u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_variance_undefined() const {
  return _impl_.noise_variance_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_variance_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_variance_undefined)
  return _internal_noise_variance_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_variance_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000040u;
  _impl_.noise_variance_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_variance_undefined(bool value) {
  _internal_set_noise_variance_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_variance_undefined)
}

// optional .TSSSOS.SpecDoubleArchive offset = 121;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_offset() const {
  bool value = (_impl_._has_bits_[1] & 0x10000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.offset_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_offset() const {
  return _internal_has_offset();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_offset() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::offset() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.offset)
  return _internal_offset();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_offset(
    ::TSSSOS::SpecDoubleArchive* offset) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.offset_);
  }
  _impl_.offset_ = offset;
  if (offset) {
    _impl_._has_bits_[1] |= 0x10000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x10000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.offset)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_offset() {
  _impl_._has_bits_[1] &= ~0x10000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.offset_;
  _impl_.offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_offset() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.offset)
  _impl_._has_bits_[1] &= ~0x10000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.offset_;
  _impl_.offset_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_offset() {
  _impl_._has_bits_[1] |= 0x10000000u;
  if (_impl_.offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.offset_ = p;
  }
  return _impl_.offset_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_offset() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_offset();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.offset)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_offset(::TSSSOS::SpecDoubleArchive* offset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.offset_);
  }
  if (offset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(offset));
    if (message_arena != submessage_arena) {
      offset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, offset, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x10000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x10000000u;
  }
  _impl_.offset_ = offset;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.offset)
}

// optional bool offset_undefined = 122;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_offset_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000080u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_offset_undefined() const {
  return _internal_has_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_offset_undefined() {
  _impl_.offset_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000080u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_offset_undefined() const {
  return _impl_.offset_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::offset_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.offset_undefined)
  return _internal_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_offset_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000080u;
  _impl_.offset_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_offset_undefined(bool value) {
  _internal_set_offset_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.offset_undefined)
}

// optional .TSSSOS.SpecDoubleArchive motion_background_opacity = 123;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_motion_background_opacity() const {
  bool value = (_impl_._has_bits_[1] & 0x20000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.motion_background_opacity_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_motion_background_opacity() const {
  return _internal_has_motion_background_opacity();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_motion_background_opacity() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.motion_background_opacity_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::motion_background_opacity() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion_background_opacity)
  return _internal_motion_background_opacity();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_motion_background_opacity(
    ::TSSSOS::SpecDoubleArchive* motion_background_opacity) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.motion_background_opacity_);
  }
  _impl_.motion_background_opacity_ = motion_background_opacity;
  if (motion_background_opacity) {
    _impl_._has_bits_[1] |= 0x20000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x20000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion_background_opacity)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_motion_background_opacity() {
  _impl_._has_bits_[1] &= ~0x20000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.motion_background_opacity_;
  _impl_.motion_background_opacity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_motion_background_opacity() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion_background_opacity)
  _impl_._has_bits_[1] &= ~0x20000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.motion_background_opacity_;
  _impl_.motion_background_opacity_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_motion_background_opacity() {
  _impl_._has_bits_[1] |= 0x20000000u;
  if (_impl_.motion_background_opacity_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.motion_background_opacity_ = p;
  }
  return _impl_.motion_background_opacity_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_motion_background_opacity() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_motion_background_opacity();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion_background_opacity)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_motion_background_opacity(::TSSSOS::SpecDoubleArchive* motion_background_opacity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.motion_background_opacity_);
  }
  if (motion_background_opacity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(motion_background_opacity));
    if (message_arena != submessage_arena) {
      motion_background_opacity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, motion_background_opacity, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x20000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x20000000u;
  }
  _impl_.motion_background_opacity_ = motion_background_opacity;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion_background_opacity)
}

// optional bool motion_background_opacity_undefined = 124;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_motion_background_opacity_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000100u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_motion_background_opacity_undefined() const {
  return _internal_has_motion_background_opacity_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_motion_background_opacity_undefined() {
  _impl_.motion_background_opacity_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000100u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_motion_background_opacity_undefined() const {
  return _impl_.motion_background_opacity_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::motion_background_opacity_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion_background_opacity_undefined)
  return _internal_motion_background_opacity_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_motion_background_opacity_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000100u;
  _impl_.motion_background_opacity_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_motion_background_opacity_undefined(bool value) {
  _internal_set_motion_background_opacity_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.motion_background_opacity_undefined)
}

// optional .TSSSOS.SpecDoubleArchive point_depth_alpha = 125;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_point_depth_alpha() const {
  bool value = (_impl_._has_bits_[1] & 0x40000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.point_depth_alpha_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_point_depth_alpha() const {
  return _internal_has_point_depth_alpha();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_point_depth_alpha() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.point_depth_alpha_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::point_depth_alpha() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_depth_alpha)
  return _internal_point_depth_alpha();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_point_depth_alpha(
    ::TSSSOS::SpecDoubleArchive* point_depth_alpha) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.point_depth_alpha_);
  }
  _impl_.point_depth_alpha_ = point_depth_alpha;
  if (point_depth_alpha) {
    _impl_._has_bits_[1] |= 0x40000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x40000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_depth_alpha)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_point_depth_alpha() {
  _impl_._has_bits_[1] &= ~0x40000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.point_depth_alpha_;
  _impl_.point_depth_alpha_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_point_depth_alpha() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_depth_alpha)
  _impl_._has_bits_[1] &= ~0x40000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.point_depth_alpha_;
  _impl_.point_depth_alpha_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_point_depth_alpha() {
  _impl_._has_bits_[1] |= 0x40000000u;
  if (_impl_.point_depth_alpha_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.point_depth_alpha_ = p;
  }
  return _impl_.point_depth_alpha_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_point_depth_alpha() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_point_depth_alpha();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_depth_alpha)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_point_depth_alpha(::TSSSOS::SpecDoubleArchive* point_depth_alpha) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.point_depth_alpha_);
  }
  if (point_depth_alpha) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(point_depth_alpha));
    if (message_arena != submessage_arena) {
      point_depth_alpha = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, point_depth_alpha, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x40000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x40000000u;
  }
  _impl_.point_depth_alpha_ = point_depth_alpha;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_depth_alpha)
}

// optional bool point_depth_alpha_undefined = 126;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_point_depth_alpha_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000200u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_point_depth_alpha_undefined() const {
  return _internal_has_point_depth_alpha_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_point_depth_alpha_undefined() {
  _impl_.point_depth_alpha_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000200u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_point_depth_alpha_undefined() const {
  return _impl_.point_depth_alpha_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::point_depth_alpha_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_depth_alpha_undefined)
  return _internal_point_depth_alpha_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_point_depth_alpha_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000200u;
  _impl_.point_depth_alpha_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_point_depth_alpha_undefined(bool value) {
  _internal_set_point_depth_alpha_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_depth_alpha_undefined)
}

// optional .TSSSOS.SpecDoubleArchive point_size = 127;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_point_size() const {
  bool value = (_impl_._has_bits_[1] & 0x80000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.point_size_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_point_size() const {
  return _internal_has_point_size();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_point_size() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.point_size_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::point_size() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_size)
  return _internal_point_size();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_point_size(
    ::TSSSOS::SpecDoubleArchive* point_size) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.point_size_);
  }
  _impl_.point_size_ = point_size;
  if (point_size) {
    _impl_._has_bits_[1] |= 0x80000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x80000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_size)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_point_size() {
  _impl_._has_bits_[1] &= ~0x80000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.point_size_;
  _impl_.point_size_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_point_size() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_size)
  _impl_._has_bits_[1] &= ~0x80000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.point_size_;
  _impl_.point_size_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_point_size() {
  _impl_._has_bits_[1] |= 0x80000000u;
  if (_impl_.point_size_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.point_size_ = p;
  }
  return _impl_.point_size_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_point_size() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_point_size();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_size)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_point_size(::TSSSOS::SpecDoubleArchive* point_size) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.point_size_);
  }
  if (point_size) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(point_size));
    if (message_arena != submessage_arena) {
      point_size = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, point_size, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x80000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x80000000u;
  }
  _impl_.point_size_ = point_size;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_size)
}

// optional bool point_size_undefined = 128;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_point_size_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000400u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_point_size_undefined() const {
  return _internal_has_point_size_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_point_size_undefined() {
  _impl_.point_size_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000400u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_point_size_undefined() const {
  return _impl_.point_size_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::point_size_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_size_undefined)
  return _internal_point_size_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_point_size_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000400u;
  _impl_.point_size_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_point_size_undefined(bool value) {
  _internal_set_point_size_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.point_size_undefined)
}

// optional .TSSSOS.SpecDoubleArchive power = 129;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_power() const {
  bool value = (_impl_._has_bits_[2] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.power_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_power() const {
  return _internal_has_power();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_power() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.power_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::power() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.power)
  return _internal_power();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_power(
    ::TSSSOS::SpecDoubleArchive* power) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.power_);
  }
  _impl_.power_ = power;
  if (power) {
    _impl_._has_bits_[2] |= 0x00000001u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.power)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_power() {
  _impl_._has_bits_[2] &= ~0x00000001u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.power_;
  _impl_.power_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_power() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.power)
  _impl_._has_bits_[2] &= ~0x00000001u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.power_;
  _impl_.power_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_power() {
  _impl_._has_bits_[2] |= 0x00000001u;
  if (_impl_.power_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.power_ = p;
  }
  return _impl_.power_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_power() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_power();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.power)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_power(::TSSSOS::SpecDoubleArchive* power) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.power_);
  }
  if (power) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(power));
    if (message_arena != submessage_arena) {
      power = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, power, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000001u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000001u;
  }
  _impl_.power_ = power;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.power)
}

// optional bool power_undefined = 130;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_power_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00000800u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_power_undefined() const {
  return _internal_has_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_power_undefined() {
  _impl_.power_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00000800u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_power_undefined() const {
  return _impl_.power_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::power_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.power_undefined)
  return _internal_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_power_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00000800u;
  _impl_.power_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_power_undefined(bool value) {
  _internal_set_power_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.power_undefined)
}

// optional .TSSSOS.SpecDoubleArchive radius = 131;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_radius() const {
  bool value = (_impl_._has_bits_[2] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.radius_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_radius() const {
  return _internal_has_radius();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_radius() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.radius_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::radius() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.radius)
  return _internal_radius();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_radius(
    ::TSSSOS::SpecDoubleArchive* radius) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.radius_);
  }
  _impl_.radius_ = radius;
  if (radius) {
    _impl_._has_bits_[2] |= 0x00000002u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.radius)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_radius() {
  _impl_._has_bits_[2] &= ~0x00000002u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.radius_;
  _impl_.radius_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_radius() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.radius)
  _impl_._has_bits_[2] &= ~0x00000002u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.radius_;
  _impl_.radius_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_radius() {
  _impl_._has_bits_[2] |= 0x00000002u;
  if (_impl_.radius_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.radius_ = p;
  }
  return _impl_.radius_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_radius() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_radius();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.radius)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_radius(::TSSSOS::SpecDoubleArchive* radius) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.radius_);
  }
  if (radius) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(radius));
    if (message_arena != submessage_arena) {
      radius = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, radius, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000002u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000002u;
  }
  _impl_.radius_ = radius;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.radius)
}

// optional bool radius_undefined = 132;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_radius_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00001000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_radius_undefined() const {
  return _internal_has_radius_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_radius_undefined() {
  _impl_.radius_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00001000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_radius_undefined() const {
  return _impl_.radius_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::radius_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.radius_undefined)
  return _internal_radius_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_radius_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00001000u;
  _impl_.radius_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_radius_undefined(bool value) {
  _internal_set_radius_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.radius_undefined)
}

// optional .TSSSOS.SpecDoubleArchive refraction = 133;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_refraction() const {
  bool value = (_impl_._has_bits_[2] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.refraction_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_refraction() const {
  return _internal_has_refraction();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_refraction() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.refraction_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::refraction() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.refraction)
  return _internal_refraction();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_refraction(
    ::TSSSOS::SpecDoubleArchive* refraction) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.refraction_);
  }
  _impl_.refraction_ = refraction;
  if (refraction) {
    _impl_._has_bits_[2] |= 0x00000004u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.refraction)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_refraction() {
  _impl_._has_bits_[2] &= ~0x00000004u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.refraction_;
  _impl_.refraction_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_refraction() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.refraction)
  _impl_._has_bits_[2] &= ~0x00000004u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.refraction_;
  _impl_.refraction_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_refraction() {
  _impl_._has_bits_[2] |= 0x00000004u;
  if (_impl_.refraction_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.refraction_ = p;
  }
  return _impl_.refraction_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_refraction() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_refraction();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.refraction)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_refraction(::TSSSOS::SpecDoubleArchive* refraction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.refraction_);
  }
  if (refraction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(refraction));
    if (message_arena != submessage_arena) {
      refraction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, refraction, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000004u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000004u;
  }
  _impl_.refraction_ = refraction;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.refraction)
}

// optional bool refraction_undefined = 134;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_refraction_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00002000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_refraction_undefined() const {
  return _internal_has_refraction_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_refraction_undefined() {
  _impl_.refraction_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00002000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_refraction_undefined() const {
  return _impl_.refraction_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::refraction_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.refraction_undefined)
  return _internal_refraction_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_refraction_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00002000u;
  _impl_.refraction_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_refraction_undefined(bool value) {
  _internal_set_refraction_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.refraction_undefined)
}

// optional .TSSSOS.SpecDoubleArchive resolution = 135;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_resolution() const {
  bool value = (_impl_._has_bits_[2] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resolution_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_resolution() const {
  return _internal_has_resolution();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_resolution() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.resolution_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::resolution() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.resolution)
  return _internal_resolution();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_resolution(
    ::TSSSOS::SpecDoubleArchive* resolution) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.resolution_);
  }
  _impl_.resolution_ = resolution;
  if (resolution) {
    _impl_._has_bits_[2] |= 0x00000008u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.resolution)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_resolution() {
  _impl_._has_bits_[2] &= ~0x00000008u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_resolution() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.resolution)
  _impl_._has_bits_[2] &= ~0x00000008u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.resolution_;
  _impl_.resolution_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_resolution() {
  _impl_._has_bits_[2] |= 0x00000008u;
  if (_impl_.resolution_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.resolution_ = p;
  }
  return _impl_.resolution_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_resolution() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_resolution();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.resolution)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_resolution(::TSSSOS::SpecDoubleArchive* resolution) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.resolution_);
  }
  if (resolution) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(resolution));
    if (message_arena != submessage_arena) {
      resolution = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, resolution, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000008u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000008u;
  }
  _impl_.resolution_ = resolution;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.resolution)
}

// optional bool resolution_undefined = 136;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_resolution_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00004000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_resolution_undefined() const {
  return _internal_has_resolution_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_resolution_undefined() {
  _impl_.resolution_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00004000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_resolution_undefined() const {
  return _impl_.resolution_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::resolution_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.resolution_undefined)
  return _internal_resolution_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_resolution_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00004000u;
  _impl_.resolution_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_resolution_undefined(bool value) {
  _internal_set_resolution_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.resolution_undefined)
}

// optional .TSSSOS.SpecDoubleArchive saturation = 137;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_saturation() const {
  bool value = (_impl_._has_bits_[2] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.saturation_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_saturation() const {
  return _internal_has_saturation();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_saturation() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.saturation_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::saturation() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.saturation)
  return _internal_saturation();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_saturation(
    ::TSSSOS::SpecDoubleArchive* saturation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.saturation_);
  }
  _impl_.saturation_ = saturation;
  if (saturation) {
    _impl_._has_bits_[2] |= 0x00000010u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.saturation)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_saturation() {
  _impl_._has_bits_[2] &= ~0x00000010u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.saturation_;
  _impl_.saturation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_saturation() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.saturation)
  _impl_._has_bits_[2] &= ~0x00000010u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.saturation_;
  _impl_.saturation_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_saturation() {
  _impl_._has_bits_[2] |= 0x00000010u;
  if (_impl_.saturation_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.saturation_ = p;
  }
  return _impl_.saturation_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_saturation() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_saturation();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.saturation)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_saturation(::TSSSOS::SpecDoubleArchive* saturation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.saturation_);
  }
  if (saturation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(saturation));
    if (message_arena != submessage_arena) {
      saturation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, saturation, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000010u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000010u;
  }
  _impl_.saturation_ = saturation;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.saturation)
}

// optional bool saturation_undefined = 138;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_saturation_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00008000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_saturation_undefined() const {
  return _internal_has_saturation_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_saturation_undefined() {
  _impl_.saturation_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00008000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_saturation_undefined() const {
  return _impl_.saturation_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::saturation_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.saturation_undefined)
  return _internal_saturation_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_saturation_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00008000u;
  _impl_.saturation_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_saturation_undefined(bool value) {
  _internal_set_saturation_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.saturation_undefined)
}

// optional .TSSSOS.SpecDoubleArchive scale = 139;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_scale() const {
  bool value = (_impl_._has_bits_[2] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scale_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_scale() const {
  return _internal_has_scale();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_scale() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.scale_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::scale() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.scale)
  return _internal_scale();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_scale(
    ::TSSSOS::SpecDoubleArchive* scale) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.scale_);
  }
  _impl_.scale_ = scale;
  if (scale) {
    _impl_._has_bits_[2] |= 0x00000020u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.scale)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_scale() {
  _impl_._has_bits_[2] &= ~0x00000020u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.scale_;
  _impl_.scale_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_scale() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.scale)
  _impl_._has_bits_[2] &= ~0x00000020u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.scale_;
  _impl_.scale_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_scale() {
  _impl_._has_bits_[2] |= 0x00000020u;
  if (_impl_.scale_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.scale_ = p;
  }
  return _impl_.scale_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_scale() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_scale();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.scale)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_scale(::TSSSOS::SpecDoubleArchive* scale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.scale_);
  }
  if (scale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(scale));
    if (message_arena != submessage_arena) {
      scale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, scale, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000020u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000020u;
  }
  _impl_.scale_ = scale;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.scale)
}

// optional bool scale_undefined = 140;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_scale_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00010000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_scale_undefined() const {
  return _internal_has_scale_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_scale_undefined() {
  _impl_.scale_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00010000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_scale_undefined() const {
  return _impl_.scale_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::scale_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.scale_undefined)
  return _internal_scale_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_scale_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00010000u;
  _impl_.scale_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_scale_undefined(bool value) {
  _internal_set_scale_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.scale_undefined)
}

// optional .TSSSOS.SpecDoubleArchive shadow_alpha = 141;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_alpha() const {
  bool value = (_impl_._has_bits_[2] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_alpha_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_alpha() const {
  return _internal_has_shadow_alpha();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_alpha() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.shadow_alpha_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::shadow_alpha() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_alpha)
  return _internal_shadow_alpha();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow_alpha(
    ::TSSSOS::SpecDoubleArchive* shadow_alpha) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_alpha_);
  }
  _impl_.shadow_alpha_ = shadow_alpha;
  if (shadow_alpha) {
    _impl_._has_bits_[2] |= 0x00000040u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_alpha)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_shadow_alpha() {
  _impl_._has_bits_[2] &= ~0x00000040u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_alpha_;
  _impl_.shadow_alpha_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_shadow_alpha() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_alpha)
  _impl_._has_bits_[2] &= ~0x00000040u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_alpha_;
  _impl_.shadow_alpha_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_shadow_alpha() {
  _impl_._has_bits_[2] |= 0x00000040u;
  if (_impl_.shadow_alpha_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.shadow_alpha_ = p;
  }
  return _impl_.shadow_alpha_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_shadow_alpha() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_shadow_alpha();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_alpha)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_shadow_alpha(::TSSSOS::SpecDoubleArchive* shadow_alpha) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_alpha_);
  }
  if (shadow_alpha) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow_alpha));
    if (message_arena != submessage_arena) {
      shadow_alpha = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow_alpha, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000040u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000040u;
  }
  _impl_.shadow_alpha_ = shadow_alpha;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_alpha)
}

// optional bool shadow_alpha_undefined = 142;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_alpha_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00020000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_alpha_undefined() const {
  return _internal_has_shadow_alpha_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_shadow_alpha_undefined() {
  _impl_.shadow_alpha_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00020000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_alpha_undefined() const {
  return _impl_.shadow_alpha_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::shadow_alpha_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_alpha_undefined)
  return _internal_shadow_alpha_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_shadow_alpha_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00020000u;
  _impl_.shadow_alpha_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_shadow_alpha_undefined(bool value) {
  _internal_set_shadow_alpha_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_alpha_undefined)
}

// optional .TSSSOS.SpecDoubleArchive shadow_angle = 143;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_angle() const {
  bool value = (_impl_._has_bits_[2] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_angle_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_angle() const {
  return _internal_has_shadow_angle();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_angle() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.shadow_angle_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::shadow_angle() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_angle)
  return _internal_shadow_angle();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow_angle(
    ::TSSSOS::SpecDoubleArchive* shadow_angle) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_angle_);
  }
  _impl_.shadow_angle_ = shadow_angle;
  if (shadow_angle) {
    _impl_._has_bits_[2] |= 0x00000080u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_angle)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_shadow_angle() {
  _impl_._has_bits_[2] &= ~0x00000080u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_angle_;
  _impl_.shadow_angle_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_shadow_angle() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_angle)
  _impl_._has_bits_[2] &= ~0x00000080u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_angle_;
  _impl_.shadow_angle_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_shadow_angle() {
  _impl_._has_bits_[2] |= 0x00000080u;
  if (_impl_.shadow_angle_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.shadow_angle_ = p;
  }
  return _impl_.shadow_angle_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_shadow_angle() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_shadow_angle();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_angle)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_shadow_angle(::TSSSOS::SpecDoubleArchive* shadow_angle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_angle_);
  }
  if (shadow_angle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow_angle));
    if (message_arena != submessage_arena) {
      shadow_angle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow_angle, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000080u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000080u;
  }
  _impl_.shadow_angle_ = shadow_angle;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_angle)
}

// optional bool shadow_angle_undefined = 144;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_angle_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00040000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_angle_undefined() const {
  return _internal_has_shadow_angle_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_shadow_angle_undefined() {
  _impl_.shadow_angle_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00040000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_angle_undefined() const {
  return _impl_.shadow_angle_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::shadow_angle_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_angle_undefined)
  return _internal_shadow_angle_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_shadow_angle_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00040000u;
  _impl_.shadow_angle_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_shadow_angle_undefined(bool value) {
  _internal_set_shadow_angle_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_angle_undefined)
}

// optional .TSSSOS.SpecDoubleArchive shadow_offset = 145;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_offset() const {
  bool value = (_impl_._has_bits_[2] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_offset_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_offset() const {
  return _internal_has_shadow_offset();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_offset() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.shadow_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::shadow_offset() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_offset)
  return _internal_shadow_offset();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow_offset(
    ::TSSSOS::SpecDoubleArchive* shadow_offset) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_offset_);
  }
  _impl_.shadow_offset_ = shadow_offset;
  if (shadow_offset) {
    _impl_._has_bits_[2] |= 0x00000100u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_offset)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_shadow_offset() {
  _impl_._has_bits_[2] &= ~0x00000100u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_offset_;
  _impl_.shadow_offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_shadow_offset() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_offset)
  _impl_._has_bits_[2] &= ~0x00000100u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_offset_;
  _impl_.shadow_offset_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_shadow_offset() {
  _impl_._has_bits_[2] |= 0x00000100u;
  if (_impl_.shadow_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.shadow_offset_ = p;
  }
  return _impl_.shadow_offset_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_shadow_offset() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_shadow_offset();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_offset)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_shadow_offset(::TSSSOS::SpecDoubleArchive* shadow_offset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_offset_);
  }
  if (shadow_offset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow_offset));
    if (message_arena != submessage_arena) {
      shadow_offset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow_offset, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000100u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000100u;
  }
  _impl_.shadow_offset_ = shadow_offset;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_offset)
}

// optional bool shadow_offset_undefined = 146;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_offset_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00080000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_offset_undefined() const {
  return _internal_has_shadow_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_shadow_offset_undefined() {
  _impl_.shadow_offset_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00080000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_offset_undefined() const {
  return _impl_.shadow_offset_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::shadow_offset_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_offset_undefined)
  return _internal_shadow_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_shadow_offset_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00080000u;
  _impl_.shadow_offset_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_shadow_offset_undefined(bool value) {
  _internal_set_shadow_offset_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_offset_undefined)
}

// optional .TSSSOS.SpecDoubleArchive shadow_scale = 147;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_scale() const {
  bool value = (_impl_._has_bits_[2] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_scale_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_scale() const {
  return _internal_has_shadow_scale();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_scale() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.shadow_scale_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::shadow_scale() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_scale)
  return _internal_shadow_scale();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow_scale(
    ::TSSSOS::SpecDoubleArchive* shadow_scale) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_scale_);
  }
  _impl_.shadow_scale_ = shadow_scale;
  if (shadow_scale) {
    _impl_._has_bits_[2] |= 0x00000200u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_scale)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_shadow_scale() {
  _impl_._has_bits_[2] &= ~0x00000200u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_scale_;
  _impl_.shadow_scale_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_shadow_scale() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_scale)
  _impl_._has_bits_[2] &= ~0x00000200u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_scale_;
  _impl_.shadow_scale_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_shadow_scale() {
  _impl_._has_bits_[2] |= 0x00000200u;
  if (_impl_.shadow_scale_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.shadow_scale_ = p;
  }
  return _impl_.shadow_scale_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_shadow_scale() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_shadow_scale();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_scale)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_shadow_scale(::TSSSOS::SpecDoubleArchive* shadow_scale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_scale_);
  }
  if (shadow_scale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow_scale));
    if (message_arena != submessage_arena) {
      shadow_scale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow_scale, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000200u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000200u;
  }
  _impl_.shadow_scale_ = shadow_scale;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_scale)
}

// optional bool shadow_scale_undefined = 148;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_scale_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00100000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_scale_undefined() const {
  return _internal_has_shadow_scale_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_shadow_scale_undefined() {
  _impl_.shadow_scale_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00100000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_scale_undefined() const {
  return _impl_.shadow_scale_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::shadow_scale_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_scale_undefined)
  return _internal_shadow_scale_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_shadow_scale_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00100000u;
  _impl_.shadow_scale_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_shadow_scale_undefined(bool value) {
  _internal_set_shadow_scale_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_scale_undefined)
}

// optional .TSSSOS.SpecDoubleArchive shadow_value = 149;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_value() const {
  bool value = (_impl_._has_bits_[2] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_value_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_value() const {
  return _internal_has_shadow_value();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_value() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.shadow_value_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::shadow_value() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_value)
  return _internal_shadow_value();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow_value(
    ::TSSSOS::SpecDoubleArchive* shadow_value) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_value_);
  }
  _impl_.shadow_value_ = shadow_value;
  if (shadow_value) {
    _impl_._has_bits_[2] |= 0x00000400u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_value)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_shadow_value() {
  _impl_._has_bits_[2] &= ~0x00000400u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_value_;
  _impl_.shadow_value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_shadow_value() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_value)
  _impl_._has_bits_[2] &= ~0x00000400u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_value_;
  _impl_.shadow_value_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_shadow_value() {
  _impl_._has_bits_[2] |= 0x00000400u;
  if (_impl_.shadow_value_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.shadow_value_ = p;
  }
  return _impl_.shadow_value_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_shadow_value() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_shadow_value();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_value)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_shadow_value(::TSSSOS::SpecDoubleArchive* shadow_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_value_);
  }
  if (shadow_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow_value));
    if (message_arena != submessage_arena) {
      shadow_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow_value, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000400u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000400u;
  }
  _impl_.shadow_value_ = shadow_value;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_value)
}

// optional bool shadow_value_undefined = 150;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_value_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00200000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_value_undefined() const {
  return _internal_has_shadow_value_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_shadow_value_undefined() {
  _impl_.shadow_value_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00200000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_value_undefined() const {
  return _impl_.shadow_value_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::shadow_value_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_value_undefined)
  return _internal_shadow_value_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_shadow_value_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00200000u;
  _impl_.shadow_value_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_shadow_value_undefined(bool value) {
  _internal_set_shadow_value_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_value_undefined)
}

// optional .TSSSOS.SpecDoubleArchive speed = 151;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_speed() const {
  bool value = (_impl_._has_bits_[2] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.speed_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_speed() const {
  return _internal_has_speed();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_speed() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.speed_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::speed() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.speed)
  return _internal_speed();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_speed(
    ::TSSSOS::SpecDoubleArchive* speed) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.speed_);
  }
  _impl_.speed_ = speed;
  if (speed) {
    _impl_._has_bits_[2] |= 0x00000800u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.speed)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_speed() {
  _impl_._has_bits_[2] &= ~0x00000800u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.speed_;
  _impl_.speed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_speed() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.speed)
  _impl_._has_bits_[2] &= ~0x00000800u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.speed_;
  _impl_.speed_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_speed() {
  _impl_._has_bits_[2] |= 0x00000800u;
  if (_impl_.speed_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.speed_ = p;
  }
  return _impl_.speed_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_speed() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_speed();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.speed)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_speed(::TSSSOS::SpecDoubleArchive* speed) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.speed_);
  }
  if (speed) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(speed));
    if (message_arena != submessage_arena) {
      speed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, speed, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00000800u;
  } else {
    _impl_._has_bits_[2] &= ~0x00000800u;
  }
  _impl_.speed_ = speed;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.speed)
}

// optional bool speed_undefined = 152;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_speed_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00400000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_speed_undefined() const {
  return _internal_has_speed_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_speed_undefined() {
  _impl_.speed_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00400000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_speed_undefined() const {
  return _impl_.speed_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::speed_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.speed_undefined)
  return _internal_speed_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_speed_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00400000u;
  _impl_.speed_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_speed_undefined(bool value) {
  _internal_set_speed_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.speed_undefined)
}

// optional .TSSSOS.SpecDoubleArchive texture_power = 153;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_texture_power() const {
  bool value = (_impl_._has_bits_[2] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.texture_power_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_texture_power() const {
  return _internal_has_texture_power();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_texture_power() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.texture_power_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::texture_power() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.texture_power)
  return _internal_texture_power();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_texture_power(
    ::TSSSOS::SpecDoubleArchive* texture_power) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.texture_power_);
  }
  _impl_.texture_power_ = texture_power;
  if (texture_power) {
    _impl_._has_bits_[2] |= 0x00001000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.texture_power)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_texture_power() {
  _impl_._has_bits_[2] &= ~0x00001000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.texture_power_;
  _impl_.texture_power_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_texture_power() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.texture_power)
  _impl_._has_bits_[2] &= ~0x00001000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.texture_power_;
  _impl_.texture_power_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_texture_power() {
  _impl_._has_bits_[2] |= 0x00001000u;
  if (_impl_.texture_power_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.texture_power_ = p;
  }
  return _impl_.texture_power_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_texture_power() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_texture_power();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.texture_power)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_texture_power(::TSSSOS::SpecDoubleArchive* texture_power) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.texture_power_);
  }
  if (texture_power) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(texture_power));
    if (message_arena != submessage_arena) {
      texture_power = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, texture_power, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00001000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00001000u;
  }
  _impl_.texture_power_ = texture_power;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.texture_power)
}

// optional bool texture_power_undefined = 154;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_texture_power_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x00800000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_texture_power_undefined() const {
  return _internal_has_texture_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_texture_power_undefined() {
  _impl_.texture_power_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x00800000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_texture_power_undefined() const {
  return _impl_.texture_power_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::texture_power_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.texture_power_undefined)
  return _internal_texture_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_texture_power_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x00800000u;
  _impl_.texture_power_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_texture_power_undefined(bool value) {
  _internal_set_texture_power_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.texture_power_undefined)
}

// optional .TSSSOS.SpecDoubleArchive time = 155;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_time() const {
  bool value = (_impl_._has_bits_[2] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_time() const {
  return _internal_has_time();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_time() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::time() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time)
  return _internal_time();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_time(
    ::TSSSOS::SpecDoubleArchive* time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = time;
  if (time) {
    _impl_._has_bits_[2] |= 0x00002000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_time() {
  _impl_._has_bits_[2] &= ~0x00002000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.time_;
  _impl_.time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_time() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time)
  _impl_._has_bits_[2] &= ~0x00002000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_time() {
  _impl_._has_bits_[2] |= 0x00002000u;
  if (_impl_.time_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.time_ = p;
  }
  return _impl_.time_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_time() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_time(::TSSSOS::SpecDoubleArchive* time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.time_);
  }
  if (time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time));
    if (message_arena != submessage_arena) {
      time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00002000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00002000u;
  }
  _impl_.time_ = time;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time)
}

// optional bool time_undefined = 156;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_time_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x01000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_time_undefined() const {
  return _internal_has_time_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_time_undefined() {
  _impl_.time_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x01000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_time_undefined() const {
  return _impl_.time_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::time_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time_undefined)
  return _internal_time_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_time_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x01000000u;
  _impl_.time_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_time_undefined(bool value) {
  _internal_set_time_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time_undefined)
}

// optional .TSSSOS.SpecBoolArchive draw_points = 157;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_draw_points() const {
  bool value = (_impl_._has_bits_[2] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.draw_points_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_draw_points() const {
  return _internal_has_draw_points();
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_draw_points() const {
  const ::TSSSOS::SpecBoolArchive* p = _impl_.draw_points_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecBoolArchive&>(
      ::TSSSOS::_SpecBoolArchive_default_instance_);
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::draw_points() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_points)
  return _internal_draw_points();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_draw_points(
    ::TSSSOS::SpecBoolArchive* draw_points) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.draw_points_);
  }
  _impl_.draw_points_ = draw_points;
  if (draw_points) {
    _impl_._has_bits_[2] |= 0x00004000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00004000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_points)
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::release_draw_points() {
  _impl_._has_bits_[2] &= ~0x00004000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.draw_points_;
  _impl_.draw_points_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_draw_points() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_points)
  _impl_._has_bits_[2] &= ~0x00004000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.draw_points_;
  _impl_.draw_points_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_draw_points() {
  _impl_._has_bits_[2] |= 0x00004000u;
  if (_impl_.draw_points_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecBoolArchive>(GetArenaForAllocation());
    _impl_.draw_points_ = p;
  }
  return _impl_.draw_points_;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_draw_points() {
  ::TSSSOS::SpecBoolArchive* _msg = _internal_mutable_draw_points();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_points)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_draw_points(::TSSSOS::SpecBoolArchive* draw_points) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.draw_points_);
  }
  if (draw_points) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(draw_points));
    if (message_arena != submessage_arena) {
      draw_points = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, draw_points, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00004000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00004000u;
  }
  _impl_.draw_points_ = draw_points;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_points)
}

// optional bool draw_points_undefined = 158;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_draw_points_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x02000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_draw_points_undefined() const {
  return _internal_has_draw_points_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_draw_points_undefined() {
  _impl_.draw_points_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x02000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_draw_points_undefined() const {
  return _impl_.draw_points_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::draw_points_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_points_undefined)
  return _internal_draw_points_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_draw_points_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x02000000u;
  _impl_.draw_points_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_draw_points_undefined(bool value) {
  _internal_set_draw_points_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_points_undefined)
}

// optional .TSSSOS.SpecBoolArchive draw_lines = 159;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_draw_lines() const {
  bool value = (_impl_._has_bits_[2] & 0x00008000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.draw_lines_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_draw_lines() const {
  return _internal_has_draw_lines();
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_draw_lines() const {
  const ::TSSSOS::SpecBoolArchive* p = _impl_.draw_lines_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecBoolArchive&>(
      ::TSSSOS::_SpecBoolArchive_default_instance_);
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::draw_lines() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_lines)
  return _internal_draw_lines();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_draw_lines(
    ::TSSSOS::SpecBoolArchive* draw_lines) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.draw_lines_);
  }
  _impl_.draw_lines_ = draw_lines;
  if (draw_lines) {
    _impl_._has_bits_[2] |= 0x00008000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00008000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_lines)
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::release_draw_lines() {
  _impl_._has_bits_[2] &= ~0x00008000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.draw_lines_;
  _impl_.draw_lines_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_draw_lines() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_lines)
  _impl_._has_bits_[2] &= ~0x00008000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.draw_lines_;
  _impl_.draw_lines_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_draw_lines() {
  _impl_._has_bits_[2] |= 0x00008000u;
  if (_impl_.draw_lines_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecBoolArchive>(GetArenaForAllocation());
    _impl_.draw_lines_ = p;
  }
  return _impl_.draw_lines_;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_draw_lines() {
  ::TSSSOS::SpecBoolArchive* _msg = _internal_mutable_draw_lines();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_lines)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_draw_lines(::TSSSOS::SpecBoolArchive* draw_lines) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.draw_lines_);
  }
  if (draw_lines) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(draw_lines));
    if (message_arena != submessage_arena) {
      draw_lines = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, draw_lines, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00008000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00008000u;
  }
  _impl_.draw_lines_ = draw_lines;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_lines)
}

// optional bool draw_lines_undefined = 160;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_draw_lines_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x04000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_draw_lines_undefined() const {
  return _internal_has_draw_lines_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_draw_lines_undefined() {
  _impl_.draw_lines_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x04000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_draw_lines_undefined() const {
  return _impl_.draw_lines_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::draw_lines_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_lines_undefined)
  return _internal_draw_lines_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_draw_lines_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x04000000u;
  _impl_.draw_lines_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_draw_lines_undefined(bool value) {
  _internal_set_draw_lines_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_lines_undefined)
}

// optional .TSSSOS.SpecBoolArchive draw_shadows = 161;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_draw_shadows() const {
  bool value = (_impl_._has_bits_[2] & 0x00010000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.draw_shadows_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_draw_shadows() const {
  return _internal_has_draw_shadows();
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_draw_shadows() const {
  const ::TSSSOS::SpecBoolArchive* p = _impl_.draw_shadows_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecBoolArchive&>(
      ::TSSSOS::_SpecBoolArchive_default_instance_);
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::draw_shadows() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_shadows)
  return _internal_draw_shadows();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_draw_shadows(
    ::TSSSOS::SpecBoolArchive* draw_shadows) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.draw_shadows_);
  }
  _impl_.draw_shadows_ = draw_shadows;
  if (draw_shadows) {
    _impl_._has_bits_[2] |= 0x00010000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00010000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_shadows)
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::release_draw_shadows() {
  _impl_._has_bits_[2] &= ~0x00010000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.draw_shadows_;
  _impl_.draw_shadows_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_draw_shadows() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_shadows)
  _impl_._has_bits_[2] &= ~0x00010000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.draw_shadows_;
  _impl_.draw_shadows_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_draw_shadows() {
  _impl_._has_bits_[2] |= 0x00010000u;
  if (_impl_.draw_shadows_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecBoolArchive>(GetArenaForAllocation());
    _impl_.draw_shadows_ = p;
  }
  return _impl_.draw_shadows_;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_draw_shadows() {
  ::TSSSOS::SpecBoolArchive* _msg = _internal_mutable_draw_shadows();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_shadows)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_draw_shadows(::TSSSOS::SpecBoolArchive* draw_shadows) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.draw_shadows_);
  }
  if (draw_shadows) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(draw_shadows));
    if (message_arena != submessage_arena) {
      draw_shadows = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, draw_shadows, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00010000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00010000u;
  }
  _impl_.draw_shadows_ = draw_shadows;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_shadows)
}

// optional bool draw_shadows_undefined = 162;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_draw_shadows_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x08000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_draw_shadows_undefined() const {
  return _internal_has_draw_shadows_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_draw_shadows_undefined() {
  _impl_.draw_shadows_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x08000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_draw_shadows_undefined() const {
  return _impl_.draw_shadows_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::draw_shadows_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_shadows_undefined)
  return _internal_draw_shadows_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_draw_shadows_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x08000000u;
  _impl_.draw_shadows_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_draw_shadows_undefined(bool value) {
  _internal_set_draw_shadows_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.draw_shadows_undefined)
}

// optional .TSSSOS.SpecIntegerArchive pixels_per_division = 163;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_pixels_per_division() const {
  bool value = (_impl_._has_bits_[2] & 0x00020000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pixels_per_division_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_pixels_per_division() const {
  return _internal_has_pixels_per_division();
}
inline const ::TSSSOS::SpecIntegerArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_pixels_per_division() const {
  const ::TSSSOS::SpecIntegerArchive* p = _impl_.pixels_per_division_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecIntegerArchive&>(
      ::TSSSOS::_SpecIntegerArchive_default_instance_);
}
inline const ::TSSSOS::SpecIntegerArchive& MotionBackgroundStylePropertyChangeSetArchive::pixels_per_division() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.pixels_per_division)
  return _internal_pixels_per_division();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_pixels_per_division(
    ::TSSSOS::SpecIntegerArchive* pixels_per_division) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pixels_per_division_);
  }
  _impl_.pixels_per_division_ = pixels_per_division;
  if (pixels_per_division) {
    _impl_._has_bits_[2] |= 0x00020000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00020000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.pixels_per_division)
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::release_pixels_per_division() {
  _impl_._has_bits_[2] &= ~0x00020000u;
  ::TSSSOS::SpecIntegerArchive* temp = _impl_.pixels_per_division_;
  _impl_.pixels_per_division_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_pixels_per_division() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.pixels_per_division)
  _impl_._has_bits_[2] &= ~0x00020000u;
  ::TSSSOS::SpecIntegerArchive* temp = _impl_.pixels_per_division_;
  _impl_.pixels_per_division_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_pixels_per_division() {
  _impl_._has_bits_[2] |= 0x00020000u;
  if (_impl_.pixels_per_division_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecIntegerArchive>(GetArenaForAllocation());
    _impl_.pixels_per_division_ = p;
  }
  return _impl_.pixels_per_division_;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_pixels_per_division() {
  ::TSSSOS::SpecIntegerArchive* _msg = _internal_mutable_pixels_per_division();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.pixels_per_division)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_pixels_per_division(::TSSSOS::SpecIntegerArchive* pixels_per_division) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.pixels_per_division_);
  }
  if (pixels_per_division) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pixels_per_division));
    if (message_arena != submessage_arena) {
      pixels_per_division = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pixels_per_division, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00020000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00020000u;
  }
  _impl_.pixels_per_division_ = pixels_per_division;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.pixels_per_division)
}

// optional bool pixels_per_division_undefined = 164;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_pixels_per_division_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x10000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_pixels_per_division_undefined() const {
  return _internal_has_pixels_per_division_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_pixels_per_division_undefined() {
  _impl_.pixels_per_division_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x10000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_pixels_per_division_undefined() const {
  return _impl_.pixels_per_division_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::pixels_per_division_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.pixels_per_division_undefined)
  return _internal_pixels_per_division_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_pixels_per_division_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x10000000u;
  _impl_.pixels_per_division_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_pixels_per_division_undefined(bool value) {
  _internal_set_pixels_per_division_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.pixels_per_division_undefined)
}

// optional .TSSSOS.SpecBoolArchive symmetry = 165;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_symmetry() const {
  bool value = (_impl_._has_bits_[2] & 0x00040000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.symmetry_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_symmetry() const {
  return _internal_has_symmetry();
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_symmetry() const {
  const ::TSSSOS::SpecBoolArchive* p = _impl_.symmetry_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecBoolArchive&>(
      ::TSSSOS::_SpecBoolArchive_default_instance_);
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::symmetry() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.symmetry)
  return _internal_symmetry();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_symmetry(
    ::TSSSOS::SpecBoolArchive* symmetry) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.symmetry_);
  }
  _impl_.symmetry_ = symmetry;
  if (symmetry) {
    _impl_._has_bits_[2] |= 0x00040000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00040000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.symmetry)
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::release_symmetry() {
  _impl_._has_bits_[2] &= ~0x00040000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.symmetry_;
  _impl_.symmetry_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_symmetry() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.symmetry)
  _impl_._has_bits_[2] &= ~0x00040000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.symmetry_;
  _impl_.symmetry_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_symmetry() {
  _impl_._has_bits_[2] |= 0x00040000u;
  if (_impl_.symmetry_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecBoolArchive>(GetArenaForAllocation());
    _impl_.symmetry_ = p;
  }
  return _impl_.symmetry_;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_symmetry() {
  ::TSSSOS::SpecBoolArchive* _msg = _internal_mutable_symmetry();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.symmetry)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_symmetry(::TSSSOS::SpecBoolArchive* symmetry) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.symmetry_);
  }
  if (symmetry) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(symmetry));
    if (message_arena != submessage_arena) {
      symmetry = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, symmetry, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00040000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00040000u;
  }
  _impl_.symmetry_ = symmetry;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.symmetry)
}

// optional bool symmetry_undefined = 166;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_symmetry_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x20000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_symmetry_undefined() const {
  return _internal_has_symmetry_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_symmetry_undefined() {
  _impl_.symmetry_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x20000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_symmetry_undefined() const {
  return _impl_.symmetry_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::symmetry_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.symmetry_undefined)
  return _internal_symmetry_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_symmetry_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x20000000u;
  _impl_.symmetry_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_symmetry_undefined(bool value) {
  _internal_set_symmetry_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.symmetry_undefined)
}

// optional .TSSSOS.SpecBoolArchive lock_focus = 167;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_lock_focus() const {
  bool value = (_impl_._has_bits_[2] & 0x00080000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lock_focus_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_lock_focus() const {
  return _internal_has_lock_focus();
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_lock_focus() const {
  const ::TSSSOS::SpecBoolArchive* p = _impl_.lock_focus_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecBoolArchive&>(
      ::TSSSOS::_SpecBoolArchive_default_instance_);
}
inline const ::TSSSOS::SpecBoolArchive& MotionBackgroundStylePropertyChangeSetArchive::lock_focus() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lock_focus)
  return _internal_lock_focus();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_lock_focus(
    ::TSSSOS::SpecBoolArchive* lock_focus) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.lock_focus_);
  }
  _impl_.lock_focus_ = lock_focus;
  if (lock_focus) {
    _impl_._has_bits_[2] |= 0x00080000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00080000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lock_focus)
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::release_lock_focus() {
  _impl_._has_bits_[2] &= ~0x00080000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.lock_focus_;
  _impl_.lock_focus_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_lock_focus() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lock_focus)
  _impl_._has_bits_[2] &= ~0x00080000u;
  ::TSSSOS::SpecBoolArchive* temp = _impl_.lock_focus_;
  _impl_.lock_focus_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_lock_focus() {
  _impl_._has_bits_[2] |= 0x00080000u;
  if (_impl_.lock_focus_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecBoolArchive>(GetArenaForAllocation());
    _impl_.lock_focus_ = p;
  }
  return _impl_.lock_focus_;
}
inline ::TSSSOS::SpecBoolArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_lock_focus() {
  ::TSSSOS::SpecBoolArchive* _msg = _internal_mutable_lock_focus();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lock_focus)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_lock_focus(::TSSSOS::SpecBoolArchive* lock_focus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.lock_focus_);
  }
  if (lock_focus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lock_focus));
    if (message_arena != submessage_arena) {
      lock_focus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lock_focus, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00080000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00080000u;
  }
  _impl_.lock_focus_ = lock_focus;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lock_focus)
}

// optional bool lock_focus_undefined = 168;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_lock_focus_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x40000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_lock_focus_undefined() const {
  return _internal_has_lock_focus_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_lock_focus_undefined() {
  _impl_.lock_focus_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x40000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_lock_focus_undefined() const {
  return _impl_.lock_focus_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::lock_focus_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lock_focus_undefined)
  return _internal_lock_focus_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_lock_focus_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x40000000u;
  _impl_.lock_focus_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_lock_focus_undefined(bool value) {
  _internal_set_lock_focus_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.lock_focus_undefined)
}

// optional .TSSSOS.SpecDoubleArchive amplitude = 169;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_amplitude() const {
  bool value = (_impl_._has_bits_[2] & 0x00100000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amplitude_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_amplitude() const {
  return _internal_has_amplitude();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_amplitude() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.amplitude_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::amplitude() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.amplitude)
  return _internal_amplitude();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_amplitude(
    ::TSSSOS::SpecDoubleArchive* amplitude) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.amplitude_);
  }
  _impl_.amplitude_ = amplitude;
  if (amplitude) {
    _impl_._has_bits_[2] |= 0x00100000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00100000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.amplitude)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_amplitude() {
  _impl_._has_bits_[2] &= ~0x00100000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.amplitude_;
  _impl_.amplitude_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_amplitude() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.amplitude)
  _impl_._has_bits_[2] &= ~0x00100000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.amplitude_;
  _impl_.amplitude_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_amplitude() {
  _impl_._has_bits_[2] |= 0x00100000u;
  if (_impl_.amplitude_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.amplitude_ = p;
  }
  return _impl_.amplitude_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_amplitude() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_amplitude();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.amplitude)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_amplitude(::TSSSOS::SpecDoubleArchive* amplitude) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.amplitude_);
  }
  if (amplitude) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(amplitude));
    if (message_arena != submessage_arena) {
      amplitude = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, amplitude, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00100000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00100000u;
  }
  _impl_.amplitude_ = amplitude;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.amplitude)
}

// optional bool amplitude_undefined = 170;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_amplitude_undefined() const {
  bool value = (_impl_._has_bits_[5] & 0x80000000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_amplitude_undefined() const {
  return _internal_has_amplitude_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_amplitude_undefined() {
  _impl_.amplitude_undefined_ = false;
  _impl_._has_bits_[5] &= ~0x80000000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_amplitude_undefined() const {
  return _impl_.amplitude_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::amplitude_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.amplitude_undefined)
  return _internal_amplitude_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_amplitude_undefined(bool value) {
  _impl_._has_bits_[5] |= 0x80000000u;
  _impl_.amplitude_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_amplitude_undefined(bool value) {
  _internal_set_amplitude_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.amplitude_undefined)
}

// optional .TSSSOS.SpecDoubleArchive envelope = 171;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_envelope() const {
  bool value = (_impl_._has_bits_[2] & 0x00200000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.envelope_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_envelope() const {
  return _internal_has_envelope();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_envelope() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.envelope_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::envelope() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.envelope)
  return _internal_envelope();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_envelope(
    ::TSSSOS::SpecDoubleArchive* envelope) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.envelope_);
  }
  _impl_.envelope_ = envelope;
  if (envelope) {
    _impl_._has_bits_[2] |= 0x00200000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00200000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.envelope)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_envelope() {
  _impl_._has_bits_[2] &= ~0x00200000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_envelope() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.envelope)
  _impl_._has_bits_[2] &= ~0x00200000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.envelope_;
  _impl_.envelope_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_envelope() {
  _impl_._has_bits_[2] |= 0x00200000u;
  if (_impl_.envelope_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.envelope_ = p;
  }
  return _impl_.envelope_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_envelope() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_envelope();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.envelope)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_envelope(::TSSSOS::SpecDoubleArchive* envelope) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.envelope_);
  }
  if (envelope) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(envelope));
    if (message_arena != submessage_arena) {
      envelope = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, envelope, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00200000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00200000u;
  }
  _impl_.envelope_ = envelope;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.envelope)
}

// optional bool envelope_undefined = 172;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_envelope_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000001u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_envelope_undefined() const {
  return _internal_has_envelope_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_envelope_undefined() {
  _impl_.envelope_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000001u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_envelope_undefined() const {
  return _impl_.envelope_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::envelope_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.envelope_undefined)
  return _internal_envelope_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_envelope_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000001u;
  _impl_.envelope_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_envelope_undefined(bool value) {
  _internal_set_envelope_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.envelope_undefined)
}

// optional .TSSSOS.SpecDoubleArchive y_offset = 173;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_y_offset() const {
  bool value = (_impl_._has_bits_[2] & 0x00400000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.y_offset_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_y_offset() const {
  return _internal_has_y_offset();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_y_offset() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.y_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::y_offset() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.y_offset)
  return _internal_y_offset();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_y_offset(
    ::TSSSOS::SpecDoubleArchive* y_offset) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.y_offset_);
  }
  _impl_.y_offset_ = y_offset;
  if (y_offset) {
    _impl_._has_bits_[2] |= 0x00400000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00400000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.y_offset)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_y_offset() {
  _impl_._has_bits_[2] &= ~0x00400000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.y_offset_;
  _impl_.y_offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_y_offset() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.y_offset)
  _impl_._has_bits_[2] &= ~0x00400000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.y_offset_;
  _impl_.y_offset_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_y_offset() {
  _impl_._has_bits_[2] |= 0x00400000u;
  if (_impl_.y_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.y_offset_ = p;
  }
  return _impl_.y_offset_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_y_offset() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_y_offset();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.y_offset)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_y_offset(::TSSSOS::SpecDoubleArchive* y_offset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.y_offset_);
  }
  if (y_offset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(y_offset));
    if (message_arena != submessage_arena) {
      y_offset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, y_offset, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00400000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00400000u;
  }
  _impl_.y_offset_ = y_offset;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.y_offset)
}

// optional bool y_offset_undefined = 174;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_y_offset_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000002u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_y_offset_undefined() const {
  return _internal_has_y_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_y_offset_undefined() {
  _impl_.y_offset_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000002u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_y_offset_undefined() const {
  return _impl_.y_offset_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::y_offset_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.y_offset_undefined)
  return _internal_y_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_y_offset_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000002u;
  _impl_.y_offset_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_y_offset_undefined(bool value) {
  _internal_set_y_offset_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.y_offset_undefined)
}

// optional .TSSSOS.SpecDoubleArchive focus = 175;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_focus() const {
  bool value = (_impl_._has_bits_[2] & 0x00800000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.focus_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_focus() const {
  return _internal_has_focus();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_focus() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.focus_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::focus() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.focus)
  return _internal_focus();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_focus(
    ::TSSSOS::SpecDoubleArchive* focus) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.focus_);
  }
  _impl_.focus_ = focus;
  if (focus) {
    _impl_._has_bits_[2] |= 0x00800000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00800000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.focus)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_focus() {
  _impl_._has_bits_[2] &= ~0x00800000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.focus_;
  _impl_.focus_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_focus() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.focus)
  _impl_._has_bits_[2] &= ~0x00800000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.focus_;
  _impl_.focus_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_focus() {
  _impl_._has_bits_[2] |= 0x00800000u;
  if (_impl_.focus_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.focus_ = p;
  }
  return _impl_.focus_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_focus() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_focus();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.focus)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_focus(::TSSSOS::SpecDoubleArchive* focus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.focus_);
  }
  if (focus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(focus));
    if (message_arena != submessage_arena) {
      focus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, focus, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x00800000u;
  } else {
    _impl_._has_bits_[2] &= ~0x00800000u;
  }
  _impl_.focus_ = focus;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.focus)
}

// optional bool focus_undefined = 176;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_focus_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000004u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_focus_undefined() const {
  return _internal_has_focus_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_focus_undefined() {
  _impl_.focus_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000004u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_focus_undefined() const {
  return _impl_.focus_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::focus_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.focus_undefined)
  return _internal_focus_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_focus_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000004u;
  _impl_.focus_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_focus_undefined(bool value) {
  _internal_set_focus_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.focus_undefined)
}

// optional .TSSSOS.SpecDoubleArchive blur = 177;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_blur() const {
  bool value = (_impl_._has_bits_[2] & 0x01000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.blur_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_blur() const {
  return _internal_has_blur();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_blur() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.blur_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::blur() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blur)
  return _internal_blur();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_blur(
    ::TSSSOS::SpecDoubleArchive* blur) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.blur_);
  }
  _impl_.blur_ = blur;
  if (blur) {
    _impl_._has_bits_[2] |= 0x01000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x01000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blur)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_blur() {
  _impl_._has_bits_[2] &= ~0x01000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.blur_;
  _impl_.blur_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_blur() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blur)
  _impl_._has_bits_[2] &= ~0x01000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.blur_;
  _impl_.blur_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_blur() {
  _impl_._has_bits_[2] |= 0x01000000u;
  if (_impl_.blur_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.blur_ = p;
  }
  return _impl_.blur_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_blur() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_blur();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blur)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_blur(::TSSSOS::SpecDoubleArchive* blur) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.blur_);
  }
  if (blur) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blur));
    if (message_arena != submessage_arena) {
      blur = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blur, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x01000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x01000000u;
  }
  _impl_.blur_ = blur;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blur)
}

// optional bool blur_undefined = 178;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_blur_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000008u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_blur_undefined() const {
  return _internal_has_blur_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_blur_undefined() {
  _impl_.blur_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000008u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_blur_undefined() const {
  return _impl_.blur_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::blur_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blur_undefined)
  return _internal_blur_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_blur_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000008u;
  _impl_.blur_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_blur_undefined(bool value) {
  _internal_set_blur_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.blur_undefined)
}

// optional .TSSSOS.SpecDoubleArchive grain_speed = 179;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_grain_speed() const {
  bool value = (_impl_._has_bits_[2] & 0x02000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.grain_speed_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_grain_speed() const {
  return _internal_has_grain_speed();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_grain_speed() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.grain_speed_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::grain_speed() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_speed)
  return _internal_grain_speed();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_grain_speed(
    ::TSSSOS::SpecDoubleArchive* grain_speed) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.grain_speed_);
  }
  _impl_.grain_speed_ = grain_speed;
  if (grain_speed) {
    _impl_._has_bits_[2] |= 0x02000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x02000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_speed)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_grain_speed() {
  _impl_._has_bits_[2] &= ~0x02000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.grain_speed_;
  _impl_.grain_speed_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_grain_speed() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_speed)
  _impl_._has_bits_[2] &= ~0x02000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.grain_speed_;
  _impl_.grain_speed_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_grain_speed() {
  _impl_._has_bits_[2] |= 0x02000000u;
  if (_impl_.grain_speed_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.grain_speed_ = p;
  }
  return _impl_.grain_speed_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_grain_speed() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_grain_speed();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_speed)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_grain_speed(::TSSSOS::SpecDoubleArchive* grain_speed) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.grain_speed_);
  }
  if (grain_speed) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(grain_speed));
    if (message_arena != submessage_arena) {
      grain_speed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, grain_speed, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x02000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x02000000u;
  }
  _impl_.grain_speed_ = grain_speed;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_speed)
}

// optional bool grain_speed_undefined = 180;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_grain_speed_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000010u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_grain_speed_undefined() const {
  return _internal_has_grain_speed_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_grain_speed_undefined() {
  _impl_.grain_speed_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000010u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_grain_speed_undefined() const {
  return _impl_.grain_speed_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::grain_speed_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_speed_undefined)
  return _internal_grain_speed_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_grain_speed_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000010u;
  _impl_.grain_speed_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_grain_speed_undefined(bool value) {
  _internal_set_grain_speed_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.grain_speed_undefined)
}

// optional .TSSSOS.SpecColorArchive mesh_color = 181;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_mesh_color() const {
  bool value = (_impl_._has_bits_[2] & 0x04000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mesh_color_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_mesh_color() const {
  return _internal_has_mesh_color();
}
inline const ::TSSSOS::SpecColorArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_mesh_color() const {
  const ::TSSSOS::SpecColorArchive* p = _impl_.mesh_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecColorArchive&>(
      ::TSSSOS::_SpecColorArchive_default_instance_);
}
inline const ::TSSSOS::SpecColorArchive& MotionBackgroundStylePropertyChangeSetArchive::mesh_color() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_color)
  return _internal_mesh_color();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_mesh_color(
    ::TSSSOS::SpecColorArchive* mesh_color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mesh_color_);
  }
  _impl_.mesh_color_ = mesh_color;
  if (mesh_color) {
    _impl_._has_bits_[2] |= 0x04000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x04000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_color)
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::release_mesh_color() {
  _impl_._has_bits_[2] &= ~0x04000000u;
  ::TSSSOS::SpecColorArchive* temp = _impl_.mesh_color_;
  _impl_.mesh_color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_mesh_color() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_color)
  _impl_._has_bits_[2] &= ~0x04000000u;
  ::TSSSOS::SpecColorArchive* temp = _impl_.mesh_color_;
  _impl_.mesh_color_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_mesh_color() {
  _impl_._has_bits_[2] |= 0x04000000u;
  if (_impl_.mesh_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecColorArchive>(GetArenaForAllocation());
    _impl_.mesh_color_ = p;
  }
  return _impl_.mesh_color_;
}
inline ::TSSSOS::SpecColorArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_mesh_color() {
  ::TSSSOS::SpecColorArchive* _msg = _internal_mutable_mesh_color();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_color)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_mesh_color(::TSSSOS::SpecColorArchive* mesh_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mesh_color_);
  }
  if (mesh_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mesh_color));
    if (message_arena != submessage_arena) {
      mesh_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mesh_color, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x04000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x04000000u;
  }
  _impl_.mesh_color_ = mesh_color;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_color)
}

// optional bool mesh_color_undefined = 182;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_mesh_color_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000020u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_mesh_color_undefined() const {
  return _internal_has_mesh_color_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_mesh_color_undefined() {
  _impl_.mesh_color_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000020u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_mesh_color_undefined() const {
  return _impl_.mesh_color_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::mesh_color_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_color_undefined)
  return _internal_mesh_color_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_mesh_color_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000020u;
  _impl_.mesh_color_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_mesh_color_undefined(bool value) {
  _internal_set_mesh_color_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_color_undefined)
}

// optional .TSSSOS.SpecDoubleArchive angle = 183;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_angle() const {
  bool value = (_impl_._has_bits_[2] & 0x08000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.angle_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_angle() const {
  return _internal_has_angle();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_angle() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.angle_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::angle() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.angle)
  return _internal_angle();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_angle(
    ::TSSSOS::SpecDoubleArchive* angle) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.angle_);
  }
  _impl_.angle_ = angle;
  if (angle) {
    _impl_._has_bits_[2] |= 0x08000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x08000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.angle)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_angle() {
  _impl_._has_bits_[2] &= ~0x08000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.angle_;
  _impl_.angle_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_angle() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.angle)
  _impl_._has_bits_[2] &= ~0x08000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.angle_;
  _impl_.angle_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_angle() {
  _impl_._has_bits_[2] |= 0x08000000u;
  if (_impl_.angle_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.angle_ = p;
  }
  return _impl_.angle_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_angle() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_angle();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.angle)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_angle(::TSSSOS::SpecDoubleArchive* angle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.angle_);
  }
  if (angle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(angle));
    if (message_arena != submessage_arena) {
      angle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, angle, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x08000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x08000000u;
  }
  _impl_.angle_ = angle;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.angle)
}

// optional bool angle_undefined = 184;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_angle_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000040u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_angle_undefined() const {
  return _internal_has_angle_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_angle_undefined() {
  _impl_.angle_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000040u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_angle_undefined() const {
  return _impl_.angle_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::angle_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.angle_undefined)
  return _internal_angle_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_angle_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000040u;
  _impl_.angle_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_angle_undefined(bool value) {
  _internal_set_angle_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.angle_undefined)
}

// optional .TSSSOS.SpecDoubleArchive mesh_line_width = 185;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_mesh_line_width() const {
  bool value = (_impl_._has_bits_[2] & 0x10000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mesh_line_width_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_mesh_line_width() const {
  return _internal_has_mesh_line_width();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_mesh_line_width() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.mesh_line_width_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::mesh_line_width() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_line_width)
  return _internal_mesh_line_width();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_mesh_line_width(
    ::TSSSOS::SpecDoubleArchive* mesh_line_width) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mesh_line_width_);
  }
  _impl_.mesh_line_width_ = mesh_line_width;
  if (mesh_line_width) {
    _impl_._has_bits_[2] |= 0x10000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x10000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_line_width)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_mesh_line_width() {
  _impl_._has_bits_[2] &= ~0x10000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.mesh_line_width_;
  _impl_.mesh_line_width_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_mesh_line_width() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_line_width)
  _impl_._has_bits_[2] &= ~0x10000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.mesh_line_width_;
  _impl_.mesh_line_width_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_mesh_line_width() {
  _impl_._has_bits_[2] |= 0x10000000u;
  if (_impl_.mesh_line_width_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.mesh_line_width_ = p;
  }
  return _impl_.mesh_line_width_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_mesh_line_width() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_mesh_line_width();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_line_width)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_mesh_line_width(::TSSSOS::SpecDoubleArchive* mesh_line_width) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mesh_line_width_);
  }
  if (mesh_line_width) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mesh_line_width));
    if (message_arena != submessage_arena) {
      mesh_line_width = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mesh_line_width, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x10000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x10000000u;
  }
  _impl_.mesh_line_width_ = mesh_line_width;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_line_width)
}

// optional bool mesh_line_width_undefined = 186;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_mesh_line_width_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000080u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_mesh_line_width_undefined() const {
  return _internal_has_mesh_line_width_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_mesh_line_width_undefined() {
  _impl_.mesh_line_width_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000080u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_mesh_line_width_undefined() const {
  return _impl_.mesh_line_width_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::mesh_line_width_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_line_width_undefined)
  return _internal_mesh_line_width_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_mesh_line_width_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000080u;
  _impl_.mesh_line_width_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_mesh_line_width_undefined(bool value) {
  _internal_set_mesh_line_width_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.mesh_line_width_undefined)
}

// optional .TSSSOS.SpecDoubleArchive delta_time = 187;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_delta_time() const {
  bool value = (_impl_._has_bits_[2] & 0x20000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.delta_time_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_delta_time() const {
  return _internal_has_delta_time();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_delta_time() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.delta_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::delta_time() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.delta_time)
  return _internal_delta_time();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_delta_time(
    ::TSSSOS::SpecDoubleArchive* delta_time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delta_time_);
  }
  _impl_.delta_time_ = delta_time;
  if (delta_time) {
    _impl_._has_bits_[2] |= 0x20000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x20000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.delta_time)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_delta_time() {
  _impl_._has_bits_[2] &= ~0x20000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.delta_time_;
  _impl_.delta_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_delta_time() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.delta_time)
  _impl_._has_bits_[2] &= ~0x20000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.delta_time_;
  _impl_.delta_time_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_delta_time() {
  _impl_._has_bits_[2] |= 0x20000000u;
  if (_impl_.delta_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.delta_time_ = p;
  }
  return _impl_.delta_time_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_delta_time() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_delta_time();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.delta_time)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_delta_time(::TSSSOS::SpecDoubleArchive* delta_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delta_time_);
  }
  if (delta_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(delta_time));
    if (message_arena != submessage_arena) {
      delta_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delta_time, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x20000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x20000000u;
  }
  _impl_.delta_time_ = delta_time;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.delta_time)
}

// optional bool delta_time_undefined = 188;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_delta_time_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000100u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_delta_time_undefined() const {
  return _internal_has_delta_time_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_delta_time_undefined() {
  _impl_.delta_time_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000100u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_delta_time_undefined() const {
  return _impl_.delta_time_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::delta_time_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.delta_time_undefined)
  return _internal_delta_time_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_delta_time_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000100u;
  _impl_.delta_time_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_delta_time_undefined(bool value) {
  _internal_set_delta_time_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.delta_time_undefined)
}

// optional .TSSSOS.SpecDoubleArchive threshold = 189;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_threshold() const {
  bool value = (_impl_._has_bits_[2] & 0x40000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.threshold_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_threshold() const {
  return _internal_has_threshold();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_threshold() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.threshold_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::threshold() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.threshold)
  return _internal_threshold();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_threshold(
    ::TSSSOS::SpecDoubleArchive* threshold) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.threshold_);
  }
  _impl_.threshold_ = threshold;
  if (threshold) {
    _impl_._has_bits_[2] |= 0x40000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x40000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.threshold)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_threshold() {
  _impl_._has_bits_[2] &= ~0x40000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.threshold_;
  _impl_.threshold_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_threshold() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.threshold)
  _impl_._has_bits_[2] &= ~0x40000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.threshold_;
  _impl_.threshold_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_threshold() {
  _impl_._has_bits_[2] |= 0x40000000u;
  if (_impl_.threshold_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.threshold_ = p;
  }
  return _impl_.threshold_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_threshold() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_threshold();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.threshold)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_threshold(::TSSSOS::SpecDoubleArchive* threshold) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.threshold_);
  }
  if (threshold) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(threshold));
    if (message_arena != submessage_arena) {
      threshold = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, threshold, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x40000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x40000000u;
  }
  _impl_.threshold_ = threshold;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.threshold)
}

// optional bool threshold_undefined = 190;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_threshold_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000200u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_threshold_undefined() const {
  return _internal_has_threshold_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_threshold_undefined() {
  _impl_.threshold_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000200u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_threshold_undefined() const {
  return _impl_.threshold_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::threshold_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.threshold_undefined)
  return _internal_threshold_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_threshold_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000200u;
  _impl_.threshold_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_threshold_undefined(bool value) {
  _internal_set_threshold_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.threshold_undefined)
}

// optional .TSSSOS.SpecDoubleArchive time_start = 191;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_time_start() const {
  bool value = (_impl_._has_bits_[2] & 0x80000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_start_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_time_start() const {
  return _internal_has_time_start();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_time_start() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.time_start_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::time_start() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time_start)
  return _internal_time_start();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_time_start(
    ::TSSSOS::SpecDoubleArchive* time_start) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.time_start_);
  }
  _impl_.time_start_ = time_start;
  if (time_start) {
    _impl_._has_bits_[2] |= 0x80000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x80000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time_start)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_time_start() {
  _impl_._has_bits_[2] &= ~0x80000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.time_start_;
  _impl_.time_start_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_time_start() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time_start)
  _impl_._has_bits_[2] &= ~0x80000000u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.time_start_;
  _impl_.time_start_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_time_start() {
  _impl_._has_bits_[2] |= 0x80000000u;
  if (_impl_.time_start_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.time_start_ = p;
  }
  return _impl_.time_start_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_time_start() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_time_start();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time_start)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_time_start(::TSSSOS::SpecDoubleArchive* time_start) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.time_start_);
  }
  if (time_start) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_start));
    if (message_arena != submessage_arena) {
      time_start = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time_start, submessage_arena);
    }
    _impl_._has_bits_[2] |= 0x80000000u;
  } else {
    _impl_._has_bits_[2] &= ~0x80000000u;
  }
  _impl_.time_start_ = time_start;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time_start)
}

// optional bool time_start_undefined = 192;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_time_start_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000400u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_time_start_undefined() const {
  return _internal_has_time_start_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_time_start_undefined() {
  _impl_.time_start_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000400u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_time_start_undefined() const {
  return _impl_.time_start_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::time_start_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time_start_undefined)
  return _internal_time_start_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_time_start_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000400u;
  _impl_.time_start_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_time_start_undefined(bool value) {
  _internal_set_time_start_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.time_start_undefined)
}

// optional .TSSSOS.SpecIntegerArchive instance_count = 193;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_instance_count() const {
  bool value = (_impl_._has_bits_[3] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.instance_count_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_instance_count() const {
  return _internal_has_instance_count();
}
inline const ::TSSSOS::SpecIntegerArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_instance_count() const {
  const ::TSSSOS::SpecIntegerArchive* p = _impl_.instance_count_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecIntegerArchive&>(
      ::TSSSOS::_SpecIntegerArchive_default_instance_);
}
inline const ::TSSSOS::SpecIntegerArchive& MotionBackgroundStylePropertyChangeSetArchive::instance_count() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.instance_count)
  return _internal_instance_count();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_instance_count(
    ::TSSSOS::SpecIntegerArchive* instance_count) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.instance_count_);
  }
  _impl_.instance_count_ = instance_count;
  if (instance_count) {
    _impl_._has_bits_[3] |= 0x00000001u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.instance_count)
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::release_instance_count() {
  _impl_._has_bits_[3] &= ~0x00000001u;
  ::TSSSOS::SpecIntegerArchive* temp = _impl_.instance_count_;
  _impl_.instance_count_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_instance_count() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.instance_count)
  _impl_._has_bits_[3] &= ~0x00000001u;
  ::TSSSOS::SpecIntegerArchive* temp = _impl_.instance_count_;
  _impl_.instance_count_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_instance_count() {
  _impl_._has_bits_[3] |= 0x00000001u;
  if (_impl_.instance_count_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecIntegerArchive>(GetArenaForAllocation());
    _impl_.instance_count_ = p;
  }
  return _impl_.instance_count_;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_instance_count() {
  ::TSSSOS::SpecIntegerArchive* _msg = _internal_mutable_instance_count();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.instance_count)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_instance_count(::TSSSOS::SpecIntegerArchive* instance_count) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.instance_count_);
  }
  if (instance_count) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(instance_count));
    if (message_arena != submessage_arena) {
      instance_count = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, instance_count, submessage_arena);
    }
    _impl_._has_bits_[3] |= 0x00000001u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000001u;
  }
  _impl_.instance_count_ = instance_count;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.instance_count)
}

// optional bool instance_count_undefined = 194;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_instance_count_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00000800u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_instance_count_undefined() const {
  return _internal_has_instance_count_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_instance_count_undefined() {
  _impl_.instance_count_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00000800u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_instance_count_undefined() const {
  return _impl_.instance_count_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::instance_count_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.instance_count_undefined)
  return _internal_instance_count_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_instance_count_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00000800u;
  _impl_.instance_count_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_instance_count_undefined(bool value) {
  _internal_set_instance_count_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.instance_count_undefined)
}

// optional .TSSSOS.SpecDoubleArchive extrusion = 195;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_extrusion() const {
  bool value = (_impl_._has_bits_[3] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extrusion_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_extrusion() const {
  return _internal_has_extrusion();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_extrusion() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.extrusion_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::extrusion() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.extrusion)
  return _internal_extrusion();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_extrusion(
    ::TSSSOS::SpecDoubleArchive* extrusion) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.extrusion_);
  }
  _impl_.extrusion_ = extrusion;
  if (extrusion) {
    _impl_._has_bits_[3] |= 0x00000002u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.extrusion)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_extrusion() {
  _impl_._has_bits_[3] &= ~0x00000002u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.extrusion_;
  _impl_.extrusion_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_extrusion() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.extrusion)
  _impl_._has_bits_[3] &= ~0x00000002u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.extrusion_;
  _impl_.extrusion_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_extrusion() {
  _impl_._has_bits_[3] |= 0x00000002u;
  if (_impl_.extrusion_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.extrusion_ = p;
  }
  return _impl_.extrusion_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_extrusion() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_extrusion();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.extrusion)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_extrusion(::TSSSOS::SpecDoubleArchive* extrusion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.extrusion_);
  }
  if (extrusion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(extrusion));
    if (message_arena != submessage_arena) {
      extrusion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, extrusion, submessage_arena);
    }
    _impl_._has_bits_[3] |= 0x00000002u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000002u;
  }
  _impl_.extrusion_ = extrusion;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.extrusion)
}

// optional bool extrusion_undefined = 196;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_extrusion_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00001000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_extrusion_undefined() const {
  return _internal_has_extrusion_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_extrusion_undefined() {
  _impl_.extrusion_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00001000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_extrusion_undefined() const {
  return _impl_.extrusion_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::extrusion_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.extrusion_undefined)
  return _internal_extrusion_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_extrusion_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00001000u;
  _impl_.extrusion_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_extrusion_undefined(bool value) {
  _internal_set_extrusion_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.extrusion_undefined)
}

// optional .TSSSOS.SpecDoubleArchive noise_offset = 197;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_offset() const {
  bool value = (_impl_._has_bits_[3] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_offset_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_offset() const {
  return _internal_has_noise_offset();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_offset() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.noise_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_offset() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_offset)
  return _internal_noise_offset();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_offset(
    ::TSSSOS::SpecDoubleArchive* noise_offset) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_offset_);
  }
  _impl_.noise_offset_ = noise_offset;
  if (noise_offset) {
    _impl_._has_bits_[3] |= 0x00000004u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_offset)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_offset() {
  _impl_._has_bits_[3] &= ~0x00000004u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_offset_;
  _impl_.noise_offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_offset() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_offset)
  _impl_._has_bits_[3] &= ~0x00000004u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.noise_offset_;
  _impl_.noise_offset_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_offset() {
  _impl_._has_bits_[3] |= 0x00000004u;
  if (_impl_.noise_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.noise_offset_ = p;
  }
  return _impl_.noise_offset_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_offset() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_noise_offset();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_offset)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_offset(::TSSSOS::SpecDoubleArchive* noise_offset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_offset_);
  }
  if (noise_offset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_offset));
    if (message_arena != submessage_arena) {
      noise_offset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_offset, submessage_arena);
    }
    _impl_._has_bits_[3] |= 0x00000004u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000004u;
  }
  _impl_.noise_offset_ = noise_offset;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_offset)
}

// optional bool noise_offset_undefined = 198;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_offset_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00002000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_offset_undefined() const {
  return _internal_has_noise_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_offset_undefined() {
  _impl_.noise_offset_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00002000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_offset_undefined() const {
  return _impl_.noise_offset_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_offset_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_offset_undefined)
  return _internal_noise_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_offset_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00002000u;
  _impl_.noise_offset_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_offset_undefined(bool value) {
  _internal_set_noise_offset_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_offset_undefined)
}

// optional .TSSSOS.SpecDoubleArchive color_hue_offset = 199;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_hue_offset() const {
  bool value = (_impl_._has_bits_[3] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.color_hue_offset_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_hue_offset() const {
  return _internal_has_color_hue_offset();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_color_hue_offset() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.color_hue_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::color_hue_offset() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue_offset)
  return _internal_color_hue_offset();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_color_hue_offset(
    ::TSSSOS::SpecDoubleArchive* color_hue_offset) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_hue_offset_);
  }
  _impl_.color_hue_offset_ = color_hue_offset;
  if (color_hue_offset) {
    _impl_._has_bits_[3] |= 0x00000008u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue_offset)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_color_hue_offset() {
  _impl_._has_bits_[3] &= ~0x00000008u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_hue_offset_;
  _impl_.color_hue_offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_color_hue_offset() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue_offset)
  _impl_._has_bits_[3] &= ~0x00000008u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.color_hue_offset_;
  _impl_.color_hue_offset_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_color_hue_offset() {
  _impl_._has_bits_[3] |= 0x00000008u;
  if (_impl_.color_hue_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.color_hue_offset_ = p;
  }
  return _impl_.color_hue_offset_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_color_hue_offset() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_color_hue_offset();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue_offset)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_color_hue_offset(::TSSSOS::SpecDoubleArchive* color_hue_offset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.color_hue_offset_);
  }
  if (color_hue_offset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(color_hue_offset));
    if (message_arena != submessage_arena) {
      color_hue_offset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_hue_offset, submessage_arena);
    }
    _impl_._has_bits_[3] |= 0x00000008u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000008u;
  }
  _impl_.color_hue_offset_ = color_hue_offset;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue_offset)
}

// optional bool color_hue_offset_undefined = 200;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_color_hue_offset_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00004000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_color_hue_offset_undefined() const {
  return _internal_has_color_hue_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_color_hue_offset_undefined() {
  _impl_.color_hue_offset_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00004000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_color_hue_offset_undefined() const {
  return _impl_.color_hue_offset_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::color_hue_offset_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue_offset_undefined)
  return _internal_color_hue_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_color_hue_offset_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00004000u;
  _impl_.color_hue_offset_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_color_hue_offset_undefined(bool value) {
  _internal_set_color_hue_offset_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.color_hue_offset_undefined)
}

// optional .TSSSOS.SpecDoubleArchive shadow_hue = 201;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_hue() const {
  bool value = (_impl_._has_bits_[3] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_hue_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_hue() const {
  return _internal_has_shadow_hue();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_hue() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.shadow_hue_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::shadow_hue() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue)
  return _internal_shadow_hue();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow_hue(
    ::TSSSOS::SpecDoubleArchive* shadow_hue) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_hue_);
  }
  _impl_.shadow_hue_ = shadow_hue;
  if (shadow_hue) {
    _impl_._has_bits_[3] |= 0x00000010u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_shadow_hue() {
  _impl_._has_bits_[3] &= ~0x00000010u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_hue_;
  _impl_.shadow_hue_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_shadow_hue() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue)
  _impl_._has_bits_[3] &= ~0x00000010u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_hue_;
  _impl_.shadow_hue_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_shadow_hue() {
  _impl_._has_bits_[3] |= 0x00000010u;
  if (_impl_.shadow_hue_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.shadow_hue_ = p;
  }
  return _impl_.shadow_hue_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_shadow_hue() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_shadow_hue();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_shadow_hue(::TSSSOS::SpecDoubleArchive* shadow_hue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_hue_);
  }
  if (shadow_hue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow_hue));
    if (message_arena != submessage_arena) {
      shadow_hue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow_hue, submessage_arena);
    }
    _impl_._has_bits_[3] |= 0x00000010u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000010u;
  }
  _impl_.shadow_hue_ = shadow_hue;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue)
}

// optional bool shadow_hue_undefined = 202;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_hue_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00008000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_hue_undefined() const {
  return _internal_has_shadow_hue_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_shadow_hue_undefined() {
  _impl_.shadow_hue_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00008000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_hue_undefined() const {
  return _impl_.shadow_hue_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::shadow_hue_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue_undefined)
  return _internal_shadow_hue_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_shadow_hue_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00008000u;
  _impl_.shadow_hue_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_shadow_hue_undefined(bool value) {
  _internal_set_shadow_hue_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue_undefined)
}

// optional .TSSSOS.SpecDoubleArchive shadow_hue_offset = 203;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_hue_offset() const {
  bool value = (_impl_._has_bits_[3] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_hue_offset_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_hue_offset() const {
  return _internal_has_shadow_hue_offset();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_hue_offset() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.shadow_hue_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::shadow_hue_offset() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue_offset)
  return _internal_shadow_hue_offset();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow_hue_offset(
    ::TSSSOS::SpecDoubleArchive* shadow_hue_offset) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_hue_offset_);
  }
  _impl_.shadow_hue_offset_ = shadow_hue_offset;
  if (shadow_hue_offset) {
    _impl_._has_bits_[3] |= 0x00000020u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue_offset)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_shadow_hue_offset() {
  _impl_._has_bits_[3] &= ~0x00000020u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_hue_offset_;
  _impl_.shadow_hue_offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_shadow_hue_offset() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue_offset)
  _impl_._has_bits_[3] &= ~0x00000020u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_hue_offset_;
  _impl_.shadow_hue_offset_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_shadow_hue_offset() {
  _impl_._has_bits_[3] |= 0x00000020u;
  if (_impl_.shadow_hue_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.shadow_hue_offset_ = p;
  }
  return _impl_.shadow_hue_offset_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_shadow_hue_offset() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_shadow_hue_offset();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue_offset)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_shadow_hue_offset(::TSSSOS::SpecDoubleArchive* shadow_hue_offset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_hue_offset_);
  }
  if (shadow_hue_offset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow_hue_offset));
    if (message_arena != submessage_arena) {
      shadow_hue_offset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow_hue_offset, submessage_arena);
    }
    _impl_._has_bits_[3] |= 0x00000020u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000020u;
  }
  _impl_.shadow_hue_offset_ = shadow_hue_offset;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue_offset)
}

// optional bool shadow_hue_offset_undefined = 204;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_hue_offset_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00010000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_hue_offset_undefined() const {
  return _internal_has_shadow_hue_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_shadow_hue_offset_undefined() {
  _impl_.shadow_hue_offset_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00010000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_hue_offset_undefined() const {
  return _impl_.shadow_hue_offset_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::shadow_hue_offset_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue_offset_undefined)
  return _internal_shadow_hue_offset_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_shadow_hue_offset_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00010000u;
  _impl_.shadow_hue_offset_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_shadow_hue_offset_undefined(bool value) {
  _internal_set_shadow_hue_offset_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_hue_offset_undefined)
}

// optional .TSSSOS.SpecDoubleArchive shadow_saturation = 205;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_saturation() const {
  bool value = (_impl_._has_bits_[3] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_saturation_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_saturation() const {
  return _internal_has_shadow_saturation();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_saturation() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.shadow_saturation_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::shadow_saturation() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_saturation)
  return _internal_shadow_saturation();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow_saturation(
    ::TSSSOS::SpecDoubleArchive* shadow_saturation) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_saturation_);
  }
  _impl_.shadow_saturation_ = shadow_saturation;
  if (shadow_saturation) {
    _impl_._has_bits_[3] |= 0x00000040u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_saturation)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_shadow_saturation() {
  _impl_._has_bits_[3] &= ~0x00000040u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_saturation_;
  _impl_.shadow_saturation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_shadow_saturation() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_saturation)
  _impl_._has_bits_[3] &= ~0x00000040u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_saturation_;
  _impl_.shadow_saturation_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_shadow_saturation() {
  _impl_._has_bits_[3] |= 0x00000040u;
  if (_impl_.shadow_saturation_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.shadow_saturation_ = p;
  }
  return _impl_.shadow_saturation_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_shadow_saturation() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_shadow_saturation();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_saturation)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_shadow_saturation(::TSSSOS::SpecDoubleArchive* shadow_saturation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_saturation_);
  }
  if (shadow_saturation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow_saturation));
    if (message_arena != submessage_arena) {
      shadow_saturation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow_saturation, submessage_arena);
    }
    _impl_._has_bits_[3] |= 0x00000040u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000040u;
  }
  _impl_.shadow_saturation_ = shadow_saturation;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_saturation)
}

// optional bool shadow_saturation_undefined = 206;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_saturation_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00020000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_saturation_undefined() const {
  return _internal_has_shadow_saturation_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_shadow_saturation_undefined() {
  _impl_.shadow_saturation_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00020000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_saturation_undefined() const {
  return _impl_.shadow_saturation_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::shadow_saturation_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_saturation_undefined)
  return _internal_shadow_saturation_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_shadow_saturation_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00020000u;
  _impl_.shadow_saturation_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_shadow_saturation_undefined(bool value) {
  _internal_set_shadow_saturation_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_saturation_undefined)
}

// optional .TSSSOS.SpecDoubleArchive shadow_brightness = 207;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_brightness() const {
  bool value = (_impl_._has_bits_[3] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_brightness_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_brightness() const {
  return _internal_has_shadow_brightness();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_brightness() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.shadow_brightness_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::shadow_brightness() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_brightness)
  return _internal_shadow_brightness();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow_brightness(
    ::TSSSOS::SpecDoubleArchive* shadow_brightness) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_brightness_);
  }
  _impl_.shadow_brightness_ = shadow_brightness;
  if (shadow_brightness) {
    _impl_._has_bits_[3] |= 0x00000080u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_brightness)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_shadow_brightness() {
  _impl_._has_bits_[3] &= ~0x00000080u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_brightness_;
  _impl_.shadow_brightness_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_shadow_brightness() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_brightness)
  _impl_._has_bits_[3] &= ~0x00000080u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_brightness_;
  _impl_.shadow_brightness_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_shadow_brightness() {
  _impl_._has_bits_[3] |= 0x00000080u;
  if (_impl_.shadow_brightness_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.shadow_brightness_ = p;
  }
  return _impl_.shadow_brightness_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_shadow_brightness() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_shadow_brightness();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_brightness)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_shadow_brightness(::TSSSOS::SpecDoubleArchive* shadow_brightness) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_brightness_);
  }
  if (shadow_brightness) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow_brightness));
    if (message_arena != submessage_arena) {
      shadow_brightness = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow_brightness, submessage_arena);
    }
    _impl_._has_bits_[3] |= 0x00000080u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000080u;
  }
  _impl_.shadow_brightness_ = shadow_brightness;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_brightness)
}

// optional bool shadow_brightness_undefined = 208;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_brightness_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00040000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_brightness_undefined() const {
  return _internal_has_shadow_brightness_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_shadow_brightness_undefined() {
  _impl_.shadow_brightness_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00040000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_brightness_undefined() const {
  return _impl_.shadow_brightness_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::shadow_brightness_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_brightness_undefined)
  return _internal_shadow_brightness_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_shadow_brightness_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00040000u;
  _impl_.shadow_brightness_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_shadow_brightness_undefined(bool value) {
  _internal_set_shadow_brightness_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_brightness_undefined)
}

// optional .TSSSOS.SpecDoubleArchive shadow_intensity = 209;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_intensity() const {
  bool value = (_impl_._has_bits_[3] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_intensity_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_intensity() const {
  return _internal_has_shadow_intensity();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_intensity() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.shadow_intensity_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::shadow_intensity() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_intensity)
  return _internal_shadow_intensity();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow_intensity(
    ::TSSSOS::SpecDoubleArchive* shadow_intensity) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_intensity_);
  }
  _impl_.shadow_intensity_ = shadow_intensity;
  if (shadow_intensity) {
    _impl_._has_bits_[3] |= 0x00000100u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_intensity)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_shadow_intensity() {
  _impl_._has_bits_[3] &= ~0x00000100u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_intensity_;
  _impl_.shadow_intensity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_shadow_intensity() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_intensity)
  _impl_._has_bits_[3] &= ~0x00000100u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_intensity_;
  _impl_.shadow_intensity_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_shadow_intensity() {
  _impl_._has_bits_[3] |= 0x00000100u;
  if (_impl_.shadow_intensity_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.shadow_intensity_ = p;
  }
  return _impl_.shadow_intensity_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_shadow_intensity() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_shadow_intensity();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_intensity)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_shadow_intensity(::TSSSOS::SpecDoubleArchive* shadow_intensity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_intensity_);
  }
  if (shadow_intensity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow_intensity));
    if (message_arena != submessage_arena) {
      shadow_intensity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow_intensity, submessage_arena);
    }
    _impl_._has_bits_[3] |= 0x00000100u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000100u;
  }
  _impl_.shadow_intensity_ = shadow_intensity;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_intensity)
}

// optional bool shadow_intensity_undefined = 210;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_intensity_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00080000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_intensity_undefined() const {
  return _internal_has_shadow_intensity_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_shadow_intensity_undefined() {
  _impl_.shadow_intensity_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00080000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_intensity_undefined() const {
  return _impl_.shadow_intensity_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::shadow_intensity_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_intensity_undefined)
  return _internal_shadow_intensity_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_shadow_intensity_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00080000u;
  _impl_.shadow_intensity_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_shadow_intensity_undefined(bool value) {
  _internal_set_shadow_intensity_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_intensity_undefined)
}

// optional .TSSSOS.SpecDoubleArchive shadow_power = 211;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_power() const {
  bool value = (_impl_._has_bits_[3] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_power_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_power() const {
  return _internal_has_shadow_power();
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_power() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.shadow_power_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MotionBackgroundStylePropertyChangeSetArchive::shadow_power() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_power)
  return _internal_shadow_power();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow_power(
    ::TSSSOS::SpecDoubleArchive* shadow_power) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_power_);
  }
  _impl_.shadow_power_ = shadow_power;
  if (shadow_power) {
    _impl_._has_bits_[3] |= 0x00000200u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_power)
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::release_shadow_power() {
  _impl_._has_bits_[3] &= ~0x00000200u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_power_;
  _impl_.shadow_power_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_shadow_power() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_power)
  _impl_._has_bits_[3] &= ~0x00000200u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.shadow_power_;
  _impl_.shadow_power_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_shadow_power() {
  _impl_._has_bits_[3] |= 0x00000200u;
  if (_impl_.shadow_power_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.shadow_power_ = p;
  }
  return _impl_.shadow_power_;
}
inline ::TSSSOS::SpecDoubleArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_shadow_power() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_shadow_power();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_power)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_shadow_power(::TSSSOS::SpecDoubleArchive* shadow_power) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_power_);
  }
  if (shadow_power) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow_power));
    if (message_arena != submessage_arena) {
      shadow_power = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow_power, submessage_arena);
    }
    _impl_._has_bits_[3] |= 0x00000200u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000200u;
  }
  _impl_.shadow_power_ = shadow_power;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_power)
}

// optional bool shadow_power_undefined = 212;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_shadow_power_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00100000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_shadow_power_undefined() const {
  return _internal_has_shadow_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_shadow_power_undefined() {
  _impl_.shadow_power_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00100000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_shadow_power_undefined() const {
  return _impl_.shadow_power_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::shadow_power_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_power_undefined)
  return _internal_shadow_power_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_shadow_power_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00100000u;
  _impl_.shadow_power_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_shadow_power_undefined(bool value) {
  _internal_set_shadow_power_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.shadow_power_undefined)
}

// optional .TSSSOS.SpecIntegerArchive noise_octaves_iterations = 213;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_octaves_iterations() const {
  bool value = (_impl_._has_bits_[3] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.noise_octaves_iterations_ != nullptr);
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_octaves_iterations() const {
  return _internal_has_noise_octaves_iterations();
}
inline const ::TSSSOS::SpecIntegerArchive& MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_octaves_iterations() const {
  const ::TSSSOS::SpecIntegerArchive* p = _impl_.noise_octaves_iterations_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecIntegerArchive&>(
      ::TSSSOS::_SpecIntegerArchive_default_instance_);
}
inline const ::TSSSOS::SpecIntegerArchive& MotionBackgroundStylePropertyChangeSetArchive::noise_octaves_iterations() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves_iterations)
  return _internal_noise_octaves_iterations();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_set_allocated_noise_octaves_iterations(
    ::TSSSOS::SpecIntegerArchive* noise_octaves_iterations) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_octaves_iterations_);
  }
  _impl_.noise_octaves_iterations_ = noise_octaves_iterations;
  if (noise_octaves_iterations) {
    _impl_._has_bits_[3] |= 0x00000400u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves_iterations)
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::release_noise_octaves_iterations() {
  _impl_._has_bits_[3] &= ~0x00000400u;
  ::TSSSOS::SpecIntegerArchive* temp = _impl_.noise_octaves_iterations_;
  _impl_.noise_octaves_iterations_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::unsafe_arena_release_noise_octaves_iterations() {
  // @@protoc_insertion_point(field_release:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves_iterations)
  _impl_._has_bits_[3] &= ~0x00000400u;
  ::TSSSOS::SpecIntegerArchive* temp = _impl_.noise_octaves_iterations_;
  _impl_.noise_octaves_iterations_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::_internal_mutable_noise_octaves_iterations() {
  _impl_._has_bits_[3] |= 0x00000400u;
  if (_impl_.noise_octaves_iterations_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecIntegerArchive>(GetArenaForAllocation());
    _impl_.noise_octaves_iterations_ = p;
  }
  return _impl_.noise_octaves_iterations_;
}
inline ::TSSSOS::SpecIntegerArchive* MotionBackgroundStylePropertyChangeSetArchive::mutable_noise_octaves_iterations() {
  ::TSSSOS::SpecIntegerArchive* _msg = _internal_mutable_noise_octaves_iterations();
  // @@protoc_insertion_point(field_mutable:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves_iterations)
  return _msg;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_allocated_noise_octaves_iterations(::TSSSOS::SpecIntegerArchive* noise_octaves_iterations) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.noise_octaves_iterations_);
  }
  if (noise_octaves_iterations) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(noise_octaves_iterations));
    if (message_arena != submessage_arena) {
      noise_octaves_iterations = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, noise_octaves_iterations, submessage_arena);
    }
    _impl_._has_bits_[3] |= 0x00000400u;
  } else {
    _impl_._has_bits_[3] &= ~0x00000400u;
  }
  _impl_.noise_octaves_iterations_ = noise_octaves_iterations;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves_iterations)
}

// optional bool noise_octaves_iterations_undefined = 214;
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_has_noise_octaves_iterations_undefined() const {
  bool value = (_impl_._has_bits_[6] & 0x00200000u) != 0;
  return value;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::has_noise_octaves_iterations_undefined() const {
  return _internal_has_noise_octaves_iterations_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::clear_noise_octaves_iterations_undefined() {
  _impl_.noise_octaves_iterations_undefined_ = false;
  _impl_._has_bits_[6] &= ~0x00200000u;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::_internal_noise_octaves_iterations_undefined() const {
  return _impl_.noise_octaves_iterations_undefined_;
}
inline bool MotionBackgroundStylePropertyChangeSetArchive::noise_octaves_iterations_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves_iterations_undefined)
  return _internal_noise_octaves_iterations_undefined();
}
inline void MotionBackgroundStylePropertyChangeSetArchive::_internal_set_noise_octaves_iterations_undefined(bool value) {
  _impl_._has_bits_[6] |= 0x00200000u;
  _impl_.noise_octaves_iterations_undefined_ = value;
}
inline void MotionBackgroundStylePropertyChangeSetArchive::set_noise_octaves_iterations_undefined(bool value) {
  _internal_set_noise_octaves_iterations_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.MotionBackgroundStylePropertyChangeSetArchive.noise_octaves_iterations_undefined)
}

// -------------------------------------------------------------------

// SlideStylePropertyChangeSetArchive

// optional .TSDSOS.SpecFillArchive fill = 1;
inline bool SlideStylePropertyChangeSetArchive::_internal_has_fill() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fill_ != nullptr);
  return value;
}
inline bool SlideStylePropertyChangeSetArchive::has_fill() const {
  return _internal_has_fill();
}
inline const ::TSDSOS::SpecFillArchive& SlideStylePropertyChangeSetArchive::_internal_fill() const {
  const ::TSDSOS::SpecFillArchive* p = _impl_.fill_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecFillArchive&>(
      ::TSDSOS::_SpecFillArchive_default_instance_);
}
inline const ::TSDSOS::SpecFillArchive& SlideStylePropertyChangeSetArchive::fill() const {
  // @@protoc_insertion_point(field_get:KNSOS.SlideStylePropertyChangeSetArchive.fill)
  return _internal_fill();
}
inline void SlideStylePropertyChangeSetArchive::unsafe_arena_set_allocated_fill(
    ::TSDSOS::SpecFillArchive* fill) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.fill_);
  }
  _impl_.fill_ = fill;
  if (fill) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.SlideStylePropertyChangeSetArchive.fill)
}
inline ::TSDSOS::SpecFillArchive* SlideStylePropertyChangeSetArchive::release_fill() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecFillArchive* temp = _impl_.fill_;
  _impl_.fill_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecFillArchive* SlideStylePropertyChangeSetArchive::unsafe_arena_release_fill() {
  // @@protoc_insertion_point(field_release:KNSOS.SlideStylePropertyChangeSetArchive.fill)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecFillArchive* temp = _impl_.fill_;
  _impl_.fill_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecFillArchive* SlideStylePropertyChangeSetArchive::_internal_mutable_fill() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.fill_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecFillArchive>(GetArenaForAllocation());
    _impl_.fill_ = p;
  }
  return _impl_.fill_;
}
inline ::TSDSOS::SpecFillArchive* SlideStylePropertyChangeSetArchive::mutable_fill() {
  ::TSDSOS::SpecFillArchive* _msg = _internal_mutable_fill();
  // @@protoc_insertion_point(field_mutable:KNSOS.SlideStylePropertyChangeSetArchive.fill)
  return _msg;
}
inline void SlideStylePropertyChangeSetArchive::set_allocated_fill(::TSDSOS::SpecFillArchive* fill) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.fill_);
  }
  if (fill) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fill));
    if (message_arena != submessage_arena) {
      fill = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fill, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.fill_ = fill;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.SlideStylePropertyChangeSetArchive.fill)
}

// optional bool fill_undefined = 2;
inline bool SlideStylePropertyChangeSetArchive::_internal_has_fill_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SlideStylePropertyChangeSetArchive::has_fill_undefined() const {
  return _internal_has_fill_undefined();
}
inline void SlideStylePropertyChangeSetArchive::clear_fill_undefined() {
  _impl_.fill_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool SlideStylePropertyChangeSetArchive::_internal_fill_undefined() const {
  return _impl_.fill_undefined_;
}
inline bool SlideStylePropertyChangeSetArchive::fill_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.SlideStylePropertyChangeSetArchive.fill_undefined)
  return _internal_fill_undefined();
}
inline void SlideStylePropertyChangeSetArchive::_internal_set_fill_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.fill_undefined_ = value;
}
inline void SlideStylePropertyChangeSetArchive::set_fill_undefined(bool value) {
  _internal_set_fill_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.SlideStylePropertyChangeSetArchive.fill_undefined)
}

// optional .KNSOS.SpecTransitionAttributesArchive slide_transition = 3;
inline bool SlideStylePropertyChangeSetArchive::_internal_has_slide_transition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.slide_transition_ != nullptr);
  return value;
}
inline bool SlideStylePropertyChangeSetArchive::has_slide_transition() const {
  return _internal_has_slide_transition();
}
inline void SlideStylePropertyChangeSetArchive::clear_slide_transition() {
  if (_impl_.slide_transition_ != nullptr) _impl_.slide_transition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::KNSOS::SpecTransitionAttributesArchive& SlideStylePropertyChangeSetArchive::_internal_slide_transition() const {
  const ::KNSOS::SpecTransitionAttributesArchive* p = _impl_.slide_transition_;
  return p != nullptr ? *p : reinterpret_cast<const ::KNSOS::SpecTransitionAttributesArchive&>(
      ::KNSOS::_SpecTransitionAttributesArchive_default_instance_);
}
inline const ::KNSOS::SpecTransitionAttributesArchive& SlideStylePropertyChangeSetArchive::slide_transition() const {
  // @@protoc_insertion_point(field_get:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition)
  return _internal_slide_transition();
}
inline void SlideStylePropertyChangeSetArchive::unsafe_arena_set_allocated_slide_transition(
    ::KNSOS::SpecTransitionAttributesArchive* slide_transition) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.slide_transition_);
  }
  _impl_.slide_transition_ = slide_transition;
  if (slide_transition) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition)
}
inline ::KNSOS::SpecTransitionAttributesArchive* SlideStylePropertyChangeSetArchive::release_slide_transition() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::KNSOS::SpecTransitionAttributesArchive* temp = _impl_.slide_transition_;
  _impl_.slide_transition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::KNSOS::SpecTransitionAttributesArchive* SlideStylePropertyChangeSetArchive::unsafe_arena_release_slide_transition() {
  // @@protoc_insertion_point(field_release:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::KNSOS::SpecTransitionAttributesArchive* temp = _impl_.slide_transition_;
  _impl_.slide_transition_ = nullptr;
  return temp;
}
inline ::KNSOS::SpecTransitionAttributesArchive* SlideStylePropertyChangeSetArchive::_internal_mutable_slide_transition() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.slide_transition_ == nullptr) {
    auto* p = CreateMaybeMessage<::KNSOS::SpecTransitionAttributesArchive>(GetArenaForAllocation());
    _impl_.slide_transition_ = p;
  }
  return _impl_.slide_transition_;
}
inline ::KNSOS::SpecTransitionAttributesArchive* SlideStylePropertyChangeSetArchive::mutable_slide_transition() {
  ::KNSOS::SpecTransitionAttributesArchive* _msg = _internal_mutable_slide_transition();
  // @@protoc_insertion_point(field_mutable:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition)
  return _msg;
}
inline void SlideStylePropertyChangeSetArchive::set_allocated_slide_transition(::KNSOS::SpecTransitionAttributesArchive* slide_transition) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.slide_transition_;
  }
  if (slide_transition) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(slide_transition);
    if (message_arena != submessage_arena) {
      slide_transition = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, slide_transition, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.slide_transition_ = slide_transition;
  // @@protoc_insertion_point(field_set_allocated:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition)
}

// optional bool slide_transition_undefined = 4;
inline bool SlideStylePropertyChangeSetArchive::_internal_has_slide_transition_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SlideStylePropertyChangeSetArchive::has_slide_transition_undefined() const {
  return _internal_has_slide_transition_undefined();
}
inline void SlideStylePropertyChangeSetArchive::clear_slide_transition_undefined() {
  _impl_.slide_transition_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool SlideStylePropertyChangeSetArchive::_internal_slide_transition_undefined() const {
  return _impl_.slide_transition_undefined_;
}
inline bool SlideStylePropertyChangeSetArchive::slide_transition_undefined() const {
  // @@protoc_insertion_point(field_get:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition_undefined)
  return _internal_slide_transition_undefined();
}
inline void SlideStylePropertyChangeSetArchive::_internal_set_slide_transition_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.slide_transition_undefined_ = value;
}
inline void SlideStylePropertyChangeSetArchive::set_slide_transition_undefined(bool value) {
  _internal_set_slide_transition_undefined(value);
  // @@protoc_insertion_point(field_set:KNSOS.SlideStylePropertyChangeSetArchive.slide_transition_undefined)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KNSOS

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_KNArchives_2esos_2eproto
