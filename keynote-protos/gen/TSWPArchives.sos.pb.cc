// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSWPArchives.sos.proto

#include "TSWPArchives.sos.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace TSWPSOS {
PROTOBUF_CONSTEXPR SpecSetCharacterStyleArchive::SpecSetCharacterStyleArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.character_style_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetCharacterStyleArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetCharacterStyleArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetCharacterStyleArchiveDefaultTypeInternal() {}
  union {
    SpecSetCharacterStyleArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetCharacterStyleArchiveDefaultTypeInternal _SpecSetCharacterStyleArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetColumnsArchive::SpecSetColumnsArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.columns_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetColumnsArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetColumnsArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetColumnsArchiveDefaultTypeInternal() {}
  union {
    SpecSetColumnsArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetColumnsArchiveDefaultTypeInternal _SpecSetColumnsArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetDropCapArchive::SpecSetDropCapArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.drop_cap_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetDropCapArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetDropCapArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetDropCapArchiveDefaultTypeInternal() {}
  union {
    SpecSetDropCapArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetDropCapArchiveDefaultTypeInternal _SpecSetDropCapArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetFontFeaturesArchive::SpecSetFontFeaturesArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.font_features_)*/{}
  , /*decltype(_impl_.font_features_undefined_)*/false
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetFontFeaturesArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetFontFeaturesArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetFontFeaturesArchiveDefaultTypeInternal() {}
  union {
    SpecSetFontFeaturesArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetFontFeaturesArchiveDefaultTypeInternal _SpecSetFontFeaturesArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetLineSpacingArchive::SpecSetLineSpacingArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.line_spacing_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetLineSpacingArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetLineSpacingArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetLineSpacingArchiveDefaultTypeInternal() {}
  union {
    SpecSetLineSpacingArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetLineSpacingArchiveDefaultTypeInternal _SpecSetLineSpacingArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetListStyleArchive::SpecSetListStyleArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.list_style_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetListStyleArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetListStyleArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetListStyleArchiveDefaultTypeInternal() {}
  union {
    SpecSetListStyleArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetListStyleArchiveDefaultTypeInternal _SpecSetListStyleArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetListStyleBoolArrayArchive::SpecSetListStyleBoolArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.list_style_bool_array_)*/{}
  , /*decltype(_impl_.list_style_bool_array_undefined_)*/false
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetListStyleBoolArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetListStyleBoolArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetListStyleBoolArrayArchiveDefaultTypeInternal() {}
  union {
    SpecSetListStyleBoolArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetListStyleBoolArrayArchiveDefaultTypeInternal _SpecSetListStyleBoolArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetListStyleFloatArrayArchive::SpecSetListStyleFloatArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.list_style_float_array_)*/{}
  , /*decltype(_impl_.list_style_float_array_undefined_)*/false
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetListStyleFloatArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetListStyleFloatArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetListStyleFloatArrayArchiveDefaultTypeInternal() {}
  union {
    SpecSetListStyleFloatArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetListStyleFloatArrayArchiveDefaultTypeInternal _SpecSetListStyleFloatArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetListStyleImageDataArrayArchive::SpecSetListStyleImageDataArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.list_style_image_data_array_)*/{}
  , /*decltype(_impl_.list_style_image_data_array_undefined_)*/false
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetListStyleImageDataArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetListStyleImageDataArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetListStyleImageDataArrayArchiveDefaultTypeInternal() {}
  union {
    SpecSetListStyleImageDataArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetListStyleImageDataArrayArchiveDefaultTypeInternal _SpecSetListStyleImageDataArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetListStyleListLabelGeometryArrayArchive::SpecSetListStyleListLabelGeometryArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.list_style_list_label_geometry_array_)*/{}
  , /*decltype(_impl_.list_style_list_label_geometry_array_undefined_)*/false
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetListStyleListLabelGeometryArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetListStyleListLabelGeometryArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetListStyleListLabelGeometryArrayArchiveDefaultTypeInternal() {}
  union {
    SpecSetListStyleListLabelGeometryArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetListStyleListLabelGeometryArrayArchiveDefaultTypeInternal _SpecSetListStyleListLabelGeometryArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetListStyleListLabelTypeArrayArchive::SpecSetListStyleListLabelTypeArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.list_style_list_label_type_array_)*/{}
  , /*decltype(_impl_.list_style_list_label_type_array_undefined_)*/false
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetListStyleListLabelTypeArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetListStyleListLabelTypeArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetListStyleListLabelTypeArrayArchiveDefaultTypeInternal() {}
  union {
    SpecSetListStyleListLabelTypeArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetListStyleListLabelTypeArrayArchiveDefaultTypeInternal _SpecSetListStyleListLabelTypeArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetListStyleListNumberTypeArrayArchive::SpecSetListStyleListNumberTypeArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.list_style_list_number_type_array_)*/{}
  , /*decltype(_impl_.list_style_list_number_type_array_undefined_)*/false
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetListStyleListNumberTypeArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetListStyleListNumberTypeArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetListStyleListNumberTypeArrayArchiveDefaultTypeInternal() {}
  union {
    SpecSetListStyleListNumberTypeArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetListStyleListNumberTypeArrayArchiveDefaultTypeInternal _SpecSetListStyleListNumberTypeArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetListStyleStringArrayArchive::SpecSetListStyleStringArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.list_style_string_array_)*/{}
  , /*decltype(_impl_.list_style_string_array_undefined_)*/false
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetListStyleStringArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetListStyleStringArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetListStyleStringArrayArchiveDefaultTypeInternal() {}
  union {
    SpecSetListStyleStringArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetListStyleStringArrayArchiveDefaultTypeInternal _SpecSetListStyleStringArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetPaddingArchive::SpecSetPaddingArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.padding_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetPaddingArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetPaddingArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetPaddingArchiveDefaultTypeInternal() {}
  union {
    SpecSetPaddingArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetPaddingArchiveDefaultTypeInternal _SpecSetPaddingArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetParagraphStyleArchive::SpecSetParagraphStyleArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.paragraph_style_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetParagraphStyleArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetParagraphStyleArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetParagraphStyleArchiveDefaultTypeInternal() {}
  union {
    SpecSetParagraphStyleArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetParagraphStyleArchiveDefaultTypeInternal _SpecSetParagraphStyleArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetRuleOffsetArchive::SpecSetRuleOffsetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.rule_offset_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetRuleOffsetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetRuleOffsetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetRuleOffsetArchiveDefaultTypeInternal() {}
  union {
    SpecSetRuleOffsetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetRuleOffsetArchiveDefaultTypeInternal _SpecSetRuleOffsetArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetTabsArchive::SpecSetTabsArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.tabs_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetTabsArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetTabsArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetTabsArchiveDefaultTypeInternal() {}
  union {
    SpecSetTabsArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetTabsArchiveDefaultTypeInternal _SpecSetTabsArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecCharacterStyleArchive::SpecCharacterStyleArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_character_style_)*/nullptr} {}
struct SpecCharacterStyleArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecCharacterStyleArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecCharacterStyleArchiveDefaultTypeInternal() {}
  union {
    SpecCharacterStyleArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecCharacterStyleArchiveDefaultTypeInternal _SpecCharacterStyleArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecColumnsArchive::SpecColumnsArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_columns_)*/nullptr} {}
struct SpecColumnsArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecColumnsArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecColumnsArchiveDefaultTypeInternal() {}
  union {
    SpecColumnsArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecColumnsArchiveDefaultTypeInternal _SpecColumnsArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecDropCapArchive::SpecDropCapArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_drop_cap_)*/nullptr} {}
struct SpecDropCapArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecDropCapArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecDropCapArchiveDefaultTypeInternal() {}
  union {
    SpecDropCapArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecDropCapArchiveDefaultTypeInternal _SpecDropCapArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecFontFeaturesArchive::SpecFontFeaturesArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_font_features_)*/nullptr} {}
struct SpecFontFeaturesArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecFontFeaturesArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecFontFeaturesArchiveDefaultTypeInternal() {}
  union {
    SpecFontFeaturesArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecFontFeaturesArchiveDefaultTypeInternal _SpecFontFeaturesArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecLineSpacingArchive::SpecLineSpacingArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_line_spacing_)*/nullptr} {}
struct SpecLineSpacingArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecLineSpacingArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecLineSpacingArchiveDefaultTypeInternal() {}
  union {
    SpecLineSpacingArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecLineSpacingArchiveDefaultTypeInternal _SpecLineSpacingArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecListStyleArchive::SpecListStyleArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_list_style_)*/nullptr} {}
struct SpecListStyleArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecListStyleArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecListStyleArchiveDefaultTypeInternal() {}
  union {
    SpecListStyleArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecListStyleArchiveDefaultTypeInternal _SpecListStyleArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecListStyleBoolArrayArchive::SpecListStyleBoolArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_list_style_bool_array_)*/nullptr} {}
struct SpecListStyleBoolArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecListStyleBoolArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecListStyleBoolArrayArchiveDefaultTypeInternal() {}
  union {
    SpecListStyleBoolArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecListStyleBoolArrayArchiveDefaultTypeInternal _SpecListStyleBoolArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecListStyleFloatArrayArchive::SpecListStyleFloatArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_list_style_float_array_)*/nullptr} {}
struct SpecListStyleFloatArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecListStyleFloatArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecListStyleFloatArrayArchiveDefaultTypeInternal() {}
  union {
    SpecListStyleFloatArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecListStyleFloatArrayArchiveDefaultTypeInternal _SpecListStyleFloatArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecListStyleImageDataArrayArchive::SpecListStyleImageDataArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_list_style_image_data_array_)*/nullptr} {}
struct SpecListStyleImageDataArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecListStyleImageDataArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecListStyleImageDataArrayArchiveDefaultTypeInternal() {}
  union {
    SpecListStyleImageDataArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecListStyleImageDataArrayArchiveDefaultTypeInternal _SpecListStyleImageDataArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecListStyleListLabelGeometryArrayArchive::SpecListStyleListLabelGeometryArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_list_style_list_label_geometry_array_)*/nullptr} {}
struct SpecListStyleListLabelGeometryArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecListStyleListLabelGeometryArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecListStyleListLabelGeometryArrayArchiveDefaultTypeInternal() {}
  union {
    SpecListStyleListLabelGeometryArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecListStyleListLabelGeometryArrayArchiveDefaultTypeInternal _SpecListStyleListLabelGeometryArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecListStyleListLabelTypeArrayArchive::SpecListStyleListLabelTypeArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_list_style_list_label_type_array_)*/nullptr} {}
struct SpecListStyleListLabelTypeArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecListStyleListLabelTypeArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecListStyleListLabelTypeArrayArchiveDefaultTypeInternal() {}
  union {
    SpecListStyleListLabelTypeArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecListStyleListLabelTypeArrayArchiveDefaultTypeInternal _SpecListStyleListLabelTypeArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecListStyleListNumberTypeArrayArchive::SpecListStyleListNumberTypeArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_list_style_list_number_type_array_)*/nullptr} {}
struct SpecListStyleListNumberTypeArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecListStyleListNumberTypeArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecListStyleListNumberTypeArrayArchiveDefaultTypeInternal() {}
  union {
    SpecListStyleListNumberTypeArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecListStyleListNumberTypeArrayArchiveDefaultTypeInternal _SpecListStyleListNumberTypeArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecListStyleStringArrayArchive::SpecListStyleStringArrayArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_list_style_string_array_)*/nullptr} {}
struct SpecListStyleStringArrayArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecListStyleStringArrayArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecListStyleStringArrayArchiveDefaultTypeInternal() {}
  union {
    SpecListStyleStringArrayArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecListStyleStringArrayArchiveDefaultTypeInternal _SpecListStyleStringArrayArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecPaddingArchive::SpecPaddingArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_padding_)*/nullptr} {}
struct SpecPaddingArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecPaddingArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecPaddingArchiveDefaultTypeInternal() {}
  union {
    SpecPaddingArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecPaddingArchiveDefaultTypeInternal _SpecPaddingArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecParagraphStyleArchive::SpecParagraphStyleArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_paragraph_style_)*/nullptr} {}
struct SpecParagraphStyleArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecParagraphStyleArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecParagraphStyleArchiveDefaultTypeInternal() {}
  union {
    SpecParagraphStyleArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecParagraphStyleArchiveDefaultTypeInternal _SpecParagraphStyleArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecRuleOffsetArchive::SpecRuleOffsetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_rule_offset_)*/nullptr} {}
struct SpecRuleOffsetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecRuleOffsetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecRuleOffsetArchiveDefaultTypeInternal() {}
  union {
    SpecRuleOffsetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecRuleOffsetArchiveDefaultTypeInternal _SpecRuleOffsetArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecTabsArchive::SpecTabsArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_tabs_)*/nullptr} {}
struct SpecTabsArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecTabsArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecTabsArchiveDefaultTypeInternal() {}
  union {
    SpecTabsArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecTabsArchiveDefaultTypeInternal _SpecTabsArchive_default_instance_;
PROTOBUF_CONSTEXPR CharacterStylePropertyChangeSetArchive::CharacterStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.baseline_shift_)*/nullptr
  , /*decltype(_impl_.capitalization_)*/nullptr
  , /*decltype(_impl_.compatibility_font_name_)*/nullptr
  , /*decltype(_impl_.emphasis_marks_)*/nullptr
  , /*decltype(_impl_.bold_)*/nullptr
  , /*decltype(_impl_.italic_)*/nullptr
  , /*decltype(_impl_.font_features_)*/nullptr
  , /*decltype(_impl_.font_name_)*/nullptr
  , /*decltype(_impl_.font_size_)*/nullptr
  , /*decltype(_impl_.font_size_delta_)*/nullptr
  , /*decltype(_impl_.kerning_)*/nullptr
  , /*decltype(_impl_.language_)*/nullptr
  , /*decltype(_impl_.ligatures_)*/nullptr
  , /*decltype(_impl_.text_shadow_)*/nullptr
  , /*decltype(_impl_.strikethru_color_)*/nullptr
  , /*decltype(_impl_.strikethru_)*/nullptr
  , /*decltype(_impl_.strikethru_width_)*/nullptr
  , /*decltype(_impl_.superscript_)*/nullptr
  , /*decltype(_impl_.text_background_)*/nullptr
  , /*decltype(_impl_.tracking_)*/nullptr
  , /*decltype(_impl_.underline_color_)*/nullptr
  , /*decltype(_impl_.underline_)*/nullptr
  , /*decltype(_impl_.underline_width_)*/nullptr
  , /*decltype(_impl_.word_strikethru_)*/nullptr
  , /*decltype(_impl_.word_underline_)*/nullptr
  , /*decltype(_impl_.writing_direction_)*/nullptr
  , /*decltype(_impl_.is_named_point_size_)*/nullptr
  , /*decltype(_impl_.capitalization_uses_linguistics_)*/nullptr
  , /*decltype(_impl_.character_stroke_)*/nullptr
  , /*decltype(_impl_.character_fill_)*/nullptr
  , /*decltype(_impl_.character_fill_should_fill_text_container_)*/nullptr
  , /*decltype(_impl_.baseline_shift_undefined_)*/false
  , /*decltype(_impl_.capitalization_undefined_)*/false
  , /*decltype(_impl_.compatibility_font_name_undefined_)*/false
  , /*decltype(_impl_.emphasis_marks_undefined_)*/false
  , /*decltype(_impl_.bold_undefined_)*/false
  , /*decltype(_impl_.italic_undefined_)*/false
  , /*decltype(_impl_.font_features_undefined_)*/false
  , /*decltype(_impl_.font_name_undefined_)*/false
  , /*decltype(_impl_.font_size_undefined_)*/false
  , /*decltype(_impl_.font_size_delta_undefined_)*/false
  , /*decltype(_impl_.kerning_undefined_)*/false
  , /*decltype(_impl_.language_undefined_)*/false
  , /*decltype(_impl_.ligatures_undefined_)*/false
  , /*decltype(_impl_.text_shadow_undefined_)*/false
  , /*decltype(_impl_.strikethru_color_undefined_)*/false
  , /*decltype(_impl_.strikethru_undefined_)*/false
  , /*decltype(_impl_.strikethru_width_undefined_)*/false
  , /*decltype(_impl_.superscript_undefined_)*/false
  , /*decltype(_impl_.text_background_undefined_)*/false
  , /*decltype(_impl_.tracking_undefined_)*/false
  , /*decltype(_impl_.underline_color_undefined_)*/false
  , /*decltype(_impl_.underline_undefined_)*/false
  , /*decltype(_impl_.underline_width_undefined_)*/false
  , /*decltype(_impl_.word_strikethru_undefined_)*/false
  , /*decltype(_impl_.word_underline_undefined_)*/false
  , /*decltype(_impl_.writing_direction_undefined_)*/false
  , /*decltype(_impl_.is_named_point_size_undefined_)*/false
  , /*decltype(_impl_.capitalization_uses_linguistics_undefined_)*/false
  , /*decltype(_impl_.character_stroke_undefined_)*/false
  , /*decltype(_impl_.character_fill_undefined_)*/false
  , /*decltype(_impl_.character_fill_should_fill_text_container_undefined_)*/false} {}
struct CharacterStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    CharacterStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterStylePropertyChangeSetArchiveDefaultTypeInternal _CharacterStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ColumnStylePropertyChangeSetArchive::ColumnStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.columns_)*/nullptr
  , /*decltype(_impl_.continuous_)*/nullptr
  , /*decltype(_impl_.margins_)*/nullptr
  , /*decltype(_impl_.min_horizontal_inset_)*/nullptr
  , /*decltype(_impl_.padding_)*/nullptr
  , /*decltype(_impl_.shrink_to_fit_)*/nullptr
  , /*decltype(_impl_.vertical_alignment_)*/nullptr
  , /*decltype(_impl_.vertical_text_)*/nullptr
  , /*decltype(_impl_.writing_direction_)*/nullptr
  , /*decltype(_impl_.columns_undefined_)*/false
  , /*decltype(_impl_.continuous_undefined_)*/false
  , /*decltype(_impl_.margins_undefined_)*/false
  , /*decltype(_impl_.min_horizontal_inset_undefined_)*/false
  , /*decltype(_impl_.padding_undefined_)*/false
  , /*decltype(_impl_.shrink_to_fit_undefined_)*/false
  , /*decltype(_impl_.vertical_alignment_undefined_)*/false
  , /*decltype(_impl_.vertical_text_undefined_)*/false
  , /*decltype(_impl_.writing_direction_undefined_)*/false} {}
struct ColumnStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColumnStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColumnStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ColumnStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColumnStylePropertyChangeSetArchiveDefaultTypeInternal _ColumnStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR DropCapSpecificStylePropertyChangeSetArchive::DropCapSpecificStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.drop_cap_model_)*/nullptr
  , /*decltype(_impl_.drop_cap_shape_stroke_)*/nullptr
  , /*decltype(_impl_.drop_cap_shape_fill_)*/nullptr
  , /*decltype(_impl_.drop_cap_model_undefined_)*/false
  , /*decltype(_impl_.drop_cap_shape_stroke_undefined_)*/false
  , /*decltype(_impl_.drop_cap_shape_fill_undefined_)*/false} {}
struct DropCapSpecificStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DropCapSpecificStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DropCapSpecificStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    DropCapSpecificStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DropCapSpecificStylePropertyChangeSetArchiveDefaultTypeInternal _DropCapSpecificStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR DropCapStylePropertyChangeSetArchive::DropCapStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.super_)*/nullptr
  , /*decltype(_impl_.drop_cap_model_)*/nullptr
  , /*decltype(_impl_.drop_cap_shape_stroke_)*/nullptr
  , /*decltype(_impl_.drop_cap_shape_fill_)*/nullptr
  , /*decltype(_impl_.drop_cap_model_undefined_)*/false
  , /*decltype(_impl_.drop_cap_shape_stroke_undefined_)*/false
  , /*decltype(_impl_.drop_cap_shape_fill_undefined_)*/false} {}
struct DropCapStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DropCapStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DropCapStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    DropCapStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DropCapStylePropertyChangeSetArchiveDefaultTypeInternal _DropCapStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ListStylePropertyChangeSetArchive::ListStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.list_font_color_)*/nullptr
  , /*decltype(_impl_.font_name_)*/nullptr
  , /*decltype(_impl_.list_classic_text_indent_array_)*/nullptr
  , /*decltype(_impl_.list_label_geometry_array_)*/nullptr
  , /*decltype(_impl_.list_label_image_data_array_)*/nullptr
  , /*decltype(_impl_.list_label_indent_array_)*/nullptr
  , /*decltype(_impl_.list_label_number_array_)*/nullptr
  , /*decltype(_impl_.list_label_tiered_number_array_)*/nullptr
  , /*decltype(_impl_.text_shadow_)*/nullptr
  , /*decltype(_impl_.list_label_string_array_)*/nullptr
  , /*decltype(_impl_.list_text_indent_array_)*/nullptr
  , /*decltype(_impl_.list_label_type_array_)*/nullptr
  , /*decltype(_impl_.writing_direction_)*/nullptr
  , /*decltype(_impl_.list_font_color_undefined_)*/false
  , /*decltype(_impl_.font_name_undefined_)*/false
  , /*decltype(_impl_.list_classic_text_indent_array_undefined_)*/false
  , /*decltype(_impl_.list_label_geometry_array_undefined_)*/false
  , /*decltype(_impl_.list_label_image_data_array_undefined_)*/false
  , /*decltype(_impl_.list_label_indent_array_undefined_)*/false
  , /*decltype(_impl_.list_label_number_array_undefined_)*/false
  , /*decltype(_impl_.list_label_tiered_number_array_undefined_)*/false
  , /*decltype(_impl_.text_shadow_undefined_)*/false
  , /*decltype(_impl_.list_label_string_array_undefined_)*/false
  , /*decltype(_impl_.list_text_indent_array_undefined_)*/false
  , /*decltype(_impl_.list_label_type_array_undefined_)*/false
  , /*decltype(_impl_.writing_direction_undefined_)*/false} {}
struct ListStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ListStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListStylePropertyChangeSetArchiveDefaultTypeInternal _ListStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ParagraphSpecificStylePropertyChangeSetArchive::ParagraphSpecificStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.alignment_)*/nullptr
  , /*decltype(_impl_.decimal_tab_)*/nullptr
  , /*decltype(_impl_.default_tab_stops_)*/nullptr
  , /*decltype(_impl_.paragraph_fill_)*/nullptr
  , /*decltype(_impl_.first_line_indent_)*/nullptr
  , /*decltype(_impl_.following_paragraph_style_)*/nullptr
  , /*decltype(_impl_.hyphenate_)*/nullptr
  , /*decltype(_impl_.initial_list_style_)*/nullptr
  , /*decltype(_impl_.keep_lines_together_)*/nullptr
  , /*decltype(_impl_.keep_with_next_)*/nullptr
  , /*decltype(_impl_.left_indent_)*/nullptr
  , /*decltype(_impl_.line_spacing_)*/nullptr
  , /*decltype(_impl_.outline_level_)*/nullptr
  , /*decltype(_impl_.outline_style_type_)*/nullptr
  , /*decltype(_impl_.page_break_before_)*/nullptr
  , /*decltype(_impl_.paragraph_borders_)*/nullptr
  , /*decltype(_impl_.paragraph_rule_offset_)*/nullptr
  , /*decltype(_impl_.paragraph_rule_width_)*/nullptr
  , /*decltype(_impl_.right_indent_)*/nullptr
  , /*decltype(_impl_.space_after_)*/nullptr
  , /*decltype(_impl_.space_before_)*/nullptr
  , /*decltype(_impl_.paragraph_stroke_)*/nullptr
  , /*decltype(_impl_.tabs_)*/nullptr
  , /*decltype(_impl_.widow_control_)*/nullptr
  , /*decltype(_impl_.show_in_bookmarks_list_)*/nullptr
  , /*decltype(_impl_.show_in_t_o_c_navigator_)*/nullptr
  , /*decltype(_impl_.alignment_undefined_)*/false
  , /*decltype(_impl_.decimal_tab_undefined_)*/false
  , /*decltype(_impl_.default_tab_stops_undefined_)*/false
  , /*decltype(_impl_.paragraph_fill_undefined_)*/false
  , /*decltype(_impl_.first_line_indent_undefined_)*/false
  , /*decltype(_impl_.following_paragraph_style_undefined_)*/false
  , /*decltype(_impl_.hyphenate_undefined_)*/false
  , /*decltype(_impl_.initial_list_style_undefined_)*/false
  , /*decltype(_impl_.keep_lines_together_undefined_)*/false
  , /*decltype(_impl_.keep_with_next_undefined_)*/false
  , /*decltype(_impl_.left_indent_undefined_)*/false
  , /*decltype(_impl_.line_spacing_undefined_)*/false
  , /*decltype(_impl_.outline_level_undefined_)*/false
  , /*decltype(_impl_.outline_style_type_undefined_)*/false
  , /*decltype(_impl_.page_break_before_undefined_)*/false
  , /*decltype(_impl_.paragraph_borders_undefined_)*/false
  , /*decltype(_impl_.paragraph_rule_offset_undefined_)*/false
  , /*decltype(_impl_.paragraph_rule_width_undefined_)*/false
  , /*decltype(_impl_.right_indent_undefined_)*/false
  , /*decltype(_impl_.space_after_undefined_)*/false
  , /*decltype(_impl_.space_before_undefined_)*/false
  , /*decltype(_impl_.paragraph_stroke_undefined_)*/false
  , /*decltype(_impl_.tabs_undefined_)*/false
  , /*decltype(_impl_.widow_control_undefined_)*/false
  , /*decltype(_impl_.show_in_bookmarks_list_undefined_)*/false
  , /*decltype(_impl_.show_in_t_o_c_navigator_undefined_)*/false} {}
struct ParagraphSpecificStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParagraphSpecificStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParagraphSpecificStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ParagraphSpecificStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParagraphSpecificStylePropertyChangeSetArchiveDefaultTypeInternal _ParagraphSpecificStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ParagraphStylePropertyChangeSetArchive::ParagraphStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.super_)*/nullptr
  , /*decltype(_impl_.alignment_)*/nullptr
  , /*decltype(_impl_.decimal_tab_)*/nullptr
  , /*decltype(_impl_.default_tab_stops_)*/nullptr
  , /*decltype(_impl_.paragraph_fill_)*/nullptr
  , /*decltype(_impl_.first_line_indent_)*/nullptr
  , /*decltype(_impl_.following_paragraph_style_)*/nullptr
  , /*decltype(_impl_.hyphenate_)*/nullptr
  , /*decltype(_impl_.initial_list_style_)*/nullptr
  , /*decltype(_impl_.keep_lines_together_)*/nullptr
  , /*decltype(_impl_.keep_with_next_)*/nullptr
  , /*decltype(_impl_.left_indent_)*/nullptr
  , /*decltype(_impl_.line_spacing_)*/nullptr
  , /*decltype(_impl_.outline_level_)*/nullptr
  , /*decltype(_impl_.outline_style_type_)*/nullptr
  , /*decltype(_impl_.page_break_before_)*/nullptr
  , /*decltype(_impl_.paragraph_borders_)*/nullptr
  , /*decltype(_impl_.paragraph_rule_offset_)*/nullptr
  , /*decltype(_impl_.paragraph_rule_width_)*/nullptr
  , /*decltype(_impl_.right_indent_)*/nullptr
  , /*decltype(_impl_.space_after_)*/nullptr
  , /*decltype(_impl_.space_before_)*/nullptr
  , /*decltype(_impl_.paragraph_stroke_)*/nullptr
  , /*decltype(_impl_.tabs_)*/nullptr
  , /*decltype(_impl_.widow_control_)*/nullptr
  , /*decltype(_impl_.show_in_bookmarks_list_)*/nullptr
  , /*decltype(_impl_.show_in_t_o_c_navigator_)*/nullptr
  , /*decltype(_impl_.alignment_undefined_)*/false
  , /*decltype(_impl_.decimal_tab_undefined_)*/false
  , /*decltype(_impl_.default_tab_stops_undefined_)*/false
  , /*decltype(_impl_.paragraph_fill_undefined_)*/false
  , /*decltype(_impl_.first_line_indent_undefined_)*/false
  , /*decltype(_impl_.following_paragraph_style_undefined_)*/false
  , /*decltype(_impl_.hyphenate_undefined_)*/false
  , /*decltype(_impl_.initial_list_style_undefined_)*/false
  , /*decltype(_impl_.keep_lines_together_undefined_)*/false
  , /*decltype(_impl_.keep_with_next_undefined_)*/false
  , /*decltype(_impl_.left_indent_undefined_)*/false
  , /*decltype(_impl_.line_spacing_undefined_)*/false
  , /*decltype(_impl_.outline_level_undefined_)*/false
  , /*decltype(_impl_.outline_style_type_undefined_)*/false
  , /*decltype(_impl_.page_break_before_undefined_)*/false
  , /*decltype(_impl_.paragraph_borders_undefined_)*/false
  , /*decltype(_impl_.paragraph_rule_offset_undefined_)*/false
  , /*decltype(_impl_.paragraph_rule_width_undefined_)*/false
  , /*decltype(_impl_.right_indent_undefined_)*/false
  , /*decltype(_impl_.space_after_undefined_)*/false
  , /*decltype(_impl_.space_before_undefined_)*/false
  , /*decltype(_impl_.paragraph_stroke_undefined_)*/false
  , /*decltype(_impl_.tabs_undefined_)*/false
  , /*decltype(_impl_.widow_control_undefined_)*/false
  , /*decltype(_impl_.show_in_bookmarks_list_undefined_)*/false
  , /*decltype(_impl_.show_in_t_o_c_navigator_undefined_)*/false} {}
struct ParagraphStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParagraphStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParagraphStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ParagraphStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParagraphStylePropertyChangeSetArchiveDefaultTypeInternal _ParagraphStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ShapeStylePropertyChangeSetArchive::ShapeStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.super_)*/nullptr
  , /*decltype(_impl_.columns_)*/nullptr
  , /*decltype(_impl_.padding_)*/nullptr
  , /*decltype(_impl_.shrink_text_to_fit_)*/nullptr
  , /*decltype(_impl_.vertical_alignment_)*/nullptr
  , /*decltype(_impl_.vertical_text_)*/nullptr
  , /*decltype(_impl_.default_paragraph_style_)*/nullptr
  , /*decltype(_impl_.columns_undefined_)*/false
  , /*decltype(_impl_.padding_undefined_)*/false
  , /*decltype(_impl_.shrink_text_to_fit_undefined_)*/false
  , /*decltype(_impl_.vertical_alignment_undefined_)*/false
  , /*decltype(_impl_.vertical_text_undefined_)*/false
  , /*decltype(_impl_.default_paragraph_style_undefined_)*/false} {}
struct ShapeStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShapeStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShapeStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ShapeStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShapeStylePropertyChangeSetArchiveDefaultTypeInternal _ShapeStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR TOCEntryStylePropertyChangeSetArchive::TOCEntryStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.super_)*/nullptr
  , /*decltype(_impl_.toc_show_page_number_)*/nullptr
  , /*decltype(_impl_.toc_page_number_style_)*/nullptr
  , /*decltype(_impl_.toc_show_page_number_undefined_)*/false
  , /*decltype(_impl_.toc_page_number_style_undefined_)*/false} {}
struct TOCEntryStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TOCEntryStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TOCEntryStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    TOCEntryStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TOCEntryStylePropertyChangeSetArchiveDefaultTypeInternal _TOCEntryStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR StyleDiffArchive::StyleDiffArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.style_)*/nullptr
  , /*decltype(_impl_.character_change_set_)*/nullptr
  , /*decltype(_impl_.paragraph_change_set_)*/nullptr
  , /*decltype(_impl_.shape_change_set_)*/nullptr} {}
struct StyleDiffArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StyleDiffArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StyleDiffArchiveDefaultTypeInternal() {}
  union {
    StyleDiffArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StyleDiffArchiveDefaultTypeInternal _StyleDiffArchive_default_instance_;
}  // namespace TSWPSOS
static ::_pb::Metadata file_level_metadata_TSWPArchives_2esos_2eproto[44];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_TSWPArchives_2esos_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_TSWPArchives_2esos_2eproto = nullptr;

const uint32_t TableStruct_TSWPArchives_2esos_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetCharacterStyleArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetCharacterStyleArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetCharacterStyleArchive, _impl_.character_style_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetCharacterStyleArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetColumnsArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetColumnsArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetColumnsArchive, _impl_.columns_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetColumnsArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetDropCapArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetDropCapArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetDropCapArchive, _impl_.drop_cap_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetDropCapArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetFontFeaturesArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetFontFeaturesArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetFontFeaturesArchive, _impl_.font_features_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetFontFeaturesArchive, _impl_.font_features_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetFontFeaturesArchive, _impl_.unset_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetLineSpacingArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetLineSpacingArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetLineSpacingArchive, _impl_.line_spacing_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetLineSpacingArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleArchive, _impl_.list_style_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleBoolArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleBoolArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleBoolArrayArchive, _impl_.list_style_bool_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleBoolArrayArchive, _impl_.list_style_bool_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleBoolArrayArchive, _impl_.unset_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleFloatArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleFloatArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleFloatArrayArchive, _impl_.list_style_float_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleFloatArrayArchive, _impl_.list_style_float_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleFloatArrayArchive, _impl_.unset_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleImageDataArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleImageDataArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleImageDataArrayArchive, _impl_.list_style_image_data_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleImageDataArrayArchive, _impl_.list_style_image_data_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleImageDataArrayArchive, _impl_.unset_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive, _impl_.list_style_list_label_geometry_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive, _impl_.list_style_list_label_geometry_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive, _impl_.unset_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive, _impl_.list_style_list_label_type_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive, _impl_.list_style_list_label_type_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive, _impl_.unset_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive, _impl_.list_style_list_number_type_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive, _impl_.list_style_list_number_type_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive, _impl_.unset_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleStringArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleStringArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleStringArrayArchive, _impl_.list_style_string_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleStringArrayArchive, _impl_.list_style_string_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetListStyleStringArrayArchive, _impl_.unset_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetPaddingArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetPaddingArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetPaddingArchive, _impl_.padding_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetPaddingArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetParagraphStyleArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetParagraphStyleArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetParagraphStyleArchive, _impl_.paragraph_style_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetParagraphStyleArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetRuleOffsetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetRuleOffsetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetRuleOffsetArchive, _impl_.rule_offset_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetRuleOffsetArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetTabsArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetTabsArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetTabsArchive, _impl_.tabs_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecSetTabsArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecCharacterStyleArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecCharacterStyleArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecCharacterStyleArchive, _impl_.spec_set_character_style_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecColumnsArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecColumnsArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecColumnsArchive, _impl_.spec_set_columns_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecDropCapArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecDropCapArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecDropCapArchive, _impl_.spec_set_drop_cap_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecFontFeaturesArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecFontFeaturesArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecFontFeaturesArchive, _impl_.spec_set_font_features_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecLineSpacingArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecLineSpacingArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecLineSpacingArchive, _impl_.spec_set_line_spacing_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleArchive, _impl_.spec_set_list_style_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleBoolArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleBoolArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleBoolArrayArchive, _impl_.spec_set_list_style_bool_array_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleFloatArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleFloatArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleFloatArrayArchive, _impl_.spec_set_list_style_float_array_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleImageDataArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleImageDataArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleImageDataArrayArchive, _impl_.spec_set_list_style_image_data_array_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleListLabelGeometryArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleListLabelGeometryArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleListLabelGeometryArrayArchive, _impl_.spec_set_list_style_list_label_geometry_array_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleListLabelTypeArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleListLabelTypeArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleListLabelTypeArrayArchive, _impl_.spec_set_list_style_list_label_type_array_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleListNumberTypeArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleListNumberTypeArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleListNumberTypeArrayArchive, _impl_.spec_set_list_style_list_number_type_array_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleStringArrayArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleStringArrayArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecListStyleStringArrayArchive, _impl_.spec_set_list_style_string_array_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecPaddingArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecPaddingArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecPaddingArchive, _impl_.spec_set_padding_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecParagraphStyleArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecParagraphStyleArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecParagraphStyleArchive, _impl_.spec_set_paragraph_style_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecRuleOffsetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecRuleOffsetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecRuleOffsetArchive, _impl_.spec_set_rule_offset_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecTabsArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecTabsArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::SpecTabsArchive, _impl_.spec_set_tabs_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.baseline_shift_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.baseline_shift_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.capitalization_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.capitalization_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.compatibility_font_name_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.compatibility_font_name_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.emphasis_marks_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.emphasis_marks_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.bold_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.bold_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.italic_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.italic_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.font_features_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.font_features_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.font_name_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.font_name_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.font_size_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.font_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.font_size_delta_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.font_size_delta_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.kerning_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.kerning_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.language_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.language_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.ligatures_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.ligatures_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.text_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.text_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.strikethru_color_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.strikethru_color_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.strikethru_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.strikethru_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.strikethru_width_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.strikethru_width_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.superscript_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.superscript_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.text_background_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.text_background_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.tracking_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.tracking_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.underline_color_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.underline_color_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.underline_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.underline_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.underline_width_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.underline_width_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.word_strikethru_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.word_strikethru_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.word_underline_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.word_underline_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.writing_direction_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.writing_direction_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.is_named_point_size_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.is_named_point_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.capitalization_uses_linguistics_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.capitalization_uses_linguistics_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.character_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.character_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.character_fill_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.character_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.character_fill_should_fill_text_container_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::CharacterStylePropertyChangeSetArchive, _impl_.character_fill_should_fill_text_container_undefined_),
  0,
  31,
  1,
  32,
  2,
  33,
  3,
  34,
  4,
  35,
  5,
  36,
  6,
  37,
  7,
  38,
  8,
  39,
  9,
  40,
  10,
  41,
  11,
  42,
  12,
  43,
  13,
  44,
  14,
  45,
  15,
  46,
  16,
  47,
  17,
  48,
  18,
  49,
  19,
  50,
  20,
  51,
  21,
  52,
  22,
  53,
  23,
  54,
  24,
  55,
  25,
  56,
  26,
  57,
  27,
  58,
  28,
  59,
  29,
  60,
  30,
  61,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.columns_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.columns_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.continuous_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.continuous_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.margins_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.margins_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.min_horizontal_inset_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.min_horizontal_inset_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.padding_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.padding_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.shrink_to_fit_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.shrink_to_fit_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.vertical_alignment_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.vertical_alignment_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.vertical_text_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.vertical_text_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.writing_direction_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ColumnStylePropertyChangeSetArchive, _impl_.writing_direction_undefined_),
  0,
  9,
  1,
  10,
  2,
  11,
  3,
  12,
  4,
  13,
  5,
  14,
  6,
  15,
  7,
  16,
  8,
  17,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive, _impl_.drop_cap_model_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive, _impl_.drop_cap_model_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive, _impl_.drop_cap_shape_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive, _impl_.drop_cap_shape_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive, _impl_.drop_cap_shape_fill_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive, _impl_.drop_cap_shape_fill_undefined_),
  0,
  3,
  1,
  4,
  2,
  5,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapStylePropertyChangeSetArchive, _impl_.super_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapStylePropertyChangeSetArchive, _impl_.drop_cap_model_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapStylePropertyChangeSetArchive, _impl_.drop_cap_model_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapStylePropertyChangeSetArchive, _impl_.drop_cap_shape_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapStylePropertyChangeSetArchive, _impl_.drop_cap_shape_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapStylePropertyChangeSetArchive, _impl_.drop_cap_shape_fill_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::DropCapStylePropertyChangeSetArchive, _impl_.drop_cap_shape_fill_undefined_),
  0,
  1,
  4,
  2,
  5,
  3,
  6,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_font_color_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_font_color_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.font_name_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.font_name_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_classic_text_indent_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_classic_text_indent_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_geometry_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_geometry_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_image_data_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_image_data_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_indent_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_indent_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_number_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_number_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_tiered_number_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_tiered_number_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.text_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.text_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_string_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_string_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_text_indent_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_text_indent_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_type_array_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.list_label_type_array_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.writing_direction_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ListStylePropertyChangeSetArchive, _impl_.writing_direction_undefined_),
  0,
  13,
  1,
  14,
  2,
  15,
  3,
  16,
  4,
  17,
  5,
  18,
  6,
  19,
  7,
  20,
  8,
  21,
  9,
  22,
  10,
  23,
  11,
  24,
  12,
  25,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.alignment_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.alignment_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.decimal_tab_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.decimal_tab_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.default_tab_stops_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.default_tab_stops_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.paragraph_fill_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.paragraph_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.first_line_indent_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.first_line_indent_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.following_paragraph_style_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.following_paragraph_style_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.hyphenate_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.hyphenate_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.initial_list_style_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.initial_list_style_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.keep_lines_together_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.keep_lines_together_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.keep_with_next_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.keep_with_next_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.left_indent_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.left_indent_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.line_spacing_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.line_spacing_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.outline_level_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.outline_level_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.outline_style_type_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.outline_style_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.page_break_before_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.page_break_before_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.paragraph_borders_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.paragraph_borders_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.paragraph_rule_offset_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.paragraph_rule_offset_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.paragraph_rule_width_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.paragraph_rule_width_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.right_indent_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.right_indent_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.space_after_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.space_after_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.space_before_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.space_before_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.paragraph_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.paragraph_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.tabs_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.tabs_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.widow_control_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.widow_control_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.show_in_bookmarks_list_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.show_in_bookmarks_list_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.show_in_t_o_c_navigator_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive, _impl_.show_in_t_o_c_navigator_undefined_),
  0,
  26,
  1,
  27,
  2,
  28,
  3,
  29,
  4,
  30,
  5,
  31,
  6,
  32,
  7,
  33,
  8,
  34,
  9,
  35,
  10,
  36,
  11,
  37,
  12,
  38,
  13,
  39,
  14,
  40,
  15,
  41,
  16,
  42,
  17,
  43,
  18,
  44,
  19,
  45,
  20,
  46,
  21,
  47,
  22,
  48,
  23,
  49,
  24,
  50,
  25,
  51,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.super_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.alignment_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.alignment_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.decimal_tab_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.decimal_tab_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.default_tab_stops_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.default_tab_stops_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.paragraph_fill_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.paragraph_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.first_line_indent_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.first_line_indent_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.following_paragraph_style_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.following_paragraph_style_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.hyphenate_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.hyphenate_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.initial_list_style_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.initial_list_style_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.keep_lines_together_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.keep_lines_together_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.keep_with_next_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.keep_with_next_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.left_indent_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.left_indent_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.line_spacing_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.line_spacing_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.outline_level_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.outline_level_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.outline_style_type_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.outline_style_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.page_break_before_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.page_break_before_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.paragraph_borders_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.paragraph_borders_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.paragraph_rule_offset_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.paragraph_rule_offset_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.paragraph_rule_width_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.paragraph_rule_width_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.right_indent_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.right_indent_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.space_after_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.space_after_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.space_before_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.space_before_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.paragraph_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.paragraph_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.tabs_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.tabs_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.widow_control_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.widow_control_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.show_in_bookmarks_list_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.show_in_bookmarks_list_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.show_in_t_o_c_navigator_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ParagraphStylePropertyChangeSetArchive, _impl_.show_in_t_o_c_navigator_undefined_),
  0,
  1,
  27,
  2,
  28,
  3,
  29,
  4,
  30,
  5,
  31,
  6,
  32,
  7,
  33,
  8,
  34,
  9,
  35,
  10,
  36,
  11,
  37,
  12,
  38,
  13,
  39,
  14,
  40,
  15,
  41,
  16,
  42,
  17,
  43,
  18,
  44,
  19,
  45,
  20,
  46,
  21,
  47,
  22,
  48,
  23,
  49,
  24,
  50,
  25,
  51,
  26,
  52,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.super_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.columns_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.columns_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.padding_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.padding_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.shrink_text_to_fit_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.shrink_text_to_fit_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.vertical_alignment_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.vertical_alignment_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.vertical_text_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.vertical_text_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.default_paragraph_style_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::ShapeStylePropertyChangeSetArchive, _impl_.default_paragraph_style_undefined_),
  0,
  1,
  7,
  2,
  8,
  3,
  9,
  4,
  10,
  5,
  11,
  6,
  12,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::TOCEntryStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::TOCEntryStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::TOCEntryStylePropertyChangeSetArchive, _impl_.super_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::TOCEntryStylePropertyChangeSetArchive, _impl_.toc_show_page_number_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::TOCEntryStylePropertyChangeSetArchive, _impl_.toc_show_page_number_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::TOCEntryStylePropertyChangeSetArchive, _impl_.toc_page_number_style_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::TOCEntryStylePropertyChangeSetArchive, _impl_.toc_page_number_style_undefined_),
  0,
  1,
  3,
  2,
  4,
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::StyleDiffArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::StyleDiffArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::StyleDiffArchive, _impl_.style_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::StyleDiffArchive, _impl_.character_change_set_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::StyleDiffArchive, _impl_.paragraph_change_set_),
  PROTOBUF_FIELD_OFFSET(::TSWPSOS::StyleDiffArchive, _impl_.shape_change_set_),
  0,
  1,
  2,
  3,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::TSWPSOS::SpecSetCharacterStyleArchive)},
  { 10, 18, -1, sizeof(::TSWPSOS::SpecSetColumnsArchive)},
  { 20, 28, -1, sizeof(::TSWPSOS::SpecSetDropCapArchive)},
  { 30, 39, -1, sizeof(::TSWPSOS::SpecSetFontFeaturesArchive)},
  { 42, 50, -1, sizeof(::TSWPSOS::SpecSetLineSpacingArchive)},
  { 52, 60, -1, sizeof(::TSWPSOS::SpecSetListStyleArchive)},
  { 62, 71, -1, sizeof(::TSWPSOS::SpecSetListStyleBoolArrayArchive)},
  { 74, 83, -1, sizeof(::TSWPSOS::SpecSetListStyleFloatArrayArchive)},
  { 86, 95, -1, sizeof(::TSWPSOS::SpecSetListStyleImageDataArrayArchive)},
  { 98, 107, -1, sizeof(::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive)},
  { 110, 119, -1, sizeof(::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive)},
  { 122, 131, -1, sizeof(::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive)},
  { 134, 143, -1, sizeof(::TSWPSOS::SpecSetListStyleStringArrayArchive)},
  { 146, 154, -1, sizeof(::TSWPSOS::SpecSetPaddingArchive)},
  { 156, 164, -1, sizeof(::TSWPSOS::SpecSetParagraphStyleArchive)},
  { 166, 174, -1, sizeof(::TSWPSOS::SpecSetRuleOffsetArchive)},
  { 176, 184, -1, sizeof(::TSWPSOS::SpecSetTabsArchive)},
  { 186, 193, -1, sizeof(::TSWPSOS::SpecCharacterStyleArchive)},
  { 194, 201, -1, sizeof(::TSWPSOS::SpecColumnsArchive)},
  { 202, 209, -1, sizeof(::TSWPSOS::SpecDropCapArchive)},
  { 210, 217, -1, sizeof(::TSWPSOS::SpecFontFeaturesArchive)},
  { 218, 225, -1, sizeof(::TSWPSOS::SpecLineSpacingArchive)},
  { 226, 233, -1, sizeof(::TSWPSOS::SpecListStyleArchive)},
  { 234, 241, -1, sizeof(::TSWPSOS::SpecListStyleBoolArrayArchive)},
  { 242, 249, -1, sizeof(::TSWPSOS::SpecListStyleFloatArrayArchive)},
  { 250, 257, -1, sizeof(::TSWPSOS::SpecListStyleImageDataArrayArchive)},
  { 258, 265, -1, sizeof(::TSWPSOS::SpecListStyleListLabelGeometryArrayArchive)},
  { 266, 273, -1, sizeof(::TSWPSOS::SpecListStyleListLabelTypeArrayArchive)},
  { 274, 281, -1, sizeof(::TSWPSOS::SpecListStyleListNumberTypeArrayArchive)},
  { 282, 289, -1, sizeof(::TSWPSOS::SpecListStyleStringArrayArchive)},
  { 290, 297, -1, sizeof(::TSWPSOS::SpecPaddingArchive)},
  { 298, 305, -1, sizeof(::TSWPSOS::SpecParagraphStyleArchive)},
  { 306, 313, -1, sizeof(::TSWPSOS::SpecRuleOffsetArchive)},
  { 314, 321, -1, sizeof(::TSWPSOS::SpecTabsArchive)},
  { 322, 390, -1, sizeof(::TSWPSOS::CharacterStylePropertyChangeSetArchive)},
  { 452, 476, -1, sizeof(::TSWPSOS::ColumnStylePropertyChangeSetArchive)},
  { 494, 506, -1, sizeof(::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive)},
  { 512, 525, -1, sizeof(::TSWPSOS::DropCapStylePropertyChangeSetArchive)},
  { 532, 564, -1, sizeof(::TSWPSOS::ListStylePropertyChangeSetArchive)},
  { 590, 648, -1, sizeof(::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive)},
  { 700, 759, -1, sizeof(::TSWPSOS::ParagraphStylePropertyChangeSetArchive)},
  { 812, 831, -1, sizeof(::TSWPSOS::ShapeStylePropertyChangeSetArchive)},
  { 844, 855, -1, sizeof(::TSWPSOS::TOCEntryStylePropertyChangeSetArchive)},
  { 860, 870, -1, sizeof(::TSWPSOS::StyleDiffArchive)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::TSWPSOS::_SpecSetCharacterStyleArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetColumnsArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetDropCapArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetFontFeaturesArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetLineSpacingArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetListStyleArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetListStyleBoolArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetListStyleFloatArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetListStyleImageDataArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetListStyleListLabelGeometryArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetListStyleListLabelTypeArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetListStyleListNumberTypeArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetListStyleStringArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetPaddingArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetParagraphStyleArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetRuleOffsetArchive_default_instance_._instance,
  &::TSWPSOS::_SpecSetTabsArchive_default_instance_._instance,
  &::TSWPSOS::_SpecCharacterStyleArchive_default_instance_._instance,
  &::TSWPSOS::_SpecColumnsArchive_default_instance_._instance,
  &::TSWPSOS::_SpecDropCapArchive_default_instance_._instance,
  &::TSWPSOS::_SpecFontFeaturesArchive_default_instance_._instance,
  &::TSWPSOS::_SpecLineSpacingArchive_default_instance_._instance,
  &::TSWPSOS::_SpecListStyleArchive_default_instance_._instance,
  &::TSWPSOS::_SpecListStyleBoolArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecListStyleFloatArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecListStyleImageDataArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecListStyleListLabelGeometryArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecListStyleListLabelTypeArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecListStyleListNumberTypeArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecListStyleStringArrayArchive_default_instance_._instance,
  &::TSWPSOS::_SpecPaddingArchive_default_instance_._instance,
  &::TSWPSOS::_SpecParagraphStyleArchive_default_instance_._instance,
  &::TSWPSOS::_SpecRuleOffsetArchive_default_instance_._instance,
  &::TSWPSOS::_SpecTabsArchive_default_instance_._instance,
  &::TSWPSOS::_CharacterStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSWPSOS::_ColumnStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSWPSOS::_DropCapSpecificStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSWPSOS::_DropCapStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSWPSOS::_ListStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSWPSOS::_ParagraphSpecificStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSWPSOS::_ParagraphStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSWPSOS::_ShapeStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSWPSOS::_TOCEntryStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSWPSOS::_StyleDiffArchive_default_instance_._instance,
};

const char descriptor_table_protodef_TSWPArchives_2esos_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026TSWPArchives.sos.proto\022\007TSWPSOS\032\025TSDAr"
  "chives.sos.proto\032\021TSPMessages.proto\032\025TSS"
  "Archives.sos.proto\032\022TSWPArchives.proto\"V"
  "\n\034SpecSetCharacterStyleArchive\022\'\n\017charac"
  "ter_style\030\001 \001(\0132\016.TSP.Reference\022\r\n\005unset"
  "\030\002 \002(\010\"M\n\025SpecSetColumnsArchive\022%\n\007colum"
  "ns\030\001 \001(\0132\024.TSWP.ColumnsArchive\022\r\n\005unset\030"
  "\002 \002(\010\"N\n\025SpecSetDropCapArchive\022&\n\010drop_c"
  "ap\030\001 \001(\0132\024.TSWP.DropCapArchive\022\r\n\005unset\030"
  "\002 \002(\010\"}\n\032SpecSetFontFeaturesArchive\022/\n\rf"
  "ont_features\030\001 \003(\0132\030.TSWP.FontFeatureArc"
  "hive\022\037\n\027font_features_undefined\030\002 \001(\010\022\r\n"
  "\005unset\030\003 \002(\010\"Z\n\031SpecSetLineSpacingArchiv"
  "e\022.\n\014line_spacing\030\001 \001(\0132\030.TSWP.LineSpaci"
  "ngArchive\022\r\n\005unset\030\002 \002(\010\"L\n\027SpecSetListS"
  "tyleArchive\022\"\n\nlist_style\030\001 \001(\0132\016.TSP.Re"
  "ference\022\r\n\005unset\030\002 \002(\010\"y\n SpecSetListSty"
  "leBoolArrayArchive\022\035\n\025list_style_bool_ar"
  "ray\030\001 \003(\010\022\'\n\037list_style_bool_array_undef"
  "ined\030\002 \001(\010\022\r\n\005unset\030\003 \002(\010\"|\n!SpecSetList"
  "StyleFloatArrayArchive\022\036\n\026list_style_flo"
  "at_array\030\001 \003(\002\022(\n list_style_float_array"
  "_undefined\030\002 \001(\010\022\r\n\005unset\030\003 \002(\010\"\255\001\n%Spec"
  "SetListStyleImageDataArrayArchive\022F\n\033lis"
  "t_style_image_data_array\030\001 \003(\0132!.TSWP.Li"
  "stStyleArchive.LabelImage\022-\n%list_style_"
  "image_data_array_undefined\030\002 \001(\010\022\r\n\005unse"
  "t\030\003 \002(\010\"\312\001\n-SpecSetListStyleListLabelGeo"
  "metryArrayArchive\022R\n$list_style_list_lab"
  "el_geometry_array\030\001 \003(\0132$.TSWP.ListStyle"
  "Archive.LabelGeometry\0226\n.list_style_list"
  "_label_geometry_array_undefined\030\002 \001(\010\022\r\n"
  "\005unset\030\003 \002(\010\"\272\001\n)SpecSetListStyleListLab"
  "elTypeArrayArchive\022J\n list_style_list_la"
  "bel_type_array\030\001 \003(\0162 .TSWP.ListStyleArc"
  "hive.LabelType\0222\n*list_style_list_label_"
  "type_array_undefined\030\002 \001(\010\022\r\n\005unset\030\003 \002("
  "\010\"\276\001\n*SpecSetListStyleListNumberTypeArra"
  "yArchive\022L\n!list_style_list_number_type_"
  "array\030\001 \003(\0162!.TSWP.ListStyleArchive.Numb"
  "erType\0223\n+list_style_list_number_type_ar"
  "ray_undefined\030\002 \001(\010\022\r\n\005unset\030\003 \002(\010\"\177\n\"Sp"
  "ecSetListStyleStringArrayArchive\022\037\n\027list"
  "_style_string_array\030\001 \003(\t\022)\n!list_style_"
  "string_array_undefined\030\002 \001(\010\022\r\n\005unset\030\003 "
  "\002(\010\"M\n\025SpecSetPaddingArchive\022%\n\007padding\030"
  "\001 \001(\0132\024.TSWP.PaddingArchive\022\r\n\005unset\030\002 \002"
  "(\010\"V\n\034SpecSetParagraphStyleArchive\022\'\n\017pa"
  "ragraph_style\030\001 \001(\0132\016.TSP.Reference\022\r\n\005u"
  "nset\030\002 \002(\010\"J\n\030SpecSetRuleOffsetArchive\022\037"
  "\n\013rule_offset\030\001 \001(\0132\n.TSP.Point\022\r\n\005unset"
  "\030\002 \002(\010\"D\n\022SpecSetTabsArchive\022\037\n\004tabs\030\001 \001"
  "(\0132\021.TSWP.TabsArchive\022\r\n\005unset\030\002 \002(\010\"d\n\031"
  "SpecCharacterStyleArchive\022G\n\030spec_set_ch"
  "aracter_style\030\001 \001(\0132%.TSWPSOS.SpecSetCha"
  "racterStyleArchive\"N\n\022SpecColumnsArchive"
  "\0228\n\020spec_set_columns\030\001 \001(\0132\036.TSWPSOS.Spe"
  "cSetColumnsArchive\"O\n\022SpecDropCapArchive"
  "\0229\n\021spec_set_drop_cap\030\001 \001(\0132\036.TSWPSOS.Sp"
  "ecSetDropCapArchive\"^\n\027SpecFontFeaturesA"
  "rchive\022C\n\026spec_set_font_features\030\001 \001(\0132#"
  ".TSWPSOS.SpecSetFontFeaturesArchive\"[\n\026S"
  "pecLineSpacingArchive\022A\n\025spec_set_line_s"
  "pacing\030\001 \001(\0132\".TSWPSOS.SpecSetLineSpacin"
  "gArchive\"U\n\024SpecListStyleArchive\022=\n\023spec"
  "_set_list_style\030\001 \001(\0132 .TSWPSOS.SpecSetL"
  "istStyleArchive\"r\n\035SpecListStyleBoolArra"
  "yArchive\022Q\n\036spec_set_list_style_bool_arr"
  "ay\030\001 \001(\0132).TSWPSOS.SpecSetListStyleBoolA"
  "rrayArchive\"u\n\036SpecListStyleFloatArrayAr"
  "chive\022S\n\037spec_set_list_style_float_array"
  "\030\001 \001(\0132*.TSWPSOS.SpecSetListStyleFloatAr"
  "rayArchive\"\202\001\n\"SpecListStyleImageDataArr"
  "ayArchive\022\\\n$spec_set_list_style_image_d"
  "ata_array\030\001 \001(\0132..TSWPSOS.SpecSetListSty"
  "leImageDataArrayArchive\"\233\001\n*SpecListStyl"
  "eListLabelGeometryArrayArchive\022m\n-spec_s"
  "et_list_style_list_label_geometry_array\030"
  "\001 \001(\01326.TSWPSOS.SpecSetListStyleListLabe"
  "lGeometryArrayArchive\"\217\001\n&SpecListStyleL"
  "istLabelTypeArrayArchive\022e\n)spec_set_lis"
  "t_style_list_label_type_array\030\001 \001(\01322.TS"
  "WPSOS.SpecSetListStyleListLabelTypeArray"
  "Archive\"\222\001\n\'SpecListStyleListNumberTypeA"
  "rrayArchive\022g\n*spec_set_list_style_list_"
  "number_type_array\030\001 \001(\01323.TSWPSOS.SpecSe"
  "tListStyleListNumberTypeArrayArchive\"x\n\037"
  "SpecListStyleStringArrayArchive\022U\n spec_"
  "set_list_style_string_array\030\001 \001(\0132+.TSWP"
  "SOS.SpecSetListStyleStringArrayArchive\"N"
  "\n\022SpecPaddingArchive\0228\n\020spec_set_padding"
  "\030\001 \001(\0132\036.TSWPSOS.SpecSetPaddingArchive\"d"
  "\n\031SpecParagraphStyleArchive\022G\n\030spec_set_"
  "paragraph_style\030\001 \001(\0132%.TSWPSOS.SpecSetP"
  "aragraphStyleArchive\"X\n\025SpecRuleOffsetAr"
  "chive\022\?\n\024spec_set_rule_offset\030\001 \001(\0132!.TS"
  "WPSOS.SpecSetRuleOffsetArchive\"E\n\017SpecTa"
  "bsArchive\0222\n\rspec_set_tabs\030\001 \001(\0132\033.TSWPS"
  "OS.SpecSetTabsArchive\"\365\024\n&CharacterStyle"
  "PropertyChangeSetArchive\0221\n\016baseline_shi"
  "ft\030\001 \001(\0132\031.TSSSOS.SpecDoubleArchive\022 \n\030b"
  "aseline_shift_undefined\030\002 \001(\010\0222\n\016capital"
  "ization\030\003 \001(\0132\032.TSSSOS.SpecIntegerArchiv"
  "e\022 \n\030capitalization_undefined\030\004 \001(\010\022:\n\027c"
  "ompatibility_font_name\030\005 \001(\0132\031.TSSSOS.Sp"
  "ecStringArchive\022)\n!compatibility_font_na"
  "me_undefined\030\006 \001(\010\0221\n\016emphasis_marks\030\007 \001"
  "(\0132\031.TSSSOS.SpecStringArchive\022 \n\030emphasi"
  "s_marks_undefined\030\010 \001(\010\022%\n\004bold\030\t \001(\0132\027."
  "TSSSOS.SpecBoolArchive\022\026\n\016bold_undefined"
  "\030\n \001(\010\022\'\n\006italic\030\013 \001(\0132\027.TSSSOS.SpecBool"
  "Archive\022\030\n\020italic_undefined\030\014 \001(\010\0227\n\rfon"
  "t_features\030\r \001(\0132 .TSWPSOS.SpecFontFeatu"
  "resArchive\022\037\n\027font_features_undefined\030\016 "
  "\001(\010\022,\n\tfont_name\030\017 \001(\0132\031.TSSSOS.SpecStri"
  "ngArchive\022\033\n\023font_name_undefined\030\020 \001(\010\022,"
  "\n\tfont_size\030\021 \001(\0132\031.TSSSOS.SpecDoubleArc"
  "hive\022\033\n\023font_size_undefined\030\022 \001(\010\0222\n\017fon"
  "t_size_delta\030\023 \001(\0132\031.TSSSOS.SpecDoubleAr"
  "chive\022!\n\031font_size_delta_undefined\030\024 \001(\010"
  "\022*\n\007kerning\030\025 \001(\0132\031.TSSSOS.SpecDoubleArc"
  "hive\022\031\n\021kerning_undefined\030\026 \001(\010\022+\n\010langu"
  "age\030\027 \001(\0132\031.TSSSOS.SpecStringArchive\022\032\n\022"
  "language_undefined\030\030 \001(\010\022-\n\tligatures\030\031 "
  "\001(\0132\032.TSSSOS.SpecIntegerArchive\022\033\n\023ligat"
  "ures_undefined\030\032 \001(\010\022.\n\013text_shadow\030\033 \001("
  "\0132\031.TSDSOS.SpecShadowArchive\022\035\n\025text_sha"
  "dow_undefined\030\034 \001(\010\0222\n\020strikethru_color\030"
  "\035 \001(\0132\030.TSSSOS.SpecColorArchive\022\"\n\032strik"
  "ethru_color_undefined\030\036 \001(\010\022.\n\nstrikethr"
  "u\030\037 \001(\0132\032.TSSSOS.SpecIntegerArchive\022\034\n\024s"
  "trikethru_undefined\030  \001(\010\0223\n\020strikethru_"
  "width\030! \001(\0132\031.TSSSOS.SpecDoubleArchive\022\""
  "\n\032strikethru_width_undefined\030\" \001(\010\022/\n\013su"
  "perscript\030# \001(\0132\032.TSSSOS.SpecIntegerArch"
  "ive\022\035\n\025superscript_undefined\030$ \001(\010\0221\n\017te"
  "xt_background\030% \001(\0132\030.TSSSOS.SpecColorAr"
  "chive\022!\n\031text_background_undefined\030& \001(\010"
  "\022+\n\010tracking\030\' \001(\0132\031.TSSSOS.SpecDoubleAr"
  "chive\022\032\n\022tracking_undefined\030( \001(\010\0221\n\017und"
  "erline_color\030) \001(\0132\030.TSSSOS.SpecColorArc"
  "hive\022!\n\031underline_color_undefined\030* \001(\010\022"
  "-\n\tunderline\030+ \001(\0132\032.TSSSOS.SpecIntegerA"
  "rchive\022\033\n\023underline_undefined\030, \001(\010\0222\n\017u"
  "nderline_width\030- \001(\0132\031.TSSSOS.SpecDouble"
  "Archive\022!\n\031underline_width_undefined\030. \001"
  "(\010\0220\n\017word_strikethru\030/ \001(\0132\027.TSSSOS.Spe"
  "cBoolArchive\022!\n\031word_strikethru_undefine"
  "d\0300 \001(\010\022/\n\016word_underline\0301 \001(\0132\027.TSSSOS"
  ".SpecBoolArchive\022 \n\030word_underline_undef"
  "ined\0302 \001(\010\0225\n\021writing_direction\0303 \001(\0132\032."
  "TSSSOS.SpecIntegerArchive\022#\n\033writing_dir"
  "ection_undefined\0304 \001(\010\0224\n\023is_named_point"
  "_size\0305 \001(\0132\027.TSSSOS.SpecBoolArchive\022%\n\035"
  "is_named_point_size_undefined\0306 \001(\010\022@\n\037c"
  "apitalization_uses_linguistics\0307 \001(\0132\027.T"
  "SSSOS.SpecBoolArchive\0221\n)capitalization_"
  "uses_linguistics_undefined\0308 \001(\010\0223\n\020char"
  "acter_stroke\0309 \001(\0132\031.TSDSOS.SpecStrokeAr"
  "chive\022\"\n\032character_stroke_undefined\030: \001("
  "\010\022/\n\016character_fill\030; \001(\0132\027.TSDSOS.SpecF"
  "illArchive\022 \n\030character_fill_undefined\030<"
  " \001(\010\022J\n)character_fill_should_fill_text_"
  "container\030= \001(\0132\027.TSSSOS.SpecBoolArchive"
  "\022;\n3character_fill_should_fill_text_cont"
  "ainer_undefined\030> \001(\010\"\210\006\n#ColumnStylePro"
  "pertyChangeSetArchive\022,\n\007columns\030\001 \001(\0132\033"
  ".TSWPSOS.SpecColumnsArchive\022\031\n\021columns_u"
  "ndefined\030\002 \001(\010\022+\n\ncontinuous\030\003 \001(\0132\027.TSS"
  "SOS.SpecBoolArchive\022\034\n\024continuous_undefi"
  "ned\030\004 \001(\010\022,\n\007margins\030\005 \001(\0132\033.TSWPSOS.Spe"
  "cPaddingArchive\022\031\n\021margins_undefined\030\006 \001"
  "(\010\0227\n\024min_horizontal_inset\030\007 \001(\0132\031.TSSSO"
  "S.SpecDoubleArchive\022&\n\036min_horizontal_in"
  "set_undefined\030\010 \001(\010\022,\n\007padding\030\t \001(\0132\033.T"
  "SWPSOS.SpecPaddingArchive\022\031\n\021padding_und"
  "efined\030\n \001(\010\022.\n\rshrink_to_fit\030\013 \001(\0132\027.TS"
  "SSOS.SpecBoolArchive\022\037\n\027shrink_to_fit_un"
  "defined\030\014 \001(\010\0226\n\022vertical_alignment\030\r \001("
  "\0132\032.TSSSOS.SpecIntegerArchive\022$\n\034vertica"
  "l_alignment_undefined\030\016 \001(\010\022.\n\rvertical_"
  "text\030\017 \001(\0132\027.TSSSOS.SpecBoolArchive\022\037\n\027v"
  "ertical_text_undefined\030\020 \001(\010\0225\n\021writing_"
  "direction\030\021 \001(\0132\032.TSSSOS.SpecIntegerArch"
  "ive\022#\n\033writing_direction_undefined\030\022 \001(\010"
  "\"\305\002\n,DropCapSpecificStylePropertyChangeS"
  "etArchive\0223\n\016drop_cap_model\030\001 \001(\0132\033.TSWP"
  "SOS.SpecDropCapArchive\022 \n\030drop_cap_model"
  "_undefined\030\002 \001(\010\0228\n\025drop_cap_shape_strok"
  "e\030\003 \001(\0132\031.TSDSOS.SpecStrokeArchive\022\'\n\037dr"
  "op_cap_shape_stroke_undefined\030\004 \001(\010\0224\n\023d"
  "rop_cap_shape_fill\030\005 \001(\0132\027.TSDSOS.SpecFi"
  "llArchive\022%\n\035drop_cap_shape_fill_undefin"
  "ed\030\006 \001(\010\"\375\002\n$DropCapStylePropertyChangeS"
  "etArchive\022>\n\005super\030\001 \002(\0132/.TSWPSOS.Chara"
  "cterStylePropertyChangeSetArchive\0223\n\016dro"
  "p_cap_model\030\002 \001(\0132\033.TSWPSOS.SpecDropCapA"
  "rchive\022 \n\030drop_cap_model_undefined\030\003 \001(\010"
  "\0228\n\025drop_cap_shape_stroke\030\004 \001(\0132\031.TSDSOS"
  ".SpecStrokeArchive\022\'\n\037drop_cap_shape_str"
  "oke_undefined\030\005 \001(\010\0224\n\023drop_cap_shape_fi"
  "ll\030\006 \001(\0132\027.TSDSOS.SpecFillArchive\022%\n\035dro"
  "p_cap_shape_fill_undefined\030\007 \001(\010\"\317\013\n!Lis"
  "tStylePropertyChangeSetArchive\0221\n\017list_f"
  "ont_color\030\001 \001(\0132\030.TSSSOS.SpecColorArchiv"
  "e\022!\n\031list_font_color_undefined\030\002 \001(\010\022,\n\t"
  "font_name\030\003 \001(\0132\031.TSSSOS.SpecStringArchi"
  "ve\022\033\n\023font_name_undefined\030\004 \001(\010\022O\n\036list_"
  "classic_text_indent_array\030\005 \001(\0132\'.TSWPSO"
  "S.SpecListStyleFloatArrayArchive\0220\n(list"
  "_classic_text_indent_array_undefined\030\006 \001"
  "(\010\022V\n\031list_label_geometry_array\030\007 \001(\01323."
  "TSWPSOS.SpecListStyleListLabelGeometryAr"
  "rayArchive\022+\n#list_label_geometry_array_"
  "undefined\030\010 \001(\010\022P\n\033list_label_image_data"
  "_array\030\t \001(\0132+.TSWPSOS.SpecListStyleImag"
  "eDataArrayArchive\022-\n%list_label_image_da"
  "ta_array_undefined\030\n \001(\010\022H\n\027list_label_i"
  "ndent_array\030\013 \001(\0132\'.TSWPSOS.SpecListStyl"
  "eFloatArrayArchive\022)\n!list_label_indent_"
  "array_undefined\030\014 \001(\010\022Q\n\027list_label_numb"
  "er_array\030\r \001(\01320.TSWPSOS.SpecListStyleLi"
  "stNumberTypeArrayArchive\022)\n!list_label_n"
  "umber_array_undefined\030\016 \001(\010\022N\n\036list_labe"
  "l_tiered_number_array\030\017 \001(\0132&.TSWPSOS.Sp"
  "ecListStyleBoolArrayArchive\0220\n(list_labe"
  "l_tiered_number_array_undefined\030\020 \001(\010\022.\n"
  "\013text_shadow\030\021 \001(\0132\031.TSDSOS.SpecShadowAr"
  "chive\022\035\n\025text_shadow_undefined\030\022 \001(\010\022I\n\027"
  "list_label_string_array\030\023 \001(\0132(.TSWPSOS."
  "SpecListStyleStringArrayArchive\022)\n!list_"
  "label_string_array_undefined\030\024 \001(\010\022G\n\026li"
  "st_text_indent_array\030\025 \001(\0132\'.TSWPSOS.Spe"
  "cListStyleFloatArrayArchive\022(\n list_text"
  "_indent_array_undefined\030\026 \001(\010\022N\n\025list_la"
  "bel_type_array\030\027 \001(\0132/.TSWPSOS.SpecListS"
  "tyleListLabelTypeArrayArchive\022\'\n\037list_la"
  "bel_type_array_undefined\030\030 \001(\010\0225\n\021writin"
  "g_direction\030\031 \001(\0132\032.TSSSOS.SpecIntegerAr"
  "chive\022#\n\033writing_direction_undefined\030\032 \001"
  "(\010\"\237\022\n.ParagraphSpecificStylePropertyCha"
  "ngeSetArchive\022-\n\talignment\030\001 \001(\0132\032.TSSSO"
  "S.SpecIntegerArchive\022\033\n\023alignment_undefi"
  "ned\030\002 \001(\010\022.\n\013decimal_tab\030\003 \001(\0132\031.TSSSOS."
  "SpecStringArchive\022\035\n\025decimal_tab_undefin"
  "ed\030\004 \001(\010\0224\n\021default_tab_stops\030\005 \001(\0132\031.TS"
  "SSOS.SpecDoubleArchive\022#\n\033default_tab_st"
  "ops_undefined\030\006 \001(\010\0220\n\016paragraph_fill\030\007 "
  "\001(\0132\030.TSSSOS.SpecColorArchive\022 \n\030paragra"
  "ph_fill_undefined\030\010 \001(\010\0224\n\021first_line_in"
  "dent\030\t \001(\0132\031.TSSSOS.SpecDoubleArchive\022#\n"
  "\033first_line_indent_undefined\030\n \001(\010\022E\n\031fo"
  "llowing_paragraph_style\030\013 \001(\0132\".TSWPSOS."
  "SpecParagraphStyleArchive\022+\n#following_p"
  "aragraph_style_undefined\030\014 \001(\010\022*\n\thyphen"
  "ate\030\r \001(\0132\027.TSSSOS.SpecBoolArchive\022\033\n\023hy"
  "phenate_undefined\030\016 \001(\010\0229\n\022initial_list_"
  "style\030\017 \001(\0132\035.TSWPSOS.SpecListStyleArchi"
  "ve\022$\n\034initial_list_style_undefined\030\020 \001(\010"
  "\0224\n\023keep_lines_together\030\021 \001(\0132\027.TSSSOS.S"
  "pecBoolArchive\022%\n\035keep_lines_together_un"
  "defined\030\022 \001(\010\022/\n\016keep_with_next\030\023 \001(\0132\027."
  "TSSSOS.SpecBoolArchive\022 \n\030keep_with_next"
  "_undefined\030\024 \001(\010\022.\n\013left_indent\030\025 \001(\0132\031."
  "TSSSOS.SpecDoubleArchive\022\035\n\025left_indent_"
  "undefined\030\026 \001(\010\0225\n\014line_spacing\030\027 \001(\0132\037."
  "TSWPSOS.SpecLineSpacingArchive\022\036\n\026line_s"
  "pacing_undefined\030\030 \001(\010\0221\n\routline_level\030"
  "\031 \001(\0132\032.TSSSOS.SpecIntegerArchive\022\037\n\027out"
  "line_level_undefined\030\032 \001(\010\0226\n\022outline_st"
  "yle_type\030\033 \001(\0132\032.TSSSOS.SpecIntegerArchi"
  "ve\022$\n\034outline_style_type_undefined\030\034 \001(\010"
  "\0222\n\021page_break_before\030\035 \001(\0132\027.TSSSOS.Spe"
  "cBoolArchive\022#\n\033page_break_before_undefi"
  "ned\030\036 \001(\010\0225\n\021paragraph_borders\030\037 \001(\0132\032.T"
  "SSSOS.SpecIntegerArchive\022#\n\033paragraph_bo"
  "rders_undefined\030  \001(\010\022=\n\025paragraph_rule_"
  "offset\030! \001(\0132\036.TSWPSOS.SpecRuleOffsetArc"
  "hive\022\'\n\037paragraph_rule_offset_undefined\030"
  "\" \001(\010\0227\n\024paragraph_rule_width\030# \001(\0132\031.TS"
  "SSOS.SpecDoubleArchive\022&\n\036paragraph_rule"
  "_width_undefined\030$ \001(\010\022/\n\014right_indent\030%"
  " \001(\0132\031.TSSSOS.SpecDoubleArchive\022\036\n\026right"
  "_indent_undefined\030& \001(\010\022.\n\013space_after\030\'"
  " \001(\0132\031.TSSSOS.SpecDoubleArchive\022\035\n\025space"
  "_after_undefined\030( \001(\010\022/\n\014space_before\030)"
  " \001(\0132\031.TSSSOS.SpecDoubleArchive\022\036\n\026space"
  "_before_undefined\030* \001(\010\0223\n\020paragraph_str"
  "oke\030+ \001(\0132\031.TSDSOS.SpecStrokeArchive\022\"\n\032"
  "paragraph_stroke_undefined\030, \001(\010\022&\n\004tabs"
  "\030- \001(\0132\030.TSWPSOS.SpecTabsArchive\022\026\n\016tabs"
  "_undefined\030. \001(\010\0221\n\rwidow_control\030/ \001(\0132"
  "\032.TSSSOS.SpecIntegerArchive\022\037\n\027widow_con"
  "trol_undefined\0300 \001(\010\0227\n\026show_in_bookmark"
  "s_list\0301 \001(\0132\027.TSSSOS.SpecBoolArchive\022(\n"
  " show_in_bookmarks_list_undefined\0302 \001(\010\022"
  "8\n\027show_in_t_o_c_navigator\0303 \001(\0132\027.TSSSO"
  "S.SpecBoolArchive\022)\n!show_in_t_o_c_navig"
  "ator_undefined\0304 \001(\010\"\327\022\n&ParagraphStyleP"
  "ropertyChangeSetArchive\022>\n\005super\030\001 \002(\0132/"
  ".TSWPSOS.CharacterStylePropertyChangeSet"
  "Archive\022-\n\talignment\030\002 \001(\0132\032.TSSSOS.Spec"
  "IntegerArchive\022\033\n\023alignment_undefined\030\003 "
  "\001(\010\022.\n\013decimal_tab\030\004 \001(\0132\031.TSSSOS.SpecSt"
  "ringArchive\022\035\n\025decimal_tab_undefined\030\005 \001"
  "(\010\0224\n\021default_tab_stops\030\006 \001(\0132\031.TSSSOS.S"
  "pecDoubleArchive\022#\n\033default_tab_stops_un"
  "defined\030\007 \001(\010\0220\n\016paragraph_fill\030\010 \001(\0132\030."
  "TSSSOS.SpecColorArchive\022 \n\030paragraph_fil"
  "l_undefined\030\t \001(\010\0224\n\021first_line_indent\030\n"
  " \001(\0132\031.TSSSOS.SpecDoubleArchive\022#\n\033first"
  "_line_indent_undefined\030\013 \001(\010\022E\n\031followin"
  "g_paragraph_style\030\014 \001(\0132\".TSWPSOS.SpecPa"
  "ragraphStyleArchive\022+\n#following_paragra"
  "ph_style_undefined\030\r \001(\010\022*\n\thyphenate\030\016 "
  "\001(\0132\027.TSSSOS.SpecBoolArchive\022\033\n\023hyphenat"
  "e_undefined\030\017 \001(\010\0229\n\022initial_list_style\030"
  "\020 \001(\0132\035.TSWPSOS.SpecListStyleArchive\022$\n\034"
  "initial_list_style_undefined\030\021 \001(\010\0224\n\023ke"
  "ep_lines_together\030\022 \001(\0132\027.TSSSOS.SpecBoo"
  "lArchive\022%\n\035keep_lines_together_undefine"
  "d\030\023 \001(\010\022/\n\016keep_with_next\030\024 \001(\0132\027.TSSSOS"
  ".SpecBoolArchive\022 \n\030keep_with_next_undef"
  "ined\030\025 \001(\010\022.\n\013left_indent\030\026 \001(\0132\031.TSSSOS"
  ".SpecDoubleArchive\022\035\n\025left_indent_undefi"
  "ned\030\027 \001(\010\0225\n\014line_spacing\030\030 \001(\0132\037.TSWPSO"
  "S.SpecLineSpacingArchive\022\036\n\026line_spacing"
  "_undefined\030\031 \001(\010\0221\n\routline_level\030\032 \001(\0132"
  "\032.TSSSOS.SpecIntegerArchive\022\037\n\027outline_l"
  "evel_undefined\030\033 \001(\010\0226\n\022outline_style_ty"
  "pe\030\034 \001(\0132\032.TSSSOS.SpecIntegerArchive\022$\n\034"
  "outline_style_type_undefined\030\035 \001(\010\0222\n\021pa"
  "ge_break_before\030\036 \001(\0132\027.TSSSOS.SpecBoolA"
  "rchive\022#\n\033page_break_before_undefined\030\037 "
  "\001(\010\0225\n\021paragraph_borders\030  \001(\0132\032.TSSSOS."
  "SpecIntegerArchive\022#\n\033paragraph_borders_"
  "undefined\030! \001(\010\022=\n\025paragraph_rule_offset"
  "\030\" \001(\0132\036.TSWPSOS.SpecRuleOffsetArchive\022\'"
  "\n\037paragraph_rule_offset_undefined\030# \001(\010\022"
  "7\n\024paragraph_rule_width\030$ \001(\0132\031.TSSSOS.S"
  "pecDoubleArchive\022&\n\036paragraph_rule_width"
  "_undefined\030% \001(\010\022/\n\014right_indent\030& \001(\0132\031"
  ".TSSSOS.SpecDoubleArchive\022\036\n\026right_inden"
  "t_undefined\030\' \001(\010\022.\n\013space_after\030( \001(\0132\031"
  ".TSSSOS.SpecDoubleArchive\022\035\n\025space_after"
  "_undefined\030) \001(\010\022/\n\014space_before\030* \001(\0132\031"
  ".TSSSOS.SpecDoubleArchive\022\036\n\026space_befor"
  "e_undefined\030+ \001(\010\0223\n\020paragraph_stroke\030, "
  "\001(\0132\031.TSDSOS.SpecStrokeArchive\022\"\n\032paragr"
  "aph_stroke_undefined\030- \001(\010\022&\n\004tabs\030. \001(\013"
  "2\030.TSWPSOS.SpecTabsArchive\022\026\n\016tabs_undef"
  "ined\030/ \001(\010\0221\n\rwidow_control\0300 \001(\0132\032.TSSS"
  "OS.SpecIntegerArchive\022\037\n\027widow_control_u"
  "ndefined\0301 \001(\010\0227\n\026show_in_bookmarks_list"
  "\0302 \001(\0132\027.TSSSOS.SpecBoolArchive\022(\n show_"
  "in_bookmarks_list_undefined\0303 \001(\010\0228\n\027sho"
  "w_in_t_o_c_navigator\0304 \001(\0132\027.TSSSOS.Spec"
  "BoolArchive\022)\n!show_in_t_o_c_navigator_u"
  "ndefined\0305 \001(\010\"\357\004\n\"ShapeStylePropertyCha"
  "ngeSetArchive\022=\n\005super\030\001 \002(\0132..TSDSOS.Ba"
  "seShapeStylePropertyChangeSetArchive\022,\n\007"
  "columns\030\002 \001(\0132\033.TSWPSOS.SpecColumnsArchi"
  "ve\022\031\n\021columns_undefined\030\003 \001(\010\022,\n\007padding"
  "\030\004 \001(\0132\033.TSWPSOS.SpecPaddingArchive\022\031\n\021p"
  "adding_undefined\030\005 \001(\010\0223\n\022shrink_text_to"
  "_fit\030\006 \001(\0132\027.TSSSOS.SpecBoolArchive\022$\n\034s"
  "hrink_text_to_fit_undefined\030\007 \001(\010\0226\n\022ver"
  "tical_alignment\030\010 \001(\0132\032.TSSSOS.SpecInteg"
  "erArchive\022$\n\034vertical_alignment_undefine"
  "d\030\t \001(\010\022.\n\rvertical_text\030\n \001(\0132\027.TSSSOS."
  "SpecBoolArchive\022\037\n\027vertical_text_undefin"
  "ed\030\013 \001(\010\022C\n\027default_paragraph_style\030\014 \001("
  "\0132\".TSWPSOS.SpecParagraphStyleArchive\022)\n"
  "!default_paragraph_style_undefined\030\r \001(\010"
  "\"\262\002\n%TOCEntryStylePropertyChangeSetArchi"
  "ve\022>\n\005super\030\001 \002(\0132/.TSWPSOS.ParagraphSty"
  "lePropertyChangeSetArchive\0225\n\024toc_show_p"
  "age_number\030\002 \001(\0132\027.TSSSOS.SpecBoolArchiv"
  "e\022&\n\036toc_show_page_number_undefined\030\003 \001("
  "\010\022A\n\025toc_page_number_style\030\004 \001(\0132\".TSWPS"
  "OS.SpecCharacterStyleArchive\022\'\n\037toc_page"
  "_number_style_undefined\030\005 \001(\010\"\226\002\n\020StyleD"
  "iffArchive\022\035\n\005style\030\001 \001(\0132\016.TSP.Referenc"
  "e\022M\n\024character_change_set\030\002 \001(\0132/.TSWPSO"
  "S.CharacterStylePropertyChangeSetArchive"
  "\022M\n\024paragraph_change_set\030\003 \001(\0132/.TSWPSOS"
  ".ParagraphStylePropertyChangeSetArchive\022"
  "E\n\020shape_change_set\030\004 \001(\0132+.TSWPSOS.Shap"
  "eStylePropertyChangeSetArchive"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_TSWPArchives_2esos_2eproto_deps[4] = {
  &::descriptor_table_TSDArchives_2esos_2eproto,
  &::descriptor_table_TSPMessages_2eproto,
  &::descriptor_table_TSSArchives_2esos_2eproto,
  &::descriptor_table_TSWPArchives_2eproto,
};
static ::_pbi::once_flag descriptor_table_TSWPArchives_2esos_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_TSWPArchives_2esos_2eproto = {
    false, false, 15550, descriptor_table_protodef_TSWPArchives_2esos_2eproto,
    "TSWPArchives.sos.proto",
    &descriptor_table_TSWPArchives_2esos_2eproto_once, descriptor_table_TSWPArchives_2esos_2eproto_deps, 4, 44,
    schemas, file_default_instances, TableStruct_TSWPArchives_2esos_2eproto::offsets,
    file_level_metadata_TSWPArchives_2esos_2eproto, file_level_enum_descriptors_TSWPArchives_2esos_2eproto,
    file_level_service_descriptors_TSWPArchives_2esos_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_TSWPArchives_2esos_2eproto_getter() {
  return &descriptor_table_TSWPArchives_2esos_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_TSWPArchives_2esos_2eproto(&descriptor_table_TSWPArchives_2esos_2eproto);
namespace TSWPSOS {

// ===================================================================

class SpecSetCharacterStyleArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetCharacterStyleArchive>()._impl_._has_bits_);
  static const ::TSP::Reference& character_style(const SpecSetCharacterStyleArchive* msg);
  static void set_has_character_style(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSP::Reference&
SpecSetCharacterStyleArchive::_Internal::character_style(const SpecSetCharacterStyleArchive* msg) {
  return *msg->_impl_.character_style_;
}
void SpecSetCharacterStyleArchive::clear_character_style() {
  if (_impl_.character_style_ != nullptr) _impl_.character_style_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetCharacterStyleArchive::SpecSetCharacterStyleArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetCharacterStyleArchive)
}
SpecSetCharacterStyleArchive::SpecSetCharacterStyleArchive(const SpecSetCharacterStyleArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetCharacterStyleArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.character_style_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_character_style()) {
    _this->_impl_.character_style_ = new ::TSP::Reference(*from._impl_.character_style_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetCharacterStyleArchive)
}

inline void SpecSetCharacterStyleArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.character_style_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetCharacterStyleArchive::~SpecSetCharacterStyleArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetCharacterStyleArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetCharacterStyleArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.character_style_;
}

void SpecSetCharacterStyleArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetCharacterStyleArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetCharacterStyleArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.character_style_ != nullptr);
    _impl_.character_style_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetCharacterStyleArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSP.Reference character_style = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetCharacterStyleArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetCharacterStyleArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSP.Reference character_style = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::character_style(this),
        _Internal::character_style(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetCharacterStyleArchive)
  return target;
}

size_t SpecSetCharacterStyleArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetCharacterStyleArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSP.Reference character_style = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.character_style_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetCharacterStyleArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetCharacterStyleArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetCharacterStyleArchive::GetClassData() const { return &_class_data_; }


void SpecSetCharacterStyleArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetCharacterStyleArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetCharacterStyleArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetCharacterStyleArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_character_style()->::TSP::Reference::MergeFrom(
          from._internal_character_style());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetCharacterStyleArchive::CopyFrom(const SpecSetCharacterStyleArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetCharacterStyleArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetCharacterStyleArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_character_style()) {
    if (!_impl_.character_style_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetCharacterStyleArchive::InternalSwap(SpecSetCharacterStyleArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetCharacterStyleArchive, _impl_.unset_)
      + sizeof(SpecSetCharacterStyleArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetCharacterStyleArchive, _impl_.character_style_)>(
          reinterpret_cast<char*>(&_impl_.character_style_),
          reinterpret_cast<char*>(&other->_impl_.character_style_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetCharacterStyleArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[0]);
}

// ===================================================================

class SpecSetColumnsArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetColumnsArchive>()._impl_._has_bits_);
  static const ::TSWP::ColumnsArchive& columns(const SpecSetColumnsArchive* msg);
  static void set_has_columns(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSWP::ColumnsArchive&
SpecSetColumnsArchive::_Internal::columns(const SpecSetColumnsArchive* msg) {
  return *msg->_impl_.columns_;
}
void SpecSetColumnsArchive::clear_columns() {
  if (_impl_.columns_ != nullptr) _impl_.columns_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetColumnsArchive::SpecSetColumnsArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetColumnsArchive)
}
SpecSetColumnsArchive::SpecSetColumnsArchive(const SpecSetColumnsArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetColumnsArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.columns_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_columns()) {
    _this->_impl_.columns_ = new ::TSWP::ColumnsArchive(*from._impl_.columns_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetColumnsArchive)
}

inline void SpecSetColumnsArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.columns_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetColumnsArchive::~SpecSetColumnsArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetColumnsArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetColumnsArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.columns_;
}

void SpecSetColumnsArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetColumnsArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetColumnsArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.columns_ != nullptr);
    _impl_.columns_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetColumnsArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWP.ColumnsArchive columns = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_columns(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetColumnsArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetColumnsArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWP.ColumnsArchive columns = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::columns(this),
        _Internal::columns(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetColumnsArchive)
  return target;
}

size_t SpecSetColumnsArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetColumnsArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWP.ColumnsArchive columns = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.columns_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetColumnsArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetColumnsArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetColumnsArchive::GetClassData() const { return &_class_data_; }


void SpecSetColumnsArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetColumnsArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetColumnsArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetColumnsArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_columns()->::TSWP::ColumnsArchive::MergeFrom(
          from._internal_columns());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetColumnsArchive::CopyFrom(const SpecSetColumnsArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetColumnsArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetColumnsArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_columns()) {
    if (!_impl_.columns_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetColumnsArchive::InternalSwap(SpecSetColumnsArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetColumnsArchive, _impl_.unset_)
      + sizeof(SpecSetColumnsArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetColumnsArchive, _impl_.columns_)>(
          reinterpret_cast<char*>(&_impl_.columns_),
          reinterpret_cast<char*>(&other->_impl_.columns_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetColumnsArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[1]);
}

// ===================================================================

class SpecSetDropCapArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetDropCapArchive>()._impl_._has_bits_);
  static const ::TSWP::DropCapArchive& drop_cap(const SpecSetDropCapArchive* msg);
  static void set_has_drop_cap(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSWP::DropCapArchive&
SpecSetDropCapArchive::_Internal::drop_cap(const SpecSetDropCapArchive* msg) {
  return *msg->_impl_.drop_cap_;
}
void SpecSetDropCapArchive::clear_drop_cap() {
  if (_impl_.drop_cap_ != nullptr) _impl_.drop_cap_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetDropCapArchive::SpecSetDropCapArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetDropCapArchive)
}
SpecSetDropCapArchive::SpecSetDropCapArchive(const SpecSetDropCapArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetDropCapArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.drop_cap_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_drop_cap()) {
    _this->_impl_.drop_cap_ = new ::TSWP::DropCapArchive(*from._impl_.drop_cap_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetDropCapArchive)
}

inline void SpecSetDropCapArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.drop_cap_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetDropCapArchive::~SpecSetDropCapArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetDropCapArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetDropCapArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.drop_cap_;
}

void SpecSetDropCapArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetDropCapArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetDropCapArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.drop_cap_ != nullptr);
    _impl_.drop_cap_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetDropCapArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWP.DropCapArchive drop_cap = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_drop_cap(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetDropCapArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetDropCapArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWP.DropCapArchive drop_cap = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::drop_cap(this),
        _Internal::drop_cap(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetDropCapArchive)
  return target;
}

size_t SpecSetDropCapArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetDropCapArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWP.DropCapArchive drop_cap = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.drop_cap_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetDropCapArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetDropCapArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetDropCapArchive::GetClassData() const { return &_class_data_; }


void SpecSetDropCapArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetDropCapArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetDropCapArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetDropCapArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_drop_cap()->::TSWP::DropCapArchive::MergeFrom(
          from._internal_drop_cap());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetDropCapArchive::CopyFrom(const SpecSetDropCapArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetDropCapArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetDropCapArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetDropCapArchive::InternalSwap(SpecSetDropCapArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetDropCapArchive, _impl_.unset_)
      + sizeof(SpecSetDropCapArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetDropCapArchive, _impl_.drop_cap_)>(
          reinterpret_cast<char*>(&_impl_.drop_cap_),
          reinterpret_cast<char*>(&other->_impl_.drop_cap_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetDropCapArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[2]);
}

// ===================================================================

class SpecSetFontFeaturesArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetFontFeaturesArchive>()._impl_._has_bits_);
  static void set_has_font_features_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

void SpecSetFontFeaturesArchive::clear_font_features() {
  _impl_.font_features_.Clear();
}
SpecSetFontFeaturesArchive::SpecSetFontFeaturesArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetFontFeaturesArchive)
}
SpecSetFontFeaturesArchive::SpecSetFontFeaturesArchive(const SpecSetFontFeaturesArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetFontFeaturesArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.font_features_){from._impl_.font_features_}
    , decltype(_impl_.font_features_undefined_){}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.font_features_undefined_, &from._impl_.font_features_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unset_) -
    reinterpret_cast<char*>(&_impl_.font_features_undefined_)) + sizeof(_impl_.unset_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetFontFeaturesArchive)
}

inline void SpecSetFontFeaturesArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.font_features_){arena}
    , decltype(_impl_.font_features_undefined_){false}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetFontFeaturesArchive::~SpecSetFontFeaturesArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetFontFeaturesArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetFontFeaturesArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.font_features_.~RepeatedPtrField();
}

void SpecSetFontFeaturesArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetFontFeaturesArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetFontFeaturesArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.font_features_.Clear();
  ::memset(&_impl_.font_features_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.unset_) -
      reinterpret_cast<char*>(&_impl_.font_features_undefined_)) + sizeof(_impl_.unset_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetFontFeaturesArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TSWP.FontFeatureArchive font_features = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_font_features(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool font_features_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_font_features_undefined(&has_bits);
          _impl_.font_features_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetFontFeaturesArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetFontFeaturesArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TSWP.FontFeatureArchive font_features = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_font_features_size()); i < n; i++) {
    const auto& repfield = this->_internal_font_features(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool font_features_undefined = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_font_features_undefined(), target);
  }

  // required bool unset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetFontFeaturesArchive)
  return target;
}

size_t SpecSetFontFeaturesArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetFontFeaturesArchive)
  size_t total_size = 0;

  // required bool unset = 3;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TSWP.FontFeatureArchive font_features = 1;
  total_size += 1UL * this->_internal_font_features_size();
  for (const auto& msg : this->_impl_.font_features_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional bool font_features_undefined = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetFontFeaturesArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetFontFeaturesArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetFontFeaturesArchive::GetClassData() const { return &_class_data_; }


void SpecSetFontFeaturesArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetFontFeaturesArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetFontFeaturesArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetFontFeaturesArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.font_features_.MergeFrom(from._impl_.font_features_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.font_features_undefined_ = from._impl_.font_features_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetFontFeaturesArchive::CopyFrom(const SpecSetFontFeaturesArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetFontFeaturesArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetFontFeaturesArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.font_features_))
    return false;
  return true;
}

void SpecSetFontFeaturesArchive::InternalSwap(SpecSetFontFeaturesArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.font_features_.InternalSwap(&other->_impl_.font_features_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetFontFeaturesArchive, _impl_.unset_)
      + sizeof(SpecSetFontFeaturesArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetFontFeaturesArchive, _impl_.font_features_undefined_)>(
          reinterpret_cast<char*>(&_impl_.font_features_undefined_),
          reinterpret_cast<char*>(&other->_impl_.font_features_undefined_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetFontFeaturesArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[3]);
}

// ===================================================================

class SpecSetLineSpacingArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetLineSpacingArchive>()._impl_._has_bits_);
  static const ::TSWP::LineSpacingArchive& line_spacing(const SpecSetLineSpacingArchive* msg);
  static void set_has_line_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSWP::LineSpacingArchive&
SpecSetLineSpacingArchive::_Internal::line_spacing(const SpecSetLineSpacingArchive* msg) {
  return *msg->_impl_.line_spacing_;
}
void SpecSetLineSpacingArchive::clear_line_spacing() {
  if (_impl_.line_spacing_ != nullptr) _impl_.line_spacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetLineSpacingArchive::SpecSetLineSpacingArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetLineSpacingArchive)
}
SpecSetLineSpacingArchive::SpecSetLineSpacingArchive(const SpecSetLineSpacingArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetLineSpacingArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.line_spacing_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_line_spacing()) {
    _this->_impl_.line_spacing_ = new ::TSWP::LineSpacingArchive(*from._impl_.line_spacing_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetLineSpacingArchive)
}

inline void SpecSetLineSpacingArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.line_spacing_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetLineSpacingArchive::~SpecSetLineSpacingArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetLineSpacingArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetLineSpacingArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.line_spacing_;
}

void SpecSetLineSpacingArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetLineSpacingArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetLineSpacingArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.line_spacing_ != nullptr);
    _impl_.line_spacing_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetLineSpacingArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWP.LineSpacingArchive line_spacing = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetLineSpacingArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetLineSpacingArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWP.LineSpacingArchive line_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::line_spacing(this),
        _Internal::line_spacing(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetLineSpacingArchive)
  return target;
}

size_t SpecSetLineSpacingArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetLineSpacingArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWP.LineSpacingArchive line_spacing = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.line_spacing_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetLineSpacingArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetLineSpacingArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetLineSpacingArchive::GetClassData() const { return &_class_data_; }


void SpecSetLineSpacingArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetLineSpacingArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetLineSpacingArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetLineSpacingArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_line_spacing()->::TSWP::LineSpacingArchive::MergeFrom(
          from._internal_line_spacing());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetLineSpacingArchive::CopyFrom(const SpecSetLineSpacingArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetLineSpacingArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetLineSpacingArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetLineSpacingArchive::InternalSwap(SpecSetLineSpacingArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetLineSpacingArchive, _impl_.unset_)
      + sizeof(SpecSetLineSpacingArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetLineSpacingArchive, _impl_.line_spacing_)>(
          reinterpret_cast<char*>(&_impl_.line_spacing_),
          reinterpret_cast<char*>(&other->_impl_.line_spacing_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetLineSpacingArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[4]);
}

// ===================================================================

class SpecSetListStyleArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetListStyleArchive>()._impl_._has_bits_);
  static const ::TSP::Reference& list_style(const SpecSetListStyleArchive* msg);
  static void set_has_list_style(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSP::Reference&
SpecSetListStyleArchive::_Internal::list_style(const SpecSetListStyleArchive* msg) {
  return *msg->_impl_.list_style_;
}
void SpecSetListStyleArchive::clear_list_style() {
  if (_impl_.list_style_ != nullptr) _impl_.list_style_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetListStyleArchive::SpecSetListStyleArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetListStyleArchive)
}
SpecSetListStyleArchive::SpecSetListStyleArchive(const SpecSetListStyleArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetListStyleArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_list_style()) {
    _this->_impl_.list_style_ = new ::TSP::Reference(*from._impl_.list_style_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetListStyleArchive)
}

inline void SpecSetListStyleArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetListStyleArchive::~SpecSetListStyleArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetListStyleArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetListStyleArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.list_style_;
}

void SpecSetListStyleArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetListStyleArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetListStyleArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.list_style_ != nullptr);
    _impl_.list_style_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetListStyleArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSP.Reference list_style = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetListStyleArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetListStyleArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSP.Reference list_style = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::list_style(this),
        _Internal::list_style(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetListStyleArchive)
  return target;
}

size_t SpecSetListStyleArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetListStyleArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSP.Reference list_style = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.list_style_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetListStyleArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetListStyleArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetListStyleArchive::GetClassData() const { return &_class_data_; }


void SpecSetListStyleArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetListStyleArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetListStyleArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetListStyleArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_list_style()->::TSP::Reference::MergeFrom(
          from._internal_list_style());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetListStyleArchive::CopyFrom(const SpecSetListStyleArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetListStyleArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetListStyleArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_list_style()) {
    if (!_impl_.list_style_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetListStyleArchive::InternalSwap(SpecSetListStyleArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetListStyleArchive, _impl_.unset_)
      + sizeof(SpecSetListStyleArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetListStyleArchive, _impl_.list_style_)>(
          reinterpret_cast<char*>(&_impl_.list_style_),
          reinterpret_cast<char*>(&other->_impl_.list_style_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetListStyleArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[5]);
}

// ===================================================================

class SpecSetListStyleBoolArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetListStyleBoolArrayArchive>()._impl_._has_bits_);
  static void set_has_list_style_bool_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

SpecSetListStyleBoolArrayArchive::SpecSetListStyleBoolArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetListStyleBoolArrayArchive)
}
SpecSetListStyleBoolArrayArchive::SpecSetListStyleBoolArrayArchive(const SpecSetListStyleBoolArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetListStyleBoolArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_bool_array_){from._impl_.list_style_bool_array_}
    , decltype(_impl_.list_style_bool_array_undefined_){}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.list_style_bool_array_undefined_, &from._impl_.list_style_bool_array_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unset_) -
    reinterpret_cast<char*>(&_impl_.list_style_bool_array_undefined_)) + sizeof(_impl_.unset_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetListStyleBoolArrayArchive)
}

inline void SpecSetListStyleBoolArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_bool_array_){arena}
    , decltype(_impl_.list_style_bool_array_undefined_){false}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetListStyleBoolArrayArchive::~SpecSetListStyleBoolArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetListStyleBoolArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetListStyleBoolArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.list_style_bool_array_.~RepeatedField();
}

void SpecSetListStyleBoolArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetListStyleBoolArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetListStyleBoolArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_style_bool_array_.Clear();
  ::memset(&_impl_.list_style_bool_array_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.unset_) -
      reinterpret_cast<char*>(&_impl_.list_style_bool_array_undefined_)) + sizeof(_impl_.unset_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetListStyleBoolArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bool list_style_bool_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_list_style_bool_array(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_list_style_bool_array(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_style_bool_array_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_list_style_bool_array_undefined(&has_bits);
          _impl_.list_style_bool_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetListStyleBoolArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetListStyleBoolArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool list_style_bool_array = 1;
  for (int i = 0, n = this->_internal_list_style_bool_array_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_list_style_bool_array(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool list_style_bool_array_undefined = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_list_style_bool_array_undefined(), target);
  }

  // required bool unset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetListStyleBoolArrayArchive)
  return target;
}

size_t SpecSetListStyleBoolArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetListStyleBoolArrayArchive)
  size_t total_size = 0;

  // required bool unset = 3;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool list_style_bool_array = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_list_style_bool_array_size());
    size_t data_size = 1UL * count;
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_list_style_bool_array_size());
    total_size += data_size;
  }

  // optional bool list_style_bool_array_undefined = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetListStyleBoolArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetListStyleBoolArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetListStyleBoolArrayArchive::GetClassData() const { return &_class_data_; }


void SpecSetListStyleBoolArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetListStyleBoolArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetListStyleBoolArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetListStyleBoolArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.list_style_bool_array_.MergeFrom(from._impl_.list_style_bool_array_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.list_style_bool_array_undefined_ = from._impl_.list_style_bool_array_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetListStyleBoolArrayArchive::CopyFrom(const SpecSetListStyleBoolArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetListStyleBoolArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetListStyleBoolArrayArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetListStyleBoolArrayArchive::InternalSwap(SpecSetListStyleBoolArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.list_style_bool_array_.InternalSwap(&other->_impl_.list_style_bool_array_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetListStyleBoolArrayArchive, _impl_.unset_)
      + sizeof(SpecSetListStyleBoolArrayArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetListStyleBoolArrayArchive, _impl_.list_style_bool_array_undefined_)>(
          reinterpret_cast<char*>(&_impl_.list_style_bool_array_undefined_),
          reinterpret_cast<char*>(&other->_impl_.list_style_bool_array_undefined_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetListStyleBoolArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[6]);
}

// ===================================================================

class SpecSetListStyleFloatArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetListStyleFloatArrayArchive>()._impl_._has_bits_);
  static void set_has_list_style_float_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

SpecSetListStyleFloatArrayArchive::SpecSetListStyleFloatArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetListStyleFloatArrayArchive)
}
SpecSetListStyleFloatArrayArchive::SpecSetListStyleFloatArrayArchive(const SpecSetListStyleFloatArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetListStyleFloatArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_float_array_){from._impl_.list_style_float_array_}
    , decltype(_impl_.list_style_float_array_undefined_){}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.list_style_float_array_undefined_, &from._impl_.list_style_float_array_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unset_) -
    reinterpret_cast<char*>(&_impl_.list_style_float_array_undefined_)) + sizeof(_impl_.unset_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetListStyleFloatArrayArchive)
}

inline void SpecSetListStyleFloatArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_float_array_){arena}
    , decltype(_impl_.list_style_float_array_undefined_){false}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetListStyleFloatArrayArchive::~SpecSetListStyleFloatArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetListStyleFloatArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetListStyleFloatArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.list_style_float_array_.~RepeatedField();
}

void SpecSetListStyleFloatArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetListStyleFloatArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetListStyleFloatArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_style_float_array_.Clear();
  ::memset(&_impl_.list_style_float_array_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.unset_) -
      reinterpret_cast<char*>(&_impl_.list_style_float_array_undefined_)) + sizeof(_impl_.unset_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetListStyleFloatArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float list_style_float_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_list_style_float_array(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
            ptr += sizeof(float);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<13>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_list_style_float_array(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_style_float_array_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_list_style_float_array_undefined(&has_bits);
          _impl_.list_style_float_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetListStyleFloatArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetListStyleFloatArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float list_style_float_array = 1;
  for (int i = 0, n = this->_internal_list_style_float_array_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_list_style_float_array(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool list_style_float_array_undefined = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_list_style_float_array_undefined(), target);
  }

  // required bool unset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetListStyleFloatArrayArchive)
  return target;
}

size_t SpecSetListStyleFloatArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetListStyleFloatArrayArchive)
  size_t total_size = 0;

  // required bool unset = 3;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float list_style_float_array = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_list_style_float_array_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_list_style_float_array_size());
    total_size += data_size;
  }

  // optional bool list_style_float_array_undefined = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetListStyleFloatArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetListStyleFloatArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetListStyleFloatArrayArchive::GetClassData() const { return &_class_data_; }


void SpecSetListStyleFloatArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetListStyleFloatArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetListStyleFloatArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetListStyleFloatArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.list_style_float_array_.MergeFrom(from._impl_.list_style_float_array_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.list_style_float_array_undefined_ = from._impl_.list_style_float_array_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetListStyleFloatArrayArchive::CopyFrom(const SpecSetListStyleFloatArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetListStyleFloatArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetListStyleFloatArrayArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetListStyleFloatArrayArchive::InternalSwap(SpecSetListStyleFloatArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.list_style_float_array_.InternalSwap(&other->_impl_.list_style_float_array_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetListStyleFloatArrayArchive, _impl_.unset_)
      + sizeof(SpecSetListStyleFloatArrayArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetListStyleFloatArrayArchive, _impl_.list_style_float_array_undefined_)>(
          reinterpret_cast<char*>(&_impl_.list_style_float_array_undefined_),
          reinterpret_cast<char*>(&other->_impl_.list_style_float_array_undefined_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetListStyleFloatArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[7]);
}

// ===================================================================

class SpecSetListStyleImageDataArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetListStyleImageDataArrayArchive>()._impl_._has_bits_);
  static void set_has_list_style_image_data_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

void SpecSetListStyleImageDataArrayArchive::clear_list_style_image_data_array() {
  _impl_.list_style_image_data_array_.Clear();
}
SpecSetListStyleImageDataArrayArchive::SpecSetListStyleImageDataArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetListStyleImageDataArrayArchive)
}
SpecSetListStyleImageDataArrayArchive::SpecSetListStyleImageDataArrayArchive(const SpecSetListStyleImageDataArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetListStyleImageDataArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_image_data_array_){from._impl_.list_style_image_data_array_}
    , decltype(_impl_.list_style_image_data_array_undefined_){}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.list_style_image_data_array_undefined_, &from._impl_.list_style_image_data_array_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unset_) -
    reinterpret_cast<char*>(&_impl_.list_style_image_data_array_undefined_)) + sizeof(_impl_.unset_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetListStyleImageDataArrayArchive)
}

inline void SpecSetListStyleImageDataArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_image_data_array_){arena}
    , decltype(_impl_.list_style_image_data_array_undefined_){false}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetListStyleImageDataArrayArchive::~SpecSetListStyleImageDataArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetListStyleImageDataArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetListStyleImageDataArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.list_style_image_data_array_.~RepeatedPtrField();
}

void SpecSetListStyleImageDataArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetListStyleImageDataArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetListStyleImageDataArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_style_image_data_array_.Clear();
  ::memset(&_impl_.list_style_image_data_array_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.unset_) -
      reinterpret_cast<char*>(&_impl_.list_style_image_data_array_undefined_)) + sizeof(_impl_.unset_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetListStyleImageDataArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TSWP.ListStyleArchive.LabelImage list_style_image_data_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list_style_image_data_array(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool list_style_image_data_array_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_list_style_image_data_array_undefined(&has_bits);
          _impl_.list_style_image_data_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetListStyleImageDataArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetListStyleImageDataArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TSWP.ListStyleArchive.LabelImage list_style_image_data_array = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_list_style_image_data_array_size()); i < n; i++) {
    const auto& repfield = this->_internal_list_style_image_data_array(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool list_style_image_data_array_undefined = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_list_style_image_data_array_undefined(), target);
  }

  // required bool unset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetListStyleImageDataArrayArchive)
  return target;
}

size_t SpecSetListStyleImageDataArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetListStyleImageDataArrayArchive)
  size_t total_size = 0;

  // required bool unset = 3;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TSWP.ListStyleArchive.LabelImage list_style_image_data_array = 1;
  total_size += 1UL * this->_internal_list_style_image_data_array_size();
  for (const auto& msg : this->_impl_.list_style_image_data_array_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional bool list_style_image_data_array_undefined = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetListStyleImageDataArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetListStyleImageDataArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetListStyleImageDataArrayArchive::GetClassData() const { return &_class_data_; }


void SpecSetListStyleImageDataArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetListStyleImageDataArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetListStyleImageDataArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetListStyleImageDataArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.list_style_image_data_array_.MergeFrom(from._impl_.list_style_image_data_array_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.list_style_image_data_array_undefined_ = from._impl_.list_style_image_data_array_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetListStyleImageDataArrayArchive::CopyFrom(const SpecSetListStyleImageDataArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetListStyleImageDataArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetListStyleImageDataArrayArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.list_style_image_data_array_))
    return false;
  return true;
}

void SpecSetListStyleImageDataArrayArchive::InternalSwap(SpecSetListStyleImageDataArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.list_style_image_data_array_.InternalSwap(&other->_impl_.list_style_image_data_array_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetListStyleImageDataArrayArchive, _impl_.unset_)
      + sizeof(SpecSetListStyleImageDataArrayArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetListStyleImageDataArrayArchive, _impl_.list_style_image_data_array_undefined_)>(
          reinterpret_cast<char*>(&_impl_.list_style_image_data_array_undefined_),
          reinterpret_cast<char*>(&other->_impl_.list_style_image_data_array_undefined_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetListStyleImageDataArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[8]);
}

// ===================================================================

class SpecSetListStyleListLabelGeometryArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetListStyleListLabelGeometryArrayArchive>()._impl_._has_bits_);
  static void set_has_list_style_list_label_geometry_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

void SpecSetListStyleListLabelGeometryArrayArchive::clear_list_style_list_label_geometry_array() {
  _impl_.list_style_list_label_geometry_array_.Clear();
}
SpecSetListStyleListLabelGeometryArrayArchive::SpecSetListStyleListLabelGeometryArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive)
}
SpecSetListStyleListLabelGeometryArrayArchive::SpecSetListStyleListLabelGeometryArrayArchive(const SpecSetListStyleListLabelGeometryArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetListStyleListLabelGeometryArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_list_label_geometry_array_){from._impl_.list_style_list_label_geometry_array_}
    , decltype(_impl_.list_style_list_label_geometry_array_undefined_){}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.list_style_list_label_geometry_array_undefined_, &from._impl_.list_style_list_label_geometry_array_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unset_) -
    reinterpret_cast<char*>(&_impl_.list_style_list_label_geometry_array_undefined_)) + sizeof(_impl_.unset_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive)
}

inline void SpecSetListStyleListLabelGeometryArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_list_label_geometry_array_){arena}
    , decltype(_impl_.list_style_list_label_geometry_array_undefined_){false}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetListStyleListLabelGeometryArrayArchive::~SpecSetListStyleListLabelGeometryArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetListStyleListLabelGeometryArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.list_style_list_label_geometry_array_.~RepeatedPtrField();
}

void SpecSetListStyleListLabelGeometryArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetListStyleListLabelGeometryArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_style_list_label_geometry_array_.Clear();
  ::memset(&_impl_.list_style_list_label_geometry_array_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.unset_) -
      reinterpret_cast<char*>(&_impl_.list_style_list_label_geometry_array_undefined_)) + sizeof(_impl_.unset_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetListStyleListLabelGeometryArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TSWP.ListStyleArchive.LabelGeometry list_style_list_label_geometry_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_list_style_list_label_geometry_array(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool list_style_list_label_geometry_array_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_list_style_list_label_geometry_array_undefined(&has_bits);
          _impl_.list_style_list_label_geometry_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetListStyleListLabelGeometryArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TSWP.ListStyleArchive.LabelGeometry list_style_list_label_geometry_array = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_list_style_list_label_geometry_array_size()); i < n; i++) {
    const auto& repfield = this->_internal_list_style_list_label_geometry_array(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool list_style_list_label_geometry_array_undefined = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_list_style_list_label_geometry_array_undefined(), target);
  }

  // required bool unset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive)
  return target;
}

size_t SpecSetListStyleListLabelGeometryArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive)
  size_t total_size = 0;

  // required bool unset = 3;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TSWP.ListStyleArchive.LabelGeometry list_style_list_label_geometry_array = 1;
  total_size += 1UL * this->_internal_list_style_list_label_geometry_array_size();
  for (const auto& msg : this->_impl_.list_style_list_label_geometry_array_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional bool list_style_list_label_geometry_array_undefined = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetListStyleListLabelGeometryArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetListStyleListLabelGeometryArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetListStyleListLabelGeometryArrayArchive::GetClassData() const { return &_class_data_; }


void SpecSetListStyleListLabelGeometryArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetListStyleListLabelGeometryArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetListStyleListLabelGeometryArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.list_style_list_label_geometry_array_.MergeFrom(from._impl_.list_style_list_label_geometry_array_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.list_style_list_label_geometry_array_undefined_ = from._impl_.list_style_list_label_geometry_array_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetListStyleListLabelGeometryArrayArchive::CopyFrom(const SpecSetListStyleListLabelGeometryArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetListStyleListLabelGeometryArrayArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetListStyleListLabelGeometryArrayArchive::InternalSwap(SpecSetListStyleListLabelGeometryArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.list_style_list_label_geometry_array_.InternalSwap(&other->_impl_.list_style_list_label_geometry_array_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetListStyleListLabelGeometryArrayArchive, _impl_.unset_)
      + sizeof(SpecSetListStyleListLabelGeometryArrayArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetListStyleListLabelGeometryArrayArchive, _impl_.list_style_list_label_geometry_array_undefined_)>(
          reinterpret_cast<char*>(&_impl_.list_style_list_label_geometry_array_undefined_),
          reinterpret_cast<char*>(&other->_impl_.list_style_list_label_geometry_array_undefined_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetListStyleListLabelGeometryArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[9]);
}

// ===================================================================

class SpecSetListStyleListLabelTypeArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetListStyleListLabelTypeArrayArchive>()._impl_._has_bits_);
  static void set_has_list_style_list_label_type_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

SpecSetListStyleListLabelTypeArrayArchive::SpecSetListStyleListLabelTypeArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive)
}
SpecSetListStyleListLabelTypeArrayArchive::SpecSetListStyleListLabelTypeArrayArchive(const SpecSetListStyleListLabelTypeArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetListStyleListLabelTypeArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_list_label_type_array_){from._impl_.list_style_list_label_type_array_}
    , decltype(_impl_.list_style_list_label_type_array_undefined_){}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.list_style_list_label_type_array_undefined_, &from._impl_.list_style_list_label_type_array_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unset_) -
    reinterpret_cast<char*>(&_impl_.list_style_list_label_type_array_undefined_)) + sizeof(_impl_.unset_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive)
}

inline void SpecSetListStyleListLabelTypeArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_list_label_type_array_){arena}
    , decltype(_impl_.list_style_list_label_type_array_undefined_){false}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetListStyleListLabelTypeArrayArchive::~SpecSetListStyleListLabelTypeArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetListStyleListLabelTypeArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.list_style_list_label_type_array_.~RepeatedField();
}

void SpecSetListStyleListLabelTypeArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetListStyleListLabelTypeArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_style_list_label_type_array_.Clear();
  ::memset(&_impl_.list_style_list_label_type_array_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.unset_) -
      reinterpret_cast<char*>(&_impl_.list_style_list_label_type_array_undefined_)) + sizeof(_impl_.unset_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetListStyleListLabelTypeArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TSWP.ListStyleArchive.LabelType list_style_list_label_type_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::TSWP::ListStyleArchive_LabelType_IsValid(val))) {
              _internal_add_list_style_list_label_type_array(static_cast<::TSWP::ListStyleArchive_LabelType>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(_internal_mutable_list_style_list_label_type_array(), ptr, ctx, ::TSWP::ListStyleArchive_LabelType_IsValid, &_internal_metadata_, 1);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_style_list_label_type_array_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_list_style_list_label_type_array_undefined(&has_bits);
          _impl_.list_style_list_label_type_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetListStyleListLabelTypeArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TSWP.ListStyleArchive.LabelType list_style_list_label_type_array = 1;
  for (int i = 0, n = this->_internal_list_style_list_label_type_array_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_list_style_list_label_type_array(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool list_style_list_label_type_array_undefined = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_list_style_list_label_type_array_undefined(), target);
  }

  // required bool unset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive)
  return target;
}

size_t SpecSetListStyleListLabelTypeArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive)
  size_t total_size = 0;

  // required bool unset = 3;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TSWP.ListStyleArchive.LabelType list_style_list_label_type_array = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_list_style_list_label_type_array_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_list_style_list_label_type_array(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool list_style_list_label_type_array_undefined = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetListStyleListLabelTypeArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetListStyleListLabelTypeArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetListStyleListLabelTypeArrayArchive::GetClassData() const { return &_class_data_; }


void SpecSetListStyleListLabelTypeArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetListStyleListLabelTypeArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetListStyleListLabelTypeArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.list_style_list_label_type_array_.MergeFrom(from._impl_.list_style_list_label_type_array_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.list_style_list_label_type_array_undefined_ = from._impl_.list_style_list_label_type_array_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetListStyleListLabelTypeArrayArchive::CopyFrom(const SpecSetListStyleListLabelTypeArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetListStyleListLabelTypeArrayArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetListStyleListLabelTypeArrayArchive::InternalSwap(SpecSetListStyleListLabelTypeArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.list_style_list_label_type_array_.InternalSwap(&other->_impl_.list_style_list_label_type_array_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetListStyleListLabelTypeArrayArchive, _impl_.unset_)
      + sizeof(SpecSetListStyleListLabelTypeArrayArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetListStyleListLabelTypeArrayArchive, _impl_.list_style_list_label_type_array_undefined_)>(
          reinterpret_cast<char*>(&_impl_.list_style_list_label_type_array_undefined_),
          reinterpret_cast<char*>(&other->_impl_.list_style_list_label_type_array_undefined_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetListStyleListLabelTypeArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[10]);
}

// ===================================================================

class SpecSetListStyleListNumberTypeArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetListStyleListNumberTypeArrayArchive>()._impl_._has_bits_);
  static void set_has_list_style_list_number_type_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

SpecSetListStyleListNumberTypeArrayArchive::SpecSetListStyleListNumberTypeArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive)
}
SpecSetListStyleListNumberTypeArrayArchive::SpecSetListStyleListNumberTypeArrayArchive(const SpecSetListStyleListNumberTypeArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetListStyleListNumberTypeArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_list_number_type_array_){from._impl_.list_style_list_number_type_array_}
    , decltype(_impl_.list_style_list_number_type_array_undefined_){}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.list_style_list_number_type_array_undefined_, &from._impl_.list_style_list_number_type_array_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unset_) -
    reinterpret_cast<char*>(&_impl_.list_style_list_number_type_array_undefined_)) + sizeof(_impl_.unset_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive)
}

inline void SpecSetListStyleListNumberTypeArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_list_number_type_array_){arena}
    , decltype(_impl_.list_style_list_number_type_array_undefined_){false}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetListStyleListNumberTypeArrayArchive::~SpecSetListStyleListNumberTypeArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetListStyleListNumberTypeArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.list_style_list_number_type_array_.~RepeatedField();
}

void SpecSetListStyleListNumberTypeArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetListStyleListNumberTypeArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_style_list_number_type_array_.Clear();
  ::memset(&_impl_.list_style_list_number_type_array_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.unset_) -
      reinterpret_cast<char*>(&_impl_.list_style_list_number_type_array_undefined_)) + sizeof(_impl_.unset_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetListStyleListNumberTypeArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TSWP.ListStyleArchive.NumberType list_style_list_number_type_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::TSWP::ListStyleArchive_NumberType_IsValid(val))) {
              _internal_add_list_style_list_number_type_array(static_cast<::TSWP::ListStyleArchive_NumberType>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(_internal_mutable_list_style_list_number_type_array(), ptr, ctx, ::TSWP::ListStyleArchive_NumberType_IsValid, &_internal_metadata_, 1);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_style_list_number_type_array_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_list_style_list_number_type_array_undefined(&has_bits);
          _impl_.list_style_list_number_type_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetListStyleListNumberTypeArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TSWP.ListStyleArchive.NumberType list_style_list_number_type_array = 1;
  for (int i = 0, n = this->_internal_list_style_list_number_type_array_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_list_style_list_number_type_array(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool list_style_list_number_type_array_undefined = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_list_style_list_number_type_array_undefined(), target);
  }

  // required bool unset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive)
  return target;
}

size_t SpecSetListStyleListNumberTypeArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive)
  size_t total_size = 0;

  // required bool unset = 3;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TSWP.ListStyleArchive.NumberType list_style_list_number_type_array = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_list_style_list_number_type_array_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_list_style_list_number_type_array(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool list_style_list_number_type_array_undefined = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetListStyleListNumberTypeArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetListStyleListNumberTypeArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetListStyleListNumberTypeArrayArchive::GetClassData() const { return &_class_data_; }


void SpecSetListStyleListNumberTypeArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetListStyleListNumberTypeArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetListStyleListNumberTypeArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.list_style_list_number_type_array_.MergeFrom(from._impl_.list_style_list_number_type_array_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.list_style_list_number_type_array_undefined_ = from._impl_.list_style_list_number_type_array_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetListStyleListNumberTypeArrayArchive::CopyFrom(const SpecSetListStyleListNumberTypeArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetListStyleListNumberTypeArrayArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetListStyleListNumberTypeArrayArchive::InternalSwap(SpecSetListStyleListNumberTypeArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.list_style_list_number_type_array_.InternalSwap(&other->_impl_.list_style_list_number_type_array_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetListStyleListNumberTypeArrayArchive, _impl_.unset_)
      + sizeof(SpecSetListStyleListNumberTypeArrayArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetListStyleListNumberTypeArrayArchive, _impl_.list_style_list_number_type_array_undefined_)>(
          reinterpret_cast<char*>(&_impl_.list_style_list_number_type_array_undefined_),
          reinterpret_cast<char*>(&other->_impl_.list_style_list_number_type_array_undefined_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetListStyleListNumberTypeArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[11]);
}

// ===================================================================

class SpecSetListStyleStringArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetListStyleStringArrayArchive>()._impl_._has_bits_);
  static void set_has_list_style_string_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

SpecSetListStyleStringArrayArchive::SpecSetListStyleStringArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetListStyleStringArrayArchive)
}
SpecSetListStyleStringArrayArchive::SpecSetListStyleStringArrayArchive(const SpecSetListStyleStringArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetListStyleStringArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_string_array_){from._impl_.list_style_string_array_}
    , decltype(_impl_.list_style_string_array_undefined_){}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.list_style_string_array_undefined_, &from._impl_.list_style_string_array_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unset_) -
    reinterpret_cast<char*>(&_impl_.list_style_string_array_undefined_)) + sizeof(_impl_.unset_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetListStyleStringArrayArchive)
}

inline void SpecSetListStyleStringArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_style_string_array_){arena}
    , decltype(_impl_.list_style_string_array_undefined_){false}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetListStyleStringArrayArchive::~SpecSetListStyleStringArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetListStyleStringArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetListStyleStringArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.list_style_string_array_.~RepeatedPtrField();
}

void SpecSetListStyleStringArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetListStyleStringArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetListStyleStringArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_style_string_array_.Clear();
  ::memset(&_impl_.list_style_string_array_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.unset_) -
      reinterpret_cast<char*>(&_impl_.list_style_string_array_undefined_)) + sizeof(_impl_.unset_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetListStyleStringArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string list_style_string_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_list_style_string_array();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "TSWPSOS.SpecSetListStyleStringArrayArchive.list_style_string_array");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool list_style_string_array_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_list_style_string_array_undefined(&has_bits);
          _impl_.list_style_string_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetListStyleStringArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetListStyleStringArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string list_style_string_array = 1;
  for (int i = 0, n = this->_internal_list_style_string_array_size(); i < n; i++) {
    const auto& s = this->_internal_list_style_string_array(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "TSWPSOS.SpecSetListStyleStringArrayArchive.list_style_string_array");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool list_style_string_array_undefined = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_list_style_string_array_undefined(), target);
  }

  // required bool unset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetListStyleStringArrayArchive)
  return target;
}

size_t SpecSetListStyleStringArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetListStyleStringArrayArchive)
  size_t total_size = 0;

  // required bool unset = 3;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string list_style_string_array = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.list_style_string_array_.size());
  for (int i = 0, n = _impl_.list_style_string_array_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.list_style_string_array_.Get(i));
  }

  // optional bool list_style_string_array_undefined = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetListStyleStringArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetListStyleStringArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetListStyleStringArrayArchive::GetClassData() const { return &_class_data_; }


void SpecSetListStyleStringArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetListStyleStringArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetListStyleStringArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetListStyleStringArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.list_style_string_array_.MergeFrom(from._impl_.list_style_string_array_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.list_style_string_array_undefined_ = from._impl_.list_style_string_array_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetListStyleStringArrayArchive::CopyFrom(const SpecSetListStyleStringArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetListStyleStringArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetListStyleStringArrayArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetListStyleStringArrayArchive::InternalSwap(SpecSetListStyleStringArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.list_style_string_array_.InternalSwap(&other->_impl_.list_style_string_array_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetListStyleStringArrayArchive, _impl_.unset_)
      + sizeof(SpecSetListStyleStringArrayArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetListStyleStringArrayArchive, _impl_.list_style_string_array_undefined_)>(
          reinterpret_cast<char*>(&_impl_.list_style_string_array_undefined_),
          reinterpret_cast<char*>(&other->_impl_.list_style_string_array_undefined_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetListStyleStringArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[12]);
}

// ===================================================================

class SpecSetPaddingArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetPaddingArchive>()._impl_._has_bits_);
  static const ::TSWP::PaddingArchive& padding(const SpecSetPaddingArchive* msg);
  static void set_has_padding(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSWP::PaddingArchive&
SpecSetPaddingArchive::_Internal::padding(const SpecSetPaddingArchive* msg) {
  return *msg->_impl_.padding_;
}
void SpecSetPaddingArchive::clear_padding() {
  if (_impl_.padding_ != nullptr) _impl_.padding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetPaddingArchive::SpecSetPaddingArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetPaddingArchive)
}
SpecSetPaddingArchive::SpecSetPaddingArchive(const SpecSetPaddingArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetPaddingArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.padding_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_padding()) {
    _this->_impl_.padding_ = new ::TSWP::PaddingArchive(*from._impl_.padding_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetPaddingArchive)
}

inline void SpecSetPaddingArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.padding_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetPaddingArchive::~SpecSetPaddingArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetPaddingArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetPaddingArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.padding_;
}

void SpecSetPaddingArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetPaddingArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetPaddingArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.padding_ != nullptr);
    _impl_.padding_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetPaddingArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWP.PaddingArchive padding = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_padding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetPaddingArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetPaddingArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWP.PaddingArchive padding = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::padding(this),
        _Internal::padding(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetPaddingArchive)
  return target;
}

size_t SpecSetPaddingArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetPaddingArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWP.PaddingArchive padding = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.padding_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetPaddingArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetPaddingArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetPaddingArchive::GetClassData() const { return &_class_data_; }


void SpecSetPaddingArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetPaddingArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetPaddingArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetPaddingArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_padding()->::TSWP::PaddingArchive::MergeFrom(
          from._internal_padding());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetPaddingArchive::CopyFrom(const SpecSetPaddingArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetPaddingArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetPaddingArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetPaddingArchive::InternalSwap(SpecSetPaddingArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetPaddingArchive, _impl_.unset_)
      + sizeof(SpecSetPaddingArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetPaddingArchive, _impl_.padding_)>(
          reinterpret_cast<char*>(&_impl_.padding_),
          reinterpret_cast<char*>(&other->_impl_.padding_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetPaddingArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[13]);
}

// ===================================================================

class SpecSetParagraphStyleArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetParagraphStyleArchive>()._impl_._has_bits_);
  static const ::TSP::Reference& paragraph_style(const SpecSetParagraphStyleArchive* msg);
  static void set_has_paragraph_style(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSP::Reference&
SpecSetParagraphStyleArchive::_Internal::paragraph_style(const SpecSetParagraphStyleArchive* msg) {
  return *msg->_impl_.paragraph_style_;
}
void SpecSetParagraphStyleArchive::clear_paragraph_style() {
  if (_impl_.paragraph_style_ != nullptr) _impl_.paragraph_style_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetParagraphStyleArchive::SpecSetParagraphStyleArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetParagraphStyleArchive)
}
SpecSetParagraphStyleArchive::SpecSetParagraphStyleArchive(const SpecSetParagraphStyleArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetParagraphStyleArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.paragraph_style_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_paragraph_style()) {
    _this->_impl_.paragraph_style_ = new ::TSP::Reference(*from._impl_.paragraph_style_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetParagraphStyleArchive)
}

inline void SpecSetParagraphStyleArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.paragraph_style_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetParagraphStyleArchive::~SpecSetParagraphStyleArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetParagraphStyleArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetParagraphStyleArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.paragraph_style_;
}

void SpecSetParagraphStyleArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetParagraphStyleArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetParagraphStyleArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.paragraph_style_ != nullptr);
    _impl_.paragraph_style_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetParagraphStyleArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSP.Reference paragraph_style = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetParagraphStyleArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetParagraphStyleArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSP.Reference paragraph_style = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::paragraph_style(this),
        _Internal::paragraph_style(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetParagraphStyleArchive)
  return target;
}

size_t SpecSetParagraphStyleArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetParagraphStyleArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSP.Reference paragraph_style = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.paragraph_style_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetParagraphStyleArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetParagraphStyleArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetParagraphStyleArchive::GetClassData() const { return &_class_data_; }


void SpecSetParagraphStyleArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetParagraphStyleArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetParagraphStyleArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetParagraphStyleArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_paragraph_style()->::TSP::Reference::MergeFrom(
          from._internal_paragraph_style());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetParagraphStyleArchive::CopyFrom(const SpecSetParagraphStyleArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetParagraphStyleArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetParagraphStyleArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_paragraph_style()) {
    if (!_impl_.paragraph_style_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetParagraphStyleArchive::InternalSwap(SpecSetParagraphStyleArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetParagraphStyleArchive, _impl_.unset_)
      + sizeof(SpecSetParagraphStyleArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetParagraphStyleArchive, _impl_.paragraph_style_)>(
          reinterpret_cast<char*>(&_impl_.paragraph_style_),
          reinterpret_cast<char*>(&other->_impl_.paragraph_style_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetParagraphStyleArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[14]);
}

// ===================================================================

class SpecSetRuleOffsetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetRuleOffsetArchive>()._impl_._has_bits_);
  static const ::TSP::Point& rule_offset(const SpecSetRuleOffsetArchive* msg);
  static void set_has_rule_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSP::Point&
SpecSetRuleOffsetArchive::_Internal::rule_offset(const SpecSetRuleOffsetArchive* msg) {
  return *msg->_impl_.rule_offset_;
}
void SpecSetRuleOffsetArchive::clear_rule_offset() {
  if (_impl_.rule_offset_ != nullptr) _impl_.rule_offset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetRuleOffsetArchive::SpecSetRuleOffsetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetRuleOffsetArchive)
}
SpecSetRuleOffsetArchive::SpecSetRuleOffsetArchive(const SpecSetRuleOffsetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetRuleOffsetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rule_offset_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rule_offset()) {
    _this->_impl_.rule_offset_ = new ::TSP::Point(*from._impl_.rule_offset_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetRuleOffsetArchive)
}

inline void SpecSetRuleOffsetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rule_offset_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetRuleOffsetArchive::~SpecSetRuleOffsetArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetRuleOffsetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetRuleOffsetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.rule_offset_;
}

void SpecSetRuleOffsetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetRuleOffsetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetRuleOffsetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.rule_offset_ != nullptr);
    _impl_.rule_offset_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetRuleOffsetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSP.Point rule_offset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_rule_offset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetRuleOffsetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetRuleOffsetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSP.Point rule_offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::rule_offset(this),
        _Internal::rule_offset(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetRuleOffsetArchive)
  return target;
}

size_t SpecSetRuleOffsetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetRuleOffsetArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSP.Point rule_offset = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.rule_offset_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetRuleOffsetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetRuleOffsetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetRuleOffsetArchive::GetClassData() const { return &_class_data_; }


void SpecSetRuleOffsetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetRuleOffsetArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetRuleOffsetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetRuleOffsetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_rule_offset()->::TSP::Point::MergeFrom(
          from._internal_rule_offset());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetRuleOffsetArchive::CopyFrom(const SpecSetRuleOffsetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetRuleOffsetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetRuleOffsetArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_rule_offset()) {
    if (!_impl_.rule_offset_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetRuleOffsetArchive::InternalSwap(SpecSetRuleOffsetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetRuleOffsetArchive, _impl_.unset_)
      + sizeof(SpecSetRuleOffsetArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetRuleOffsetArchive, _impl_.rule_offset_)>(
          reinterpret_cast<char*>(&_impl_.rule_offset_),
          reinterpret_cast<char*>(&other->_impl_.rule_offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetRuleOffsetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[15]);
}

// ===================================================================

class SpecSetTabsArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetTabsArchive>()._impl_._has_bits_);
  static const ::TSWP::TabsArchive& tabs(const SpecSetTabsArchive* msg);
  static void set_has_tabs(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSWP::TabsArchive&
SpecSetTabsArchive::_Internal::tabs(const SpecSetTabsArchive* msg) {
  return *msg->_impl_.tabs_;
}
void SpecSetTabsArchive::clear_tabs() {
  if (_impl_.tabs_ != nullptr) _impl_.tabs_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetTabsArchive::SpecSetTabsArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecSetTabsArchive)
}
SpecSetTabsArchive::SpecSetTabsArchive(const SpecSetTabsArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetTabsArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.tabs_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tabs()) {
    _this->_impl_.tabs_ = new ::TSWP::TabsArchive(*from._impl_.tabs_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecSetTabsArchive)
}

inline void SpecSetTabsArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.tabs_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetTabsArchive::~SpecSetTabsArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecSetTabsArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetTabsArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.tabs_;
}

void SpecSetTabsArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetTabsArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecSetTabsArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.tabs_ != nullptr);
    _impl_.tabs_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetTabsArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWP.TabsArchive tabs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tabs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetTabsArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecSetTabsArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWP.TabsArchive tabs = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::tabs(this),
        _Internal::tabs(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecSetTabsArchive)
  return target;
}

size_t SpecSetTabsArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecSetTabsArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWP.TabsArchive tabs = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tabs_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetTabsArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetTabsArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetTabsArchive::GetClassData() const { return &_class_data_; }


void SpecSetTabsArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetTabsArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetTabsArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecSetTabsArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_tabs()->::TSWP::TabsArchive::MergeFrom(
          from._internal_tabs());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetTabsArchive::CopyFrom(const SpecSetTabsArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecSetTabsArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetTabsArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetTabsArchive::InternalSwap(SpecSetTabsArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetTabsArchive, _impl_.unset_)
      + sizeof(SpecSetTabsArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetTabsArchive, _impl_.tabs_)>(
          reinterpret_cast<char*>(&_impl_.tabs_),
          reinterpret_cast<char*>(&other->_impl_.tabs_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetTabsArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[16]);
}

// ===================================================================

class SpecCharacterStyleArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecCharacterStyleArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetCharacterStyleArchive& spec_set_character_style(const SpecCharacterStyleArchive* msg);
  static void set_has_spec_set_character_style(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetCharacterStyleArchive&
SpecCharacterStyleArchive::_Internal::spec_set_character_style(const SpecCharacterStyleArchive* msg) {
  return *msg->_impl_.spec_set_character_style_;
}
SpecCharacterStyleArchive::SpecCharacterStyleArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecCharacterStyleArchive)
}
SpecCharacterStyleArchive::SpecCharacterStyleArchive(const SpecCharacterStyleArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecCharacterStyleArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_character_style_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_character_style()) {
    _this->_impl_.spec_set_character_style_ = new ::TSWPSOS::SpecSetCharacterStyleArchive(*from._impl_.spec_set_character_style_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecCharacterStyleArchive)
}

inline void SpecCharacterStyleArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_character_style_){nullptr}
  };
}

SpecCharacterStyleArchive::~SpecCharacterStyleArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecCharacterStyleArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecCharacterStyleArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_character_style_;
}

void SpecCharacterStyleArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecCharacterStyleArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecCharacterStyleArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_character_style_ != nullptr);
    _impl_.spec_set_character_style_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecCharacterStyleArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetCharacterStyleArchive spec_set_character_style = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_character_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecCharacterStyleArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecCharacterStyleArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetCharacterStyleArchive spec_set_character_style = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_character_style(this),
        _Internal::spec_set_character_style(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecCharacterStyleArchive)
  return target;
}

size_t SpecCharacterStyleArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecCharacterStyleArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetCharacterStyleArchive spec_set_character_style = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_character_style_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecCharacterStyleArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecCharacterStyleArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecCharacterStyleArchive::GetClassData() const { return &_class_data_; }


void SpecCharacterStyleArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecCharacterStyleArchive*>(&to_msg);
  auto& from = static_cast<const SpecCharacterStyleArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecCharacterStyleArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_character_style()) {
    _this->_internal_mutable_spec_set_character_style()->::TSWPSOS::SpecSetCharacterStyleArchive::MergeFrom(
        from._internal_spec_set_character_style());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecCharacterStyleArchive::CopyFrom(const SpecCharacterStyleArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecCharacterStyleArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecCharacterStyleArchive::IsInitialized() const {
  if (_internal_has_spec_set_character_style()) {
    if (!_impl_.spec_set_character_style_->IsInitialized()) return false;
  }
  return true;
}

void SpecCharacterStyleArchive::InternalSwap(SpecCharacterStyleArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_character_style_, other->_impl_.spec_set_character_style_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecCharacterStyleArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[17]);
}

// ===================================================================

class SpecColumnsArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecColumnsArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetColumnsArchive& spec_set_columns(const SpecColumnsArchive* msg);
  static void set_has_spec_set_columns(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetColumnsArchive&
SpecColumnsArchive::_Internal::spec_set_columns(const SpecColumnsArchive* msg) {
  return *msg->_impl_.spec_set_columns_;
}
SpecColumnsArchive::SpecColumnsArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecColumnsArchive)
}
SpecColumnsArchive::SpecColumnsArchive(const SpecColumnsArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecColumnsArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_columns_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_columns()) {
    _this->_impl_.spec_set_columns_ = new ::TSWPSOS::SpecSetColumnsArchive(*from._impl_.spec_set_columns_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecColumnsArchive)
}

inline void SpecColumnsArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_columns_){nullptr}
  };
}

SpecColumnsArchive::~SpecColumnsArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecColumnsArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecColumnsArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_columns_;
}

void SpecColumnsArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecColumnsArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecColumnsArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_columns_ != nullptr);
    _impl_.spec_set_columns_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecColumnsArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetColumnsArchive spec_set_columns = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_columns(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecColumnsArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecColumnsArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetColumnsArchive spec_set_columns = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_columns(this),
        _Internal::spec_set_columns(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecColumnsArchive)
  return target;
}

size_t SpecColumnsArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecColumnsArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetColumnsArchive spec_set_columns = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_columns_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecColumnsArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecColumnsArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecColumnsArchive::GetClassData() const { return &_class_data_; }


void SpecColumnsArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecColumnsArchive*>(&to_msg);
  auto& from = static_cast<const SpecColumnsArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecColumnsArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_columns()) {
    _this->_internal_mutable_spec_set_columns()->::TSWPSOS::SpecSetColumnsArchive::MergeFrom(
        from._internal_spec_set_columns());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecColumnsArchive::CopyFrom(const SpecColumnsArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecColumnsArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecColumnsArchive::IsInitialized() const {
  if (_internal_has_spec_set_columns()) {
    if (!_impl_.spec_set_columns_->IsInitialized()) return false;
  }
  return true;
}

void SpecColumnsArchive::InternalSwap(SpecColumnsArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_columns_, other->_impl_.spec_set_columns_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecColumnsArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[18]);
}

// ===================================================================

class SpecDropCapArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecDropCapArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetDropCapArchive& spec_set_drop_cap(const SpecDropCapArchive* msg);
  static void set_has_spec_set_drop_cap(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetDropCapArchive&
SpecDropCapArchive::_Internal::spec_set_drop_cap(const SpecDropCapArchive* msg) {
  return *msg->_impl_.spec_set_drop_cap_;
}
SpecDropCapArchive::SpecDropCapArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecDropCapArchive)
}
SpecDropCapArchive::SpecDropCapArchive(const SpecDropCapArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecDropCapArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_drop_cap_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_drop_cap()) {
    _this->_impl_.spec_set_drop_cap_ = new ::TSWPSOS::SpecSetDropCapArchive(*from._impl_.spec_set_drop_cap_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecDropCapArchive)
}

inline void SpecDropCapArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_drop_cap_){nullptr}
  };
}

SpecDropCapArchive::~SpecDropCapArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecDropCapArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecDropCapArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_drop_cap_;
}

void SpecDropCapArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecDropCapArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecDropCapArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_drop_cap_ != nullptr);
    _impl_.spec_set_drop_cap_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecDropCapArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetDropCapArchive spec_set_drop_cap = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_drop_cap(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecDropCapArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecDropCapArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetDropCapArchive spec_set_drop_cap = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_drop_cap(this),
        _Internal::spec_set_drop_cap(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecDropCapArchive)
  return target;
}

size_t SpecDropCapArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecDropCapArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetDropCapArchive spec_set_drop_cap = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_drop_cap_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecDropCapArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecDropCapArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecDropCapArchive::GetClassData() const { return &_class_data_; }


void SpecDropCapArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecDropCapArchive*>(&to_msg);
  auto& from = static_cast<const SpecDropCapArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecDropCapArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_drop_cap()) {
    _this->_internal_mutable_spec_set_drop_cap()->::TSWPSOS::SpecSetDropCapArchive::MergeFrom(
        from._internal_spec_set_drop_cap());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecDropCapArchive::CopyFrom(const SpecDropCapArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecDropCapArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecDropCapArchive::IsInitialized() const {
  if (_internal_has_spec_set_drop_cap()) {
    if (!_impl_.spec_set_drop_cap_->IsInitialized()) return false;
  }
  return true;
}

void SpecDropCapArchive::InternalSwap(SpecDropCapArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_drop_cap_, other->_impl_.spec_set_drop_cap_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecDropCapArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[19]);
}

// ===================================================================

class SpecFontFeaturesArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecFontFeaturesArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetFontFeaturesArchive& spec_set_font_features(const SpecFontFeaturesArchive* msg);
  static void set_has_spec_set_font_features(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetFontFeaturesArchive&
SpecFontFeaturesArchive::_Internal::spec_set_font_features(const SpecFontFeaturesArchive* msg) {
  return *msg->_impl_.spec_set_font_features_;
}
SpecFontFeaturesArchive::SpecFontFeaturesArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecFontFeaturesArchive)
}
SpecFontFeaturesArchive::SpecFontFeaturesArchive(const SpecFontFeaturesArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecFontFeaturesArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_font_features_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_font_features()) {
    _this->_impl_.spec_set_font_features_ = new ::TSWPSOS::SpecSetFontFeaturesArchive(*from._impl_.spec_set_font_features_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecFontFeaturesArchive)
}

inline void SpecFontFeaturesArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_font_features_){nullptr}
  };
}

SpecFontFeaturesArchive::~SpecFontFeaturesArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecFontFeaturesArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecFontFeaturesArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_font_features_;
}

void SpecFontFeaturesArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecFontFeaturesArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecFontFeaturesArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_font_features_ != nullptr);
    _impl_.spec_set_font_features_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecFontFeaturesArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetFontFeaturesArchive spec_set_font_features = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_font_features(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecFontFeaturesArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecFontFeaturesArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetFontFeaturesArchive spec_set_font_features = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_font_features(this),
        _Internal::spec_set_font_features(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecFontFeaturesArchive)
  return target;
}

size_t SpecFontFeaturesArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecFontFeaturesArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetFontFeaturesArchive spec_set_font_features = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_font_features_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecFontFeaturesArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecFontFeaturesArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecFontFeaturesArchive::GetClassData() const { return &_class_data_; }


void SpecFontFeaturesArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecFontFeaturesArchive*>(&to_msg);
  auto& from = static_cast<const SpecFontFeaturesArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecFontFeaturesArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_font_features()) {
    _this->_internal_mutable_spec_set_font_features()->::TSWPSOS::SpecSetFontFeaturesArchive::MergeFrom(
        from._internal_spec_set_font_features());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecFontFeaturesArchive::CopyFrom(const SpecFontFeaturesArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecFontFeaturesArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecFontFeaturesArchive::IsInitialized() const {
  if (_internal_has_spec_set_font_features()) {
    if (!_impl_.spec_set_font_features_->IsInitialized()) return false;
  }
  return true;
}

void SpecFontFeaturesArchive::InternalSwap(SpecFontFeaturesArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_font_features_, other->_impl_.spec_set_font_features_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecFontFeaturesArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[20]);
}

// ===================================================================

class SpecLineSpacingArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecLineSpacingArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetLineSpacingArchive& spec_set_line_spacing(const SpecLineSpacingArchive* msg);
  static void set_has_spec_set_line_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetLineSpacingArchive&
SpecLineSpacingArchive::_Internal::spec_set_line_spacing(const SpecLineSpacingArchive* msg) {
  return *msg->_impl_.spec_set_line_spacing_;
}
SpecLineSpacingArchive::SpecLineSpacingArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecLineSpacingArchive)
}
SpecLineSpacingArchive::SpecLineSpacingArchive(const SpecLineSpacingArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecLineSpacingArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_line_spacing_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_line_spacing()) {
    _this->_impl_.spec_set_line_spacing_ = new ::TSWPSOS::SpecSetLineSpacingArchive(*from._impl_.spec_set_line_spacing_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecLineSpacingArchive)
}

inline void SpecLineSpacingArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_line_spacing_){nullptr}
  };
}

SpecLineSpacingArchive::~SpecLineSpacingArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecLineSpacingArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecLineSpacingArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_line_spacing_;
}

void SpecLineSpacingArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecLineSpacingArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecLineSpacingArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_line_spacing_ != nullptr);
    _impl_.spec_set_line_spacing_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecLineSpacingArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetLineSpacingArchive spec_set_line_spacing = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_line_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecLineSpacingArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecLineSpacingArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetLineSpacingArchive spec_set_line_spacing = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_line_spacing(this),
        _Internal::spec_set_line_spacing(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecLineSpacingArchive)
  return target;
}

size_t SpecLineSpacingArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecLineSpacingArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetLineSpacingArchive spec_set_line_spacing = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_line_spacing_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecLineSpacingArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecLineSpacingArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecLineSpacingArchive::GetClassData() const { return &_class_data_; }


void SpecLineSpacingArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecLineSpacingArchive*>(&to_msg);
  auto& from = static_cast<const SpecLineSpacingArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecLineSpacingArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_line_spacing()) {
    _this->_internal_mutable_spec_set_line_spacing()->::TSWPSOS::SpecSetLineSpacingArchive::MergeFrom(
        from._internal_spec_set_line_spacing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecLineSpacingArchive::CopyFrom(const SpecLineSpacingArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecLineSpacingArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecLineSpacingArchive::IsInitialized() const {
  if (_internal_has_spec_set_line_spacing()) {
    if (!_impl_.spec_set_line_spacing_->IsInitialized()) return false;
  }
  return true;
}

void SpecLineSpacingArchive::InternalSwap(SpecLineSpacingArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_line_spacing_, other->_impl_.spec_set_line_spacing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecLineSpacingArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[21]);
}

// ===================================================================

class SpecListStyleArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecListStyleArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetListStyleArchive& spec_set_list_style(const SpecListStyleArchive* msg);
  static void set_has_spec_set_list_style(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetListStyleArchive&
SpecListStyleArchive::_Internal::spec_set_list_style(const SpecListStyleArchive* msg) {
  return *msg->_impl_.spec_set_list_style_;
}
SpecListStyleArchive::SpecListStyleArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecListStyleArchive)
}
SpecListStyleArchive::SpecListStyleArchive(const SpecListStyleArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecListStyleArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_list_style()) {
    _this->_impl_.spec_set_list_style_ = new ::TSWPSOS::SpecSetListStyleArchive(*from._impl_.spec_set_list_style_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecListStyleArchive)
}

inline void SpecListStyleArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_){nullptr}
  };
}

SpecListStyleArchive::~SpecListStyleArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecListStyleArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecListStyleArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_list_style_;
}

void SpecListStyleArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecListStyleArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecListStyleArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_list_style_ != nullptr);
    _impl_.spec_set_list_style_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecListStyleArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetListStyleArchive spec_set_list_style = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_list_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecListStyleArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecListStyleArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetListStyleArchive spec_set_list_style = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_list_style(this),
        _Internal::spec_set_list_style(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecListStyleArchive)
  return target;
}

size_t SpecListStyleArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecListStyleArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetListStyleArchive spec_set_list_style = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_list_style_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecListStyleArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecListStyleArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecListStyleArchive::GetClassData() const { return &_class_data_; }


void SpecListStyleArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecListStyleArchive*>(&to_msg);
  auto& from = static_cast<const SpecListStyleArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecListStyleArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_list_style()) {
    _this->_internal_mutable_spec_set_list_style()->::TSWPSOS::SpecSetListStyleArchive::MergeFrom(
        from._internal_spec_set_list_style());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecListStyleArchive::CopyFrom(const SpecListStyleArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecListStyleArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecListStyleArchive::IsInitialized() const {
  if (_internal_has_spec_set_list_style()) {
    if (!_impl_.spec_set_list_style_->IsInitialized()) return false;
  }
  return true;
}

void SpecListStyleArchive::InternalSwap(SpecListStyleArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_list_style_, other->_impl_.spec_set_list_style_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecListStyleArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[22]);
}

// ===================================================================

class SpecListStyleBoolArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecListStyleBoolArrayArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetListStyleBoolArrayArchive& spec_set_list_style_bool_array(const SpecListStyleBoolArrayArchive* msg);
  static void set_has_spec_set_list_style_bool_array(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetListStyleBoolArrayArchive&
SpecListStyleBoolArrayArchive::_Internal::spec_set_list_style_bool_array(const SpecListStyleBoolArrayArchive* msg) {
  return *msg->_impl_.spec_set_list_style_bool_array_;
}
SpecListStyleBoolArrayArchive::SpecListStyleBoolArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecListStyleBoolArrayArchive)
}
SpecListStyleBoolArrayArchive::SpecListStyleBoolArrayArchive(const SpecListStyleBoolArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecListStyleBoolArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_bool_array_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_list_style_bool_array()) {
    _this->_impl_.spec_set_list_style_bool_array_ = new ::TSWPSOS::SpecSetListStyleBoolArrayArchive(*from._impl_.spec_set_list_style_bool_array_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecListStyleBoolArrayArchive)
}

inline void SpecListStyleBoolArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_bool_array_){nullptr}
  };
}

SpecListStyleBoolArrayArchive::~SpecListStyleBoolArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecListStyleBoolArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecListStyleBoolArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_list_style_bool_array_;
}

void SpecListStyleBoolArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecListStyleBoolArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecListStyleBoolArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_list_style_bool_array_ != nullptr);
    _impl_.spec_set_list_style_bool_array_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecListStyleBoolArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetListStyleBoolArrayArchive spec_set_list_style_bool_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_list_style_bool_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecListStyleBoolArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecListStyleBoolArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetListStyleBoolArrayArchive spec_set_list_style_bool_array = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_list_style_bool_array(this),
        _Internal::spec_set_list_style_bool_array(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecListStyleBoolArrayArchive)
  return target;
}

size_t SpecListStyleBoolArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecListStyleBoolArrayArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetListStyleBoolArrayArchive spec_set_list_style_bool_array = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_list_style_bool_array_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecListStyleBoolArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecListStyleBoolArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecListStyleBoolArrayArchive::GetClassData() const { return &_class_data_; }


void SpecListStyleBoolArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecListStyleBoolArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecListStyleBoolArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecListStyleBoolArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_list_style_bool_array()) {
    _this->_internal_mutable_spec_set_list_style_bool_array()->::TSWPSOS::SpecSetListStyleBoolArrayArchive::MergeFrom(
        from._internal_spec_set_list_style_bool_array());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecListStyleBoolArrayArchive::CopyFrom(const SpecListStyleBoolArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecListStyleBoolArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecListStyleBoolArrayArchive::IsInitialized() const {
  if (_internal_has_spec_set_list_style_bool_array()) {
    if (!_impl_.spec_set_list_style_bool_array_->IsInitialized()) return false;
  }
  return true;
}

void SpecListStyleBoolArrayArchive::InternalSwap(SpecListStyleBoolArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_list_style_bool_array_, other->_impl_.spec_set_list_style_bool_array_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecListStyleBoolArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[23]);
}

// ===================================================================

class SpecListStyleFloatArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecListStyleFloatArrayArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetListStyleFloatArrayArchive& spec_set_list_style_float_array(const SpecListStyleFloatArrayArchive* msg);
  static void set_has_spec_set_list_style_float_array(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetListStyleFloatArrayArchive&
SpecListStyleFloatArrayArchive::_Internal::spec_set_list_style_float_array(const SpecListStyleFloatArrayArchive* msg) {
  return *msg->_impl_.spec_set_list_style_float_array_;
}
SpecListStyleFloatArrayArchive::SpecListStyleFloatArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecListStyleFloatArrayArchive)
}
SpecListStyleFloatArrayArchive::SpecListStyleFloatArrayArchive(const SpecListStyleFloatArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecListStyleFloatArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_float_array_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_list_style_float_array()) {
    _this->_impl_.spec_set_list_style_float_array_ = new ::TSWPSOS::SpecSetListStyleFloatArrayArchive(*from._impl_.spec_set_list_style_float_array_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecListStyleFloatArrayArchive)
}

inline void SpecListStyleFloatArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_float_array_){nullptr}
  };
}

SpecListStyleFloatArrayArchive::~SpecListStyleFloatArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecListStyleFloatArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecListStyleFloatArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_list_style_float_array_;
}

void SpecListStyleFloatArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecListStyleFloatArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecListStyleFloatArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_list_style_float_array_ != nullptr);
    _impl_.spec_set_list_style_float_array_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecListStyleFloatArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetListStyleFloatArrayArchive spec_set_list_style_float_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_list_style_float_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecListStyleFloatArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecListStyleFloatArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetListStyleFloatArrayArchive spec_set_list_style_float_array = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_list_style_float_array(this),
        _Internal::spec_set_list_style_float_array(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecListStyleFloatArrayArchive)
  return target;
}

size_t SpecListStyleFloatArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecListStyleFloatArrayArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetListStyleFloatArrayArchive spec_set_list_style_float_array = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_list_style_float_array_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecListStyleFloatArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecListStyleFloatArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecListStyleFloatArrayArchive::GetClassData() const { return &_class_data_; }


void SpecListStyleFloatArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecListStyleFloatArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecListStyleFloatArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecListStyleFloatArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_list_style_float_array()) {
    _this->_internal_mutable_spec_set_list_style_float_array()->::TSWPSOS::SpecSetListStyleFloatArrayArchive::MergeFrom(
        from._internal_spec_set_list_style_float_array());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecListStyleFloatArrayArchive::CopyFrom(const SpecListStyleFloatArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecListStyleFloatArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecListStyleFloatArrayArchive::IsInitialized() const {
  if (_internal_has_spec_set_list_style_float_array()) {
    if (!_impl_.spec_set_list_style_float_array_->IsInitialized()) return false;
  }
  return true;
}

void SpecListStyleFloatArrayArchive::InternalSwap(SpecListStyleFloatArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_list_style_float_array_, other->_impl_.spec_set_list_style_float_array_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecListStyleFloatArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[24]);
}

// ===================================================================

class SpecListStyleImageDataArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecListStyleImageDataArrayArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetListStyleImageDataArrayArchive& spec_set_list_style_image_data_array(const SpecListStyleImageDataArrayArchive* msg);
  static void set_has_spec_set_list_style_image_data_array(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetListStyleImageDataArrayArchive&
SpecListStyleImageDataArrayArchive::_Internal::spec_set_list_style_image_data_array(const SpecListStyleImageDataArrayArchive* msg) {
  return *msg->_impl_.spec_set_list_style_image_data_array_;
}
SpecListStyleImageDataArrayArchive::SpecListStyleImageDataArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecListStyleImageDataArrayArchive)
}
SpecListStyleImageDataArrayArchive::SpecListStyleImageDataArrayArchive(const SpecListStyleImageDataArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecListStyleImageDataArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_image_data_array_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_list_style_image_data_array()) {
    _this->_impl_.spec_set_list_style_image_data_array_ = new ::TSWPSOS::SpecSetListStyleImageDataArrayArchive(*from._impl_.spec_set_list_style_image_data_array_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecListStyleImageDataArrayArchive)
}

inline void SpecListStyleImageDataArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_image_data_array_){nullptr}
  };
}

SpecListStyleImageDataArrayArchive::~SpecListStyleImageDataArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecListStyleImageDataArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecListStyleImageDataArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_list_style_image_data_array_;
}

void SpecListStyleImageDataArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecListStyleImageDataArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecListStyleImageDataArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_list_style_image_data_array_ != nullptr);
    _impl_.spec_set_list_style_image_data_array_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecListStyleImageDataArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetListStyleImageDataArrayArchive spec_set_list_style_image_data_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_list_style_image_data_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecListStyleImageDataArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecListStyleImageDataArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetListStyleImageDataArrayArchive spec_set_list_style_image_data_array = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_list_style_image_data_array(this),
        _Internal::spec_set_list_style_image_data_array(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecListStyleImageDataArrayArchive)
  return target;
}

size_t SpecListStyleImageDataArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecListStyleImageDataArrayArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetListStyleImageDataArrayArchive spec_set_list_style_image_data_array = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_list_style_image_data_array_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecListStyleImageDataArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecListStyleImageDataArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecListStyleImageDataArrayArchive::GetClassData() const { return &_class_data_; }


void SpecListStyleImageDataArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecListStyleImageDataArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecListStyleImageDataArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecListStyleImageDataArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_list_style_image_data_array()) {
    _this->_internal_mutable_spec_set_list_style_image_data_array()->::TSWPSOS::SpecSetListStyleImageDataArrayArchive::MergeFrom(
        from._internal_spec_set_list_style_image_data_array());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecListStyleImageDataArrayArchive::CopyFrom(const SpecListStyleImageDataArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecListStyleImageDataArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecListStyleImageDataArrayArchive::IsInitialized() const {
  if (_internal_has_spec_set_list_style_image_data_array()) {
    if (!_impl_.spec_set_list_style_image_data_array_->IsInitialized()) return false;
  }
  return true;
}

void SpecListStyleImageDataArrayArchive::InternalSwap(SpecListStyleImageDataArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_list_style_image_data_array_, other->_impl_.spec_set_list_style_image_data_array_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecListStyleImageDataArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[25]);
}

// ===================================================================

class SpecListStyleListLabelGeometryArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecListStyleListLabelGeometryArrayArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive& spec_set_list_style_list_label_geometry_array(const SpecListStyleListLabelGeometryArrayArchive* msg);
  static void set_has_spec_set_list_style_list_label_geometry_array(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive&
SpecListStyleListLabelGeometryArrayArchive::_Internal::spec_set_list_style_list_label_geometry_array(const SpecListStyleListLabelGeometryArrayArchive* msg) {
  return *msg->_impl_.spec_set_list_style_list_label_geometry_array_;
}
SpecListStyleListLabelGeometryArrayArchive::SpecListStyleListLabelGeometryArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecListStyleListLabelGeometryArrayArchive)
}
SpecListStyleListLabelGeometryArrayArchive::SpecListStyleListLabelGeometryArrayArchive(const SpecListStyleListLabelGeometryArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecListStyleListLabelGeometryArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_list_label_geometry_array_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_list_style_list_label_geometry_array()) {
    _this->_impl_.spec_set_list_style_list_label_geometry_array_ = new ::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive(*from._impl_.spec_set_list_style_list_label_geometry_array_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecListStyleListLabelGeometryArrayArchive)
}

inline void SpecListStyleListLabelGeometryArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_list_label_geometry_array_){nullptr}
  };
}

SpecListStyleListLabelGeometryArrayArchive::~SpecListStyleListLabelGeometryArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecListStyleListLabelGeometryArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecListStyleListLabelGeometryArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_list_style_list_label_geometry_array_;
}

void SpecListStyleListLabelGeometryArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecListStyleListLabelGeometryArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecListStyleListLabelGeometryArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_list_style_list_label_geometry_array_ != nullptr);
    _impl_.spec_set_list_style_list_label_geometry_array_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecListStyleListLabelGeometryArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive spec_set_list_style_list_label_geometry_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_list_style_list_label_geometry_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecListStyleListLabelGeometryArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecListStyleListLabelGeometryArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive spec_set_list_style_list_label_geometry_array = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_list_style_list_label_geometry_array(this),
        _Internal::spec_set_list_style_list_label_geometry_array(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecListStyleListLabelGeometryArrayArchive)
  return target;
}

size_t SpecListStyleListLabelGeometryArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecListStyleListLabelGeometryArrayArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetListStyleListLabelGeometryArrayArchive spec_set_list_style_list_label_geometry_array = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_list_style_list_label_geometry_array_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecListStyleListLabelGeometryArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecListStyleListLabelGeometryArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecListStyleListLabelGeometryArrayArchive::GetClassData() const { return &_class_data_; }


void SpecListStyleListLabelGeometryArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecListStyleListLabelGeometryArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecListStyleListLabelGeometryArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecListStyleListLabelGeometryArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_list_style_list_label_geometry_array()) {
    _this->_internal_mutable_spec_set_list_style_list_label_geometry_array()->::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive::MergeFrom(
        from._internal_spec_set_list_style_list_label_geometry_array());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecListStyleListLabelGeometryArrayArchive::CopyFrom(const SpecListStyleListLabelGeometryArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecListStyleListLabelGeometryArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecListStyleListLabelGeometryArrayArchive::IsInitialized() const {
  if (_internal_has_spec_set_list_style_list_label_geometry_array()) {
    if (!_impl_.spec_set_list_style_list_label_geometry_array_->IsInitialized()) return false;
  }
  return true;
}

void SpecListStyleListLabelGeometryArrayArchive::InternalSwap(SpecListStyleListLabelGeometryArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_list_style_list_label_geometry_array_, other->_impl_.spec_set_list_style_list_label_geometry_array_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecListStyleListLabelGeometryArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[26]);
}

// ===================================================================

class SpecListStyleListLabelTypeArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecListStyleListLabelTypeArrayArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive& spec_set_list_style_list_label_type_array(const SpecListStyleListLabelTypeArrayArchive* msg);
  static void set_has_spec_set_list_style_list_label_type_array(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive&
SpecListStyleListLabelTypeArrayArchive::_Internal::spec_set_list_style_list_label_type_array(const SpecListStyleListLabelTypeArrayArchive* msg) {
  return *msg->_impl_.spec_set_list_style_list_label_type_array_;
}
SpecListStyleListLabelTypeArrayArchive::SpecListStyleListLabelTypeArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecListStyleListLabelTypeArrayArchive)
}
SpecListStyleListLabelTypeArrayArchive::SpecListStyleListLabelTypeArrayArchive(const SpecListStyleListLabelTypeArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecListStyleListLabelTypeArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_list_label_type_array_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_list_style_list_label_type_array()) {
    _this->_impl_.spec_set_list_style_list_label_type_array_ = new ::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive(*from._impl_.spec_set_list_style_list_label_type_array_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecListStyleListLabelTypeArrayArchive)
}

inline void SpecListStyleListLabelTypeArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_list_label_type_array_){nullptr}
  };
}

SpecListStyleListLabelTypeArrayArchive::~SpecListStyleListLabelTypeArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecListStyleListLabelTypeArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecListStyleListLabelTypeArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_list_style_list_label_type_array_;
}

void SpecListStyleListLabelTypeArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecListStyleListLabelTypeArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecListStyleListLabelTypeArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_list_style_list_label_type_array_ != nullptr);
    _impl_.spec_set_list_style_list_label_type_array_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecListStyleListLabelTypeArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive spec_set_list_style_list_label_type_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_list_style_list_label_type_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecListStyleListLabelTypeArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecListStyleListLabelTypeArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive spec_set_list_style_list_label_type_array = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_list_style_list_label_type_array(this),
        _Internal::spec_set_list_style_list_label_type_array(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecListStyleListLabelTypeArrayArchive)
  return target;
}

size_t SpecListStyleListLabelTypeArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecListStyleListLabelTypeArrayArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetListStyleListLabelTypeArrayArchive spec_set_list_style_list_label_type_array = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_list_style_list_label_type_array_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecListStyleListLabelTypeArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecListStyleListLabelTypeArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecListStyleListLabelTypeArrayArchive::GetClassData() const { return &_class_data_; }


void SpecListStyleListLabelTypeArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecListStyleListLabelTypeArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecListStyleListLabelTypeArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecListStyleListLabelTypeArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_list_style_list_label_type_array()) {
    _this->_internal_mutable_spec_set_list_style_list_label_type_array()->::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive::MergeFrom(
        from._internal_spec_set_list_style_list_label_type_array());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecListStyleListLabelTypeArrayArchive::CopyFrom(const SpecListStyleListLabelTypeArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecListStyleListLabelTypeArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecListStyleListLabelTypeArrayArchive::IsInitialized() const {
  if (_internal_has_spec_set_list_style_list_label_type_array()) {
    if (!_impl_.spec_set_list_style_list_label_type_array_->IsInitialized()) return false;
  }
  return true;
}

void SpecListStyleListLabelTypeArrayArchive::InternalSwap(SpecListStyleListLabelTypeArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_list_style_list_label_type_array_, other->_impl_.spec_set_list_style_list_label_type_array_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecListStyleListLabelTypeArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[27]);
}

// ===================================================================

class SpecListStyleListNumberTypeArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecListStyleListNumberTypeArrayArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive& spec_set_list_style_list_number_type_array(const SpecListStyleListNumberTypeArrayArchive* msg);
  static void set_has_spec_set_list_style_list_number_type_array(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive&
SpecListStyleListNumberTypeArrayArchive::_Internal::spec_set_list_style_list_number_type_array(const SpecListStyleListNumberTypeArrayArchive* msg) {
  return *msg->_impl_.spec_set_list_style_list_number_type_array_;
}
SpecListStyleListNumberTypeArrayArchive::SpecListStyleListNumberTypeArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecListStyleListNumberTypeArrayArchive)
}
SpecListStyleListNumberTypeArrayArchive::SpecListStyleListNumberTypeArrayArchive(const SpecListStyleListNumberTypeArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecListStyleListNumberTypeArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_list_number_type_array_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_list_style_list_number_type_array()) {
    _this->_impl_.spec_set_list_style_list_number_type_array_ = new ::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive(*from._impl_.spec_set_list_style_list_number_type_array_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecListStyleListNumberTypeArrayArchive)
}

inline void SpecListStyleListNumberTypeArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_list_number_type_array_){nullptr}
  };
}

SpecListStyleListNumberTypeArrayArchive::~SpecListStyleListNumberTypeArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecListStyleListNumberTypeArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecListStyleListNumberTypeArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_list_style_list_number_type_array_;
}

void SpecListStyleListNumberTypeArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecListStyleListNumberTypeArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecListStyleListNumberTypeArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_list_style_list_number_type_array_ != nullptr);
    _impl_.spec_set_list_style_list_number_type_array_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecListStyleListNumberTypeArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive spec_set_list_style_list_number_type_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_list_style_list_number_type_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecListStyleListNumberTypeArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecListStyleListNumberTypeArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive spec_set_list_style_list_number_type_array = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_list_style_list_number_type_array(this),
        _Internal::spec_set_list_style_list_number_type_array(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecListStyleListNumberTypeArrayArchive)
  return target;
}

size_t SpecListStyleListNumberTypeArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecListStyleListNumberTypeArrayArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetListStyleListNumberTypeArrayArchive spec_set_list_style_list_number_type_array = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_list_style_list_number_type_array_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecListStyleListNumberTypeArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecListStyleListNumberTypeArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecListStyleListNumberTypeArrayArchive::GetClassData() const { return &_class_data_; }


void SpecListStyleListNumberTypeArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecListStyleListNumberTypeArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecListStyleListNumberTypeArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecListStyleListNumberTypeArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_list_style_list_number_type_array()) {
    _this->_internal_mutable_spec_set_list_style_list_number_type_array()->::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive::MergeFrom(
        from._internal_spec_set_list_style_list_number_type_array());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecListStyleListNumberTypeArrayArchive::CopyFrom(const SpecListStyleListNumberTypeArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecListStyleListNumberTypeArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecListStyleListNumberTypeArrayArchive::IsInitialized() const {
  if (_internal_has_spec_set_list_style_list_number_type_array()) {
    if (!_impl_.spec_set_list_style_list_number_type_array_->IsInitialized()) return false;
  }
  return true;
}

void SpecListStyleListNumberTypeArrayArchive::InternalSwap(SpecListStyleListNumberTypeArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_list_style_list_number_type_array_, other->_impl_.spec_set_list_style_list_number_type_array_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecListStyleListNumberTypeArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[28]);
}

// ===================================================================

class SpecListStyleStringArrayArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecListStyleStringArrayArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetListStyleStringArrayArchive& spec_set_list_style_string_array(const SpecListStyleStringArrayArchive* msg);
  static void set_has_spec_set_list_style_string_array(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetListStyleStringArrayArchive&
SpecListStyleStringArrayArchive::_Internal::spec_set_list_style_string_array(const SpecListStyleStringArrayArchive* msg) {
  return *msg->_impl_.spec_set_list_style_string_array_;
}
SpecListStyleStringArrayArchive::SpecListStyleStringArrayArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecListStyleStringArrayArchive)
}
SpecListStyleStringArrayArchive::SpecListStyleStringArrayArchive(const SpecListStyleStringArrayArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecListStyleStringArrayArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_string_array_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_list_style_string_array()) {
    _this->_impl_.spec_set_list_style_string_array_ = new ::TSWPSOS::SpecSetListStyleStringArrayArchive(*from._impl_.spec_set_list_style_string_array_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecListStyleStringArrayArchive)
}

inline void SpecListStyleStringArrayArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_list_style_string_array_){nullptr}
  };
}

SpecListStyleStringArrayArchive::~SpecListStyleStringArrayArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecListStyleStringArrayArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecListStyleStringArrayArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_list_style_string_array_;
}

void SpecListStyleStringArrayArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecListStyleStringArrayArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecListStyleStringArrayArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_list_style_string_array_ != nullptr);
    _impl_.spec_set_list_style_string_array_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecListStyleStringArrayArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetListStyleStringArrayArchive spec_set_list_style_string_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_list_style_string_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecListStyleStringArrayArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecListStyleStringArrayArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetListStyleStringArrayArchive spec_set_list_style_string_array = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_list_style_string_array(this),
        _Internal::spec_set_list_style_string_array(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecListStyleStringArrayArchive)
  return target;
}

size_t SpecListStyleStringArrayArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecListStyleStringArrayArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetListStyleStringArrayArchive spec_set_list_style_string_array = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_list_style_string_array_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecListStyleStringArrayArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecListStyleStringArrayArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecListStyleStringArrayArchive::GetClassData() const { return &_class_data_; }


void SpecListStyleStringArrayArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecListStyleStringArrayArchive*>(&to_msg);
  auto& from = static_cast<const SpecListStyleStringArrayArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecListStyleStringArrayArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_list_style_string_array()) {
    _this->_internal_mutable_spec_set_list_style_string_array()->::TSWPSOS::SpecSetListStyleStringArrayArchive::MergeFrom(
        from._internal_spec_set_list_style_string_array());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecListStyleStringArrayArchive::CopyFrom(const SpecListStyleStringArrayArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecListStyleStringArrayArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecListStyleStringArrayArchive::IsInitialized() const {
  if (_internal_has_spec_set_list_style_string_array()) {
    if (!_impl_.spec_set_list_style_string_array_->IsInitialized()) return false;
  }
  return true;
}

void SpecListStyleStringArrayArchive::InternalSwap(SpecListStyleStringArrayArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_list_style_string_array_, other->_impl_.spec_set_list_style_string_array_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecListStyleStringArrayArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[29]);
}

// ===================================================================

class SpecPaddingArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecPaddingArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetPaddingArchive& spec_set_padding(const SpecPaddingArchive* msg);
  static void set_has_spec_set_padding(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetPaddingArchive&
SpecPaddingArchive::_Internal::spec_set_padding(const SpecPaddingArchive* msg) {
  return *msg->_impl_.spec_set_padding_;
}
SpecPaddingArchive::SpecPaddingArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecPaddingArchive)
}
SpecPaddingArchive::SpecPaddingArchive(const SpecPaddingArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecPaddingArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_padding_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_padding()) {
    _this->_impl_.spec_set_padding_ = new ::TSWPSOS::SpecSetPaddingArchive(*from._impl_.spec_set_padding_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecPaddingArchive)
}

inline void SpecPaddingArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_padding_){nullptr}
  };
}

SpecPaddingArchive::~SpecPaddingArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecPaddingArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecPaddingArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_padding_;
}

void SpecPaddingArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecPaddingArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecPaddingArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_padding_ != nullptr);
    _impl_.spec_set_padding_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecPaddingArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetPaddingArchive spec_set_padding = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_padding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecPaddingArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecPaddingArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetPaddingArchive spec_set_padding = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_padding(this),
        _Internal::spec_set_padding(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecPaddingArchive)
  return target;
}

size_t SpecPaddingArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecPaddingArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetPaddingArchive spec_set_padding = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_padding_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecPaddingArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecPaddingArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecPaddingArchive::GetClassData() const { return &_class_data_; }


void SpecPaddingArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecPaddingArchive*>(&to_msg);
  auto& from = static_cast<const SpecPaddingArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecPaddingArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_padding()) {
    _this->_internal_mutable_spec_set_padding()->::TSWPSOS::SpecSetPaddingArchive::MergeFrom(
        from._internal_spec_set_padding());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecPaddingArchive::CopyFrom(const SpecPaddingArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecPaddingArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecPaddingArchive::IsInitialized() const {
  if (_internal_has_spec_set_padding()) {
    if (!_impl_.spec_set_padding_->IsInitialized()) return false;
  }
  return true;
}

void SpecPaddingArchive::InternalSwap(SpecPaddingArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_padding_, other->_impl_.spec_set_padding_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecPaddingArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[30]);
}

// ===================================================================

class SpecParagraphStyleArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecParagraphStyleArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetParagraphStyleArchive& spec_set_paragraph_style(const SpecParagraphStyleArchive* msg);
  static void set_has_spec_set_paragraph_style(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetParagraphStyleArchive&
SpecParagraphStyleArchive::_Internal::spec_set_paragraph_style(const SpecParagraphStyleArchive* msg) {
  return *msg->_impl_.spec_set_paragraph_style_;
}
SpecParagraphStyleArchive::SpecParagraphStyleArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecParagraphStyleArchive)
}
SpecParagraphStyleArchive::SpecParagraphStyleArchive(const SpecParagraphStyleArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecParagraphStyleArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_paragraph_style_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_paragraph_style()) {
    _this->_impl_.spec_set_paragraph_style_ = new ::TSWPSOS::SpecSetParagraphStyleArchive(*from._impl_.spec_set_paragraph_style_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecParagraphStyleArchive)
}

inline void SpecParagraphStyleArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_paragraph_style_){nullptr}
  };
}

SpecParagraphStyleArchive::~SpecParagraphStyleArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecParagraphStyleArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecParagraphStyleArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_paragraph_style_;
}

void SpecParagraphStyleArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecParagraphStyleArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecParagraphStyleArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_paragraph_style_ != nullptr);
    _impl_.spec_set_paragraph_style_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecParagraphStyleArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetParagraphStyleArchive spec_set_paragraph_style = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_paragraph_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecParagraphStyleArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecParagraphStyleArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetParagraphStyleArchive spec_set_paragraph_style = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_paragraph_style(this),
        _Internal::spec_set_paragraph_style(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecParagraphStyleArchive)
  return target;
}

size_t SpecParagraphStyleArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecParagraphStyleArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetParagraphStyleArchive spec_set_paragraph_style = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_paragraph_style_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecParagraphStyleArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecParagraphStyleArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecParagraphStyleArchive::GetClassData() const { return &_class_data_; }


void SpecParagraphStyleArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecParagraphStyleArchive*>(&to_msg);
  auto& from = static_cast<const SpecParagraphStyleArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecParagraphStyleArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_paragraph_style()) {
    _this->_internal_mutable_spec_set_paragraph_style()->::TSWPSOS::SpecSetParagraphStyleArchive::MergeFrom(
        from._internal_spec_set_paragraph_style());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecParagraphStyleArchive::CopyFrom(const SpecParagraphStyleArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecParagraphStyleArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecParagraphStyleArchive::IsInitialized() const {
  if (_internal_has_spec_set_paragraph_style()) {
    if (!_impl_.spec_set_paragraph_style_->IsInitialized()) return false;
  }
  return true;
}

void SpecParagraphStyleArchive::InternalSwap(SpecParagraphStyleArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_paragraph_style_, other->_impl_.spec_set_paragraph_style_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecParagraphStyleArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[31]);
}

// ===================================================================

class SpecRuleOffsetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecRuleOffsetArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetRuleOffsetArchive& spec_set_rule_offset(const SpecRuleOffsetArchive* msg);
  static void set_has_spec_set_rule_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetRuleOffsetArchive&
SpecRuleOffsetArchive::_Internal::spec_set_rule_offset(const SpecRuleOffsetArchive* msg) {
  return *msg->_impl_.spec_set_rule_offset_;
}
SpecRuleOffsetArchive::SpecRuleOffsetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecRuleOffsetArchive)
}
SpecRuleOffsetArchive::SpecRuleOffsetArchive(const SpecRuleOffsetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecRuleOffsetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_rule_offset_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_rule_offset()) {
    _this->_impl_.spec_set_rule_offset_ = new ::TSWPSOS::SpecSetRuleOffsetArchive(*from._impl_.spec_set_rule_offset_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecRuleOffsetArchive)
}

inline void SpecRuleOffsetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_rule_offset_){nullptr}
  };
}

SpecRuleOffsetArchive::~SpecRuleOffsetArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecRuleOffsetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecRuleOffsetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_rule_offset_;
}

void SpecRuleOffsetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecRuleOffsetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecRuleOffsetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_rule_offset_ != nullptr);
    _impl_.spec_set_rule_offset_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecRuleOffsetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetRuleOffsetArchive spec_set_rule_offset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_rule_offset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecRuleOffsetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecRuleOffsetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetRuleOffsetArchive spec_set_rule_offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_rule_offset(this),
        _Internal::spec_set_rule_offset(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecRuleOffsetArchive)
  return target;
}

size_t SpecRuleOffsetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecRuleOffsetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetRuleOffsetArchive spec_set_rule_offset = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_rule_offset_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecRuleOffsetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecRuleOffsetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecRuleOffsetArchive::GetClassData() const { return &_class_data_; }


void SpecRuleOffsetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecRuleOffsetArchive*>(&to_msg);
  auto& from = static_cast<const SpecRuleOffsetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecRuleOffsetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_rule_offset()) {
    _this->_internal_mutable_spec_set_rule_offset()->::TSWPSOS::SpecSetRuleOffsetArchive::MergeFrom(
        from._internal_spec_set_rule_offset());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecRuleOffsetArchive::CopyFrom(const SpecRuleOffsetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecRuleOffsetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecRuleOffsetArchive::IsInitialized() const {
  if (_internal_has_spec_set_rule_offset()) {
    if (!_impl_.spec_set_rule_offset_->IsInitialized()) return false;
  }
  return true;
}

void SpecRuleOffsetArchive::InternalSwap(SpecRuleOffsetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_rule_offset_, other->_impl_.spec_set_rule_offset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecRuleOffsetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[32]);
}

// ===================================================================

class SpecTabsArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecTabsArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecSetTabsArchive& spec_set_tabs(const SpecTabsArchive* msg);
  static void set_has_spec_set_tabs(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSWPSOS::SpecSetTabsArchive&
SpecTabsArchive::_Internal::spec_set_tabs(const SpecTabsArchive* msg) {
  return *msg->_impl_.spec_set_tabs_;
}
SpecTabsArchive::SpecTabsArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.SpecTabsArchive)
}
SpecTabsArchive::SpecTabsArchive(const SpecTabsArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecTabsArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_tabs_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_tabs()) {
    _this->_impl_.spec_set_tabs_ = new ::TSWPSOS::SpecSetTabsArchive(*from._impl_.spec_set_tabs_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.SpecTabsArchive)
}

inline void SpecTabsArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_tabs_){nullptr}
  };
}

SpecTabsArchive::~SpecTabsArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.SpecTabsArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecTabsArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_tabs_;
}

void SpecTabsArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecTabsArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.SpecTabsArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_tabs_ != nullptr);
    _impl_.spec_set_tabs_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecTabsArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecSetTabsArchive spec_set_tabs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_tabs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecTabsArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.SpecTabsArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecSetTabsArchive spec_set_tabs = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_tabs(this),
        _Internal::spec_set_tabs(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.SpecTabsArchive)
  return target;
}

size_t SpecTabsArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.SpecTabsArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSWPSOS.SpecSetTabsArchive spec_set_tabs = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_tabs_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecTabsArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecTabsArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecTabsArchive::GetClassData() const { return &_class_data_; }


void SpecTabsArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecTabsArchive*>(&to_msg);
  auto& from = static_cast<const SpecTabsArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.SpecTabsArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_tabs()) {
    _this->_internal_mutable_spec_set_tabs()->::TSWPSOS::SpecSetTabsArchive::MergeFrom(
        from._internal_spec_set_tabs());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecTabsArchive::CopyFrom(const SpecTabsArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.SpecTabsArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecTabsArchive::IsInitialized() const {
  if (_internal_has_spec_set_tabs()) {
    if (!_impl_.spec_set_tabs_->IsInitialized()) return false;
  }
  return true;
}

void SpecTabsArchive::InternalSwap(SpecTabsArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_tabs_, other->_impl_.spec_set_tabs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecTabsArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[33]);
}

// ===================================================================

class CharacterStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<CharacterStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSSSOS::SpecDoubleArchive& baseline_shift(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_baseline_shift(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_baseline_shift_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::TSSSOS::SpecIntegerArchive& capitalization(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_capitalization(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_capitalization_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::TSSSOS::SpecStringArchive& compatibility_font_name(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_compatibility_font_name(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_compatibility_font_name_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::TSSSOS::SpecStringArchive& emphasis_marks(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_emphasis_marks(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_emphasis_marks_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::TSSSOS::SpecBoolArchive& bold(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_bold(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_bold_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::TSSSOS::SpecBoolArchive& italic(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_italic(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_italic_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::TSWPSOS::SpecFontFeaturesArchive& font_features(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_font_features(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_font_features_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::TSSSOS::SpecStringArchive& font_name(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_font_name(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_font_name_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::TSSSOS::SpecDoubleArchive& font_size(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_font_size(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_font_size_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::TSSSOS::SpecDoubleArchive& font_size_delta(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_font_size_delta(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_font_size_delta_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::TSSSOS::SpecDoubleArchive& kerning(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_kerning(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_kerning_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::TSSSOS::SpecStringArchive& language(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_language(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_language_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& ligatures(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_ligatures(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_ligatures_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::TSDSOS::SpecShadowArchive& text_shadow(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_text_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_text_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::TSSSOS::SpecColorArchive& strikethru_color(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_strikethru_color(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_strikethru_color_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static const ::TSSSOS::SpecIntegerArchive& strikethru(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_strikethru(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_strikethru_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::TSSSOS::SpecDoubleArchive& strikethru_width(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_strikethru_width(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_strikethru_width_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static const ::TSSSOS::SpecIntegerArchive& superscript(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_superscript(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_superscript_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static const ::TSSSOS::SpecColorArchive& text_background(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_text_background(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_text_background_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static const ::TSSSOS::SpecDoubleArchive& tracking(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_tracking(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_tracking_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static const ::TSSSOS::SpecColorArchive& underline_color(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_underline_color(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_underline_color_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static const ::TSSSOS::SpecIntegerArchive& underline(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_underline(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_underline_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static const ::TSSSOS::SpecDoubleArchive& underline_width(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_underline_width(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_underline_width_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static const ::TSSSOS::SpecBoolArchive& word_strikethru(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_word_strikethru(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_word_strikethru_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static const ::TSSSOS::SpecBoolArchive& word_underline(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_word_underline(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_word_underline_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
  static const ::TSSSOS::SpecIntegerArchive& writing_direction(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_writing_direction(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_writing_direction_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16777216u;
  }
  static const ::TSSSOS::SpecBoolArchive& is_named_point_size(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_is_named_point_size(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_is_named_point_size_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 33554432u;
  }
  static const ::TSSSOS::SpecBoolArchive& capitalization_uses_linguistics(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_capitalization_uses_linguistics(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_capitalization_uses_linguistics_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 67108864u;
  }
  static const ::TSDSOS::SpecStrokeArchive& character_stroke(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_character_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_character_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 134217728u;
  }
  static const ::TSDSOS::SpecFillArchive& character_fill(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_character_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_character_fill_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 268435456u;
  }
  static const ::TSSSOS::SpecBoolArchive& character_fill_should_fill_text_container(const CharacterStylePropertyChangeSetArchive* msg);
  static void set_has_character_fill_should_fill_text_container(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_character_fill_should_fill_text_container_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 536870912u;
  }
};

const ::TSSSOS::SpecDoubleArchive&
CharacterStylePropertyChangeSetArchive::_Internal::baseline_shift(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.baseline_shift_;
}
const ::TSSSOS::SpecIntegerArchive&
CharacterStylePropertyChangeSetArchive::_Internal::capitalization(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.capitalization_;
}
const ::TSSSOS::SpecStringArchive&
CharacterStylePropertyChangeSetArchive::_Internal::compatibility_font_name(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.compatibility_font_name_;
}
const ::TSSSOS::SpecStringArchive&
CharacterStylePropertyChangeSetArchive::_Internal::emphasis_marks(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.emphasis_marks_;
}
const ::TSSSOS::SpecBoolArchive&
CharacterStylePropertyChangeSetArchive::_Internal::bold(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bold_;
}
const ::TSSSOS::SpecBoolArchive&
CharacterStylePropertyChangeSetArchive::_Internal::italic(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.italic_;
}
const ::TSWPSOS::SpecFontFeaturesArchive&
CharacterStylePropertyChangeSetArchive::_Internal::font_features(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.font_features_;
}
const ::TSSSOS::SpecStringArchive&
CharacterStylePropertyChangeSetArchive::_Internal::font_name(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.font_name_;
}
const ::TSSSOS::SpecDoubleArchive&
CharacterStylePropertyChangeSetArchive::_Internal::font_size(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.font_size_;
}
const ::TSSSOS::SpecDoubleArchive&
CharacterStylePropertyChangeSetArchive::_Internal::font_size_delta(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.font_size_delta_;
}
const ::TSSSOS::SpecDoubleArchive&
CharacterStylePropertyChangeSetArchive::_Internal::kerning(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.kerning_;
}
const ::TSSSOS::SpecStringArchive&
CharacterStylePropertyChangeSetArchive::_Internal::language(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.language_;
}
const ::TSSSOS::SpecIntegerArchive&
CharacterStylePropertyChangeSetArchive::_Internal::ligatures(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.ligatures_;
}
const ::TSDSOS::SpecShadowArchive&
CharacterStylePropertyChangeSetArchive::_Internal::text_shadow(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.text_shadow_;
}
const ::TSSSOS::SpecColorArchive&
CharacterStylePropertyChangeSetArchive::_Internal::strikethru_color(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.strikethru_color_;
}
const ::TSSSOS::SpecIntegerArchive&
CharacterStylePropertyChangeSetArchive::_Internal::strikethru(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.strikethru_;
}
const ::TSSSOS::SpecDoubleArchive&
CharacterStylePropertyChangeSetArchive::_Internal::strikethru_width(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.strikethru_width_;
}
const ::TSSSOS::SpecIntegerArchive&
CharacterStylePropertyChangeSetArchive::_Internal::superscript(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.superscript_;
}
const ::TSSSOS::SpecColorArchive&
CharacterStylePropertyChangeSetArchive::_Internal::text_background(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.text_background_;
}
const ::TSSSOS::SpecDoubleArchive&
CharacterStylePropertyChangeSetArchive::_Internal::tracking(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.tracking_;
}
const ::TSSSOS::SpecColorArchive&
CharacterStylePropertyChangeSetArchive::_Internal::underline_color(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.underline_color_;
}
const ::TSSSOS::SpecIntegerArchive&
CharacterStylePropertyChangeSetArchive::_Internal::underline(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.underline_;
}
const ::TSSSOS::SpecDoubleArchive&
CharacterStylePropertyChangeSetArchive::_Internal::underline_width(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.underline_width_;
}
const ::TSSSOS::SpecBoolArchive&
CharacterStylePropertyChangeSetArchive::_Internal::word_strikethru(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.word_strikethru_;
}
const ::TSSSOS::SpecBoolArchive&
CharacterStylePropertyChangeSetArchive::_Internal::word_underline(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.word_underline_;
}
const ::TSSSOS::SpecIntegerArchive&
CharacterStylePropertyChangeSetArchive::_Internal::writing_direction(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.writing_direction_;
}
const ::TSSSOS::SpecBoolArchive&
CharacterStylePropertyChangeSetArchive::_Internal::is_named_point_size(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.is_named_point_size_;
}
const ::TSSSOS::SpecBoolArchive&
CharacterStylePropertyChangeSetArchive::_Internal::capitalization_uses_linguistics(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.capitalization_uses_linguistics_;
}
const ::TSDSOS::SpecStrokeArchive&
CharacterStylePropertyChangeSetArchive::_Internal::character_stroke(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.character_stroke_;
}
const ::TSDSOS::SpecFillArchive&
CharacterStylePropertyChangeSetArchive::_Internal::character_fill(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.character_fill_;
}
const ::TSSSOS::SpecBoolArchive&
CharacterStylePropertyChangeSetArchive::_Internal::character_fill_should_fill_text_container(const CharacterStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.character_fill_should_fill_text_container_;
}
void CharacterStylePropertyChangeSetArchive::clear_baseline_shift() {
  if (_impl_.baseline_shift_ != nullptr) _impl_.baseline_shift_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CharacterStylePropertyChangeSetArchive::clear_capitalization() {
  if (_impl_.capitalization_ != nullptr) _impl_.capitalization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CharacterStylePropertyChangeSetArchive::clear_compatibility_font_name() {
  if (_impl_.compatibility_font_name_ != nullptr) _impl_.compatibility_font_name_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CharacterStylePropertyChangeSetArchive::clear_emphasis_marks() {
  if (_impl_.emphasis_marks_ != nullptr) _impl_.emphasis_marks_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void CharacterStylePropertyChangeSetArchive::clear_bold() {
  if (_impl_.bold_ != nullptr) _impl_.bold_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void CharacterStylePropertyChangeSetArchive::clear_italic() {
  if (_impl_.italic_ != nullptr) _impl_.italic_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void CharacterStylePropertyChangeSetArchive::clear_font_name() {
  if (_impl_.font_name_ != nullptr) _impl_.font_name_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void CharacterStylePropertyChangeSetArchive::clear_font_size() {
  if (_impl_.font_size_ != nullptr) _impl_.font_size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void CharacterStylePropertyChangeSetArchive::clear_font_size_delta() {
  if (_impl_.font_size_delta_ != nullptr) _impl_.font_size_delta_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void CharacterStylePropertyChangeSetArchive::clear_kerning() {
  if (_impl_.kerning_ != nullptr) _impl_.kerning_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void CharacterStylePropertyChangeSetArchive::clear_language() {
  if (_impl_.language_ != nullptr) _impl_.language_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void CharacterStylePropertyChangeSetArchive::clear_ligatures() {
  if (_impl_.ligatures_ != nullptr) _impl_.ligatures_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void CharacterStylePropertyChangeSetArchive::clear_text_shadow() {
  if (_impl_.text_shadow_ != nullptr) _impl_.text_shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void CharacterStylePropertyChangeSetArchive::clear_strikethru_color() {
  if (_impl_.strikethru_color_ != nullptr) _impl_.strikethru_color_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void CharacterStylePropertyChangeSetArchive::clear_strikethru() {
  if (_impl_.strikethru_ != nullptr) _impl_.strikethru_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void CharacterStylePropertyChangeSetArchive::clear_strikethru_width() {
  if (_impl_.strikethru_width_ != nullptr) _impl_.strikethru_width_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void CharacterStylePropertyChangeSetArchive::clear_superscript() {
  if (_impl_.superscript_ != nullptr) _impl_.superscript_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void CharacterStylePropertyChangeSetArchive::clear_text_background() {
  if (_impl_.text_background_ != nullptr) _impl_.text_background_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void CharacterStylePropertyChangeSetArchive::clear_tracking() {
  if (_impl_.tracking_ != nullptr) _impl_.tracking_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void CharacterStylePropertyChangeSetArchive::clear_underline_color() {
  if (_impl_.underline_color_ != nullptr) _impl_.underline_color_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void CharacterStylePropertyChangeSetArchive::clear_underline() {
  if (_impl_.underline_ != nullptr) _impl_.underline_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void CharacterStylePropertyChangeSetArchive::clear_underline_width() {
  if (_impl_.underline_width_ != nullptr) _impl_.underline_width_->Clear();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
void CharacterStylePropertyChangeSetArchive::clear_word_strikethru() {
  if (_impl_.word_strikethru_ != nullptr) _impl_.word_strikethru_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
void CharacterStylePropertyChangeSetArchive::clear_word_underline() {
  if (_impl_.word_underline_ != nullptr) _impl_.word_underline_->Clear();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
void CharacterStylePropertyChangeSetArchive::clear_writing_direction() {
  if (_impl_.writing_direction_ != nullptr) _impl_.writing_direction_->Clear();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
void CharacterStylePropertyChangeSetArchive::clear_is_named_point_size() {
  if (_impl_.is_named_point_size_ != nullptr) _impl_.is_named_point_size_->Clear();
  _impl_._has_bits_[0] &= ~0x04000000u;
}
void CharacterStylePropertyChangeSetArchive::clear_capitalization_uses_linguistics() {
  if (_impl_.capitalization_uses_linguistics_ != nullptr) _impl_.capitalization_uses_linguistics_->Clear();
  _impl_._has_bits_[0] &= ~0x08000000u;
}
void CharacterStylePropertyChangeSetArchive::clear_character_stroke() {
  if (_impl_.character_stroke_ != nullptr) _impl_.character_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x10000000u;
}
void CharacterStylePropertyChangeSetArchive::clear_character_fill() {
  if (_impl_.character_fill_ != nullptr) _impl_.character_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x20000000u;
}
void CharacterStylePropertyChangeSetArchive::clear_character_fill_should_fill_text_container() {
  if (_impl_.character_fill_should_fill_text_container_ != nullptr) _impl_.character_fill_should_fill_text_container_->Clear();
  _impl_._has_bits_[0] &= ~0x40000000u;
}
CharacterStylePropertyChangeSetArchive::CharacterStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.CharacterStylePropertyChangeSetArchive)
}
CharacterStylePropertyChangeSetArchive::CharacterStylePropertyChangeSetArchive(const CharacterStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.baseline_shift_){nullptr}
    , decltype(_impl_.capitalization_){nullptr}
    , decltype(_impl_.compatibility_font_name_){nullptr}
    , decltype(_impl_.emphasis_marks_){nullptr}
    , decltype(_impl_.bold_){nullptr}
    , decltype(_impl_.italic_){nullptr}
    , decltype(_impl_.font_features_){nullptr}
    , decltype(_impl_.font_name_){nullptr}
    , decltype(_impl_.font_size_){nullptr}
    , decltype(_impl_.font_size_delta_){nullptr}
    , decltype(_impl_.kerning_){nullptr}
    , decltype(_impl_.language_){nullptr}
    , decltype(_impl_.ligatures_){nullptr}
    , decltype(_impl_.text_shadow_){nullptr}
    , decltype(_impl_.strikethru_color_){nullptr}
    , decltype(_impl_.strikethru_){nullptr}
    , decltype(_impl_.strikethru_width_){nullptr}
    , decltype(_impl_.superscript_){nullptr}
    , decltype(_impl_.text_background_){nullptr}
    , decltype(_impl_.tracking_){nullptr}
    , decltype(_impl_.underline_color_){nullptr}
    , decltype(_impl_.underline_){nullptr}
    , decltype(_impl_.underline_width_){nullptr}
    , decltype(_impl_.word_strikethru_){nullptr}
    , decltype(_impl_.word_underline_){nullptr}
    , decltype(_impl_.writing_direction_){nullptr}
    , decltype(_impl_.is_named_point_size_){nullptr}
    , decltype(_impl_.capitalization_uses_linguistics_){nullptr}
    , decltype(_impl_.character_stroke_){nullptr}
    , decltype(_impl_.character_fill_){nullptr}
    , decltype(_impl_.character_fill_should_fill_text_container_){nullptr}
    , decltype(_impl_.baseline_shift_undefined_){}
    , decltype(_impl_.capitalization_undefined_){}
    , decltype(_impl_.compatibility_font_name_undefined_){}
    , decltype(_impl_.emphasis_marks_undefined_){}
    , decltype(_impl_.bold_undefined_){}
    , decltype(_impl_.italic_undefined_){}
    , decltype(_impl_.font_features_undefined_){}
    , decltype(_impl_.font_name_undefined_){}
    , decltype(_impl_.font_size_undefined_){}
    , decltype(_impl_.font_size_delta_undefined_){}
    , decltype(_impl_.kerning_undefined_){}
    , decltype(_impl_.language_undefined_){}
    , decltype(_impl_.ligatures_undefined_){}
    , decltype(_impl_.text_shadow_undefined_){}
    , decltype(_impl_.strikethru_color_undefined_){}
    , decltype(_impl_.strikethru_undefined_){}
    , decltype(_impl_.strikethru_width_undefined_){}
    , decltype(_impl_.superscript_undefined_){}
    , decltype(_impl_.text_background_undefined_){}
    , decltype(_impl_.tracking_undefined_){}
    , decltype(_impl_.underline_color_undefined_){}
    , decltype(_impl_.underline_undefined_){}
    , decltype(_impl_.underline_width_undefined_){}
    , decltype(_impl_.word_strikethru_undefined_){}
    , decltype(_impl_.word_underline_undefined_){}
    , decltype(_impl_.writing_direction_undefined_){}
    , decltype(_impl_.is_named_point_size_undefined_){}
    , decltype(_impl_.capitalization_uses_linguistics_undefined_){}
    , decltype(_impl_.character_stroke_undefined_){}
    , decltype(_impl_.character_fill_undefined_){}
    , decltype(_impl_.character_fill_should_fill_text_container_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_baseline_shift()) {
    _this->_impl_.baseline_shift_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.baseline_shift_);
  }
  if (from._internal_has_capitalization()) {
    _this->_impl_.capitalization_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.capitalization_);
  }
  if (from._internal_has_compatibility_font_name()) {
    _this->_impl_.compatibility_font_name_ = new ::TSSSOS::SpecStringArchive(*from._impl_.compatibility_font_name_);
  }
  if (from._internal_has_emphasis_marks()) {
    _this->_impl_.emphasis_marks_ = new ::TSSSOS::SpecStringArchive(*from._impl_.emphasis_marks_);
  }
  if (from._internal_has_bold()) {
    _this->_impl_.bold_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.bold_);
  }
  if (from._internal_has_italic()) {
    _this->_impl_.italic_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.italic_);
  }
  if (from._internal_has_font_features()) {
    _this->_impl_.font_features_ = new ::TSWPSOS::SpecFontFeaturesArchive(*from._impl_.font_features_);
  }
  if (from._internal_has_font_name()) {
    _this->_impl_.font_name_ = new ::TSSSOS::SpecStringArchive(*from._impl_.font_name_);
  }
  if (from._internal_has_font_size()) {
    _this->_impl_.font_size_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.font_size_);
  }
  if (from._internal_has_font_size_delta()) {
    _this->_impl_.font_size_delta_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.font_size_delta_);
  }
  if (from._internal_has_kerning()) {
    _this->_impl_.kerning_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.kerning_);
  }
  if (from._internal_has_language()) {
    _this->_impl_.language_ = new ::TSSSOS::SpecStringArchive(*from._impl_.language_);
  }
  if (from._internal_has_ligatures()) {
    _this->_impl_.ligatures_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.ligatures_);
  }
  if (from._internal_has_text_shadow()) {
    _this->_impl_.text_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.text_shadow_);
  }
  if (from._internal_has_strikethru_color()) {
    _this->_impl_.strikethru_color_ = new ::TSSSOS::SpecColorArchive(*from._impl_.strikethru_color_);
  }
  if (from._internal_has_strikethru()) {
    _this->_impl_.strikethru_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.strikethru_);
  }
  if (from._internal_has_strikethru_width()) {
    _this->_impl_.strikethru_width_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.strikethru_width_);
  }
  if (from._internal_has_superscript()) {
    _this->_impl_.superscript_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.superscript_);
  }
  if (from._internal_has_text_background()) {
    _this->_impl_.text_background_ = new ::TSSSOS::SpecColorArchive(*from._impl_.text_background_);
  }
  if (from._internal_has_tracking()) {
    _this->_impl_.tracking_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.tracking_);
  }
  if (from._internal_has_underline_color()) {
    _this->_impl_.underline_color_ = new ::TSSSOS::SpecColorArchive(*from._impl_.underline_color_);
  }
  if (from._internal_has_underline()) {
    _this->_impl_.underline_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.underline_);
  }
  if (from._internal_has_underline_width()) {
    _this->_impl_.underline_width_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.underline_width_);
  }
  if (from._internal_has_word_strikethru()) {
    _this->_impl_.word_strikethru_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.word_strikethru_);
  }
  if (from._internal_has_word_underline()) {
    _this->_impl_.word_underline_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.word_underline_);
  }
  if (from._internal_has_writing_direction()) {
    _this->_impl_.writing_direction_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.writing_direction_);
  }
  if (from._internal_has_is_named_point_size()) {
    _this->_impl_.is_named_point_size_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.is_named_point_size_);
  }
  if (from._internal_has_capitalization_uses_linguistics()) {
    _this->_impl_.capitalization_uses_linguistics_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.capitalization_uses_linguistics_);
  }
  if (from._internal_has_character_stroke()) {
    _this->_impl_.character_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.character_stroke_);
  }
  if (from._internal_has_character_fill()) {
    _this->_impl_.character_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.character_fill_);
  }
  if (from._internal_has_character_fill_should_fill_text_container()) {
    _this->_impl_.character_fill_should_fill_text_container_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.character_fill_should_fill_text_container_);
  }
  ::memcpy(&_impl_.baseline_shift_undefined_, &from._impl_.baseline_shift_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.character_fill_should_fill_text_container_undefined_) -
    reinterpret_cast<char*>(&_impl_.baseline_shift_undefined_)) + sizeof(_impl_.character_fill_should_fill_text_container_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.CharacterStylePropertyChangeSetArchive)
}

inline void CharacterStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.baseline_shift_){nullptr}
    , decltype(_impl_.capitalization_){nullptr}
    , decltype(_impl_.compatibility_font_name_){nullptr}
    , decltype(_impl_.emphasis_marks_){nullptr}
    , decltype(_impl_.bold_){nullptr}
    , decltype(_impl_.italic_){nullptr}
    , decltype(_impl_.font_features_){nullptr}
    , decltype(_impl_.font_name_){nullptr}
    , decltype(_impl_.font_size_){nullptr}
    , decltype(_impl_.font_size_delta_){nullptr}
    , decltype(_impl_.kerning_){nullptr}
    , decltype(_impl_.language_){nullptr}
    , decltype(_impl_.ligatures_){nullptr}
    , decltype(_impl_.text_shadow_){nullptr}
    , decltype(_impl_.strikethru_color_){nullptr}
    , decltype(_impl_.strikethru_){nullptr}
    , decltype(_impl_.strikethru_width_){nullptr}
    , decltype(_impl_.superscript_){nullptr}
    , decltype(_impl_.text_background_){nullptr}
    , decltype(_impl_.tracking_){nullptr}
    , decltype(_impl_.underline_color_){nullptr}
    , decltype(_impl_.underline_){nullptr}
    , decltype(_impl_.underline_width_){nullptr}
    , decltype(_impl_.word_strikethru_){nullptr}
    , decltype(_impl_.word_underline_){nullptr}
    , decltype(_impl_.writing_direction_){nullptr}
    , decltype(_impl_.is_named_point_size_){nullptr}
    , decltype(_impl_.capitalization_uses_linguistics_){nullptr}
    , decltype(_impl_.character_stroke_){nullptr}
    , decltype(_impl_.character_fill_){nullptr}
    , decltype(_impl_.character_fill_should_fill_text_container_){nullptr}
    , decltype(_impl_.baseline_shift_undefined_){false}
    , decltype(_impl_.capitalization_undefined_){false}
    , decltype(_impl_.compatibility_font_name_undefined_){false}
    , decltype(_impl_.emphasis_marks_undefined_){false}
    , decltype(_impl_.bold_undefined_){false}
    , decltype(_impl_.italic_undefined_){false}
    , decltype(_impl_.font_features_undefined_){false}
    , decltype(_impl_.font_name_undefined_){false}
    , decltype(_impl_.font_size_undefined_){false}
    , decltype(_impl_.font_size_delta_undefined_){false}
    , decltype(_impl_.kerning_undefined_){false}
    , decltype(_impl_.language_undefined_){false}
    , decltype(_impl_.ligatures_undefined_){false}
    , decltype(_impl_.text_shadow_undefined_){false}
    , decltype(_impl_.strikethru_color_undefined_){false}
    , decltype(_impl_.strikethru_undefined_){false}
    , decltype(_impl_.strikethru_width_undefined_){false}
    , decltype(_impl_.superscript_undefined_){false}
    , decltype(_impl_.text_background_undefined_){false}
    , decltype(_impl_.tracking_undefined_){false}
    , decltype(_impl_.underline_color_undefined_){false}
    , decltype(_impl_.underline_undefined_){false}
    , decltype(_impl_.underline_width_undefined_){false}
    , decltype(_impl_.word_strikethru_undefined_){false}
    , decltype(_impl_.word_underline_undefined_){false}
    , decltype(_impl_.writing_direction_undefined_){false}
    , decltype(_impl_.is_named_point_size_undefined_){false}
    , decltype(_impl_.capitalization_uses_linguistics_undefined_){false}
    , decltype(_impl_.character_stroke_undefined_){false}
    , decltype(_impl_.character_fill_undefined_){false}
    , decltype(_impl_.character_fill_should_fill_text_container_undefined_){false}
  };
}

CharacterStylePropertyChangeSetArchive::~CharacterStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.CharacterStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.baseline_shift_;
  if (this != internal_default_instance()) delete _impl_.capitalization_;
  if (this != internal_default_instance()) delete _impl_.compatibility_font_name_;
  if (this != internal_default_instance()) delete _impl_.emphasis_marks_;
  if (this != internal_default_instance()) delete _impl_.bold_;
  if (this != internal_default_instance()) delete _impl_.italic_;
  if (this != internal_default_instance()) delete _impl_.font_features_;
  if (this != internal_default_instance()) delete _impl_.font_name_;
  if (this != internal_default_instance()) delete _impl_.font_size_;
  if (this != internal_default_instance()) delete _impl_.font_size_delta_;
  if (this != internal_default_instance()) delete _impl_.kerning_;
  if (this != internal_default_instance()) delete _impl_.language_;
  if (this != internal_default_instance()) delete _impl_.ligatures_;
  if (this != internal_default_instance()) delete _impl_.text_shadow_;
  if (this != internal_default_instance()) delete _impl_.strikethru_color_;
  if (this != internal_default_instance()) delete _impl_.strikethru_;
  if (this != internal_default_instance()) delete _impl_.strikethru_width_;
  if (this != internal_default_instance()) delete _impl_.superscript_;
  if (this != internal_default_instance()) delete _impl_.text_background_;
  if (this != internal_default_instance()) delete _impl_.tracking_;
  if (this != internal_default_instance()) delete _impl_.underline_color_;
  if (this != internal_default_instance()) delete _impl_.underline_;
  if (this != internal_default_instance()) delete _impl_.underline_width_;
  if (this != internal_default_instance()) delete _impl_.word_strikethru_;
  if (this != internal_default_instance()) delete _impl_.word_underline_;
  if (this != internal_default_instance()) delete _impl_.writing_direction_;
  if (this != internal_default_instance()) delete _impl_.is_named_point_size_;
  if (this != internal_default_instance()) delete _impl_.capitalization_uses_linguistics_;
  if (this != internal_default_instance()) delete _impl_.character_stroke_;
  if (this != internal_default_instance()) delete _impl_.character_fill_;
  if (this != internal_default_instance()) delete _impl_.character_fill_should_fill_text_container_;
}

void CharacterStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.CharacterStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.baseline_shift_ != nullptr);
      _impl_.baseline_shift_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.capitalization_ != nullptr);
      _impl_.capitalization_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.compatibility_font_name_ != nullptr);
      _impl_.compatibility_font_name_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.emphasis_marks_ != nullptr);
      _impl_.emphasis_marks_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.bold_ != nullptr);
      _impl_.bold_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.italic_ != nullptr);
      _impl_.italic_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.font_features_ != nullptr);
      _impl_.font_features_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.font_name_ != nullptr);
      _impl_.font_name_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.font_size_ != nullptr);
      _impl_.font_size_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.font_size_delta_ != nullptr);
      _impl_.font_size_delta_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.kerning_ != nullptr);
      _impl_.kerning_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.language_ != nullptr);
      _impl_.language_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.ligatures_ != nullptr);
      _impl_.ligatures_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.text_shadow_ != nullptr);
      _impl_.text_shadow_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.strikethru_color_ != nullptr);
      _impl_.strikethru_color_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.strikethru_ != nullptr);
      _impl_.strikethru_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.strikethru_width_ != nullptr);
      _impl_.strikethru_width_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.superscript_ != nullptr);
      _impl_.superscript_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.text_background_ != nullptr);
      _impl_.text_background_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.tracking_ != nullptr);
      _impl_.tracking_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.underline_color_ != nullptr);
      _impl_.underline_color_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.underline_ != nullptr);
      _impl_.underline_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.underline_width_ != nullptr);
      _impl_.underline_width_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.word_strikethru_ != nullptr);
      _impl_.word_strikethru_->Clear();
    }
  }
  if (cached_has_bits & 0x7f000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(_impl_.word_underline_ != nullptr);
      _impl_.word_underline_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(_impl_.writing_direction_ != nullptr);
      _impl_.writing_direction_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(_impl_.is_named_point_size_ != nullptr);
      _impl_.is_named_point_size_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(_impl_.capitalization_uses_linguistics_ != nullptr);
      _impl_.capitalization_uses_linguistics_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(_impl_.character_stroke_ != nullptr);
      _impl_.character_stroke_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(_impl_.character_fill_ != nullptr);
      _impl_.character_fill_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(_impl_.character_fill_should_fill_text_container_ != nullptr);
      _impl_.character_fill_should_fill_text_container_->Clear();
    }
  }
  _impl_.baseline_shift_undefined_ = false;
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.capitalization_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.font_size_undefined_) -
        reinterpret_cast<char*>(&_impl_.capitalization_undefined_)) + sizeof(_impl_.font_size_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.font_size_delta_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.strikethru_width_undefined_) -
        reinterpret_cast<char*>(&_impl_.font_size_delta_undefined_)) + sizeof(_impl_.strikethru_width_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.superscript_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.word_underline_undefined_) -
        reinterpret_cast<char*>(&_impl_.superscript_undefined_)) + sizeof(_impl_.word_underline_undefined_));
  }
  if (cached_has_bits & 0x3f000000u) {
    ::memset(&_impl_.writing_direction_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.character_fill_should_fill_text_container_undefined_) -
        reinterpret_cast<char*>(&_impl_.writing_direction_undefined_)) + sizeof(_impl_.character_fill_should_fill_text_container_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSSSOS.SpecDoubleArchive baseline_shift = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_baseline_shift(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool baseline_shift_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_baseline_shift_undefined(&_impl_._has_bits_);
          _impl_.baseline_shift_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive capitalization = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_capitalization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool capitalization_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_capitalization_undefined(&_impl_._has_bits_);
          _impl_.capitalization_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive compatibility_font_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_compatibility_font_name(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool compatibility_font_name_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_compatibility_font_name_undefined(&_impl_._has_bits_);
          _impl_.compatibility_font_name_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive emphasis_marks = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_emphasis_marks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool emphasis_marks_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_emphasis_marks_undefined(&_impl_._has_bits_);
          _impl_.emphasis_marks_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bold = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_bold(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bold_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_bold_undefined(&_impl_._has_bits_);
          _impl_.bold_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive italic = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_italic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool italic_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_italic_undefined(&_impl_._has_bits_);
          _impl_.italic_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecFontFeaturesArchive font_features = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_font_features(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool font_features_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_font_features_undefined(&_impl_._has_bits_);
          _impl_.font_features_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive font_name = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_font_name(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool font_name_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_font_name_undefined(&_impl_._has_bits_);
          _impl_.font_name_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive font_size = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_font_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool font_size_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_font_size_undefined(&_impl_._has_bits_);
          _impl_.font_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive font_size_delta = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_font_size_delta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool font_size_delta_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_font_size_delta_undefined(&_impl_._has_bits_);
          _impl_.font_size_delta_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive kerning = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_kerning(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool kerning_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_kerning_undefined(&_impl_._has_bits_);
          _impl_.kerning_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive language = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_language(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool language_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_language_undefined(&_impl_._has_bits_);
          _impl_.language_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive ligatures = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_ligatures(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool ligatures_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_ligatures_undefined(&_impl_._has_bits_);
          _impl_.ligatures_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive text_shadow = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_text_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool text_shadow_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_text_shadow_undefined(&_impl_._has_bits_);
          _impl_.text_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecColorArchive strikethru_color = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_strikethru_color(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool strikethru_color_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_strikethru_color_undefined(&_impl_._has_bits_);
          _impl_.strikethru_color_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive strikethru = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_strikethru(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool strikethru_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_strikethru_undefined(&_impl_._has_bits_);
          _impl_.strikethru_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive strikethru_width = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_strikethru_width(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool strikethru_width_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_strikethru_width_undefined(&_impl_._has_bits_);
          _impl_.strikethru_width_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive superscript = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_superscript(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool superscript_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_superscript_undefined(&_impl_._has_bits_);
          _impl_.superscript_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecColorArchive text_background = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_text_background(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool text_background_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_text_background_undefined(&_impl_._has_bits_);
          _impl_.text_background_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive tracking = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_tracking(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool tracking_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_tracking_undefined(&_impl_._has_bits_);
          _impl_.tracking_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecColorArchive underline_color = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_underline_color(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool underline_color_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_underline_color_undefined(&_impl_._has_bits_);
          _impl_.underline_color_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive underline = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_underline(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool underline_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_underline_undefined(&_impl_._has_bits_);
          _impl_.underline_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive underline_width = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_underline_width(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool underline_width_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_underline_width_undefined(&_impl_._has_bits_);
          _impl_.underline_width_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive word_strikethru = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_word_strikethru(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool word_strikethru_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_word_strikethru_undefined(&_impl_._has_bits_);
          _impl_.word_strikethru_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive word_underline = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_word_underline(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool word_underline_undefined = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_word_underline_undefined(&_impl_._has_bits_);
          _impl_.word_underline_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive writing_direction = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_writing_direction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool writing_direction_undefined = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_writing_direction_undefined(&_impl_._has_bits_);
          _impl_.writing_direction_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive is_named_point_size = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_is_named_point_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool is_named_point_size_undefined = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_is_named_point_size_undefined(&_impl_._has_bits_);
          _impl_.is_named_point_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive capitalization_uses_linguistics = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_capitalization_uses_linguistics(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool capitalization_uses_linguistics_undefined = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_capitalization_uses_linguistics_undefined(&_impl_._has_bits_);
          _impl_.capitalization_uses_linguistics_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive character_stroke = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool character_stroke_undefined = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_character_stroke_undefined(&_impl_._has_bits_);
          _impl_.character_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive character_fill = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool character_fill_undefined = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_character_fill_undefined(&_impl_._has_bits_);
          _impl_.character_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive character_fill_should_fill_text_container = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_fill_should_fill_text_container(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool character_fill_should_fill_text_container_undefined = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_character_fill_should_fill_text_container_undefined(&_impl_._has_bits_);
          _impl_.character_fill_should_fill_text_container_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharacterStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.CharacterStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive baseline_shift = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::baseline_shift(this),
        _Internal::baseline_shift(this).GetCachedSize(), target, stream);
  }

  // optional bool baseline_shift_undefined = 2;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_baseline_shift_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive capitalization = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::capitalization(this),
        _Internal::capitalization(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool capitalization_undefined = 4;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_capitalization_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecStringArchive compatibility_font_name = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::compatibility_font_name(this),
        _Internal::compatibility_font_name(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool compatibility_font_name_undefined = 6;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_compatibility_font_name_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecStringArchive emphasis_marks = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::emphasis_marks(this),
        _Internal::emphasis_marks(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool emphasis_marks_undefined = 8;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_emphasis_marks_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive bold = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::bold(this),
        _Internal::bold(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool bold_undefined = 10;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_bold_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive italic = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::italic(this),
        _Internal::italic(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool italic_undefined = 12;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_italic_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecFontFeaturesArchive font_features = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::font_features(this),
        _Internal::font_features(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool font_features_undefined = 14;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_font_features_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecStringArchive font_name = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::font_name(this),
        _Internal::font_name(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool font_name_undefined = 16;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_font_name_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive font_size = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::font_size(this),
        _Internal::font_size(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool font_size_undefined = 18;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_font_size_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive font_size_delta = 19;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::font_size_delta(this),
        _Internal::font_size_delta(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool font_size_delta_undefined = 20;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(20, this->_internal_font_size_delta_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive kerning = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::kerning(this),
        _Internal::kerning(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool kerning_undefined = 22;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(22, this->_internal_kerning_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecStringArchive language = 23;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::language(this),
        _Internal::language(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool language_undefined = 24;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(24, this->_internal_language_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive ligatures = 25;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::ligatures(this),
        _Internal::ligatures(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool ligatures_undefined = 26;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(26, this->_internal_ligatures_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive text_shadow = 27;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(27, _Internal::text_shadow(this),
        _Internal::text_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool text_shadow_undefined = 28;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(28, this->_internal_text_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecColorArchive strikethru_color = 29;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(29, _Internal::strikethru_color(this),
        _Internal::strikethru_color(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool strikethru_color_undefined = 30;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(30, this->_internal_strikethru_color_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive strikethru = 31;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, _Internal::strikethru(this),
        _Internal::strikethru(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool strikethru_undefined = 32;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(32, this->_internal_strikethru_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive strikethru_width = 33;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(33, _Internal::strikethru_width(this),
        _Internal::strikethru_width(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool strikethru_width_undefined = 34;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(34, this->_internal_strikethru_width_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive superscript = 35;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, _Internal::superscript(this),
        _Internal::superscript(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool superscript_undefined = 36;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(36, this->_internal_superscript_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecColorArchive text_background = 37;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(37, _Internal::text_background(this),
        _Internal::text_background(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool text_background_undefined = 38;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(38, this->_internal_text_background_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive tracking = 39;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(39, _Internal::tracking(this),
        _Internal::tracking(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool tracking_undefined = 40;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(40, this->_internal_tracking_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecColorArchive underline_color = 41;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(41, _Internal::underline_color(this),
        _Internal::underline_color(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool underline_color_undefined = 42;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(42, this->_internal_underline_color_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive underline = 43;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(43, _Internal::underline(this),
        _Internal::underline(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool underline_undefined = 44;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(44, this->_internal_underline_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive underline_width = 45;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(45, _Internal::underline_width(this),
        _Internal::underline_width(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool underline_width_undefined = 46;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(46, this->_internal_underline_width_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive word_strikethru = 47;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(47, _Internal::word_strikethru(this),
        _Internal::word_strikethru(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool word_strikethru_undefined = 48;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(48, this->_internal_word_strikethru_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive word_underline = 49;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(49, _Internal::word_underline(this),
        _Internal::word_underline(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool word_underline_undefined = 50;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(50, this->_internal_word_underline_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive writing_direction = 51;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(51, _Internal::writing_direction(this),
        _Internal::writing_direction(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool writing_direction_undefined = 52;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(52, this->_internal_writing_direction_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive is_named_point_size = 53;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(53, _Internal::is_named_point_size(this),
        _Internal::is_named_point_size(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool is_named_point_size_undefined = 54;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(54, this->_internal_is_named_point_size_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive capitalization_uses_linguistics = 55;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(55, _Internal::capitalization_uses_linguistics(this),
        _Internal::capitalization_uses_linguistics(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool capitalization_uses_linguistics_undefined = 56;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(56, this->_internal_capitalization_uses_linguistics_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive character_stroke = 57;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(57, _Internal::character_stroke(this),
        _Internal::character_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool character_stroke_undefined = 58;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(58, this->_internal_character_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive character_fill = 59;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(59, _Internal::character_fill(this),
        _Internal::character_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool character_fill_undefined = 60;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(60, this->_internal_character_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive character_fill_should_fill_text_container = 61;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(61, _Internal::character_fill_should_fill_text_container(this),
        _Internal::character_fill_should_fill_text_container(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool character_fill_should_fill_text_container_undefined = 62;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(62, this->_internal_character_fill_should_fill_text_container_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.CharacterStylePropertyChangeSetArchive)
  return target;
}

size_t CharacterStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.CharacterStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecDoubleArchive baseline_shift = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.baseline_shift_);
    }

    // optional .TSSSOS.SpecIntegerArchive capitalization = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.capitalization_);
    }

    // optional .TSSSOS.SpecStringArchive compatibility_font_name = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.compatibility_font_name_);
    }

    // optional .TSSSOS.SpecStringArchive emphasis_marks = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.emphasis_marks_);
    }

    // optional .TSSSOS.SpecBoolArchive bold = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bold_);
    }

    // optional .TSSSOS.SpecBoolArchive italic = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.italic_);
    }

    // optional .TSWPSOS.SpecFontFeaturesArchive font_features = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.font_features_);
    }

    // optional .TSSSOS.SpecStringArchive font_name = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.font_name_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecDoubleArchive font_size = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.font_size_);
    }

    // optional .TSSSOS.SpecDoubleArchive font_size_delta = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.font_size_delta_);
    }

    // optional .TSSSOS.SpecDoubleArchive kerning = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kerning_);
    }

    // optional .TSSSOS.SpecStringArchive language = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.language_);
    }

    // optional .TSSSOS.SpecIntegerArchive ligatures = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.ligatures_);
    }

    // optional .TSDSOS.SpecShadowArchive text_shadow = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.text_shadow_);
    }

    // optional .TSSSOS.SpecColorArchive strikethru_color = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.strikethru_color_);
    }

    // optional .TSSSOS.SpecIntegerArchive strikethru = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.strikethru_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecDoubleArchive strikethru_width = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.strikethru_width_);
    }

    // optional .TSSSOS.SpecIntegerArchive superscript = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.superscript_);
    }

    // optional .TSSSOS.SpecColorArchive text_background = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.text_background_);
    }

    // optional .TSSSOS.SpecDoubleArchive tracking = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tracking_);
    }

    // optional .TSSSOS.SpecColorArchive underline_color = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.underline_color_);
    }

    // optional .TSSSOS.SpecIntegerArchive underline = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.underline_);
    }

    // optional .TSSSOS.SpecDoubleArchive underline_width = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.underline_width_);
    }

    // optional .TSSSOS.SpecBoolArchive word_strikethru = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.word_strikethru_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecBoolArchive word_underline = 49;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.word_underline_);
    }

    // optional .TSSSOS.SpecIntegerArchive writing_direction = 51;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.writing_direction_);
    }

    // optional .TSSSOS.SpecBoolArchive is_named_point_size = 53;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.is_named_point_size_);
    }

    // optional .TSSSOS.SpecBoolArchive capitalization_uses_linguistics = 55;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.capitalization_uses_linguistics_);
    }

    // optional .TSDSOS.SpecStrokeArchive character_stroke = 57;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.character_stroke_);
    }

    // optional .TSDSOS.SpecFillArchive character_fill = 59;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.character_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive character_fill_should_fill_text_container = 61;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.character_fill_should_fill_text_container_);
    }

    // optional bool baseline_shift_undefined = 2;
    if (cached_has_bits & 0x80000000u) {
      total_size += 1 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool capitalization_undefined = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool compatibility_font_name_undefined = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool emphasis_marks_undefined = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool bold_undefined = 10;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool italic_undefined = 12;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool font_features_undefined = 14;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool font_name_undefined = 16;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool font_size_undefined = 18;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool font_size_delta_undefined = 20;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool kerning_undefined = 22;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool language_undefined = 24;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool ligatures_undefined = 26;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool text_shadow_undefined = 28;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool strikethru_color_undefined = 30;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool strikethru_undefined = 32;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool strikethru_width_undefined = 34;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool superscript_undefined = 36;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool text_background_undefined = 38;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool tracking_undefined = 40;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool underline_color_undefined = 42;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool underline_undefined = 44;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool underline_width_undefined = 46;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool word_strikethru_undefined = 48;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool word_underline_undefined = 50;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x3f000000u) {
    // optional bool writing_direction_undefined = 52;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool is_named_point_size_undefined = 54;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool capitalization_uses_linguistics_undefined = 56;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool character_stroke_undefined = 58;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool character_fill_undefined = 60;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool character_fill_should_fill_text_container_undefined = 62;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void CharacterStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const CharacterStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.CharacterStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_baseline_shift()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_baseline_shift());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_capitalization()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_capitalization());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_compatibility_font_name()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_compatibility_font_name());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_emphasis_marks()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_emphasis_marks());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_bold()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_bold());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_italic()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_italic());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_font_features()->::TSWPSOS::SpecFontFeaturesArchive::MergeFrom(
          from._internal_font_features());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_font_name()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_font_name());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_font_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_font_size());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_font_size_delta()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_font_size_delta());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_kerning()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_kerning());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_language()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_language());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_ligatures()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_ligatures());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_text_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_text_shadow());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_strikethru_color()->::TSSSOS::SpecColorArchive::MergeFrom(
          from._internal_strikethru_color());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_strikethru()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_strikethru());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_strikethru_width()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_strikethru_width());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_superscript()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_superscript());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_text_background()->::TSSSOS::SpecColorArchive::MergeFrom(
          from._internal_text_background());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_tracking()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_tracking());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_underline_color()->::TSSSOS::SpecColorArchive::MergeFrom(
          from._internal_underline_color());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_underline()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_underline());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_underline_width()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_underline_width());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_word_strikethru()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_word_strikethru());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_word_underline()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_word_underline());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_writing_direction()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_writing_direction());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_mutable_is_named_point_size()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_is_named_point_size());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_mutable_capitalization_uses_linguistics()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_capitalization_uses_linguistics());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_mutable_character_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_character_stroke());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_mutable_character_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_character_fill());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_mutable_character_fill_should_fill_text_container()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_character_fill_should_fill_text_container());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.baseline_shift_undefined_ = from._impl_.baseline_shift_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.capitalization_undefined_ = from._impl_.capitalization_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.compatibility_font_name_undefined_ = from._impl_.compatibility_font_name_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.emphasis_marks_undefined_ = from._impl_.emphasis_marks_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.bold_undefined_ = from._impl_.bold_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.italic_undefined_ = from._impl_.italic_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.font_features_undefined_ = from._impl_.font_features_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.font_name_undefined_ = from._impl_.font_name_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.font_size_undefined_ = from._impl_.font_size_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.font_size_delta_undefined_ = from._impl_.font_size_delta_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.kerning_undefined_ = from._impl_.kerning_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.language_undefined_ = from._impl_.language_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.ligatures_undefined_ = from._impl_.ligatures_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.text_shadow_undefined_ = from._impl_.text_shadow_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.strikethru_color_undefined_ = from._impl_.strikethru_color_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.strikethru_undefined_ = from._impl_.strikethru_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.strikethru_width_undefined_ = from._impl_.strikethru_width_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.superscript_undefined_ = from._impl_.superscript_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.text_background_undefined_ = from._impl_.text_background_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.tracking_undefined_ = from._impl_.tracking_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.underline_color_undefined_ = from._impl_.underline_color_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.underline_undefined_ = from._impl_.underline_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.underline_width_undefined_ = from._impl_.underline_width_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.word_strikethru_undefined_ = from._impl_.word_strikethru_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.word_underline_undefined_ = from._impl_.word_underline_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x3f000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.writing_direction_undefined_ = from._impl_.writing_direction_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.is_named_point_size_undefined_ = from._impl_.is_named_point_size_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.capitalization_uses_linguistics_undefined_ = from._impl_.capitalization_uses_linguistics_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.character_stroke_undefined_ = from._impl_.character_stroke_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.character_fill_undefined_ = from._impl_.character_fill_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.character_fill_should_fill_text_container_undefined_ = from._impl_.character_fill_should_fill_text_container_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterStylePropertyChangeSetArchive::CopyFrom(const CharacterStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.CharacterStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_baseline_shift()) {
    if (!_impl_.baseline_shift_->IsInitialized()) return false;
  }
  if (_internal_has_capitalization()) {
    if (!_impl_.capitalization_->IsInitialized()) return false;
  }
  if (_internal_has_compatibility_font_name()) {
    if (!_impl_.compatibility_font_name_->IsInitialized()) return false;
  }
  if (_internal_has_emphasis_marks()) {
    if (!_impl_.emphasis_marks_->IsInitialized()) return false;
  }
  if (_internal_has_bold()) {
    if (!_impl_.bold_->IsInitialized()) return false;
  }
  if (_internal_has_italic()) {
    if (!_impl_.italic_->IsInitialized()) return false;
  }
  if (_internal_has_font_features()) {
    if (!_impl_.font_features_->IsInitialized()) return false;
  }
  if (_internal_has_font_name()) {
    if (!_impl_.font_name_->IsInitialized()) return false;
  }
  if (_internal_has_font_size()) {
    if (!_impl_.font_size_->IsInitialized()) return false;
  }
  if (_internal_has_font_size_delta()) {
    if (!_impl_.font_size_delta_->IsInitialized()) return false;
  }
  if (_internal_has_kerning()) {
    if (!_impl_.kerning_->IsInitialized()) return false;
  }
  if (_internal_has_language()) {
    if (!_impl_.language_->IsInitialized()) return false;
  }
  if (_internal_has_ligatures()) {
    if (!_impl_.ligatures_->IsInitialized()) return false;
  }
  if (_internal_has_text_shadow()) {
    if (!_impl_.text_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_strikethru_color()) {
    if (!_impl_.strikethru_color_->IsInitialized()) return false;
  }
  if (_internal_has_strikethru()) {
    if (!_impl_.strikethru_->IsInitialized()) return false;
  }
  if (_internal_has_strikethru_width()) {
    if (!_impl_.strikethru_width_->IsInitialized()) return false;
  }
  if (_internal_has_superscript()) {
    if (!_impl_.superscript_->IsInitialized()) return false;
  }
  if (_internal_has_text_background()) {
    if (!_impl_.text_background_->IsInitialized()) return false;
  }
  if (_internal_has_tracking()) {
    if (!_impl_.tracking_->IsInitialized()) return false;
  }
  if (_internal_has_underline_color()) {
    if (!_impl_.underline_color_->IsInitialized()) return false;
  }
  if (_internal_has_underline()) {
    if (!_impl_.underline_->IsInitialized()) return false;
  }
  if (_internal_has_underline_width()) {
    if (!_impl_.underline_width_->IsInitialized()) return false;
  }
  if (_internal_has_word_strikethru()) {
    if (!_impl_.word_strikethru_->IsInitialized()) return false;
  }
  if (_internal_has_word_underline()) {
    if (!_impl_.word_underline_->IsInitialized()) return false;
  }
  if (_internal_has_writing_direction()) {
    if (!_impl_.writing_direction_->IsInitialized()) return false;
  }
  if (_internal_has_is_named_point_size()) {
    if (!_impl_.is_named_point_size_->IsInitialized()) return false;
  }
  if (_internal_has_capitalization_uses_linguistics()) {
    if (!_impl_.capitalization_uses_linguistics_->IsInitialized()) return false;
  }
  if (_internal_has_character_stroke()) {
    if (!_impl_.character_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_character_fill()) {
    if (!_impl_.character_fill_->IsInitialized()) return false;
  }
  if (_internal_has_character_fill_should_fill_text_container()) {
    if (!_impl_.character_fill_should_fill_text_container_->IsInitialized()) return false;
  }
  return true;
}

void CharacterStylePropertyChangeSetArchive::InternalSwap(CharacterStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterStylePropertyChangeSetArchive, _impl_.character_fill_should_fill_text_container_undefined_)
      + sizeof(CharacterStylePropertyChangeSetArchive::_impl_.character_fill_should_fill_text_container_undefined_)
      - PROTOBUF_FIELD_OFFSET(CharacterStylePropertyChangeSetArchive, _impl_.baseline_shift_)>(
          reinterpret_cast<char*>(&_impl_.baseline_shift_),
          reinterpret_cast<char*>(&other->_impl_.baseline_shift_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[34]);
}

// ===================================================================

class ColumnStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ColumnStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecColumnsArchive& columns(const ColumnStylePropertyChangeSetArchive* msg);
  static void set_has_columns(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_columns_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::TSSSOS::SpecBoolArchive& continuous(const ColumnStylePropertyChangeSetArchive* msg);
  static void set_has_continuous(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_continuous_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::TSWPSOS::SpecPaddingArchive& margins(const ColumnStylePropertyChangeSetArchive* msg);
  static void set_has_margins(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_margins_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::TSSSOS::SpecDoubleArchive& min_horizontal_inset(const ColumnStylePropertyChangeSetArchive* msg);
  static void set_has_min_horizontal_inset(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_min_horizontal_inset_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::TSWPSOS::SpecPaddingArchive& padding(const ColumnStylePropertyChangeSetArchive* msg);
  static void set_has_padding(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_padding_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::TSSSOS::SpecBoolArchive& shrink_to_fit(const ColumnStylePropertyChangeSetArchive* msg);
  static void set_has_shrink_to_fit(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_shrink_to_fit_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::TSSSOS::SpecIntegerArchive& vertical_alignment(const ColumnStylePropertyChangeSetArchive* msg);
  static void set_has_vertical_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_vertical_alignment_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::TSSSOS::SpecBoolArchive& vertical_text(const ColumnStylePropertyChangeSetArchive* msg);
  static void set_has_vertical_text(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_vertical_text_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::TSSSOS::SpecIntegerArchive& writing_direction(const ColumnStylePropertyChangeSetArchive* msg);
  static void set_has_writing_direction(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_writing_direction_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
};

const ::TSWPSOS::SpecColumnsArchive&
ColumnStylePropertyChangeSetArchive::_Internal::columns(const ColumnStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.columns_;
}
const ::TSSSOS::SpecBoolArchive&
ColumnStylePropertyChangeSetArchive::_Internal::continuous(const ColumnStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.continuous_;
}
const ::TSWPSOS::SpecPaddingArchive&
ColumnStylePropertyChangeSetArchive::_Internal::margins(const ColumnStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.margins_;
}
const ::TSSSOS::SpecDoubleArchive&
ColumnStylePropertyChangeSetArchive::_Internal::min_horizontal_inset(const ColumnStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.min_horizontal_inset_;
}
const ::TSWPSOS::SpecPaddingArchive&
ColumnStylePropertyChangeSetArchive::_Internal::padding(const ColumnStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.padding_;
}
const ::TSSSOS::SpecBoolArchive&
ColumnStylePropertyChangeSetArchive::_Internal::shrink_to_fit(const ColumnStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.shrink_to_fit_;
}
const ::TSSSOS::SpecIntegerArchive&
ColumnStylePropertyChangeSetArchive::_Internal::vertical_alignment(const ColumnStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.vertical_alignment_;
}
const ::TSSSOS::SpecBoolArchive&
ColumnStylePropertyChangeSetArchive::_Internal::vertical_text(const ColumnStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.vertical_text_;
}
const ::TSSSOS::SpecIntegerArchive&
ColumnStylePropertyChangeSetArchive::_Internal::writing_direction(const ColumnStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.writing_direction_;
}
void ColumnStylePropertyChangeSetArchive::clear_continuous() {
  if (_impl_.continuous_ != nullptr) _impl_.continuous_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ColumnStylePropertyChangeSetArchive::clear_min_horizontal_inset() {
  if (_impl_.min_horizontal_inset_ != nullptr) _impl_.min_horizontal_inset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void ColumnStylePropertyChangeSetArchive::clear_shrink_to_fit() {
  if (_impl_.shrink_to_fit_ != nullptr) _impl_.shrink_to_fit_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void ColumnStylePropertyChangeSetArchive::clear_vertical_alignment() {
  if (_impl_.vertical_alignment_ != nullptr) _impl_.vertical_alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void ColumnStylePropertyChangeSetArchive::clear_vertical_text() {
  if (_impl_.vertical_text_ != nullptr) _impl_.vertical_text_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void ColumnStylePropertyChangeSetArchive::clear_writing_direction() {
  if (_impl_.writing_direction_ != nullptr) _impl_.writing_direction_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
ColumnStylePropertyChangeSetArchive::ColumnStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.ColumnStylePropertyChangeSetArchive)
}
ColumnStylePropertyChangeSetArchive::ColumnStylePropertyChangeSetArchive(const ColumnStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ColumnStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.columns_){nullptr}
    , decltype(_impl_.continuous_){nullptr}
    , decltype(_impl_.margins_){nullptr}
    , decltype(_impl_.min_horizontal_inset_){nullptr}
    , decltype(_impl_.padding_){nullptr}
    , decltype(_impl_.shrink_to_fit_){nullptr}
    , decltype(_impl_.vertical_alignment_){nullptr}
    , decltype(_impl_.vertical_text_){nullptr}
    , decltype(_impl_.writing_direction_){nullptr}
    , decltype(_impl_.columns_undefined_){}
    , decltype(_impl_.continuous_undefined_){}
    , decltype(_impl_.margins_undefined_){}
    , decltype(_impl_.min_horizontal_inset_undefined_){}
    , decltype(_impl_.padding_undefined_){}
    , decltype(_impl_.shrink_to_fit_undefined_){}
    , decltype(_impl_.vertical_alignment_undefined_){}
    , decltype(_impl_.vertical_text_undefined_){}
    , decltype(_impl_.writing_direction_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_columns()) {
    _this->_impl_.columns_ = new ::TSWPSOS::SpecColumnsArchive(*from._impl_.columns_);
  }
  if (from._internal_has_continuous()) {
    _this->_impl_.continuous_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.continuous_);
  }
  if (from._internal_has_margins()) {
    _this->_impl_.margins_ = new ::TSWPSOS::SpecPaddingArchive(*from._impl_.margins_);
  }
  if (from._internal_has_min_horizontal_inset()) {
    _this->_impl_.min_horizontal_inset_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.min_horizontal_inset_);
  }
  if (from._internal_has_padding()) {
    _this->_impl_.padding_ = new ::TSWPSOS::SpecPaddingArchive(*from._impl_.padding_);
  }
  if (from._internal_has_shrink_to_fit()) {
    _this->_impl_.shrink_to_fit_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.shrink_to_fit_);
  }
  if (from._internal_has_vertical_alignment()) {
    _this->_impl_.vertical_alignment_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.vertical_alignment_);
  }
  if (from._internal_has_vertical_text()) {
    _this->_impl_.vertical_text_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.vertical_text_);
  }
  if (from._internal_has_writing_direction()) {
    _this->_impl_.writing_direction_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.writing_direction_);
  }
  ::memcpy(&_impl_.columns_undefined_, &from._impl_.columns_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.writing_direction_undefined_) -
    reinterpret_cast<char*>(&_impl_.columns_undefined_)) + sizeof(_impl_.writing_direction_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.ColumnStylePropertyChangeSetArchive)
}

inline void ColumnStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.columns_){nullptr}
    , decltype(_impl_.continuous_){nullptr}
    , decltype(_impl_.margins_){nullptr}
    , decltype(_impl_.min_horizontal_inset_){nullptr}
    , decltype(_impl_.padding_){nullptr}
    , decltype(_impl_.shrink_to_fit_){nullptr}
    , decltype(_impl_.vertical_alignment_){nullptr}
    , decltype(_impl_.vertical_text_){nullptr}
    , decltype(_impl_.writing_direction_){nullptr}
    , decltype(_impl_.columns_undefined_){false}
    , decltype(_impl_.continuous_undefined_){false}
    , decltype(_impl_.margins_undefined_){false}
    , decltype(_impl_.min_horizontal_inset_undefined_){false}
    , decltype(_impl_.padding_undefined_){false}
    , decltype(_impl_.shrink_to_fit_undefined_){false}
    , decltype(_impl_.vertical_alignment_undefined_){false}
    , decltype(_impl_.vertical_text_undefined_){false}
    , decltype(_impl_.writing_direction_undefined_){false}
  };
}

ColumnStylePropertyChangeSetArchive::~ColumnStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.ColumnStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ColumnStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.columns_;
  if (this != internal_default_instance()) delete _impl_.continuous_;
  if (this != internal_default_instance()) delete _impl_.margins_;
  if (this != internal_default_instance()) delete _impl_.min_horizontal_inset_;
  if (this != internal_default_instance()) delete _impl_.padding_;
  if (this != internal_default_instance()) delete _impl_.shrink_to_fit_;
  if (this != internal_default_instance()) delete _impl_.vertical_alignment_;
  if (this != internal_default_instance()) delete _impl_.vertical_text_;
  if (this != internal_default_instance()) delete _impl_.writing_direction_;
}

void ColumnStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ColumnStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.ColumnStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.columns_ != nullptr);
      _impl_.columns_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.continuous_ != nullptr);
      _impl_.continuous_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.margins_ != nullptr);
      _impl_.margins_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.min_horizontal_inset_ != nullptr);
      _impl_.min_horizontal_inset_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.padding_ != nullptr);
      _impl_.padding_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.shrink_to_fit_ != nullptr);
      _impl_.shrink_to_fit_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.vertical_alignment_ != nullptr);
      _impl_.vertical_alignment_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.vertical_text_ != nullptr);
      _impl_.vertical_text_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(_impl_.writing_direction_ != nullptr);
    _impl_.writing_direction_->Clear();
  }
  if (cached_has_bits & 0x0000fe00u) {
    ::memset(&_impl_.columns_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.vertical_alignment_undefined_) -
        reinterpret_cast<char*>(&_impl_.columns_undefined_)) + sizeof(_impl_.vertical_alignment_undefined_));
  }
  if (cached_has_bits & 0x00030000u) {
    ::memset(&_impl_.vertical_text_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.writing_direction_undefined_) -
        reinterpret_cast<char*>(&_impl_.vertical_text_undefined_)) + sizeof(_impl_.writing_direction_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ColumnStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecColumnsArchive columns = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_columns(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool columns_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_columns_undefined(&has_bits);
          _impl_.columns_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive continuous = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_continuous(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool continuous_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_continuous_undefined(&has_bits);
          _impl_.continuous_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecPaddingArchive margins = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_margins(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool margins_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_margins_undefined(&has_bits);
          _impl_.margins_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive min_horizontal_inset = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_min_horizontal_inset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool min_horizontal_inset_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_min_horizontal_inset_undefined(&has_bits);
          _impl_.min_horizontal_inset_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecPaddingArchive padding = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_padding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool padding_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_padding_undefined(&has_bits);
          _impl_.padding_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive shrink_to_fit = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_shrink_to_fit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool shrink_to_fit_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_shrink_to_fit_undefined(&has_bits);
          _impl_.shrink_to_fit_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive vertical_alignment = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_vertical_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool vertical_alignment_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_vertical_alignment_undefined(&has_bits);
          _impl_.vertical_alignment_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive vertical_text = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_vertical_text(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool vertical_text_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_vertical_text_undefined(&has_bits);
          _impl_.vertical_text_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive writing_direction = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_writing_direction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool writing_direction_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_writing_direction_undefined(&has_bits);
          _impl_.writing_direction_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ColumnStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.ColumnStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecColumnsArchive columns = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::columns(this),
        _Internal::columns(this).GetCachedSize(), target, stream);
  }

  // optional bool columns_undefined = 2;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_columns_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive continuous = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::continuous(this),
        _Internal::continuous(this).GetCachedSize(), target, stream);
  }

  // optional bool continuous_undefined = 4;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_continuous_undefined(), target);
  }

  // optional .TSWPSOS.SpecPaddingArchive margins = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::margins(this),
        _Internal::margins(this).GetCachedSize(), target, stream);
  }

  // optional bool margins_undefined = 6;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_margins_undefined(), target);
  }

  // optional .TSSSOS.SpecDoubleArchive min_horizontal_inset = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::min_horizontal_inset(this),
        _Internal::min_horizontal_inset(this).GetCachedSize(), target, stream);
  }

  // optional bool min_horizontal_inset_undefined = 8;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_min_horizontal_inset_undefined(), target);
  }

  // optional .TSWPSOS.SpecPaddingArchive padding = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::padding(this),
        _Internal::padding(this).GetCachedSize(), target, stream);
  }

  // optional bool padding_undefined = 10;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_padding_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive shrink_to_fit = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::shrink_to_fit(this),
        _Internal::shrink_to_fit(this).GetCachedSize(), target, stream);
  }

  // optional bool shrink_to_fit_undefined = 12;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_shrink_to_fit_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive vertical_alignment = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::vertical_alignment(this),
        _Internal::vertical_alignment(this).GetCachedSize(), target, stream);
  }

  // optional bool vertical_alignment_undefined = 14;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_vertical_alignment_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive vertical_text = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::vertical_text(this),
        _Internal::vertical_text(this).GetCachedSize(), target, stream);
  }

  // optional bool vertical_text_undefined = 16;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_vertical_text_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive writing_direction = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::writing_direction(this),
        _Internal::writing_direction(this).GetCachedSize(), target, stream);
  }

  // optional bool writing_direction_undefined = 18;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_writing_direction_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.ColumnStylePropertyChangeSetArchive)
  return target;
}

size_t ColumnStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.ColumnStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSWPSOS.SpecColumnsArchive columns = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.columns_);
    }

    // optional .TSSSOS.SpecBoolArchive continuous = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.continuous_);
    }

    // optional .TSWPSOS.SpecPaddingArchive margins = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.margins_);
    }

    // optional .TSSSOS.SpecDoubleArchive min_horizontal_inset = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.min_horizontal_inset_);
    }

    // optional .TSWPSOS.SpecPaddingArchive padding = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.padding_);
    }

    // optional .TSSSOS.SpecBoolArchive shrink_to_fit = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.shrink_to_fit_);
    }

    // optional .TSSSOS.SpecIntegerArchive vertical_alignment = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.vertical_alignment_);
    }

    // optional .TSSSOS.SpecBoolArchive vertical_text = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.vertical_text_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive writing_direction = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.writing_direction_);
    }

    // optional bool columns_undefined = 2;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool continuous_undefined = 4;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool margins_undefined = 6;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool min_horizontal_inset_undefined = 8;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool padding_undefined = 10;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional bool shrink_to_fit_undefined = 12;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool vertical_alignment_undefined = 14;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00030000u) {
    // optional bool vertical_text_undefined = 16;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool writing_direction_undefined = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ColumnStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ColumnStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ColumnStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ColumnStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ColumnStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ColumnStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.ColumnStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_columns()->::TSWPSOS::SpecColumnsArchive::MergeFrom(
          from._internal_columns());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_continuous()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_continuous());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_margins()->::TSWPSOS::SpecPaddingArchive::MergeFrom(
          from._internal_margins());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_min_horizontal_inset()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_min_horizontal_inset());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_padding()->::TSWPSOS::SpecPaddingArchive::MergeFrom(
          from._internal_padding());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_shrink_to_fit()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_shrink_to_fit());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_vertical_alignment()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_vertical_alignment());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_vertical_text()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_vertical_text());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_writing_direction()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_writing_direction());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.columns_undefined_ = from._impl_.columns_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.continuous_undefined_ = from._impl_.continuous_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.margins_undefined_ = from._impl_.margins_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.min_horizontal_inset_undefined_ = from._impl_.min_horizontal_inset_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.padding_undefined_ = from._impl_.padding_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.shrink_to_fit_undefined_ = from._impl_.shrink_to_fit_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.vertical_alignment_undefined_ = from._impl_.vertical_alignment_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.vertical_text_undefined_ = from._impl_.vertical_text_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.writing_direction_undefined_ = from._impl_.writing_direction_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ColumnStylePropertyChangeSetArchive::CopyFrom(const ColumnStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.ColumnStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColumnStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_columns()) {
    if (!_impl_.columns_->IsInitialized()) return false;
  }
  if (_internal_has_continuous()) {
    if (!_impl_.continuous_->IsInitialized()) return false;
  }
  if (_internal_has_margins()) {
    if (!_impl_.margins_->IsInitialized()) return false;
  }
  if (_internal_has_min_horizontal_inset()) {
    if (!_impl_.min_horizontal_inset_->IsInitialized()) return false;
  }
  if (_internal_has_padding()) {
    if (!_impl_.padding_->IsInitialized()) return false;
  }
  if (_internal_has_shrink_to_fit()) {
    if (!_impl_.shrink_to_fit_->IsInitialized()) return false;
  }
  if (_internal_has_vertical_alignment()) {
    if (!_impl_.vertical_alignment_->IsInitialized()) return false;
  }
  if (_internal_has_vertical_text()) {
    if (!_impl_.vertical_text_->IsInitialized()) return false;
  }
  if (_internal_has_writing_direction()) {
    if (!_impl_.writing_direction_->IsInitialized()) return false;
  }
  return true;
}

void ColumnStylePropertyChangeSetArchive::InternalSwap(ColumnStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ColumnStylePropertyChangeSetArchive, _impl_.writing_direction_undefined_)
      + sizeof(ColumnStylePropertyChangeSetArchive::_impl_.writing_direction_undefined_)
      - PROTOBUF_FIELD_OFFSET(ColumnStylePropertyChangeSetArchive, _impl_.columns_)>(
          reinterpret_cast<char*>(&_impl_.columns_),
          reinterpret_cast<char*>(&other->_impl_.columns_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ColumnStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[35]);
}

// ===================================================================

class DropCapSpecificStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<DropCapSpecificStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::SpecDropCapArchive& drop_cap_model(const DropCapSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_drop_cap_model(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_drop_cap_model_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TSDSOS::SpecStrokeArchive& drop_cap_shape_stroke(const DropCapSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_drop_cap_shape_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_drop_cap_shape_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TSDSOS::SpecFillArchive& drop_cap_shape_fill(const DropCapSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_drop_cap_shape_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_drop_cap_shape_fill_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::TSWPSOS::SpecDropCapArchive&
DropCapSpecificStylePropertyChangeSetArchive::_Internal::drop_cap_model(const DropCapSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.drop_cap_model_;
}
const ::TSDSOS::SpecStrokeArchive&
DropCapSpecificStylePropertyChangeSetArchive::_Internal::drop_cap_shape_stroke(const DropCapSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.drop_cap_shape_stroke_;
}
const ::TSDSOS::SpecFillArchive&
DropCapSpecificStylePropertyChangeSetArchive::_Internal::drop_cap_shape_fill(const DropCapSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.drop_cap_shape_fill_;
}
void DropCapSpecificStylePropertyChangeSetArchive::clear_drop_cap_shape_stroke() {
  if (_impl_.drop_cap_shape_stroke_ != nullptr) _impl_.drop_cap_shape_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void DropCapSpecificStylePropertyChangeSetArchive::clear_drop_cap_shape_fill() {
  if (_impl_.drop_cap_shape_fill_ != nullptr) _impl_.drop_cap_shape_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
DropCapSpecificStylePropertyChangeSetArchive::DropCapSpecificStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.DropCapSpecificStylePropertyChangeSetArchive)
}
DropCapSpecificStylePropertyChangeSetArchive::DropCapSpecificStylePropertyChangeSetArchive(const DropCapSpecificStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DropCapSpecificStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.drop_cap_model_){nullptr}
    , decltype(_impl_.drop_cap_shape_stroke_){nullptr}
    , decltype(_impl_.drop_cap_shape_fill_){nullptr}
    , decltype(_impl_.drop_cap_model_undefined_){}
    , decltype(_impl_.drop_cap_shape_stroke_undefined_){}
    , decltype(_impl_.drop_cap_shape_fill_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_drop_cap_model()) {
    _this->_impl_.drop_cap_model_ = new ::TSWPSOS::SpecDropCapArchive(*from._impl_.drop_cap_model_);
  }
  if (from._internal_has_drop_cap_shape_stroke()) {
    _this->_impl_.drop_cap_shape_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.drop_cap_shape_stroke_);
  }
  if (from._internal_has_drop_cap_shape_fill()) {
    _this->_impl_.drop_cap_shape_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.drop_cap_shape_fill_);
  }
  ::memcpy(&_impl_.drop_cap_model_undefined_, &from._impl_.drop_cap_model_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.drop_cap_shape_fill_undefined_) -
    reinterpret_cast<char*>(&_impl_.drop_cap_model_undefined_)) + sizeof(_impl_.drop_cap_shape_fill_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.DropCapSpecificStylePropertyChangeSetArchive)
}

inline void DropCapSpecificStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.drop_cap_model_){nullptr}
    , decltype(_impl_.drop_cap_shape_stroke_){nullptr}
    , decltype(_impl_.drop_cap_shape_fill_){nullptr}
    , decltype(_impl_.drop_cap_model_undefined_){false}
    , decltype(_impl_.drop_cap_shape_stroke_undefined_){false}
    , decltype(_impl_.drop_cap_shape_fill_undefined_){false}
  };
}

DropCapSpecificStylePropertyChangeSetArchive::~DropCapSpecificStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.DropCapSpecificStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DropCapSpecificStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.drop_cap_model_;
  if (this != internal_default_instance()) delete _impl_.drop_cap_shape_stroke_;
  if (this != internal_default_instance()) delete _impl_.drop_cap_shape_fill_;
}

void DropCapSpecificStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DropCapSpecificStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.DropCapSpecificStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.drop_cap_model_ != nullptr);
      _impl_.drop_cap_model_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.drop_cap_shape_stroke_ != nullptr);
      _impl_.drop_cap_shape_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.drop_cap_shape_fill_ != nullptr);
      _impl_.drop_cap_shape_fill_->Clear();
    }
  }
  ::memset(&_impl_.drop_cap_model_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.drop_cap_shape_fill_undefined_) -
      reinterpret_cast<char*>(&_impl_.drop_cap_model_undefined_)) + sizeof(_impl_.drop_cap_shape_fill_undefined_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DropCapSpecificStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSWPSOS.SpecDropCapArchive drop_cap_model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_drop_cap_model(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool drop_cap_model_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_drop_cap_model_undefined(&has_bits);
          _impl_.drop_cap_model_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive drop_cap_shape_stroke = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_drop_cap_shape_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool drop_cap_shape_stroke_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_drop_cap_shape_stroke_undefined(&has_bits);
          _impl_.drop_cap_shape_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive drop_cap_shape_fill = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_drop_cap_shape_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool drop_cap_shape_fill_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_drop_cap_shape_fill_undefined(&has_bits);
          _impl_.drop_cap_shape_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DropCapSpecificStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.DropCapSpecificStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecDropCapArchive drop_cap_model = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::drop_cap_model(this),
        _Internal::drop_cap_model(this).GetCachedSize(), target, stream);
  }

  // optional bool drop_cap_model_undefined = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_drop_cap_model_undefined(), target);
  }

  // optional .TSDSOS.SpecStrokeArchive drop_cap_shape_stroke = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::drop_cap_shape_stroke(this),
        _Internal::drop_cap_shape_stroke(this).GetCachedSize(), target, stream);
  }

  // optional bool drop_cap_shape_stroke_undefined = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_drop_cap_shape_stroke_undefined(), target);
  }

  // optional .TSDSOS.SpecFillArchive drop_cap_shape_fill = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::drop_cap_shape_fill(this),
        _Internal::drop_cap_shape_fill(this).GetCachedSize(), target, stream);
  }

  // optional bool drop_cap_shape_fill_undefined = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_drop_cap_shape_fill_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.DropCapSpecificStylePropertyChangeSetArchive)
  return target;
}

size_t DropCapSpecificStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.DropCapSpecificStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .TSWPSOS.SpecDropCapArchive drop_cap_model = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.drop_cap_model_);
    }

    // optional .TSDSOS.SpecStrokeArchive drop_cap_shape_stroke = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.drop_cap_shape_stroke_);
    }

    // optional .TSDSOS.SpecFillArchive drop_cap_shape_fill = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.drop_cap_shape_fill_);
    }

    // optional bool drop_cap_model_undefined = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool drop_cap_shape_stroke_undefined = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool drop_cap_shape_fill_undefined = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DropCapSpecificStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DropCapSpecificStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DropCapSpecificStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void DropCapSpecificStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DropCapSpecificStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const DropCapSpecificStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.DropCapSpecificStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_drop_cap_model()->::TSWPSOS::SpecDropCapArchive::MergeFrom(
          from._internal_drop_cap_model());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_drop_cap_shape_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_drop_cap_shape_stroke());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_drop_cap_shape_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_drop_cap_shape_fill());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.drop_cap_model_undefined_ = from._impl_.drop_cap_model_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.drop_cap_shape_stroke_undefined_ = from._impl_.drop_cap_shape_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.drop_cap_shape_fill_undefined_ = from._impl_.drop_cap_shape_fill_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DropCapSpecificStylePropertyChangeSetArchive::CopyFrom(const DropCapSpecificStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.DropCapSpecificStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropCapSpecificStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_drop_cap_model()) {
    if (!_impl_.drop_cap_model_->IsInitialized()) return false;
  }
  if (_internal_has_drop_cap_shape_stroke()) {
    if (!_impl_.drop_cap_shape_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_drop_cap_shape_fill()) {
    if (!_impl_.drop_cap_shape_fill_->IsInitialized()) return false;
  }
  return true;
}

void DropCapSpecificStylePropertyChangeSetArchive::InternalSwap(DropCapSpecificStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DropCapSpecificStylePropertyChangeSetArchive, _impl_.drop_cap_shape_fill_undefined_)
      + sizeof(DropCapSpecificStylePropertyChangeSetArchive::_impl_.drop_cap_shape_fill_undefined_)
      - PROTOBUF_FIELD_OFFSET(DropCapSpecificStylePropertyChangeSetArchive, _impl_.drop_cap_model_)>(
          reinterpret_cast<char*>(&_impl_.drop_cap_model_),
          reinterpret_cast<char*>(&other->_impl_.drop_cap_model_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DropCapSpecificStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[36]);
}

// ===================================================================

class DropCapStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<DropCapStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::CharacterStylePropertyChangeSetArchive& super(const DropCapStylePropertyChangeSetArchive* msg);
  static void set_has_super(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TSWPSOS::SpecDropCapArchive& drop_cap_model(const DropCapStylePropertyChangeSetArchive* msg);
  static void set_has_drop_cap_model(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_drop_cap_model_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TSDSOS::SpecStrokeArchive& drop_cap_shape_stroke(const DropCapStylePropertyChangeSetArchive* msg);
  static void set_has_drop_cap_shape_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_drop_cap_shape_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TSDSOS::SpecFillArchive& drop_cap_shape_fill(const DropCapStylePropertyChangeSetArchive* msg);
  static void set_has_drop_cap_shape_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_drop_cap_shape_fill_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TSWPSOS::CharacterStylePropertyChangeSetArchive&
DropCapStylePropertyChangeSetArchive::_Internal::super(const DropCapStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.super_;
}
const ::TSWPSOS::SpecDropCapArchive&
DropCapStylePropertyChangeSetArchive::_Internal::drop_cap_model(const DropCapStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.drop_cap_model_;
}
const ::TSDSOS::SpecStrokeArchive&
DropCapStylePropertyChangeSetArchive::_Internal::drop_cap_shape_stroke(const DropCapStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.drop_cap_shape_stroke_;
}
const ::TSDSOS::SpecFillArchive&
DropCapStylePropertyChangeSetArchive::_Internal::drop_cap_shape_fill(const DropCapStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.drop_cap_shape_fill_;
}
void DropCapStylePropertyChangeSetArchive::clear_drop_cap_shape_stroke() {
  if (_impl_.drop_cap_shape_stroke_ != nullptr) _impl_.drop_cap_shape_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void DropCapStylePropertyChangeSetArchive::clear_drop_cap_shape_fill() {
  if (_impl_.drop_cap_shape_fill_ != nullptr) _impl_.drop_cap_shape_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
DropCapStylePropertyChangeSetArchive::DropCapStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.DropCapStylePropertyChangeSetArchive)
}
DropCapStylePropertyChangeSetArchive::DropCapStylePropertyChangeSetArchive(const DropCapStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DropCapStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.super_){nullptr}
    , decltype(_impl_.drop_cap_model_){nullptr}
    , decltype(_impl_.drop_cap_shape_stroke_){nullptr}
    , decltype(_impl_.drop_cap_shape_fill_){nullptr}
    , decltype(_impl_.drop_cap_model_undefined_){}
    , decltype(_impl_.drop_cap_shape_stroke_undefined_){}
    , decltype(_impl_.drop_cap_shape_fill_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_super()) {
    _this->_impl_.super_ = new ::TSWPSOS::CharacterStylePropertyChangeSetArchive(*from._impl_.super_);
  }
  if (from._internal_has_drop_cap_model()) {
    _this->_impl_.drop_cap_model_ = new ::TSWPSOS::SpecDropCapArchive(*from._impl_.drop_cap_model_);
  }
  if (from._internal_has_drop_cap_shape_stroke()) {
    _this->_impl_.drop_cap_shape_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.drop_cap_shape_stroke_);
  }
  if (from._internal_has_drop_cap_shape_fill()) {
    _this->_impl_.drop_cap_shape_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.drop_cap_shape_fill_);
  }
  ::memcpy(&_impl_.drop_cap_model_undefined_, &from._impl_.drop_cap_model_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.drop_cap_shape_fill_undefined_) -
    reinterpret_cast<char*>(&_impl_.drop_cap_model_undefined_)) + sizeof(_impl_.drop_cap_shape_fill_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.DropCapStylePropertyChangeSetArchive)
}

inline void DropCapStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.super_){nullptr}
    , decltype(_impl_.drop_cap_model_){nullptr}
    , decltype(_impl_.drop_cap_shape_stroke_){nullptr}
    , decltype(_impl_.drop_cap_shape_fill_){nullptr}
    , decltype(_impl_.drop_cap_model_undefined_){false}
    , decltype(_impl_.drop_cap_shape_stroke_undefined_){false}
    , decltype(_impl_.drop_cap_shape_fill_undefined_){false}
  };
}

DropCapStylePropertyChangeSetArchive::~DropCapStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.DropCapStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DropCapStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.super_;
  if (this != internal_default_instance()) delete _impl_.drop_cap_model_;
  if (this != internal_default_instance()) delete _impl_.drop_cap_shape_stroke_;
  if (this != internal_default_instance()) delete _impl_.drop_cap_shape_fill_;
}

void DropCapStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DropCapStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.DropCapStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.super_ != nullptr);
      _impl_.super_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.drop_cap_model_ != nullptr);
      _impl_.drop_cap_model_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.drop_cap_shape_stroke_ != nullptr);
      _impl_.drop_cap_shape_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.drop_cap_shape_fill_ != nullptr);
      _impl_.drop_cap_shape_fill_->Clear();
    }
  }
  ::memset(&_impl_.drop_cap_model_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.drop_cap_shape_fill_undefined_) -
      reinterpret_cast<char*>(&_impl_.drop_cap_model_undefined_)) + sizeof(_impl_.drop_cap_shape_fill_undefined_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DropCapStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TSWPSOS.CharacterStylePropertyChangeSetArchive super = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_super(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecDropCapArchive drop_cap_model = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_drop_cap_model(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool drop_cap_model_undefined = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_drop_cap_model_undefined(&has_bits);
          _impl_.drop_cap_model_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive drop_cap_shape_stroke = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_drop_cap_shape_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool drop_cap_shape_stroke_undefined = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_drop_cap_shape_stroke_undefined(&has_bits);
          _impl_.drop_cap_shape_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive drop_cap_shape_fill = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_drop_cap_shape_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool drop_cap_shape_fill_undefined = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_drop_cap_shape_fill_undefined(&has_bits);
          _impl_.drop_cap_shape_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DropCapStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.DropCapStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TSWPSOS.CharacterStylePropertyChangeSetArchive super = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::super(this),
        _Internal::super(this).GetCachedSize(), target, stream);
  }

  // optional .TSWPSOS.SpecDropCapArchive drop_cap_model = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::drop_cap_model(this),
        _Internal::drop_cap_model(this).GetCachedSize(), target, stream);
  }

  // optional bool drop_cap_model_undefined = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_drop_cap_model_undefined(), target);
  }

  // optional .TSDSOS.SpecStrokeArchive drop_cap_shape_stroke = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::drop_cap_shape_stroke(this),
        _Internal::drop_cap_shape_stroke(this).GetCachedSize(), target, stream);
  }

  // optional bool drop_cap_shape_stroke_undefined = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_drop_cap_shape_stroke_undefined(), target);
  }

  // optional .TSDSOS.SpecFillArchive drop_cap_shape_fill = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::drop_cap_shape_fill(this),
        _Internal::drop_cap_shape_fill(this).GetCachedSize(), target, stream);
  }

  // optional bool drop_cap_shape_fill_undefined = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_drop_cap_shape_fill_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.DropCapStylePropertyChangeSetArchive)
  return target;
}

size_t DropCapStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.DropCapStylePropertyChangeSetArchive)
  size_t total_size = 0;

  // required .TSWPSOS.CharacterStylePropertyChangeSetArchive super = 1;
  if (_internal_has_super()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.super_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007eu) {
    // optional .TSWPSOS.SpecDropCapArchive drop_cap_model = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.drop_cap_model_);
    }

    // optional .TSDSOS.SpecStrokeArchive drop_cap_shape_stroke = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.drop_cap_shape_stroke_);
    }

    // optional .TSDSOS.SpecFillArchive drop_cap_shape_fill = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.drop_cap_shape_fill_);
    }

    // optional bool drop_cap_model_undefined = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool drop_cap_shape_stroke_undefined = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool drop_cap_shape_fill_undefined = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DropCapStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DropCapStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DropCapStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void DropCapStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DropCapStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const DropCapStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.DropCapStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_super()->::TSWPSOS::CharacterStylePropertyChangeSetArchive::MergeFrom(
          from._internal_super());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_drop_cap_model()->::TSWPSOS::SpecDropCapArchive::MergeFrom(
          from._internal_drop_cap_model());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_drop_cap_shape_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_drop_cap_shape_stroke());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_drop_cap_shape_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_drop_cap_shape_fill());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.drop_cap_model_undefined_ = from._impl_.drop_cap_model_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.drop_cap_shape_stroke_undefined_ = from._impl_.drop_cap_shape_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.drop_cap_shape_fill_undefined_ = from._impl_.drop_cap_shape_fill_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DropCapStylePropertyChangeSetArchive::CopyFrom(const DropCapStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.DropCapStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropCapStylePropertyChangeSetArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_super()) {
    if (!_impl_.super_->IsInitialized()) return false;
  }
  if (_internal_has_drop_cap_model()) {
    if (!_impl_.drop_cap_model_->IsInitialized()) return false;
  }
  if (_internal_has_drop_cap_shape_stroke()) {
    if (!_impl_.drop_cap_shape_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_drop_cap_shape_fill()) {
    if (!_impl_.drop_cap_shape_fill_->IsInitialized()) return false;
  }
  return true;
}

void DropCapStylePropertyChangeSetArchive::InternalSwap(DropCapStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DropCapStylePropertyChangeSetArchive, _impl_.drop_cap_shape_fill_undefined_)
      + sizeof(DropCapStylePropertyChangeSetArchive::_impl_.drop_cap_shape_fill_undefined_)
      - PROTOBUF_FIELD_OFFSET(DropCapStylePropertyChangeSetArchive, _impl_.super_)>(
          reinterpret_cast<char*>(&_impl_.super_),
          reinterpret_cast<char*>(&other->_impl_.super_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DropCapStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[37]);
}

// ===================================================================

class ListStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ListStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSSSOS::SpecColorArchive& list_font_color(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_list_font_color(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_list_font_color_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::TSSSOS::SpecStringArchive& font_name(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_font_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_font_name_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::TSWPSOS::SpecListStyleFloatArrayArchive& list_classic_text_indent_array(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_list_classic_text_indent_array(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_list_classic_text_indent_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::TSWPSOS::SpecListStyleListLabelGeometryArrayArchive& list_label_geometry_array(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_list_label_geometry_array(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_list_label_geometry_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::TSWPSOS::SpecListStyleImageDataArrayArchive& list_label_image_data_array(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_list_label_image_data_array(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_list_label_image_data_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::TSWPSOS::SpecListStyleFloatArrayArchive& list_label_indent_array(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_list_label_indent_array(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_list_label_indent_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::TSWPSOS::SpecListStyleListNumberTypeArrayArchive& list_label_number_array(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_list_label_number_array(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_list_label_number_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static const ::TSWPSOS::SpecListStyleBoolArrayArchive& list_label_tiered_number_array(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_list_label_tiered_number_array(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_list_label_tiered_number_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static const ::TSDSOS::SpecShadowArchive& text_shadow(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_text_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_text_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static const ::TSWPSOS::SpecListStyleStringArrayArchive& list_label_string_array(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_list_label_string_array(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_list_label_string_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static const ::TSWPSOS::SpecListStyleFloatArrayArchive& list_text_indent_array(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_list_text_indent_array(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_list_text_indent_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static const ::TSWPSOS::SpecListStyleListLabelTypeArrayArchive& list_label_type_array(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_list_label_type_array(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_list_label_type_array_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::TSSSOS::SpecIntegerArchive& writing_direction(const ListStylePropertyChangeSetArchive* msg);
  static void set_has_writing_direction(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_writing_direction_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
};

const ::TSSSOS::SpecColorArchive&
ListStylePropertyChangeSetArchive::_Internal::list_font_color(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.list_font_color_;
}
const ::TSSSOS::SpecStringArchive&
ListStylePropertyChangeSetArchive::_Internal::font_name(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.font_name_;
}
const ::TSWPSOS::SpecListStyleFloatArrayArchive&
ListStylePropertyChangeSetArchive::_Internal::list_classic_text_indent_array(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.list_classic_text_indent_array_;
}
const ::TSWPSOS::SpecListStyleListLabelGeometryArrayArchive&
ListStylePropertyChangeSetArchive::_Internal::list_label_geometry_array(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.list_label_geometry_array_;
}
const ::TSWPSOS::SpecListStyleImageDataArrayArchive&
ListStylePropertyChangeSetArchive::_Internal::list_label_image_data_array(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.list_label_image_data_array_;
}
const ::TSWPSOS::SpecListStyleFloatArrayArchive&
ListStylePropertyChangeSetArchive::_Internal::list_label_indent_array(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.list_label_indent_array_;
}
const ::TSWPSOS::SpecListStyleListNumberTypeArrayArchive&
ListStylePropertyChangeSetArchive::_Internal::list_label_number_array(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.list_label_number_array_;
}
const ::TSWPSOS::SpecListStyleBoolArrayArchive&
ListStylePropertyChangeSetArchive::_Internal::list_label_tiered_number_array(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.list_label_tiered_number_array_;
}
const ::TSDSOS::SpecShadowArchive&
ListStylePropertyChangeSetArchive::_Internal::text_shadow(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.text_shadow_;
}
const ::TSWPSOS::SpecListStyleStringArrayArchive&
ListStylePropertyChangeSetArchive::_Internal::list_label_string_array(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.list_label_string_array_;
}
const ::TSWPSOS::SpecListStyleFloatArrayArchive&
ListStylePropertyChangeSetArchive::_Internal::list_text_indent_array(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.list_text_indent_array_;
}
const ::TSWPSOS::SpecListStyleListLabelTypeArrayArchive&
ListStylePropertyChangeSetArchive::_Internal::list_label_type_array(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.list_label_type_array_;
}
const ::TSSSOS::SpecIntegerArchive&
ListStylePropertyChangeSetArchive::_Internal::writing_direction(const ListStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.writing_direction_;
}
void ListStylePropertyChangeSetArchive::clear_list_font_color() {
  if (_impl_.list_font_color_ != nullptr) _impl_.list_font_color_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ListStylePropertyChangeSetArchive::clear_font_name() {
  if (_impl_.font_name_ != nullptr) _impl_.font_name_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ListStylePropertyChangeSetArchive::clear_text_shadow() {
  if (_impl_.text_shadow_ != nullptr) _impl_.text_shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void ListStylePropertyChangeSetArchive::clear_writing_direction() {
  if (_impl_.writing_direction_ != nullptr) _impl_.writing_direction_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
ListStylePropertyChangeSetArchive::ListStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.ListStylePropertyChangeSetArchive)
}
ListStylePropertyChangeSetArchive::ListStylePropertyChangeSetArchive(const ListStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_font_color_){nullptr}
    , decltype(_impl_.font_name_){nullptr}
    , decltype(_impl_.list_classic_text_indent_array_){nullptr}
    , decltype(_impl_.list_label_geometry_array_){nullptr}
    , decltype(_impl_.list_label_image_data_array_){nullptr}
    , decltype(_impl_.list_label_indent_array_){nullptr}
    , decltype(_impl_.list_label_number_array_){nullptr}
    , decltype(_impl_.list_label_tiered_number_array_){nullptr}
    , decltype(_impl_.text_shadow_){nullptr}
    , decltype(_impl_.list_label_string_array_){nullptr}
    , decltype(_impl_.list_text_indent_array_){nullptr}
    , decltype(_impl_.list_label_type_array_){nullptr}
    , decltype(_impl_.writing_direction_){nullptr}
    , decltype(_impl_.list_font_color_undefined_){}
    , decltype(_impl_.font_name_undefined_){}
    , decltype(_impl_.list_classic_text_indent_array_undefined_){}
    , decltype(_impl_.list_label_geometry_array_undefined_){}
    , decltype(_impl_.list_label_image_data_array_undefined_){}
    , decltype(_impl_.list_label_indent_array_undefined_){}
    , decltype(_impl_.list_label_number_array_undefined_){}
    , decltype(_impl_.list_label_tiered_number_array_undefined_){}
    , decltype(_impl_.text_shadow_undefined_){}
    , decltype(_impl_.list_label_string_array_undefined_){}
    , decltype(_impl_.list_text_indent_array_undefined_){}
    , decltype(_impl_.list_label_type_array_undefined_){}
    , decltype(_impl_.writing_direction_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_list_font_color()) {
    _this->_impl_.list_font_color_ = new ::TSSSOS::SpecColorArchive(*from._impl_.list_font_color_);
  }
  if (from._internal_has_font_name()) {
    _this->_impl_.font_name_ = new ::TSSSOS::SpecStringArchive(*from._impl_.font_name_);
  }
  if (from._internal_has_list_classic_text_indent_array()) {
    _this->_impl_.list_classic_text_indent_array_ = new ::TSWPSOS::SpecListStyleFloatArrayArchive(*from._impl_.list_classic_text_indent_array_);
  }
  if (from._internal_has_list_label_geometry_array()) {
    _this->_impl_.list_label_geometry_array_ = new ::TSWPSOS::SpecListStyleListLabelGeometryArrayArchive(*from._impl_.list_label_geometry_array_);
  }
  if (from._internal_has_list_label_image_data_array()) {
    _this->_impl_.list_label_image_data_array_ = new ::TSWPSOS::SpecListStyleImageDataArrayArchive(*from._impl_.list_label_image_data_array_);
  }
  if (from._internal_has_list_label_indent_array()) {
    _this->_impl_.list_label_indent_array_ = new ::TSWPSOS::SpecListStyleFloatArrayArchive(*from._impl_.list_label_indent_array_);
  }
  if (from._internal_has_list_label_number_array()) {
    _this->_impl_.list_label_number_array_ = new ::TSWPSOS::SpecListStyleListNumberTypeArrayArchive(*from._impl_.list_label_number_array_);
  }
  if (from._internal_has_list_label_tiered_number_array()) {
    _this->_impl_.list_label_tiered_number_array_ = new ::TSWPSOS::SpecListStyleBoolArrayArchive(*from._impl_.list_label_tiered_number_array_);
  }
  if (from._internal_has_text_shadow()) {
    _this->_impl_.text_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.text_shadow_);
  }
  if (from._internal_has_list_label_string_array()) {
    _this->_impl_.list_label_string_array_ = new ::TSWPSOS::SpecListStyleStringArrayArchive(*from._impl_.list_label_string_array_);
  }
  if (from._internal_has_list_text_indent_array()) {
    _this->_impl_.list_text_indent_array_ = new ::TSWPSOS::SpecListStyleFloatArrayArchive(*from._impl_.list_text_indent_array_);
  }
  if (from._internal_has_list_label_type_array()) {
    _this->_impl_.list_label_type_array_ = new ::TSWPSOS::SpecListStyleListLabelTypeArrayArchive(*from._impl_.list_label_type_array_);
  }
  if (from._internal_has_writing_direction()) {
    _this->_impl_.writing_direction_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.writing_direction_);
  }
  ::memcpy(&_impl_.list_font_color_undefined_, &from._impl_.list_font_color_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.writing_direction_undefined_) -
    reinterpret_cast<char*>(&_impl_.list_font_color_undefined_)) + sizeof(_impl_.writing_direction_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.ListStylePropertyChangeSetArchive)
}

inline void ListStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_font_color_){nullptr}
    , decltype(_impl_.font_name_){nullptr}
    , decltype(_impl_.list_classic_text_indent_array_){nullptr}
    , decltype(_impl_.list_label_geometry_array_){nullptr}
    , decltype(_impl_.list_label_image_data_array_){nullptr}
    , decltype(_impl_.list_label_indent_array_){nullptr}
    , decltype(_impl_.list_label_number_array_){nullptr}
    , decltype(_impl_.list_label_tiered_number_array_){nullptr}
    , decltype(_impl_.text_shadow_){nullptr}
    , decltype(_impl_.list_label_string_array_){nullptr}
    , decltype(_impl_.list_text_indent_array_){nullptr}
    , decltype(_impl_.list_label_type_array_){nullptr}
    , decltype(_impl_.writing_direction_){nullptr}
    , decltype(_impl_.list_font_color_undefined_){false}
    , decltype(_impl_.font_name_undefined_){false}
    , decltype(_impl_.list_classic_text_indent_array_undefined_){false}
    , decltype(_impl_.list_label_geometry_array_undefined_){false}
    , decltype(_impl_.list_label_image_data_array_undefined_){false}
    , decltype(_impl_.list_label_indent_array_undefined_){false}
    , decltype(_impl_.list_label_number_array_undefined_){false}
    , decltype(_impl_.list_label_tiered_number_array_undefined_){false}
    , decltype(_impl_.text_shadow_undefined_){false}
    , decltype(_impl_.list_label_string_array_undefined_){false}
    , decltype(_impl_.list_text_indent_array_undefined_){false}
    , decltype(_impl_.list_label_type_array_undefined_){false}
    , decltype(_impl_.writing_direction_undefined_){false}
  };
}

ListStylePropertyChangeSetArchive::~ListStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.ListStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.list_font_color_;
  if (this != internal_default_instance()) delete _impl_.font_name_;
  if (this != internal_default_instance()) delete _impl_.list_classic_text_indent_array_;
  if (this != internal_default_instance()) delete _impl_.list_label_geometry_array_;
  if (this != internal_default_instance()) delete _impl_.list_label_image_data_array_;
  if (this != internal_default_instance()) delete _impl_.list_label_indent_array_;
  if (this != internal_default_instance()) delete _impl_.list_label_number_array_;
  if (this != internal_default_instance()) delete _impl_.list_label_tiered_number_array_;
  if (this != internal_default_instance()) delete _impl_.text_shadow_;
  if (this != internal_default_instance()) delete _impl_.list_label_string_array_;
  if (this != internal_default_instance()) delete _impl_.list_text_indent_array_;
  if (this != internal_default_instance()) delete _impl_.list_label_type_array_;
  if (this != internal_default_instance()) delete _impl_.writing_direction_;
}

void ListStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.ListStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.list_font_color_ != nullptr);
      _impl_.list_font_color_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.font_name_ != nullptr);
      _impl_.font_name_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.list_classic_text_indent_array_ != nullptr);
      _impl_.list_classic_text_indent_array_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.list_label_geometry_array_ != nullptr);
      _impl_.list_label_geometry_array_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.list_label_image_data_array_ != nullptr);
      _impl_.list_label_image_data_array_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.list_label_indent_array_ != nullptr);
      _impl_.list_label_indent_array_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.list_label_number_array_ != nullptr);
      _impl_.list_label_number_array_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.list_label_tiered_number_array_ != nullptr);
      _impl_.list_label_tiered_number_array_->Clear();
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.text_shadow_ != nullptr);
      _impl_.text_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.list_label_string_array_ != nullptr);
      _impl_.list_label_string_array_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.list_text_indent_array_ != nullptr);
      _impl_.list_text_indent_array_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.list_label_type_array_ != nullptr);
      _impl_.list_label_type_array_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.writing_direction_ != nullptr);
      _impl_.writing_direction_->Clear();
    }
  }
  if (cached_has_bits & 0x0000e000u) {
    ::memset(&_impl_.list_font_color_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.list_classic_text_indent_array_undefined_) -
        reinterpret_cast<char*>(&_impl_.list_font_color_undefined_)) + sizeof(_impl_.list_classic_text_indent_array_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.list_label_geometry_array_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.list_text_indent_array_undefined_) -
        reinterpret_cast<char*>(&_impl_.list_label_geometry_array_undefined_)) + sizeof(_impl_.list_text_indent_array_undefined_));
  }
  if (cached_has_bits & 0x03000000u) {
    ::memset(&_impl_.list_label_type_array_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.writing_direction_undefined_) -
        reinterpret_cast<char*>(&_impl_.list_label_type_array_undefined_)) + sizeof(_impl_.writing_direction_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSSSOS.SpecColorArchive list_font_color = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_font_color(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_font_color_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_list_font_color_undefined(&has_bits);
          _impl_.list_font_color_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive font_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_font_name(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool font_name_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_font_name_undefined(&has_bits);
          _impl_.font_name_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecListStyleFloatArrayArchive list_classic_text_indent_array = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_classic_text_indent_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_classic_text_indent_array_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_list_classic_text_indent_array_undefined(&has_bits);
          _impl_.list_classic_text_indent_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecListStyleListLabelGeometryArrayArchive list_label_geometry_array = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_label_geometry_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_label_geometry_array_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_list_label_geometry_array_undefined(&has_bits);
          _impl_.list_label_geometry_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecListStyleImageDataArrayArchive list_label_image_data_array = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_label_image_data_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_label_image_data_array_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_list_label_image_data_array_undefined(&has_bits);
          _impl_.list_label_image_data_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecListStyleFloatArrayArchive list_label_indent_array = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_label_indent_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_label_indent_array_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_list_label_indent_array_undefined(&has_bits);
          _impl_.list_label_indent_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecListStyleListNumberTypeArrayArchive list_label_number_array = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_label_number_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_label_number_array_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_list_label_number_array_undefined(&has_bits);
          _impl_.list_label_number_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecListStyleBoolArrayArchive list_label_tiered_number_array = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_label_tiered_number_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_label_tiered_number_array_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_list_label_tiered_number_array_undefined(&has_bits);
          _impl_.list_label_tiered_number_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive text_shadow = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_text_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool text_shadow_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_text_shadow_undefined(&has_bits);
          _impl_.text_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecListStyleStringArrayArchive list_label_string_array = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_label_string_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_label_string_array_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_list_label_string_array_undefined(&has_bits);
          _impl_.list_label_string_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecListStyleFloatArrayArchive list_text_indent_array = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_text_indent_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_text_indent_array_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_list_text_indent_array_undefined(&has_bits);
          _impl_.list_text_indent_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecListStyleListLabelTypeArrayArchive list_label_type_array = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_label_type_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool list_label_type_array_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_list_label_type_array_undefined(&has_bits);
          _impl_.list_label_type_array_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive writing_direction = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_writing_direction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool writing_direction_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_writing_direction_undefined(&has_bits);
          _impl_.writing_direction_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.ListStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecColorArchive list_font_color = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::list_font_color(this),
        _Internal::list_font_color(this).GetCachedSize(), target, stream);
  }

  // optional bool list_font_color_undefined = 2;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_list_font_color_undefined(), target);
  }

  // optional .TSSSOS.SpecStringArchive font_name = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::font_name(this),
        _Internal::font_name(this).GetCachedSize(), target, stream);
  }

  // optional bool font_name_undefined = 4;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_font_name_undefined(), target);
  }

  // optional .TSWPSOS.SpecListStyleFloatArrayArchive list_classic_text_indent_array = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::list_classic_text_indent_array(this),
        _Internal::list_classic_text_indent_array(this).GetCachedSize(), target, stream);
  }

  // optional bool list_classic_text_indent_array_undefined = 6;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_list_classic_text_indent_array_undefined(), target);
  }

  // optional .TSWPSOS.SpecListStyleListLabelGeometryArrayArchive list_label_geometry_array = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::list_label_geometry_array(this),
        _Internal::list_label_geometry_array(this).GetCachedSize(), target, stream);
  }

  // optional bool list_label_geometry_array_undefined = 8;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_list_label_geometry_array_undefined(), target);
  }

  // optional .TSWPSOS.SpecListStyleImageDataArrayArchive list_label_image_data_array = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::list_label_image_data_array(this),
        _Internal::list_label_image_data_array(this).GetCachedSize(), target, stream);
  }

  // optional bool list_label_image_data_array_undefined = 10;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_list_label_image_data_array_undefined(), target);
  }

  // optional .TSWPSOS.SpecListStyleFloatArrayArchive list_label_indent_array = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::list_label_indent_array(this),
        _Internal::list_label_indent_array(this).GetCachedSize(), target, stream);
  }

  // optional bool list_label_indent_array_undefined = 12;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_list_label_indent_array_undefined(), target);
  }

  // optional .TSWPSOS.SpecListStyleListNumberTypeArrayArchive list_label_number_array = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::list_label_number_array(this),
        _Internal::list_label_number_array(this).GetCachedSize(), target, stream);
  }

  // optional bool list_label_number_array_undefined = 14;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_list_label_number_array_undefined(), target);
  }

  // optional .TSWPSOS.SpecListStyleBoolArrayArchive list_label_tiered_number_array = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::list_label_tiered_number_array(this),
        _Internal::list_label_tiered_number_array(this).GetCachedSize(), target, stream);
  }

  // optional bool list_label_tiered_number_array_undefined = 16;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_list_label_tiered_number_array_undefined(), target);
  }

  // optional .TSDSOS.SpecShadowArchive text_shadow = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::text_shadow(this),
        _Internal::text_shadow(this).GetCachedSize(), target, stream);
  }

  // optional bool text_shadow_undefined = 18;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_text_shadow_undefined(), target);
  }

  // optional .TSWPSOS.SpecListStyleStringArrayArchive list_label_string_array = 19;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::list_label_string_array(this),
        _Internal::list_label_string_array(this).GetCachedSize(), target, stream);
  }

  // optional bool list_label_string_array_undefined = 20;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(20, this->_internal_list_label_string_array_undefined(), target);
  }

  // optional .TSWPSOS.SpecListStyleFloatArrayArchive list_text_indent_array = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::list_text_indent_array(this),
        _Internal::list_text_indent_array(this).GetCachedSize(), target, stream);
  }

  // optional bool list_text_indent_array_undefined = 22;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(22, this->_internal_list_text_indent_array_undefined(), target);
  }

  // optional .TSWPSOS.SpecListStyleListLabelTypeArrayArchive list_label_type_array = 23;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::list_label_type_array(this),
        _Internal::list_label_type_array(this).GetCachedSize(), target, stream);
  }

  // optional bool list_label_type_array_undefined = 24;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(24, this->_internal_list_label_type_array_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive writing_direction = 25;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::writing_direction(this),
        _Internal::writing_direction(this).GetCachedSize(), target, stream);
  }

  // optional bool writing_direction_undefined = 26;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(26, this->_internal_writing_direction_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.ListStylePropertyChangeSetArchive)
  return target;
}

size_t ListStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.ListStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecColorArchive list_font_color = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.list_font_color_);
    }

    // optional .TSSSOS.SpecStringArchive font_name = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.font_name_);
    }

    // optional .TSWPSOS.SpecListStyleFloatArrayArchive list_classic_text_indent_array = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.list_classic_text_indent_array_);
    }

    // optional .TSWPSOS.SpecListStyleListLabelGeometryArrayArchive list_label_geometry_array = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.list_label_geometry_array_);
    }

    // optional .TSWPSOS.SpecListStyleImageDataArrayArchive list_label_image_data_array = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.list_label_image_data_array_);
    }

    // optional .TSWPSOS.SpecListStyleFloatArrayArchive list_label_indent_array = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.list_label_indent_array_);
    }

    // optional .TSWPSOS.SpecListStyleListNumberTypeArrayArchive list_label_number_array = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.list_label_number_array_);
    }

    // optional .TSWPSOS.SpecListStyleBoolArrayArchive list_label_tiered_number_array = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.list_label_tiered_number_array_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSDSOS.SpecShadowArchive text_shadow = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.text_shadow_);
    }

    // optional .TSWPSOS.SpecListStyleStringArrayArchive list_label_string_array = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.list_label_string_array_);
    }

    // optional .TSWPSOS.SpecListStyleFloatArrayArchive list_text_indent_array = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.list_text_indent_array_);
    }

    // optional .TSWPSOS.SpecListStyleListLabelTypeArrayArchive list_label_type_array = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.list_label_type_array_);
    }

    // optional .TSSSOS.SpecIntegerArchive writing_direction = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.writing_direction_);
    }

    // optional bool list_font_color_undefined = 2;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional bool font_name_undefined = 4;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool list_classic_text_indent_array_undefined = 6;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool list_label_geometry_array_undefined = 8;
    if (cached_has_bits & 0x00010000u) {
      total_size += 1 + 1;
    }

    // optional bool list_label_image_data_array_undefined = 10;
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 + 1;
    }

    // optional bool list_label_indent_array_undefined = 12;
    if (cached_has_bits & 0x00040000u) {
      total_size += 1 + 1;
    }

    // optional bool list_label_number_array_undefined = 14;
    if (cached_has_bits & 0x00080000u) {
      total_size += 1 + 1;
    }

    // optional bool list_label_tiered_number_array_undefined = 16;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool text_shadow_undefined = 18;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool list_label_string_array_undefined = 20;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool list_text_indent_array_undefined = 22;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x03000000u) {
    // optional bool list_label_type_array_undefined = 24;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool writing_direction_undefined = 26;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ListStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ListStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.ListStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_list_font_color()->::TSSSOS::SpecColorArchive::MergeFrom(
          from._internal_list_font_color());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_font_name()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_font_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_list_classic_text_indent_array()->::TSWPSOS::SpecListStyleFloatArrayArchive::MergeFrom(
          from._internal_list_classic_text_indent_array());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_list_label_geometry_array()->::TSWPSOS::SpecListStyleListLabelGeometryArrayArchive::MergeFrom(
          from._internal_list_label_geometry_array());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_list_label_image_data_array()->::TSWPSOS::SpecListStyleImageDataArrayArchive::MergeFrom(
          from._internal_list_label_image_data_array());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_list_label_indent_array()->::TSWPSOS::SpecListStyleFloatArrayArchive::MergeFrom(
          from._internal_list_label_indent_array());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_list_label_number_array()->::TSWPSOS::SpecListStyleListNumberTypeArrayArchive::MergeFrom(
          from._internal_list_label_number_array());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_list_label_tiered_number_array()->::TSWPSOS::SpecListStyleBoolArrayArchive::MergeFrom(
          from._internal_list_label_tiered_number_array());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_text_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_text_shadow());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_list_label_string_array()->::TSWPSOS::SpecListStyleStringArrayArchive::MergeFrom(
          from._internal_list_label_string_array());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_list_text_indent_array()->::TSWPSOS::SpecListStyleFloatArrayArchive::MergeFrom(
          from._internal_list_text_indent_array());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_list_label_type_array()->::TSWPSOS::SpecListStyleListLabelTypeArrayArchive::MergeFrom(
          from._internal_list_label_type_array());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_writing_direction()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_writing_direction());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.list_font_color_undefined_ = from._impl_.list_font_color_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.font_name_undefined_ = from._impl_.font_name_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.list_classic_text_indent_array_undefined_ = from._impl_.list_classic_text_indent_array_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.list_label_geometry_array_undefined_ = from._impl_.list_label_geometry_array_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.list_label_image_data_array_undefined_ = from._impl_.list_label_image_data_array_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.list_label_indent_array_undefined_ = from._impl_.list_label_indent_array_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.list_label_number_array_undefined_ = from._impl_.list_label_number_array_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.list_label_tiered_number_array_undefined_ = from._impl_.list_label_tiered_number_array_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.text_shadow_undefined_ = from._impl_.text_shadow_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.list_label_string_array_undefined_ = from._impl_.list_label_string_array_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.list_text_indent_array_undefined_ = from._impl_.list_text_indent_array_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x03000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.list_label_type_array_undefined_ = from._impl_.list_label_type_array_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.writing_direction_undefined_ = from._impl_.writing_direction_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListStylePropertyChangeSetArchive::CopyFrom(const ListStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.ListStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_list_font_color()) {
    if (!_impl_.list_font_color_->IsInitialized()) return false;
  }
  if (_internal_has_font_name()) {
    if (!_impl_.font_name_->IsInitialized()) return false;
  }
  if (_internal_has_list_classic_text_indent_array()) {
    if (!_impl_.list_classic_text_indent_array_->IsInitialized()) return false;
  }
  if (_internal_has_list_label_geometry_array()) {
    if (!_impl_.list_label_geometry_array_->IsInitialized()) return false;
  }
  if (_internal_has_list_label_image_data_array()) {
    if (!_impl_.list_label_image_data_array_->IsInitialized()) return false;
  }
  if (_internal_has_list_label_indent_array()) {
    if (!_impl_.list_label_indent_array_->IsInitialized()) return false;
  }
  if (_internal_has_list_label_number_array()) {
    if (!_impl_.list_label_number_array_->IsInitialized()) return false;
  }
  if (_internal_has_list_label_tiered_number_array()) {
    if (!_impl_.list_label_tiered_number_array_->IsInitialized()) return false;
  }
  if (_internal_has_text_shadow()) {
    if (!_impl_.text_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_list_label_string_array()) {
    if (!_impl_.list_label_string_array_->IsInitialized()) return false;
  }
  if (_internal_has_list_text_indent_array()) {
    if (!_impl_.list_text_indent_array_->IsInitialized()) return false;
  }
  if (_internal_has_list_label_type_array()) {
    if (!_impl_.list_label_type_array_->IsInitialized()) return false;
  }
  if (_internal_has_writing_direction()) {
    if (!_impl_.writing_direction_->IsInitialized()) return false;
  }
  return true;
}

void ListStylePropertyChangeSetArchive::InternalSwap(ListStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListStylePropertyChangeSetArchive, _impl_.writing_direction_undefined_)
      + sizeof(ListStylePropertyChangeSetArchive::_impl_.writing_direction_undefined_)
      - PROTOBUF_FIELD_OFFSET(ListStylePropertyChangeSetArchive, _impl_.list_font_color_)>(
          reinterpret_cast<char*>(&_impl_.list_font_color_),
          reinterpret_cast<char*>(&other->_impl_.list_font_color_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[38]);
}

// ===================================================================

class ParagraphSpecificStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ParagraphSpecificStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSSSOS::SpecIntegerArchive& alignment(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_alignment_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static const ::TSSSOS::SpecStringArchive& decimal_tab(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_decimal_tab(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_decimal_tab_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_tab_stops(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_default_tab_stops(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_tab_stops_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static const ::TSSSOS::SpecColorArchive& paragraph_fill(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_paragraph_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_paragraph_fill_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::TSSSOS::SpecDoubleArchive& first_line_indent(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_first_line_indent(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_first_line_indent_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::TSWPSOS::SpecParagraphStyleArchive& following_paragraph_style(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_following_paragraph_style(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_following_paragraph_style_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::TSSSOS::SpecBoolArchive& hyphenate(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_hyphenate(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_hyphenate_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::TSWPSOS::SpecListStyleArchive& initial_list_style(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_initial_list_style(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_initial_list_style_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::TSSSOS::SpecBoolArchive& keep_lines_together(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_keep_lines_together(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_keep_lines_together_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::TSSSOS::SpecBoolArchive& keep_with_next(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_keep_with_next(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_keep_with_next_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::TSSSOS::SpecDoubleArchive& left_indent(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_left_indent(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_left_indent_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::TSWPSOS::SpecLineSpacingArchive& line_spacing(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_line_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_line_spacing_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::TSSSOS::SpecIntegerArchive& outline_level(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_outline_level(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_outline_level_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::TSSSOS::SpecIntegerArchive& outline_style_type(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_outline_style_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_outline_style_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::TSSSOS::SpecBoolArchive& page_break_before(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_page_break_before(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_page_break_before_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::TSSSOS::SpecIntegerArchive& paragraph_borders(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_paragraph_borders(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_paragraph_borders_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::TSWPSOS::SpecRuleOffsetArchive& paragraph_rule_offset(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_paragraph_rule_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_paragraph_rule_offset_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::TSSSOS::SpecDoubleArchive& paragraph_rule_width(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_paragraph_rule_width(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_paragraph_rule_width_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::TSSSOS::SpecDoubleArchive& right_indent(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_right_indent(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_right_indent_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::TSSSOS::SpecDoubleArchive& space_after(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_space_after(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_space_after_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static const ::TSSSOS::SpecDoubleArchive& space_before(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_space_before(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_space_before_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::TSDSOS::SpecStrokeArchive& paragraph_stroke(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_paragraph_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_paragraph_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static const ::TSWPSOS::SpecTabsArchive& tabs(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_tabs(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_tabs_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static const ::TSSSOS::SpecIntegerArchive& widow_control(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_widow_control(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_widow_control_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static const ::TSSSOS::SpecBoolArchive& show_in_bookmarks_list(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_show_in_bookmarks_list(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_show_in_bookmarks_list_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static const ::TSSSOS::SpecBoolArchive& show_in_t_o_c_navigator(const ParagraphSpecificStylePropertyChangeSetArchive* msg);
  static void set_has_show_in_t_o_c_navigator(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_show_in_t_o_c_navigator_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
};

const ::TSSSOS::SpecIntegerArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::alignment(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.alignment_;
}
const ::TSSSOS::SpecStringArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::decimal_tab(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.decimal_tab_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::default_tab_stops(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_tab_stops_;
}
const ::TSSSOS::SpecColorArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::paragraph_fill(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.paragraph_fill_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::first_line_indent(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.first_line_indent_;
}
const ::TSWPSOS::SpecParagraphStyleArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::following_paragraph_style(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.following_paragraph_style_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::hyphenate(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.hyphenate_;
}
const ::TSWPSOS::SpecListStyleArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::initial_list_style(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.initial_list_style_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::keep_lines_together(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.keep_lines_together_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::keep_with_next(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.keep_with_next_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::left_indent(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.left_indent_;
}
const ::TSWPSOS::SpecLineSpacingArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::line_spacing(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_spacing_;
}
const ::TSSSOS::SpecIntegerArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::outline_level(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.outline_level_;
}
const ::TSSSOS::SpecIntegerArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::outline_style_type(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.outline_style_type_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::page_break_before(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.page_break_before_;
}
const ::TSSSOS::SpecIntegerArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::paragraph_borders(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.paragraph_borders_;
}
const ::TSWPSOS::SpecRuleOffsetArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::paragraph_rule_offset(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.paragraph_rule_offset_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::paragraph_rule_width(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.paragraph_rule_width_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::right_indent(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.right_indent_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::space_after(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.space_after_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::space_before(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.space_before_;
}
const ::TSDSOS::SpecStrokeArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::paragraph_stroke(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.paragraph_stroke_;
}
const ::TSWPSOS::SpecTabsArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::tabs(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.tabs_;
}
const ::TSSSOS::SpecIntegerArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::widow_control(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.widow_control_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::show_in_bookmarks_list(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.show_in_bookmarks_list_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphSpecificStylePropertyChangeSetArchive::_Internal::show_in_t_o_c_navigator(const ParagraphSpecificStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.show_in_t_o_c_navigator_;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_decimal_tab() {
  if (_impl_.decimal_tab_ != nullptr) _impl_.decimal_tab_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_default_tab_stops() {
  if (_impl_.default_tab_stops_ != nullptr) _impl_.default_tab_stops_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_paragraph_fill() {
  if (_impl_.paragraph_fill_ != nullptr) _impl_.paragraph_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_first_line_indent() {
  if (_impl_.first_line_indent_ != nullptr) _impl_.first_line_indent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_hyphenate() {
  if (_impl_.hyphenate_ != nullptr) _impl_.hyphenate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_keep_lines_together() {
  if (_impl_.keep_lines_together_ != nullptr) _impl_.keep_lines_together_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_keep_with_next() {
  if (_impl_.keep_with_next_ != nullptr) _impl_.keep_with_next_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_left_indent() {
  if (_impl_.left_indent_ != nullptr) _impl_.left_indent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_outline_level() {
  if (_impl_.outline_level_ != nullptr) _impl_.outline_level_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_outline_style_type() {
  if (_impl_.outline_style_type_ != nullptr) _impl_.outline_style_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_page_break_before() {
  if (_impl_.page_break_before_ != nullptr) _impl_.page_break_before_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_paragraph_borders() {
  if (_impl_.paragraph_borders_ != nullptr) _impl_.paragraph_borders_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_paragraph_rule_width() {
  if (_impl_.paragraph_rule_width_ != nullptr) _impl_.paragraph_rule_width_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_right_indent() {
  if (_impl_.right_indent_ != nullptr) _impl_.right_indent_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_space_after() {
  if (_impl_.space_after_ != nullptr) _impl_.space_after_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_space_before() {
  if (_impl_.space_before_ != nullptr) _impl_.space_before_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_paragraph_stroke() {
  if (_impl_.paragraph_stroke_ != nullptr) _impl_.paragraph_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_widow_control() {
  if (_impl_.widow_control_ != nullptr) _impl_.widow_control_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_show_in_bookmarks_list() {
  if (_impl_.show_in_bookmarks_list_ != nullptr) _impl_.show_in_bookmarks_list_->Clear();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
void ParagraphSpecificStylePropertyChangeSetArchive::clear_show_in_t_o_c_navigator() {
  if (_impl_.show_in_t_o_c_navigator_ != nullptr) _impl_.show_in_t_o_c_navigator_->Clear();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
ParagraphSpecificStylePropertyChangeSetArchive::ParagraphSpecificStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.ParagraphSpecificStylePropertyChangeSetArchive)
}
ParagraphSpecificStylePropertyChangeSetArchive::ParagraphSpecificStylePropertyChangeSetArchive(const ParagraphSpecificStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ParagraphSpecificStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.decimal_tab_){nullptr}
    , decltype(_impl_.default_tab_stops_){nullptr}
    , decltype(_impl_.paragraph_fill_){nullptr}
    , decltype(_impl_.first_line_indent_){nullptr}
    , decltype(_impl_.following_paragraph_style_){nullptr}
    , decltype(_impl_.hyphenate_){nullptr}
    , decltype(_impl_.initial_list_style_){nullptr}
    , decltype(_impl_.keep_lines_together_){nullptr}
    , decltype(_impl_.keep_with_next_){nullptr}
    , decltype(_impl_.left_indent_){nullptr}
    , decltype(_impl_.line_spacing_){nullptr}
    , decltype(_impl_.outline_level_){nullptr}
    , decltype(_impl_.outline_style_type_){nullptr}
    , decltype(_impl_.page_break_before_){nullptr}
    , decltype(_impl_.paragraph_borders_){nullptr}
    , decltype(_impl_.paragraph_rule_offset_){nullptr}
    , decltype(_impl_.paragraph_rule_width_){nullptr}
    , decltype(_impl_.right_indent_){nullptr}
    , decltype(_impl_.space_after_){nullptr}
    , decltype(_impl_.space_before_){nullptr}
    , decltype(_impl_.paragraph_stroke_){nullptr}
    , decltype(_impl_.tabs_){nullptr}
    , decltype(_impl_.widow_control_){nullptr}
    , decltype(_impl_.show_in_bookmarks_list_){nullptr}
    , decltype(_impl_.show_in_t_o_c_navigator_){nullptr}
    , decltype(_impl_.alignment_undefined_){}
    , decltype(_impl_.decimal_tab_undefined_){}
    , decltype(_impl_.default_tab_stops_undefined_){}
    , decltype(_impl_.paragraph_fill_undefined_){}
    , decltype(_impl_.first_line_indent_undefined_){}
    , decltype(_impl_.following_paragraph_style_undefined_){}
    , decltype(_impl_.hyphenate_undefined_){}
    , decltype(_impl_.initial_list_style_undefined_){}
    , decltype(_impl_.keep_lines_together_undefined_){}
    , decltype(_impl_.keep_with_next_undefined_){}
    , decltype(_impl_.left_indent_undefined_){}
    , decltype(_impl_.line_spacing_undefined_){}
    , decltype(_impl_.outline_level_undefined_){}
    , decltype(_impl_.outline_style_type_undefined_){}
    , decltype(_impl_.page_break_before_undefined_){}
    , decltype(_impl_.paragraph_borders_undefined_){}
    , decltype(_impl_.paragraph_rule_offset_undefined_){}
    , decltype(_impl_.paragraph_rule_width_undefined_){}
    , decltype(_impl_.right_indent_undefined_){}
    , decltype(_impl_.space_after_undefined_){}
    , decltype(_impl_.space_before_undefined_){}
    , decltype(_impl_.paragraph_stroke_undefined_){}
    , decltype(_impl_.tabs_undefined_){}
    , decltype(_impl_.widow_control_undefined_){}
    , decltype(_impl_.show_in_bookmarks_list_undefined_){}
    , decltype(_impl_.show_in_t_o_c_navigator_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.alignment_);
  }
  if (from._internal_has_decimal_tab()) {
    _this->_impl_.decimal_tab_ = new ::TSSSOS::SpecStringArchive(*from._impl_.decimal_tab_);
  }
  if (from._internal_has_default_tab_stops()) {
    _this->_impl_.default_tab_stops_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_tab_stops_);
  }
  if (from._internal_has_paragraph_fill()) {
    _this->_impl_.paragraph_fill_ = new ::TSSSOS::SpecColorArchive(*from._impl_.paragraph_fill_);
  }
  if (from._internal_has_first_line_indent()) {
    _this->_impl_.first_line_indent_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.first_line_indent_);
  }
  if (from._internal_has_following_paragraph_style()) {
    _this->_impl_.following_paragraph_style_ = new ::TSWPSOS::SpecParagraphStyleArchive(*from._impl_.following_paragraph_style_);
  }
  if (from._internal_has_hyphenate()) {
    _this->_impl_.hyphenate_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.hyphenate_);
  }
  if (from._internal_has_initial_list_style()) {
    _this->_impl_.initial_list_style_ = new ::TSWPSOS::SpecListStyleArchive(*from._impl_.initial_list_style_);
  }
  if (from._internal_has_keep_lines_together()) {
    _this->_impl_.keep_lines_together_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.keep_lines_together_);
  }
  if (from._internal_has_keep_with_next()) {
    _this->_impl_.keep_with_next_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.keep_with_next_);
  }
  if (from._internal_has_left_indent()) {
    _this->_impl_.left_indent_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.left_indent_);
  }
  if (from._internal_has_line_spacing()) {
    _this->_impl_.line_spacing_ = new ::TSWPSOS::SpecLineSpacingArchive(*from._impl_.line_spacing_);
  }
  if (from._internal_has_outline_level()) {
    _this->_impl_.outline_level_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.outline_level_);
  }
  if (from._internal_has_outline_style_type()) {
    _this->_impl_.outline_style_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.outline_style_type_);
  }
  if (from._internal_has_page_break_before()) {
    _this->_impl_.page_break_before_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.page_break_before_);
  }
  if (from._internal_has_paragraph_borders()) {
    _this->_impl_.paragraph_borders_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.paragraph_borders_);
  }
  if (from._internal_has_paragraph_rule_offset()) {
    _this->_impl_.paragraph_rule_offset_ = new ::TSWPSOS::SpecRuleOffsetArchive(*from._impl_.paragraph_rule_offset_);
  }
  if (from._internal_has_paragraph_rule_width()) {
    _this->_impl_.paragraph_rule_width_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.paragraph_rule_width_);
  }
  if (from._internal_has_right_indent()) {
    _this->_impl_.right_indent_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.right_indent_);
  }
  if (from._internal_has_space_after()) {
    _this->_impl_.space_after_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.space_after_);
  }
  if (from._internal_has_space_before()) {
    _this->_impl_.space_before_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.space_before_);
  }
  if (from._internal_has_paragraph_stroke()) {
    _this->_impl_.paragraph_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.paragraph_stroke_);
  }
  if (from._internal_has_tabs()) {
    _this->_impl_.tabs_ = new ::TSWPSOS::SpecTabsArchive(*from._impl_.tabs_);
  }
  if (from._internal_has_widow_control()) {
    _this->_impl_.widow_control_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.widow_control_);
  }
  if (from._internal_has_show_in_bookmarks_list()) {
    _this->_impl_.show_in_bookmarks_list_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.show_in_bookmarks_list_);
  }
  if (from._internal_has_show_in_t_o_c_navigator()) {
    _this->_impl_.show_in_t_o_c_navigator_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.show_in_t_o_c_navigator_);
  }
  ::memcpy(&_impl_.alignment_undefined_, &from._impl_.alignment_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.show_in_t_o_c_navigator_undefined_) -
    reinterpret_cast<char*>(&_impl_.alignment_undefined_)) + sizeof(_impl_.show_in_t_o_c_navigator_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.ParagraphSpecificStylePropertyChangeSetArchive)
}

inline void ParagraphSpecificStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.decimal_tab_){nullptr}
    , decltype(_impl_.default_tab_stops_){nullptr}
    , decltype(_impl_.paragraph_fill_){nullptr}
    , decltype(_impl_.first_line_indent_){nullptr}
    , decltype(_impl_.following_paragraph_style_){nullptr}
    , decltype(_impl_.hyphenate_){nullptr}
    , decltype(_impl_.initial_list_style_){nullptr}
    , decltype(_impl_.keep_lines_together_){nullptr}
    , decltype(_impl_.keep_with_next_){nullptr}
    , decltype(_impl_.left_indent_){nullptr}
    , decltype(_impl_.line_spacing_){nullptr}
    , decltype(_impl_.outline_level_){nullptr}
    , decltype(_impl_.outline_style_type_){nullptr}
    , decltype(_impl_.page_break_before_){nullptr}
    , decltype(_impl_.paragraph_borders_){nullptr}
    , decltype(_impl_.paragraph_rule_offset_){nullptr}
    , decltype(_impl_.paragraph_rule_width_){nullptr}
    , decltype(_impl_.right_indent_){nullptr}
    , decltype(_impl_.space_after_){nullptr}
    , decltype(_impl_.space_before_){nullptr}
    , decltype(_impl_.paragraph_stroke_){nullptr}
    , decltype(_impl_.tabs_){nullptr}
    , decltype(_impl_.widow_control_){nullptr}
    , decltype(_impl_.show_in_bookmarks_list_){nullptr}
    , decltype(_impl_.show_in_t_o_c_navigator_){nullptr}
    , decltype(_impl_.alignment_undefined_){false}
    , decltype(_impl_.decimal_tab_undefined_){false}
    , decltype(_impl_.default_tab_stops_undefined_){false}
    , decltype(_impl_.paragraph_fill_undefined_){false}
    , decltype(_impl_.first_line_indent_undefined_){false}
    , decltype(_impl_.following_paragraph_style_undefined_){false}
    , decltype(_impl_.hyphenate_undefined_){false}
    , decltype(_impl_.initial_list_style_undefined_){false}
    , decltype(_impl_.keep_lines_together_undefined_){false}
    , decltype(_impl_.keep_with_next_undefined_){false}
    , decltype(_impl_.left_indent_undefined_){false}
    , decltype(_impl_.line_spacing_undefined_){false}
    , decltype(_impl_.outline_level_undefined_){false}
    , decltype(_impl_.outline_style_type_undefined_){false}
    , decltype(_impl_.page_break_before_undefined_){false}
    , decltype(_impl_.paragraph_borders_undefined_){false}
    , decltype(_impl_.paragraph_rule_offset_undefined_){false}
    , decltype(_impl_.paragraph_rule_width_undefined_){false}
    , decltype(_impl_.right_indent_undefined_){false}
    , decltype(_impl_.space_after_undefined_){false}
    , decltype(_impl_.space_before_undefined_){false}
    , decltype(_impl_.paragraph_stroke_undefined_){false}
    , decltype(_impl_.tabs_undefined_){false}
    , decltype(_impl_.widow_control_undefined_){false}
    , decltype(_impl_.show_in_bookmarks_list_undefined_){false}
    , decltype(_impl_.show_in_t_o_c_navigator_undefined_){false}
  };
}

ParagraphSpecificStylePropertyChangeSetArchive::~ParagraphSpecificStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.ParagraphSpecificStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ParagraphSpecificStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.alignment_;
  if (this != internal_default_instance()) delete _impl_.decimal_tab_;
  if (this != internal_default_instance()) delete _impl_.default_tab_stops_;
  if (this != internal_default_instance()) delete _impl_.paragraph_fill_;
  if (this != internal_default_instance()) delete _impl_.first_line_indent_;
  if (this != internal_default_instance()) delete _impl_.following_paragraph_style_;
  if (this != internal_default_instance()) delete _impl_.hyphenate_;
  if (this != internal_default_instance()) delete _impl_.initial_list_style_;
  if (this != internal_default_instance()) delete _impl_.keep_lines_together_;
  if (this != internal_default_instance()) delete _impl_.keep_with_next_;
  if (this != internal_default_instance()) delete _impl_.left_indent_;
  if (this != internal_default_instance()) delete _impl_.line_spacing_;
  if (this != internal_default_instance()) delete _impl_.outline_level_;
  if (this != internal_default_instance()) delete _impl_.outline_style_type_;
  if (this != internal_default_instance()) delete _impl_.page_break_before_;
  if (this != internal_default_instance()) delete _impl_.paragraph_borders_;
  if (this != internal_default_instance()) delete _impl_.paragraph_rule_offset_;
  if (this != internal_default_instance()) delete _impl_.paragraph_rule_width_;
  if (this != internal_default_instance()) delete _impl_.right_indent_;
  if (this != internal_default_instance()) delete _impl_.space_after_;
  if (this != internal_default_instance()) delete _impl_.space_before_;
  if (this != internal_default_instance()) delete _impl_.paragraph_stroke_;
  if (this != internal_default_instance()) delete _impl_.tabs_;
  if (this != internal_default_instance()) delete _impl_.widow_control_;
  if (this != internal_default_instance()) delete _impl_.show_in_bookmarks_list_;
  if (this != internal_default_instance()) delete _impl_.show_in_t_o_c_navigator_;
}

void ParagraphSpecificStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ParagraphSpecificStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.ParagraphSpecificStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.decimal_tab_ != nullptr);
      _impl_.decimal_tab_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.default_tab_stops_ != nullptr);
      _impl_.default_tab_stops_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.paragraph_fill_ != nullptr);
      _impl_.paragraph_fill_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.first_line_indent_ != nullptr);
      _impl_.first_line_indent_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.following_paragraph_style_ != nullptr);
      _impl_.following_paragraph_style_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.hyphenate_ != nullptr);
      _impl_.hyphenate_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.initial_list_style_ != nullptr);
      _impl_.initial_list_style_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.keep_lines_together_ != nullptr);
      _impl_.keep_lines_together_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.keep_with_next_ != nullptr);
      _impl_.keep_with_next_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.left_indent_ != nullptr);
      _impl_.left_indent_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.line_spacing_ != nullptr);
      _impl_.line_spacing_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.outline_level_ != nullptr);
      _impl_.outline_level_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.outline_style_type_ != nullptr);
      _impl_.outline_style_type_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.page_break_before_ != nullptr);
      _impl_.page_break_before_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.paragraph_borders_ != nullptr);
      _impl_.paragraph_borders_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.paragraph_rule_offset_ != nullptr);
      _impl_.paragraph_rule_offset_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.paragraph_rule_width_ != nullptr);
      _impl_.paragraph_rule_width_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.right_indent_ != nullptr);
      _impl_.right_indent_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.space_after_ != nullptr);
      _impl_.space_after_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.space_before_ != nullptr);
      _impl_.space_before_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.paragraph_stroke_ != nullptr);
      _impl_.paragraph_stroke_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.tabs_ != nullptr);
      _impl_.tabs_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.widow_control_ != nullptr);
      _impl_.widow_control_->Clear();
    }
  }
  if (cached_has_bits & 0x03000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(_impl_.show_in_bookmarks_list_ != nullptr);
      _impl_.show_in_bookmarks_list_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(_impl_.show_in_t_o_c_navigator_ != nullptr);
      _impl_.show_in_t_o_c_navigator_->Clear();
    }
  }
  if (cached_has_bits & 0xfc000000u) {
    ::memset(&_impl_.alignment_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.following_paragraph_style_undefined_) -
        reinterpret_cast<char*>(&_impl_.alignment_undefined_)) + sizeof(_impl_.following_paragraph_style_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.hyphenate_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.outline_style_type_undefined_) -
        reinterpret_cast<char*>(&_impl_.hyphenate_undefined_)) + sizeof(_impl_.outline_style_type_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.page_break_before_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.paragraph_stroke_undefined_) -
        reinterpret_cast<char*>(&_impl_.page_break_before_undefined_)) + sizeof(_impl_.paragraph_stroke_undefined_));
  }
  if (cached_has_bits & 0x000f0000u) {
    ::memset(&_impl_.tabs_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.show_in_t_o_c_navigator_undefined_) -
        reinterpret_cast<char*>(&_impl_.tabs_undefined_)) + sizeof(_impl_.show_in_t_o_c_navigator_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParagraphSpecificStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSSSOS.SpecIntegerArchive alignment = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool alignment_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_alignment_undefined(&_impl_._has_bits_);
          _impl_.alignment_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive decimal_tab = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_decimal_tab(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool decimal_tab_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_decimal_tab_undefined(&_impl_._has_bits_);
          _impl_.decimal_tab_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_tab_stops = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_tab_stops(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_tab_stops_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_default_tab_stops_undefined(&_impl_._has_bits_);
          _impl_.default_tab_stops_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecColorArchive paragraph_fill = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool paragraph_fill_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_paragraph_fill_undefined(&_impl_._has_bits_);
          _impl_.paragraph_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive first_line_indent = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_first_line_indent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool first_line_indent_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_first_line_indent_undefined(&_impl_._has_bits_);
          _impl_.first_line_indent_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecParagraphStyleArchive following_paragraph_style = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_following_paragraph_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool following_paragraph_style_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_following_paragraph_style_undefined(&_impl_._has_bits_);
          _impl_.following_paragraph_style_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive hyphenate = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_hyphenate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool hyphenate_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_hyphenate_undefined(&_impl_._has_bits_);
          _impl_.hyphenate_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecListStyleArchive initial_list_style = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_list_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool initial_list_style_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_initial_list_style_undefined(&_impl_._has_bits_);
          _impl_.initial_list_style_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive keep_lines_together = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_keep_lines_together(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool keep_lines_together_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_keep_lines_together_undefined(&_impl_._has_bits_);
          _impl_.keep_lines_together_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive keep_with_next = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_keep_with_next(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool keep_with_next_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_keep_with_next_undefined(&_impl_._has_bits_);
          _impl_.keep_with_next_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive left_indent = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_left_indent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool left_indent_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_left_indent_undefined(&_impl_._has_bits_);
          _impl_.left_indent_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecLineSpacingArchive line_spacing = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_spacing_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_line_spacing_undefined(&_impl_._has_bits_);
          _impl_.line_spacing_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive outline_level = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_outline_level(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool outline_level_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_outline_level_undefined(&_impl_._has_bits_);
          _impl_.outline_level_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive outline_style_type = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_outline_style_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool outline_style_type_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_outline_style_type_undefined(&_impl_._has_bits_);
          _impl_.outline_style_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive page_break_before = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_page_break_before(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool page_break_before_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_page_break_before_undefined(&_impl_._has_bits_);
          _impl_.page_break_before_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive paragraph_borders = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_borders(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool paragraph_borders_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_paragraph_borders_undefined(&_impl_._has_bits_);
          _impl_.paragraph_borders_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecRuleOffsetArchive paragraph_rule_offset = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_rule_offset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool paragraph_rule_offset_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_paragraph_rule_offset_undefined(&_impl_._has_bits_);
          _impl_.paragraph_rule_offset_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive paragraph_rule_width = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_rule_width(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool paragraph_rule_width_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_paragraph_rule_width_undefined(&_impl_._has_bits_);
          _impl_.paragraph_rule_width_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive right_indent = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_right_indent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool right_indent_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_right_indent_undefined(&_impl_._has_bits_);
          _impl_.right_indent_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive space_after = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_space_after(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool space_after_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_space_after_undefined(&_impl_._has_bits_);
          _impl_.space_after_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive space_before = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_space_before(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool space_before_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_space_before_undefined(&_impl_._has_bits_);
          _impl_.space_before_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive paragraph_stroke = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool paragraph_stroke_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_paragraph_stroke_undefined(&_impl_._has_bits_);
          _impl_.paragraph_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecTabsArchive tabs = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_tabs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool tabs_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_tabs_undefined(&_impl_._has_bits_);
          _impl_.tabs_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive widow_control = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_widow_control(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool widow_control_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_widow_control_undefined(&_impl_._has_bits_);
          _impl_.widow_control_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive show_in_bookmarks_list = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_show_in_bookmarks_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool show_in_bookmarks_list_undefined = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_show_in_bookmarks_list_undefined(&_impl_._has_bits_);
          _impl_.show_in_bookmarks_list_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive show_in_t_o_c_navigator = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_show_in_t_o_c_navigator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool show_in_t_o_c_navigator_undefined = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_show_in_t_o_c_navigator_undefined(&_impl_._has_bits_);
          _impl_.show_in_t_o_c_navigator_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ParagraphSpecificStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.ParagraphSpecificStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive alignment = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  // optional bool alignment_undefined = 2;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_alignment_undefined(), target);
  }

  // optional .TSSSOS.SpecStringArchive decimal_tab = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::decimal_tab(this),
        _Internal::decimal_tab(this).GetCachedSize(), target, stream);
  }

  // optional bool decimal_tab_undefined = 4;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_decimal_tab_undefined(), target);
  }

  // optional .TSSSOS.SpecDoubleArchive default_tab_stops = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::default_tab_stops(this),
        _Internal::default_tab_stops(this).GetCachedSize(), target, stream);
  }

  // optional bool default_tab_stops_undefined = 6;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_default_tab_stops_undefined(), target);
  }

  // optional .TSSSOS.SpecColorArchive paragraph_fill = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::paragraph_fill(this),
        _Internal::paragraph_fill(this).GetCachedSize(), target, stream);
  }

  // optional bool paragraph_fill_undefined = 8;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_paragraph_fill_undefined(), target);
  }

  // optional .TSSSOS.SpecDoubleArchive first_line_indent = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::first_line_indent(this),
        _Internal::first_line_indent(this).GetCachedSize(), target, stream);
  }

  // optional bool first_line_indent_undefined = 10;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_first_line_indent_undefined(), target);
  }

  // optional .TSWPSOS.SpecParagraphStyleArchive following_paragraph_style = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::following_paragraph_style(this),
        _Internal::following_paragraph_style(this).GetCachedSize(), target, stream);
  }

  // optional bool following_paragraph_style_undefined = 12;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_following_paragraph_style_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive hyphenate = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::hyphenate(this),
        _Internal::hyphenate(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool hyphenate_undefined = 14;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_hyphenate_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecListStyleArchive initial_list_style = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::initial_list_style(this),
        _Internal::initial_list_style(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool initial_list_style_undefined = 16;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_initial_list_style_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive keep_lines_together = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::keep_lines_together(this),
        _Internal::keep_lines_together(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool keep_lines_together_undefined = 18;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_keep_lines_together_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive keep_with_next = 19;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::keep_with_next(this),
        _Internal::keep_with_next(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool keep_with_next_undefined = 20;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(20, this->_internal_keep_with_next_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive left_indent = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::left_indent(this),
        _Internal::left_indent(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool left_indent_undefined = 22;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(22, this->_internal_left_indent_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecLineSpacingArchive line_spacing = 23;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::line_spacing(this),
        _Internal::line_spacing(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool line_spacing_undefined = 24;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(24, this->_internal_line_spacing_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive outline_level = 25;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::outline_level(this),
        _Internal::outline_level(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool outline_level_undefined = 26;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(26, this->_internal_outline_level_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive outline_style_type = 27;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(27, _Internal::outline_style_type(this),
        _Internal::outline_style_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool outline_style_type_undefined = 28;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(28, this->_internal_outline_style_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive page_break_before = 29;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(29, _Internal::page_break_before(this),
        _Internal::page_break_before(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool page_break_before_undefined = 30;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(30, this->_internal_page_break_before_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive paragraph_borders = 31;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, _Internal::paragraph_borders(this),
        _Internal::paragraph_borders(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool paragraph_borders_undefined = 32;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(32, this->_internal_paragraph_borders_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecRuleOffsetArchive paragraph_rule_offset = 33;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(33, _Internal::paragraph_rule_offset(this),
        _Internal::paragraph_rule_offset(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool paragraph_rule_offset_undefined = 34;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(34, this->_internal_paragraph_rule_offset_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive paragraph_rule_width = 35;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, _Internal::paragraph_rule_width(this),
        _Internal::paragraph_rule_width(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool paragraph_rule_width_undefined = 36;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(36, this->_internal_paragraph_rule_width_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive right_indent = 37;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(37, _Internal::right_indent(this),
        _Internal::right_indent(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool right_indent_undefined = 38;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(38, this->_internal_right_indent_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive space_after = 39;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(39, _Internal::space_after(this),
        _Internal::space_after(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool space_after_undefined = 40;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(40, this->_internal_space_after_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive space_before = 41;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(41, _Internal::space_before(this),
        _Internal::space_before(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool space_before_undefined = 42;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(42, this->_internal_space_before_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive paragraph_stroke = 43;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(43, _Internal::paragraph_stroke(this),
        _Internal::paragraph_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool paragraph_stroke_undefined = 44;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(44, this->_internal_paragraph_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecTabsArchive tabs = 45;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(45, _Internal::tabs(this),
        _Internal::tabs(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool tabs_undefined = 46;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(46, this->_internal_tabs_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive widow_control = 47;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(47, _Internal::widow_control(this),
        _Internal::widow_control(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool widow_control_undefined = 48;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(48, this->_internal_widow_control_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive show_in_bookmarks_list = 49;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(49, _Internal::show_in_bookmarks_list(this),
        _Internal::show_in_bookmarks_list(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool show_in_bookmarks_list_undefined = 50;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(50, this->_internal_show_in_bookmarks_list_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive show_in_t_o_c_navigator = 51;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(51, _Internal::show_in_t_o_c_navigator(this),
        _Internal::show_in_t_o_c_navigator(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool show_in_t_o_c_navigator_undefined = 52;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(52, this->_internal_show_in_t_o_c_navigator_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.ParagraphSpecificStylePropertyChangeSetArchive)
  return target;
}

size_t ParagraphSpecificStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.ParagraphSpecificStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecIntegerArchive alignment = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

    // optional .TSSSOS.SpecStringArchive decimal_tab = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.decimal_tab_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_tab_stops = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_tab_stops_);
    }

    // optional .TSSSOS.SpecColorArchive paragraph_fill = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.paragraph_fill_);
    }

    // optional .TSSSOS.SpecDoubleArchive first_line_indent = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.first_line_indent_);
    }

    // optional .TSWPSOS.SpecParagraphStyleArchive following_paragraph_style = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.following_paragraph_style_);
    }

    // optional .TSSSOS.SpecBoolArchive hyphenate = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.hyphenate_);
    }

    // optional .TSWPSOS.SpecListStyleArchive initial_list_style = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.initial_list_style_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecBoolArchive keep_lines_together = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.keep_lines_together_);
    }

    // optional .TSSSOS.SpecBoolArchive keep_with_next = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.keep_with_next_);
    }

    // optional .TSSSOS.SpecDoubleArchive left_indent = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.left_indent_);
    }

    // optional .TSWPSOS.SpecLineSpacingArchive line_spacing = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_spacing_);
    }

    // optional .TSSSOS.SpecIntegerArchive outline_level = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.outline_level_);
    }

    // optional .TSSSOS.SpecIntegerArchive outline_style_type = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.outline_style_type_);
    }

    // optional .TSSSOS.SpecBoolArchive page_break_before = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.page_break_before_);
    }

    // optional .TSSSOS.SpecIntegerArchive paragraph_borders = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.paragraph_borders_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSWPSOS.SpecRuleOffsetArchive paragraph_rule_offset = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.paragraph_rule_offset_);
    }

    // optional .TSSSOS.SpecDoubleArchive paragraph_rule_width = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.paragraph_rule_width_);
    }

    // optional .TSSSOS.SpecDoubleArchive right_indent = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.right_indent_);
    }

    // optional .TSSSOS.SpecDoubleArchive space_after = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.space_after_);
    }

    // optional .TSSSOS.SpecDoubleArchive space_before = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.space_before_);
    }

    // optional .TSDSOS.SpecStrokeArchive paragraph_stroke = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.paragraph_stroke_);
    }

    // optional .TSWPSOS.SpecTabsArchive tabs = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tabs_);
    }

    // optional .TSSSOS.SpecIntegerArchive widow_control = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.widow_control_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecBoolArchive show_in_bookmarks_list = 49;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.show_in_bookmarks_list_);
    }

    // optional .TSSSOS.SpecBoolArchive show_in_t_o_c_navigator = 51;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.show_in_t_o_c_navigator_);
    }

    // optional bool alignment_undefined = 2;
    if (cached_has_bits & 0x04000000u) {
      total_size += 1 + 1;
    }

    // optional bool decimal_tab_undefined = 4;
    if (cached_has_bits & 0x08000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_tab_stops_undefined = 6;
    if (cached_has_bits & 0x10000000u) {
      total_size += 1 + 1;
    }

    // optional bool paragraph_fill_undefined = 8;
    if (cached_has_bits & 0x20000000u) {
      total_size += 1 + 1;
    }

    // optional bool first_line_indent_undefined = 10;
    if (cached_has_bits & 0x40000000u) {
      total_size += 1 + 1;
    }

    // optional bool following_paragraph_style_undefined = 12;
    if (cached_has_bits & 0x80000000u) {
      total_size += 1 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool hyphenate_undefined = 14;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool initial_list_style_undefined = 16;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool keep_lines_together_undefined = 18;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool keep_with_next_undefined = 20;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool left_indent_undefined = 22;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool line_spacing_undefined = 24;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool outline_level_undefined = 26;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool outline_style_type_undefined = 28;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool page_break_before_undefined = 30;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool paragraph_borders_undefined = 32;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool paragraph_rule_offset_undefined = 34;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool paragraph_rule_width_undefined = 36;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool right_indent_undefined = 38;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool space_after_undefined = 40;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool space_before_undefined = 42;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool paragraph_stroke_undefined = 44;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x000f0000u) {
    // optional bool tabs_undefined = 46;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool widow_control_undefined = 48;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool show_in_bookmarks_list_undefined = 50;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool show_in_t_o_c_navigator_undefined = 52;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParagraphSpecificStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ParagraphSpecificStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParagraphSpecificStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ParagraphSpecificStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ParagraphSpecificStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ParagraphSpecificStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.ParagraphSpecificStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_alignment()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_alignment());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_decimal_tab()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_decimal_tab());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_default_tab_stops()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_tab_stops());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_paragraph_fill()->::TSSSOS::SpecColorArchive::MergeFrom(
          from._internal_paragraph_fill());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_first_line_indent()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_first_line_indent());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_following_paragraph_style()->::TSWPSOS::SpecParagraphStyleArchive::MergeFrom(
          from._internal_following_paragraph_style());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_hyphenate()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_hyphenate());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_initial_list_style()->::TSWPSOS::SpecListStyleArchive::MergeFrom(
          from._internal_initial_list_style());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_keep_lines_together()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_keep_lines_together());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_keep_with_next()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_keep_with_next());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_left_indent()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_left_indent());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_line_spacing()->::TSWPSOS::SpecLineSpacingArchive::MergeFrom(
          from._internal_line_spacing());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_outline_level()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_outline_level());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_outline_style_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_outline_style_type());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_page_break_before()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_page_break_before());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_paragraph_borders()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_paragraph_borders());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_paragraph_rule_offset()->::TSWPSOS::SpecRuleOffsetArchive::MergeFrom(
          from._internal_paragraph_rule_offset());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_paragraph_rule_width()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_paragraph_rule_width());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_right_indent()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_right_indent());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_space_after()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_space_after());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_space_before()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_space_before());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_paragraph_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_paragraph_stroke());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_tabs()->::TSWPSOS::SpecTabsArchive::MergeFrom(
          from._internal_tabs());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_widow_control()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_widow_control());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_show_in_bookmarks_list()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_show_in_bookmarks_list());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_show_in_t_o_c_navigator()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_show_in_t_o_c_navigator());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.alignment_undefined_ = from._impl_.alignment_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.decimal_tab_undefined_ = from._impl_.decimal_tab_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.default_tab_stops_undefined_ = from._impl_.default_tab_stops_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.paragraph_fill_undefined_ = from._impl_.paragraph_fill_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.first_line_indent_undefined_ = from._impl_.first_line_indent_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.following_paragraph_style_undefined_ = from._impl_.following_paragraph_style_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.hyphenate_undefined_ = from._impl_.hyphenate_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.initial_list_style_undefined_ = from._impl_.initial_list_style_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.keep_lines_together_undefined_ = from._impl_.keep_lines_together_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.keep_with_next_undefined_ = from._impl_.keep_with_next_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.left_indent_undefined_ = from._impl_.left_indent_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.line_spacing_undefined_ = from._impl_.line_spacing_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.outline_level_undefined_ = from._impl_.outline_level_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.outline_style_type_undefined_ = from._impl_.outline_style_type_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.page_break_before_undefined_ = from._impl_.page_break_before_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.paragraph_borders_undefined_ = from._impl_.paragraph_borders_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.paragraph_rule_offset_undefined_ = from._impl_.paragraph_rule_offset_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.paragraph_rule_width_undefined_ = from._impl_.paragraph_rule_width_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.right_indent_undefined_ = from._impl_.right_indent_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.space_after_undefined_ = from._impl_.space_after_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.space_before_undefined_ = from._impl_.space_before_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.paragraph_stroke_undefined_ = from._impl_.paragraph_stroke_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x000f0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.tabs_undefined_ = from._impl_.tabs_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.widow_control_undefined_ = from._impl_.widow_control_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.show_in_bookmarks_list_undefined_ = from._impl_.show_in_bookmarks_list_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.show_in_t_o_c_navigator_undefined_ = from._impl_.show_in_t_o_c_navigator_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParagraphSpecificStylePropertyChangeSetArchive::CopyFrom(const ParagraphSpecificStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.ParagraphSpecificStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParagraphSpecificStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  if (_internal_has_decimal_tab()) {
    if (!_impl_.decimal_tab_->IsInitialized()) return false;
  }
  if (_internal_has_default_tab_stops()) {
    if (!_impl_.default_tab_stops_->IsInitialized()) return false;
  }
  if (_internal_has_paragraph_fill()) {
    if (!_impl_.paragraph_fill_->IsInitialized()) return false;
  }
  if (_internal_has_first_line_indent()) {
    if (!_impl_.first_line_indent_->IsInitialized()) return false;
  }
  if (_internal_has_following_paragraph_style()) {
    if (!_impl_.following_paragraph_style_->IsInitialized()) return false;
  }
  if (_internal_has_hyphenate()) {
    if (!_impl_.hyphenate_->IsInitialized()) return false;
  }
  if (_internal_has_initial_list_style()) {
    if (!_impl_.initial_list_style_->IsInitialized()) return false;
  }
  if (_internal_has_keep_lines_together()) {
    if (!_impl_.keep_lines_together_->IsInitialized()) return false;
  }
  if (_internal_has_keep_with_next()) {
    if (!_impl_.keep_with_next_->IsInitialized()) return false;
  }
  if (_internal_has_left_indent()) {
    if (!_impl_.left_indent_->IsInitialized()) return false;
  }
  if (_internal_has_line_spacing()) {
    if (!_impl_.line_spacing_->IsInitialized()) return false;
  }
  if (_internal_has_outline_level()) {
    if (!_impl_.outline_level_->IsInitialized()) return false;
  }
  if (_internal_has_outline_style_type()) {
    if (!_impl_.outline_style_type_->IsInitialized()) return false;
  }
  if (_internal_has_page_break_before()) {
    if (!_impl_.page_break_before_->IsInitialized()) return false;
  }
  if (_internal_has_paragraph_borders()) {
    if (!_impl_.paragraph_borders_->IsInitialized()) return false;
  }
  if (_internal_has_paragraph_rule_offset()) {
    if (!_impl_.paragraph_rule_offset_->IsInitialized()) return false;
  }
  if (_internal_has_paragraph_rule_width()) {
    if (!_impl_.paragraph_rule_width_->IsInitialized()) return false;
  }
  if (_internal_has_right_indent()) {
    if (!_impl_.right_indent_->IsInitialized()) return false;
  }
  if (_internal_has_space_after()) {
    if (!_impl_.space_after_->IsInitialized()) return false;
  }
  if (_internal_has_space_before()) {
    if (!_impl_.space_before_->IsInitialized()) return false;
  }
  if (_internal_has_paragraph_stroke()) {
    if (!_impl_.paragraph_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_tabs()) {
    if (!_impl_.tabs_->IsInitialized()) return false;
  }
  if (_internal_has_widow_control()) {
    if (!_impl_.widow_control_->IsInitialized()) return false;
  }
  if (_internal_has_show_in_bookmarks_list()) {
    if (!_impl_.show_in_bookmarks_list_->IsInitialized()) return false;
  }
  if (_internal_has_show_in_t_o_c_navigator()) {
    if (!_impl_.show_in_t_o_c_navigator_->IsInitialized()) return false;
  }
  return true;
}

void ParagraphSpecificStylePropertyChangeSetArchive::InternalSwap(ParagraphSpecificStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParagraphSpecificStylePropertyChangeSetArchive, _impl_.show_in_t_o_c_navigator_undefined_)
      + sizeof(ParagraphSpecificStylePropertyChangeSetArchive::_impl_.show_in_t_o_c_navigator_undefined_)
      - PROTOBUF_FIELD_OFFSET(ParagraphSpecificStylePropertyChangeSetArchive, _impl_.alignment_)>(
          reinterpret_cast<char*>(&_impl_.alignment_),
          reinterpret_cast<char*>(&other->_impl_.alignment_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ParagraphSpecificStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[39]);
}

// ===================================================================

class ParagraphStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ParagraphStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::CharacterStylePropertyChangeSetArchive& super(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_super(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TSSSOS::SpecIntegerArchive& alignment(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_alignment_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::TSSSOS::SpecStringArchive& decimal_tab(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_decimal_tab(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_decimal_tab_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_tab_stops(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_default_tab_stops(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default_tab_stops_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::TSSSOS::SpecColorArchive& paragraph_fill(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_paragraph_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_paragraph_fill_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::TSSSOS::SpecDoubleArchive& first_line_indent(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_first_line_indent(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_first_line_indent_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::TSWPSOS::SpecParagraphStyleArchive& following_paragraph_style(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_following_paragraph_style(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_following_paragraph_style_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::TSSSOS::SpecBoolArchive& hyphenate(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_hyphenate(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_hyphenate_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::TSWPSOS::SpecListStyleArchive& initial_list_style(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_initial_list_style(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_initial_list_style_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::TSSSOS::SpecBoolArchive& keep_lines_together(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_keep_lines_together(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_keep_lines_together_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::TSSSOS::SpecBoolArchive& keep_with_next(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_keep_with_next(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_keep_with_next_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::TSSSOS::SpecDoubleArchive& left_indent(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_left_indent(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_left_indent_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::TSWPSOS::SpecLineSpacingArchive& line_spacing(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_line_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_line_spacing_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::TSSSOS::SpecIntegerArchive& outline_level(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_outline_level(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_outline_level_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::TSSSOS::SpecIntegerArchive& outline_style_type(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_outline_style_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_outline_style_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& page_break_before(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_page_break_before(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_page_break_before_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::TSSSOS::SpecIntegerArchive& paragraph_borders(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_paragraph_borders(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_paragraph_borders_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::TSWPSOS::SpecRuleOffsetArchive& paragraph_rule_offset(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_paragraph_rule_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_paragraph_rule_offset_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::TSSSOS::SpecDoubleArchive& paragraph_rule_width(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_paragraph_rule_width(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_paragraph_rule_width_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::TSSSOS::SpecDoubleArchive& right_indent(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_right_indent(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_right_indent_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static const ::TSSSOS::SpecDoubleArchive& space_after(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_space_after(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_space_after_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::TSSSOS::SpecDoubleArchive& space_before(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_space_before(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_space_before_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static const ::TSDSOS::SpecStrokeArchive& paragraph_stroke(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_paragraph_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_paragraph_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static const ::TSWPSOS::SpecTabsArchive& tabs(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_tabs(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_tabs_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static const ::TSSSOS::SpecIntegerArchive& widow_control(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_widow_control(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_widow_control_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static const ::TSSSOS::SpecBoolArchive& show_in_bookmarks_list(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_show_in_bookmarks_list(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_show_in_bookmarks_list_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static const ::TSSSOS::SpecBoolArchive& show_in_t_o_c_navigator(const ParagraphStylePropertyChangeSetArchive* msg);
  static void set_has_show_in_t_o_c_navigator(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_show_in_t_o_c_navigator_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TSWPSOS::CharacterStylePropertyChangeSetArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::super(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.super_;
}
const ::TSSSOS::SpecIntegerArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::alignment(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.alignment_;
}
const ::TSSSOS::SpecStringArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::decimal_tab(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.decimal_tab_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::default_tab_stops(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_tab_stops_;
}
const ::TSSSOS::SpecColorArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::paragraph_fill(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.paragraph_fill_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::first_line_indent(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.first_line_indent_;
}
const ::TSWPSOS::SpecParagraphStyleArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::following_paragraph_style(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.following_paragraph_style_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::hyphenate(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.hyphenate_;
}
const ::TSWPSOS::SpecListStyleArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::initial_list_style(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.initial_list_style_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::keep_lines_together(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.keep_lines_together_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::keep_with_next(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.keep_with_next_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::left_indent(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.left_indent_;
}
const ::TSWPSOS::SpecLineSpacingArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::line_spacing(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_spacing_;
}
const ::TSSSOS::SpecIntegerArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::outline_level(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.outline_level_;
}
const ::TSSSOS::SpecIntegerArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::outline_style_type(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.outline_style_type_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::page_break_before(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.page_break_before_;
}
const ::TSSSOS::SpecIntegerArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::paragraph_borders(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.paragraph_borders_;
}
const ::TSWPSOS::SpecRuleOffsetArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::paragraph_rule_offset(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.paragraph_rule_offset_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::paragraph_rule_width(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.paragraph_rule_width_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::right_indent(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.right_indent_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::space_after(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.space_after_;
}
const ::TSSSOS::SpecDoubleArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::space_before(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.space_before_;
}
const ::TSDSOS::SpecStrokeArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::paragraph_stroke(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.paragraph_stroke_;
}
const ::TSWPSOS::SpecTabsArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::tabs(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.tabs_;
}
const ::TSSSOS::SpecIntegerArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::widow_control(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.widow_control_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::show_in_bookmarks_list(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.show_in_bookmarks_list_;
}
const ::TSSSOS::SpecBoolArchive&
ParagraphStylePropertyChangeSetArchive::_Internal::show_in_t_o_c_navigator(const ParagraphStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.show_in_t_o_c_navigator_;
}
void ParagraphStylePropertyChangeSetArchive::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ParagraphStylePropertyChangeSetArchive::clear_decimal_tab() {
  if (_impl_.decimal_tab_ != nullptr) _impl_.decimal_tab_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ParagraphStylePropertyChangeSetArchive::clear_default_tab_stops() {
  if (_impl_.default_tab_stops_ != nullptr) _impl_.default_tab_stops_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void ParagraphStylePropertyChangeSetArchive::clear_paragraph_fill() {
  if (_impl_.paragraph_fill_ != nullptr) _impl_.paragraph_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void ParagraphStylePropertyChangeSetArchive::clear_first_line_indent() {
  if (_impl_.first_line_indent_ != nullptr) _impl_.first_line_indent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void ParagraphStylePropertyChangeSetArchive::clear_hyphenate() {
  if (_impl_.hyphenate_ != nullptr) _impl_.hyphenate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void ParagraphStylePropertyChangeSetArchive::clear_keep_lines_together() {
  if (_impl_.keep_lines_together_ != nullptr) _impl_.keep_lines_together_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void ParagraphStylePropertyChangeSetArchive::clear_keep_with_next() {
  if (_impl_.keep_with_next_ != nullptr) _impl_.keep_with_next_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void ParagraphStylePropertyChangeSetArchive::clear_left_indent() {
  if (_impl_.left_indent_ != nullptr) _impl_.left_indent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void ParagraphStylePropertyChangeSetArchive::clear_outline_level() {
  if (_impl_.outline_level_ != nullptr) _impl_.outline_level_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void ParagraphStylePropertyChangeSetArchive::clear_outline_style_type() {
  if (_impl_.outline_style_type_ != nullptr) _impl_.outline_style_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void ParagraphStylePropertyChangeSetArchive::clear_page_break_before() {
  if (_impl_.page_break_before_ != nullptr) _impl_.page_break_before_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void ParagraphStylePropertyChangeSetArchive::clear_paragraph_borders() {
  if (_impl_.paragraph_borders_ != nullptr) _impl_.paragraph_borders_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void ParagraphStylePropertyChangeSetArchive::clear_paragraph_rule_width() {
  if (_impl_.paragraph_rule_width_ != nullptr) _impl_.paragraph_rule_width_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void ParagraphStylePropertyChangeSetArchive::clear_right_indent() {
  if (_impl_.right_indent_ != nullptr) _impl_.right_indent_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void ParagraphStylePropertyChangeSetArchive::clear_space_after() {
  if (_impl_.space_after_ != nullptr) _impl_.space_after_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void ParagraphStylePropertyChangeSetArchive::clear_space_before() {
  if (_impl_.space_before_ != nullptr) _impl_.space_before_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void ParagraphStylePropertyChangeSetArchive::clear_paragraph_stroke() {
  if (_impl_.paragraph_stroke_ != nullptr) _impl_.paragraph_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
void ParagraphStylePropertyChangeSetArchive::clear_widow_control() {
  if (_impl_.widow_control_ != nullptr) _impl_.widow_control_->Clear();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
void ParagraphStylePropertyChangeSetArchive::clear_show_in_bookmarks_list() {
  if (_impl_.show_in_bookmarks_list_ != nullptr) _impl_.show_in_bookmarks_list_->Clear();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
void ParagraphStylePropertyChangeSetArchive::clear_show_in_t_o_c_navigator() {
  if (_impl_.show_in_t_o_c_navigator_ != nullptr) _impl_.show_in_t_o_c_navigator_->Clear();
  _impl_._has_bits_[0] &= ~0x04000000u;
}
ParagraphStylePropertyChangeSetArchive::ParagraphStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.ParagraphStylePropertyChangeSetArchive)
}
ParagraphStylePropertyChangeSetArchive::ParagraphStylePropertyChangeSetArchive(const ParagraphStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ParagraphStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.super_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.decimal_tab_){nullptr}
    , decltype(_impl_.default_tab_stops_){nullptr}
    , decltype(_impl_.paragraph_fill_){nullptr}
    , decltype(_impl_.first_line_indent_){nullptr}
    , decltype(_impl_.following_paragraph_style_){nullptr}
    , decltype(_impl_.hyphenate_){nullptr}
    , decltype(_impl_.initial_list_style_){nullptr}
    , decltype(_impl_.keep_lines_together_){nullptr}
    , decltype(_impl_.keep_with_next_){nullptr}
    , decltype(_impl_.left_indent_){nullptr}
    , decltype(_impl_.line_spacing_){nullptr}
    , decltype(_impl_.outline_level_){nullptr}
    , decltype(_impl_.outline_style_type_){nullptr}
    , decltype(_impl_.page_break_before_){nullptr}
    , decltype(_impl_.paragraph_borders_){nullptr}
    , decltype(_impl_.paragraph_rule_offset_){nullptr}
    , decltype(_impl_.paragraph_rule_width_){nullptr}
    , decltype(_impl_.right_indent_){nullptr}
    , decltype(_impl_.space_after_){nullptr}
    , decltype(_impl_.space_before_){nullptr}
    , decltype(_impl_.paragraph_stroke_){nullptr}
    , decltype(_impl_.tabs_){nullptr}
    , decltype(_impl_.widow_control_){nullptr}
    , decltype(_impl_.show_in_bookmarks_list_){nullptr}
    , decltype(_impl_.show_in_t_o_c_navigator_){nullptr}
    , decltype(_impl_.alignment_undefined_){}
    , decltype(_impl_.decimal_tab_undefined_){}
    , decltype(_impl_.default_tab_stops_undefined_){}
    , decltype(_impl_.paragraph_fill_undefined_){}
    , decltype(_impl_.first_line_indent_undefined_){}
    , decltype(_impl_.following_paragraph_style_undefined_){}
    , decltype(_impl_.hyphenate_undefined_){}
    , decltype(_impl_.initial_list_style_undefined_){}
    , decltype(_impl_.keep_lines_together_undefined_){}
    , decltype(_impl_.keep_with_next_undefined_){}
    , decltype(_impl_.left_indent_undefined_){}
    , decltype(_impl_.line_spacing_undefined_){}
    , decltype(_impl_.outline_level_undefined_){}
    , decltype(_impl_.outline_style_type_undefined_){}
    , decltype(_impl_.page_break_before_undefined_){}
    , decltype(_impl_.paragraph_borders_undefined_){}
    , decltype(_impl_.paragraph_rule_offset_undefined_){}
    , decltype(_impl_.paragraph_rule_width_undefined_){}
    , decltype(_impl_.right_indent_undefined_){}
    , decltype(_impl_.space_after_undefined_){}
    , decltype(_impl_.space_before_undefined_){}
    , decltype(_impl_.paragraph_stroke_undefined_){}
    , decltype(_impl_.tabs_undefined_){}
    , decltype(_impl_.widow_control_undefined_){}
    , decltype(_impl_.show_in_bookmarks_list_undefined_){}
    , decltype(_impl_.show_in_t_o_c_navigator_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_super()) {
    _this->_impl_.super_ = new ::TSWPSOS::CharacterStylePropertyChangeSetArchive(*from._impl_.super_);
  }
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.alignment_);
  }
  if (from._internal_has_decimal_tab()) {
    _this->_impl_.decimal_tab_ = new ::TSSSOS::SpecStringArchive(*from._impl_.decimal_tab_);
  }
  if (from._internal_has_default_tab_stops()) {
    _this->_impl_.default_tab_stops_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_tab_stops_);
  }
  if (from._internal_has_paragraph_fill()) {
    _this->_impl_.paragraph_fill_ = new ::TSSSOS::SpecColorArchive(*from._impl_.paragraph_fill_);
  }
  if (from._internal_has_first_line_indent()) {
    _this->_impl_.first_line_indent_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.first_line_indent_);
  }
  if (from._internal_has_following_paragraph_style()) {
    _this->_impl_.following_paragraph_style_ = new ::TSWPSOS::SpecParagraphStyleArchive(*from._impl_.following_paragraph_style_);
  }
  if (from._internal_has_hyphenate()) {
    _this->_impl_.hyphenate_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.hyphenate_);
  }
  if (from._internal_has_initial_list_style()) {
    _this->_impl_.initial_list_style_ = new ::TSWPSOS::SpecListStyleArchive(*from._impl_.initial_list_style_);
  }
  if (from._internal_has_keep_lines_together()) {
    _this->_impl_.keep_lines_together_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.keep_lines_together_);
  }
  if (from._internal_has_keep_with_next()) {
    _this->_impl_.keep_with_next_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.keep_with_next_);
  }
  if (from._internal_has_left_indent()) {
    _this->_impl_.left_indent_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.left_indent_);
  }
  if (from._internal_has_line_spacing()) {
    _this->_impl_.line_spacing_ = new ::TSWPSOS::SpecLineSpacingArchive(*from._impl_.line_spacing_);
  }
  if (from._internal_has_outline_level()) {
    _this->_impl_.outline_level_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.outline_level_);
  }
  if (from._internal_has_outline_style_type()) {
    _this->_impl_.outline_style_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.outline_style_type_);
  }
  if (from._internal_has_page_break_before()) {
    _this->_impl_.page_break_before_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.page_break_before_);
  }
  if (from._internal_has_paragraph_borders()) {
    _this->_impl_.paragraph_borders_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.paragraph_borders_);
  }
  if (from._internal_has_paragraph_rule_offset()) {
    _this->_impl_.paragraph_rule_offset_ = new ::TSWPSOS::SpecRuleOffsetArchive(*from._impl_.paragraph_rule_offset_);
  }
  if (from._internal_has_paragraph_rule_width()) {
    _this->_impl_.paragraph_rule_width_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.paragraph_rule_width_);
  }
  if (from._internal_has_right_indent()) {
    _this->_impl_.right_indent_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.right_indent_);
  }
  if (from._internal_has_space_after()) {
    _this->_impl_.space_after_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.space_after_);
  }
  if (from._internal_has_space_before()) {
    _this->_impl_.space_before_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.space_before_);
  }
  if (from._internal_has_paragraph_stroke()) {
    _this->_impl_.paragraph_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.paragraph_stroke_);
  }
  if (from._internal_has_tabs()) {
    _this->_impl_.tabs_ = new ::TSWPSOS::SpecTabsArchive(*from._impl_.tabs_);
  }
  if (from._internal_has_widow_control()) {
    _this->_impl_.widow_control_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.widow_control_);
  }
  if (from._internal_has_show_in_bookmarks_list()) {
    _this->_impl_.show_in_bookmarks_list_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.show_in_bookmarks_list_);
  }
  if (from._internal_has_show_in_t_o_c_navigator()) {
    _this->_impl_.show_in_t_o_c_navigator_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.show_in_t_o_c_navigator_);
  }
  ::memcpy(&_impl_.alignment_undefined_, &from._impl_.alignment_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.show_in_t_o_c_navigator_undefined_) -
    reinterpret_cast<char*>(&_impl_.alignment_undefined_)) + sizeof(_impl_.show_in_t_o_c_navigator_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.ParagraphStylePropertyChangeSetArchive)
}

inline void ParagraphStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.super_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.decimal_tab_){nullptr}
    , decltype(_impl_.default_tab_stops_){nullptr}
    , decltype(_impl_.paragraph_fill_){nullptr}
    , decltype(_impl_.first_line_indent_){nullptr}
    , decltype(_impl_.following_paragraph_style_){nullptr}
    , decltype(_impl_.hyphenate_){nullptr}
    , decltype(_impl_.initial_list_style_){nullptr}
    , decltype(_impl_.keep_lines_together_){nullptr}
    , decltype(_impl_.keep_with_next_){nullptr}
    , decltype(_impl_.left_indent_){nullptr}
    , decltype(_impl_.line_spacing_){nullptr}
    , decltype(_impl_.outline_level_){nullptr}
    , decltype(_impl_.outline_style_type_){nullptr}
    , decltype(_impl_.page_break_before_){nullptr}
    , decltype(_impl_.paragraph_borders_){nullptr}
    , decltype(_impl_.paragraph_rule_offset_){nullptr}
    , decltype(_impl_.paragraph_rule_width_){nullptr}
    , decltype(_impl_.right_indent_){nullptr}
    , decltype(_impl_.space_after_){nullptr}
    , decltype(_impl_.space_before_){nullptr}
    , decltype(_impl_.paragraph_stroke_){nullptr}
    , decltype(_impl_.tabs_){nullptr}
    , decltype(_impl_.widow_control_){nullptr}
    , decltype(_impl_.show_in_bookmarks_list_){nullptr}
    , decltype(_impl_.show_in_t_o_c_navigator_){nullptr}
    , decltype(_impl_.alignment_undefined_){false}
    , decltype(_impl_.decimal_tab_undefined_){false}
    , decltype(_impl_.default_tab_stops_undefined_){false}
    , decltype(_impl_.paragraph_fill_undefined_){false}
    , decltype(_impl_.first_line_indent_undefined_){false}
    , decltype(_impl_.following_paragraph_style_undefined_){false}
    , decltype(_impl_.hyphenate_undefined_){false}
    , decltype(_impl_.initial_list_style_undefined_){false}
    , decltype(_impl_.keep_lines_together_undefined_){false}
    , decltype(_impl_.keep_with_next_undefined_){false}
    , decltype(_impl_.left_indent_undefined_){false}
    , decltype(_impl_.line_spacing_undefined_){false}
    , decltype(_impl_.outline_level_undefined_){false}
    , decltype(_impl_.outline_style_type_undefined_){false}
    , decltype(_impl_.page_break_before_undefined_){false}
    , decltype(_impl_.paragraph_borders_undefined_){false}
    , decltype(_impl_.paragraph_rule_offset_undefined_){false}
    , decltype(_impl_.paragraph_rule_width_undefined_){false}
    , decltype(_impl_.right_indent_undefined_){false}
    , decltype(_impl_.space_after_undefined_){false}
    , decltype(_impl_.space_before_undefined_){false}
    , decltype(_impl_.paragraph_stroke_undefined_){false}
    , decltype(_impl_.tabs_undefined_){false}
    , decltype(_impl_.widow_control_undefined_){false}
    , decltype(_impl_.show_in_bookmarks_list_undefined_){false}
    , decltype(_impl_.show_in_t_o_c_navigator_undefined_){false}
  };
}

ParagraphStylePropertyChangeSetArchive::~ParagraphStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.ParagraphStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ParagraphStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.super_;
  if (this != internal_default_instance()) delete _impl_.alignment_;
  if (this != internal_default_instance()) delete _impl_.decimal_tab_;
  if (this != internal_default_instance()) delete _impl_.default_tab_stops_;
  if (this != internal_default_instance()) delete _impl_.paragraph_fill_;
  if (this != internal_default_instance()) delete _impl_.first_line_indent_;
  if (this != internal_default_instance()) delete _impl_.following_paragraph_style_;
  if (this != internal_default_instance()) delete _impl_.hyphenate_;
  if (this != internal_default_instance()) delete _impl_.initial_list_style_;
  if (this != internal_default_instance()) delete _impl_.keep_lines_together_;
  if (this != internal_default_instance()) delete _impl_.keep_with_next_;
  if (this != internal_default_instance()) delete _impl_.left_indent_;
  if (this != internal_default_instance()) delete _impl_.line_spacing_;
  if (this != internal_default_instance()) delete _impl_.outline_level_;
  if (this != internal_default_instance()) delete _impl_.outline_style_type_;
  if (this != internal_default_instance()) delete _impl_.page_break_before_;
  if (this != internal_default_instance()) delete _impl_.paragraph_borders_;
  if (this != internal_default_instance()) delete _impl_.paragraph_rule_offset_;
  if (this != internal_default_instance()) delete _impl_.paragraph_rule_width_;
  if (this != internal_default_instance()) delete _impl_.right_indent_;
  if (this != internal_default_instance()) delete _impl_.space_after_;
  if (this != internal_default_instance()) delete _impl_.space_before_;
  if (this != internal_default_instance()) delete _impl_.paragraph_stroke_;
  if (this != internal_default_instance()) delete _impl_.tabs_;
  if (this != internal_default_instance()) delete _impl_.widow_control_;
  if (this != internal_default_instance()) delete _impl_.show_in_bookmarks_list_;
  if (this != internal_default_instance()) delete _impl_.show_in_t_o_c_navigator_;
}

void ParagraphStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ParagraphStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.ParagraphStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.super_ != nullptr);
      _impl_.super_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.decimal_tab_ != nullptr);
      _impl_.decimal_tab_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.default_tab_stops_ != nullptr);
      _impl_.default_tab_stops_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.paragraph_fill_ != nullptr);
      _impl_.paragraph_fill_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.first_line_indent_ != nullptr);
      _impl_.first_line_indent_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.following_paragraph_style_ != nullptr);
      _impl_.following_paragraph_style_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.hyphenate_ != nullptr);
      _impl_.hyphenate_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.initial_list_style_ != nullptr);
      _impl_.initial_list_style_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.keep_lines_together_ != nullptr);
      _impl_.keep_lines_together_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.keep_with_next_ != nullptr);
      _impl_.keep_with_next_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.left_indent_ != nullptr);
      _impl_.left_indent_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.line_spacing_ != nullptr);
      _impl_.line_spacing_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.outline_level_ != nullptr);
      _impl_.outline_level_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.outline_style_type_ != nullptr);
      _impl_.outline_style_type_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.page_break_before_ != nullptr);
      _impl_.page_break_before_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.paragraph_borders_ != nullptr);
      _impl_.paragraph_borders_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.paragraph_rule_offset_ != nullptr);
      _impl_.paragraph_rule_offset_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.paragraph_rule_width_ != nullptr);
      _impl_.paragraph_rule_width_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.right_indent_ != nullptr);
      _impl_.right_indent_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.space_after_ != nullptr);
      _impl_.space_after_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.space_before_ != nullptr);
      _impl_.space_before_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.paragraph_stroke_ != nullptr);
      _impl_.paragraph_stroke_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.tabs_ != nullptr);
      _impl_.tabs_->Clear();
    }
  }
  if (cached_has_bits & 0x07000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(_impl_.widow_control_ != nullptr);
      _impl_.widow_control_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(_impl_.show_in_bookmarks_list_ != nullptr);
      _impl_.show_in_bookmarks_list_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(_impl_.show_in_t_o_c_navigator_ != nullptr);
      _impl_.show_in_t_o_c_navigator_->Clear();
    }
  }
  if (cached_has_bits & 0xf8000000u) {
    ::memset(&_impl_.alignment_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.first_line_indent_undefined_) -
        reinterpret_cast<char*>(&_impl_.alignment_undefined_)) + sizeof(_impl_.first_line_indent_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.following_paragraph_style_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.outline_level_undefined_) -
        reinterpret_cast<char*>(&_impl_.following_paragraph_style_undefined_)) + sizeof(_impl_.outline_level_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.outline_style_type_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.space_before_undefined_) -
        reinterpret_cast<char*>(&_impl_.outline_style_type_undefined_)) + sizeof(_impl_.space_before_undefined_));
  }
  if (cached_has_bits & 0x001f0000u) {
    ::memset(&_impl_.paragraph_stroke_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.show_in_t_o_c_navigator_undefined_) -
        reinterpret_cast<char*>(&_impl_.paragraph_stroke_undefined_)) + sizeof(_impl_.show_in_t_o_c_navigator_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParagraphStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TSWPSOS.CharacterStylePropertyChangeSetArchive super = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_super(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive alignment = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool alignment_undefined = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_alignment_undefined(&_impl_._has_bits_);
          _impl_.alignment_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive decimal_tab = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_decimal_tab(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool decimal_tab_undefined = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_decimal_tab_undefined(&_impl_._has_bits_);
          _impl_.decimal_tab_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_tab_stops = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_tab_stops(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_tab_stops_undefined = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_default_tab_stops_undefined(&_impl_._has_bits_);
          _impl_.default_tab_stops_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecColorArchive paragraph_fill = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool paragraph_fill_undefined = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_paragraph_fill_undefined(&_impl_._has_bits_);
          _impl_.paragraph_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive first_line_indent = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_first_line_indent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool first_line_indent_undefined = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_first_line_indent_undefined(&_impl_._has_bits_);
          _impl_.first_line_indent_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecParagraphStyleArchive following_paragraph_style = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_following_paragraph_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool following_paragraph_style_undefined = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _Internal::set_has_following_paragraph_style_undefined(&_impl_._has_bits_);
          _impl_.following_paragraph_style_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive hyphenate = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_hyphenate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool hyphenate_undefined = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _Internal::set_has_hyphenate_undefined(&_impl_._has_bits_);
          _impl_.hyphenate_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecListStyleArchive initial_list_style = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_list_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool initial_list_style_undefined = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _Internal::set_has_initial_list_style_undefined(&_impl_._has_bits_);
          _impl_.initial_list_style_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive keep_lines_together = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_keep_lines_together(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool keep_lines_together_undefined = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          _Internal::set_has_keep_lines_together_undefined(&_impl_._has_bits_);
          _impl_.keep_lines_together_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive keep_with_next = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_keep_with_next(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool keep_with_next_undefined = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          _Internal::set_has_keep_with_next_undefined(&_impl_._has_bits_);
          _impl_.keep_with_next_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive left_indent = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_left_indent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool left_indent_undefined = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 184)) {
          _Internal::set_has_left_indent_undefined(&_impl_._has_bits_);
          _impl_.left_indent_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecLineSpacingArchive line_spacing = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_spacing_undefined = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          _Internal::set_has_line_spacing_undefined(&_impl_._has_bits_);
          _impl_.line_spacing_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive outline_level = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_outline_level(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool outline_level_undefined = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 216)) {
          _Internal::set_has_outline_level_undefined(&_impl_._has_bits_);
          _impl_.outline_level_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive outline_style_type = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_outline_style_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool outline_style_type_undefined = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 232)) {
          _Internal::set_has_outline_style_type_undefined(&_impl_._has_bits_);
          _impl_.outline_style_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive page_break_before = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_page_break_before(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool page_break_before_undefined = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          _Internal::set_has_page_break_before_undefined(&_impl_._has_bits_);
          _impl_.page_break_before_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive paragraph_borders = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_borders(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool paragraph_borders_undefined = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_paragraph_borders_undefined(&_impl_._has_bits_);
          _impl_.paragraph_borders_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecRuleOffsetArchive paragraph_rule_offset = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_rule_offset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool paragraph_rule_offset_undefined = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_paragraph_rule_offset_undefined(&_impl_._has_bits_);
          _impl_.paragraph_rule_offset_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive paragraph_rule_width = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_rule_width(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool paragraph_rule_width_undefined = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_paragraph_rule_width_undefined(&_impl_._has_bits_);
          _impl_.paragraph_rule_width_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive right_indent = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_right_indent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool right_indent_undefined = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_right_indent_undefined(&_impl_._has_bits_);
          _impl_.right_indent_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive space_after = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_space_after(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool space_after_undefined = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_space_after_undefined(&_impl_._has_bits_);
          _impl_.space_after_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive space_before = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_space_before(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool space_before_undefined = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_space_before_undefined(&_impl_._has_bits_);
          _impl_.space_before_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive paragraph_stroke = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool paragraph_stroke_undefined = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _Internal::set_has_paragraph_stroke_undefined(&_impl_._has_bits_);
          _impl_.paragraph_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecTabsArchive tabs = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_tabs(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool tabs_undefined = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _Internal::set_has_tabs_undefined(&_impl_._has_bits_);
          _impl_.tabs_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive widow_control = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_widow_control(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool widow_control_undefined = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _Internal::set_has_widow_control_undefined(&_impl_._has_bits_);
          _impl_.widow_control_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive show_in_bookmarks_list = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_show_in_bookmarks_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool show_in_bookmarks_list_undefined = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          _Internal::set_has_show_in_bookmarks_list_undefined(&_impl_._has_bits_);
          _impl_.show_in_bookmarks_list_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive show_in_t_o_c_navigator = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_show_in_t_o_c_navigator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool show_in_t_o_c_navigator_undefined = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          _Internal::set_has_show_in_t_o_c_navigator_undefined(&_impl_._has_bits_);
          _impl_.show_in_t_o_c_navigator_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ParagraphStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.ParagraphStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TSWPSOS.CharacterStylePropertyChangeSetArchive super = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::super(this),
        _Internal::super(this).GetCachedSize(), target, stream);
  }

  // optional .TSSSOS.SpecIntegerArchive alignment = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  // optional bool alignment_undefined = 3;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_alignment_undefined(), target);
  }

  // optional .TSSSOS.SpecStringArchive decimal_tab = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::decimal_tab(this),
        _Internal::decimal_tab(this).GetCachedSize(), target, stream);
  }

  // optional bool decimal_tab_undefined = 5;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_decimal_tab_undefined(), target);
  }

  // optional .TSSSOS.SpecDoubleArchive default_tab_stops = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::default_tab_stops(this),
        _Internal::default_tab_stops(this).GetCachedSize(), target, stream);
  }

  // optional bool default_tab_stops_undefined = 7;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_default_tab_stops_undefined(), target);
  }

  // optional .TSSSOS.SpecColorArchive paragraph_fill = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::paragraph_fill(this),
        _Internal::paragraph_fill(this).GetCachedSize(), target, stream);
  }

  // optional bool paragraph_fill_undefined = 9;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(9, this->_internal_paragraph_fill_undefined(), target);
  }

  // optional .TSSSOS.SpecDoubleArchive first_line_indent = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::first_line_indent(this),
        _Internal::first_line_indent(this).GetCachedSize(), target, stream);
  }

  // optional bool first_line_indent_undefined = 11;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(11, this->_internal_first_line_indent_undefined(), target);
  }

  // optional .TSWPSOS.SpecParagraphStyleArchive following_paragraph_style = 12;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::following_paragraph_style(this),
        _Internal::following_paragraph_style(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool following_paragraph_style_undefined = 13;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(13, this->_internal_following_paragraph_style_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive hyphenate = 14;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::hyphenate(this),
        _Internal::hyphenate(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool hyphenate_undefined = 15;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(15, this->_internal_hyphenate_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecListStyleArchive initial_list_style = 16;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::initial_list_style(this),
        _Internal::initial_list_style(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool initial_list_style_undefined = 17;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(17, this->_internal_initial_list_style_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive keep_lines_together = 18;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(18, _Internal::keep_lines_together(this),
        _Internal::keep_lines_together(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool keep_lines_together_undefined = 19;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(19, this->_internal_keep_lines_together_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive keep_with_next = 20;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, _Internal::keep_with_next(this),
        _Internal::keep_with_next(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool keep_with_next_undefined = 21;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(21, this->_internal_keep_with_next_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive left_indent = 22;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(22, _Internal::left_indent(this),
        _Internal::left_indent(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool left_indent_undefined = 23;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(23, this->_internal_left_indent_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecLineSpacingArchive line_spacing = 24;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(24, _Internal::line_spacing(this),
        _Internal::line_spacing(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool line_spacing_undefined = 25;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(25, this->_internal_line_spacing_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive outline_level = 26;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(26, _Internal::outline_level(this),
        _Internal::outline_level(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool outline_level_undefined = 27;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(27, this->_internal_outline_level_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive outline_style_type = 28;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(28, _Internal::outline_style_type(this),
        _Internal::outline_style_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool outline_style_type_undefined = 29;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(29, this->_internal_outline_style_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive page_break_before = 30;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(30, _Internal::page_break_before(this),
        _Internal::page_break_before(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool page_break_before_undefined = 31;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(31, this->_internal_page_break_before_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive paragraph_borders = 32;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(32, _Internal::paragraph_borders(this),
        _Internal::paragraph_borders(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool paragraph_borders_undefined = 33;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(33, this->_internal_paragraph_borders_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecRuleOffsetArchive paragraph_rule_offset = 34;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(34, _Internal::paragraph_rule_offset(this),
        _Internal::paragraph_rule_offset(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool paragraph_rule_offset_undefined = 35;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(35, this->_internal_paragraph_rule_offset_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive paragraph_rule_width = 36;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(36, _Internal::paragraph_rule_width(this),
        _Internal::paragraph_rule_width(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool paragraph_rule_width_undefined = 37;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(37, this->_internal_paragraph_rule_width_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive right_indent = 38;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(38, _Internal::right_indent(this),
        _Internal::right_indent(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool right_indent_undefined = 39;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(39, this->_internal_right_indent_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive space_after = 40;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(40, _Internal::space_after(this),
        _Internal::space_after(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool space_after_undefined = 41;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(41, this->_internal_space_after_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive space_before = 42;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(42, _Internal::space_before(this),
        _Internal::space_before(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool space_before_undefined = 43;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(43, this->_internal_space_before_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive paragraph_stroke = 44;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(44, _Internal::paragraph_stroke(this),
        _Internal::paragraph_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool paragraph_stroke_undefined = 45;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(45, this->_internal_paragraph_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSWPSOS.SpecTabsArchive tabs = 46;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(46, _Internal::tabs(this),
        _Internal::tabs(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool tabs_undefined = 47;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(47, this->_internal_tabs_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive widow_control = 48;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(48, _Internal::widow_control(this),
        _Internal::widow_control(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool widow_control_undefined = 49;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(49, this->_internal_widow_control_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive show_in_bookmarks_list = 50;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(50, _Internal::show_in_bookmarks_list(this),
        _Internal::show_in_bookmarks_list(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool show_in_bookmarks_list_undefined = 51;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(51, this->_internal_show_in_bookmarks_list_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive show_in_t_o_c_navigator = 52;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(52, _Internal::show_in_t_o_c_navigator(this),
        _Internal::show_in_t_o_c_navigator(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool show_in_t_o_c_navigator_undefined = 53;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(53, this->_internal_show_in_t_o_c_navigator_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.ParagraphStylePropertyChangeSetArchive)
  return target;
}

size_t ParagraphStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.ParagraphStylePropertyChangeSetArchive)
  size_t total_size = 0;

  // required .TSWPSOS.CharacterStylePropertyChangeSetArchive super = 1;
  if (_internal_has_super()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.super_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000feu) {
    // optional .TSSSOS.SpecIntegerArchive alignment = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

    // optional .TSSSOS.SpecStringArchive decimal_tab = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.decimal_tab_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_tab_stops = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_tab_stops_);
    }

    // optional .TSSSOS.SpecColorArchive paragraph_fill = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.paragraph_fill_);
    }

    // optional .TSSSOS.SpecDoubleArchive first_line_indent = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.first_line_indent_);
    }

    // optional .TSWPSOS.SpecParagraphStyleArchive following_paragraph_style = 12;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.following_paragraph_style_);
    }

    // optional .TSSSOS.SpecBoolArchive hyphenate = 14;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.hyphenate_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSWPSOS.SpecListStyleArchive initial_list_style = 16;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.initial_list_style_);
    }

    // optional .TSSSOS.SpecBoolArchive keep_lines_together = 18;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.keep_lines_together_);
    }

    // optional .TSSSOS.SpecBoolArchive keep_with_next = 20;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.keep_with_next_);
    }

    // optional .TSSSOS.SpecDoubleArchive left_indent = 22;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.left_indent_);
    }

    // optional .TSWPSOS.SpecLineSpacingArchive line_spacing = 24;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_spacing_);
    }

    // optional .TSSSOS.SpecIntegerArchive outline_level = 26;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.outline_level_);
    }

    // optional .TSSSOS.SpecIntegerArchive outline_style_type = 28;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.outline_style_type_);
    }

    // optional .TSSSOS.SpecBoolArchive page_break_before = 30;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.page_break_before_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecIntegerArchive paragraph_borders = 32;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.paragraph_borders_);
    }

    // optional .TSWPSOS.SpecRuleOffsetArchive paragraph_rule_offset = 34;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.paragraph_rule_offset_);
    }

    // optional .TSSSOS.SpecDoubleArchive paragraph_rule_width = 36;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.paragraph_rule_width_);
    }

    // optional .TSSSOS.SpecDoubleArchive right_indent = 38;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.right_indent_);
    }

    // optional .TSSSOS.SpecDoubleArchive space_after = 40;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.space_after_);
    }

    // optional .TSSSOS.SpecDoubleArchive space_before = 42;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.space_before_);
    }

    // optional .TSDSOS.SpecStrokeArchive paragraph_stroke = 44;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.paragraph_stroke_);
    }

    // optional .TSWPSOS.SpecTabsArchive tabs = 46;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tabs_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecIntegerArchive widow_control = 48;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.widow_control_);
    }

    // optional .TSSSOS.SpecBoolArchive show_in_bookmarks_list = 50;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.show_in_bookmarks_list_);
    }

    // optional .TSSSOS.SpecBoolArchive show_in_t_o_c_navigator = 52;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.show_in_t_o_c_navigator_);
    }

    // optional bool alignment_undefined = 3;
    if (cached_has_bits & 0x08000000u) {
      total_size += 1 + 1;
    }

    // optional bool decimal_tab_undefined = 5;
    if (cached_has_bits & 0x10000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_tab_stops_undefined = 7;
    if (cached_has_bits & 0x20000000u) {
      total_size += 1 + 1;
    }

    // optional bool paragraph_fill_undefined = 9;
    if (cached_has_bits & 0x40000000u) {
      total_size += 1 + 1;
    }

    // optional bool first_line_indent_undefined = 11;
    if (cached_has_bits & 0x80000000u) {
      total_size += 1 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool following_paragraph_style_undefined = 13;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool hyphenate_undefined = 15;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool initial_list_style_undefined = 17;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool keep_lines_together_undefined = 19;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool keep_with_next_undefined = 21;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool left_indent_undefined = 23;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool line_spacing_undefined = 25;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool outline_level_undefined = 27;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool outline_style_type_undefined = 29;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool page_break_before_undefined = 31;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool paragraph_borders_undefined = 33;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool paragraph_rule_offset_undefined = 35;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool paragraph_rule_width_undefined = 37;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool right_indent_undefined = 39;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool space_after_undefined = 41;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool space_before_undefined = 43;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x001f0000u) {
    // optional bool paragraph_stroke_undefined = 45;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool tabs_undefined = 47;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool widow_control_undefined = 49;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool show_in_bookmarks_list_undefined = 51;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool show_in_t_o_c_navigator_undefined = 53;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParagraphStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ParagraphStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParagraphStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ParagraphStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ParagraphStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ParagraphStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.ParagraphStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_super()->::TSWPSOS::CharacterStylePropertyChangeSetArchive::MergeFrom(
          from._internal_super());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_alignment()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_alignment());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_decimal_tab()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_decimal_tab());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_default_tab_stops()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_tab_stops());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_paragraph_fill()->::TSSSOS::SpecColorArchive::MergeFrom(
          from._internal_paragraph_fill());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_first_line_indent()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_first_line_indent());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_following_paragraph_style()->::TSWPSOS::SpecParagraphStyleArchive::MergeFrom(
          from._internal_following_paragraph_style());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_hyphenate()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_hyphenate());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_initial_list_style()->::TSWPSOS::SpecListStyleArchive::MergeFrom(
          from._internal_initial_list_style());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_keep_lines_together()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_keep_lines_together());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_keep_with_next()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_keep_with_next());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_left_indent()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_left_indent());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_line_spacing()->::TSWPSOS::SpecLineSpacingArchive::MergeFrom(
          from._internal_line_spacing());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_outline_level()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_outline_level());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_outline_style_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_outline_style_type());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_page_break_before()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_page_break_before());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_paragraph_borders()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_paragraph_borders());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_paragraph_rule_offset()->::TSWPSOS::SpecRuleOffsetArchive::MergeFrom(
          from._internal_paragraph_rule_offset());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_paragraph_rule_width()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_paragraph_rule_width());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_right_indent()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_right_indent());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_space_after()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_space_after());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_space_before()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_space_before());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_paragraph_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_paragraph_stroke());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_tabs()->::TSWPSOS::SpecTabsArchive::MergeFrom(
          from._internal_tabs());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_widow_control()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_widow_control());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_show_in_bookmarks_list()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_show_in_bookmarks_list());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_mutable_show_in_t_o_c_navigator()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_show_in_t_o_c_navigator());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.alignment_undefined_ = from._impl_.alignment_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.decimal_tab_undefined_ = from._impl_.decimal_tab_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.default_tab_stops_undefined_ = from._impl_.default_tab_stops_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.paragraph_fill_undefined_ = from._impl_.paragraph_fill_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.first_line_indent_undefined_ = from._impl_.first_line_indent_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.following_paragraph_style_undefined_ = from._impl_.following_paragraph_style_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.hyphenate_undefined_ = from._impl_.hyphenate_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.initial_list_style_undefined_ = from._impl_.initial_list_style_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.keep_lines_together_undefined_ = from._impl_.keep_lines_together_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.keep_with_next_undefined_ = from._impl_.keep_with_next_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.left_indent_undefined_ = from._impl_.left_indent_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.line_spacing_undefined_ = from._impl_.line_spacing_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.outline_level_undefined_ = from._impl_.outline_level_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.outline_style_type_undefined_ = from._impl_.outline_style_type_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.page_break_before_undefined_ = from._impl_.page_break_before_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.paragraph_borders_undefined_ = from._impl_.paragraph_borders_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.paragraph_rule_offset_undefined_ = from._impl_.paragraph_rule_offset_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.paragraph_rule_width_undefined_ = from._impl_.paragraph_rule_width_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.right_indent_undefined_ = from._impl_.right_indent_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.space_after_undefined_ = from._impl_.space_after_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.space_before_undefined_ = from._impl_.space_before_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x001f0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.paragraph_stroke_undefined_ = from._impl_.paragraph_stroke_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.tabs_undefined_ = from._impl_.tabs_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.widow_control_undefined_ = from._impl_.widow_control_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.show_in_bookmarks_list_undefined_ = from._impl_.show_in_bookmarks_list_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.show_in_t_o_c_navigator_undefined_ = from._impl_.show_in_t_o_c_navigator_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParagraphStylePropertyChangeSetArchive::CopyFrom(const ParagraphStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.ParagraphStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParagraphStylePropertyChangeSetArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_super()) {
    if (!_impl_.super_->IsInitialized()) return false;
  }
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  if (_internal_has_decimal_tab()) {
    if (!_impl_.decimal_tab_->IsInitialized()) return false;
  }
  if (_internal_has_default_tab_stops()) {
    if (!_impl_.default_tab_stops_->IsInitialized()) return false;
  }
  if (_internal_has_paragraph_fill()) {
    if (!_impl_.paragraph_fill_->IsInitialized()) return false;
  }
  if (_internal_has_first_line_indent()) {
    if (!_impl_.first_line_indent_->IsInitialized()) return false;
  }
  if (_internal_has_following_paragraph_style()) {
    if (!_impl_.following_paragraph_style_->IsInitialized()) return false;
  }
  if (_internal_has_hyphenate()) {
    if (!_impl_.hyphenate_->IsInitialized()) return false;
  }
  if (_internal_has_initial_list_style()) {
    if (!_impl_.initial_list_style_->IsInitialized()) return false;
  }
  if (_internal_has_keep_lines_together()) {
    if (!_impl_.keep_lines_together_->IsInitialized()) return false;
  }
  if (_internal_has_keep_with_next()) {
    if (!_impl_.keep_with_next_->IsInitialized()) return false;
  }
  if (_internal_has_left_indent()) {
    if (!_impl_.left_indent_->IsInitialized()) return false;
  }
  if (_internal_has_line_spacing()) {
    if (!_impl_.line_spacing_->IsInitialized()) return false;
  }
  if (_internal_has_outline_level()) {
    if (!_impl_.outline_level_->IsInitialized()) return false;
  }
  if (_internal_has_outline_style_type()) {
    if (!_impl_.outline_style_type_->IsInitialized()) return false;
  }
  if (_internal_has_page_break_before()) {
    if (!_impl_.page_break_before_->IsInitialized()) return false;
  }
  if (_internal_has_paragraph_borders()) {
    if (!_impl_.paragraph_borders_->IsInitialized()) return false;
  }
  if (_internal_has_paragraph_rule_offset()) {
    if (!_impl_.paragraph_rule_offset_->IsInitialized()) return false;
  }
  if (_internal_has_paragraph_rule_width()) {
    if (!_impl_.paragraph_rule_width_->IsInitialized()) return false;
  }
  if (_internal_has_right_indent()) {
    if (!_impl_.right_indent_->IsInitialized()) return false;
  }
  if (_internal_has_space_after()) {
    if (!_impl_.space_after_->IsInitialized()) return false;
  }
  if (_internal_has_space_before()) {
    if (!_impl_.space_before_->IsInitialized()) return false;
  }
  if (_internal_has_paragraph_stroke()) {
    if (!_impl_.paragraph_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_tabs()) {
    if (!_impl_.tabs_->IsInitialized()) return false;
  }
  if (_internal_has_widow_control()) {
    if (!_impl_.widow_control_->IsInitialized()) return false;
  }
  if (_internal_has_show_in_bookmarks_list()) {
    if (!_impl_.show_in_bookmarks_list_->IsInitialized()) return false;
  }
  if (_internal_has_show_in_t_o_c_navigator()) {
    if (!_impl_.show_in_t_o_c_navigator_->IsInitialized()) return false;
  }
  return true;
}

void ParagraphStylePropertyChangeSetArchive::InternalSwap(ParagraphStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParagraphStylePropertyChangeSetArchive, _impl_.show_in_t_o_c_navigator_undefined_)
      + sizeof(ParagraphStylePropertyChangeSetArchive::_impl_.show_in_t_o_c_navigator_undefined_)
      - PROTOBUF_FIELD_OFFSET(ParagraphStylePropertyChangeSetArchive, _impl_.super_)>(
          reinterpret_cast<char*>(&_impl_.super_),
          reinterpret_cast<char*>(&other->_impl_.super_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ParagraphStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[40]);
}

// ===================================================================

class ShapeStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ShapeStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSDSOS::BaseShapeStylePropertyChangeSetArchive& super(const ShapeStylePropertyChangeSetArchive* msg);
  static void set_has_super(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TSWPSOS::SpecColumnsArchive& columns(const ShapeStylePropertyChangeSetArchive* msg);
  static void set_has_columns(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_columns_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TSWPSOS::SpecPaddingArchive& padding(const ShapeStylePropertyChangeSetArchive* msg);
  static void set_has_padding(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_padding_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& shrink_text_to_fit(const ShapeStylePropertyChangeSetArchive* msg);
  static void set_has_shrink_text_to_fit(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_shrink_text_to_fit_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::TSSSOS::SpecIntegerArchive& vertical_alignment(const ShapeStylePropertyChangeSetArchive* msg);
  static void set_has_vertical_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_vertical_alignment_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::TSSSOS::SpecBoolArchive& vertical_text(const ShapeStylePropertyChangeSetArchive* msg);
  static void set_has_vertical_text(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_vertical_text_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::TSWPSOS::SpecParagraphStyleArchive& default_paragraph_style(const ShapeStylePropertyChangeSetArchive* msg);
  static void set_has_default_paragraph_style(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_default_paragraph_style_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TSDSOS::BaseShapeStylePropertyChangeSetArchive&
ShapeStylePropertyChangeSetArchive::_Internal::super(const ShapeStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.super_;
}
const ::TSWPSOS::SpecColumnsArchive&
ShapeStylePropertyChangeSetArchive::_Internal::columns(const ShapeStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.columns_;
}
const ::TSWPSOS::SpecPaddingArchive&
ShapeStylePropertyChangeSetArchive::_Internal::padding(const ShapeStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.padding_;
}
const ::TSSSOS::SpecBoolArchive&
ShapeStylePropertyChangeSetArchive::_Internal::shrink_text_to_fit(const ShapeStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.shrink_text_to_fit_;
}
const ::TSSSOS::SpecIntegerArchive&
ShapeStylePropertyChangeSetArchive::_Internal::vertical_alignment(const ShapeStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.vertical_alignment_;
}
const ::TSSSOS::SpecBoolArchive&
ShapeStylePropertyChangeSetArchive::_Internal::vertical_text(const ShapeStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.vertical_text_;
}
const ::TSWPSOS::SpecParagraphStyleArchive&
ShapeStylePropertyChangeSetArchive::_Internal::default_paragraph_style(const ShapeStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_paragraph_style_;
}
void ShapeStylePropertyChangeSetArchive::clear_super() {
  if (_impl_.super_ != nullptr) _impl_.super_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ShapeStylePropertyChangeSetArchive::clear_shrink_text_to_fit() {
  if (_impl_.shrink_text_to_fit_ != nullptr) _impl_.shrink_text_to_fit_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void ShapeStylePropertyChangeSetArchive::clear_vertical_alignment() {
  if (_impl_.vertical_alignment_ != nullptr) _impl_.vertical_alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void ShapeStylePropertyChangeSetArchive::clear_vertical_text() {
  if (_impl_.vertical_text_ != nullptr) _impl_.vertical_text_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
ShapeStylePropertyChangeSetArchive::ShapeStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.ShapeStylePropertyChangeSetArchive)
}
ShapeStylePropertyChangeSetArchive::ShapeStylePropertyChangeSetArchive(const ShapeStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShapeStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.super_){nullptr}
    , decltype(_impl_.columns_){nullptr}
    , decltype(_impl_.padding_){nullptr}
    , decltype(_impl_.shrink_text_to_fit_){nullptr}
    , decltype(_impl_.vertical_alignment_){nullptr}
    , decltype(_impl_.vertical_text_){nullptr}
    , decltype(_impl_.default_paragraph_style_){nullptr}
    , decltype(_impl_.columns_undefined_){}
    , decltype(_impl_.padding_undefined_){}
    , decltype(_impl_.shrink_text_to_fit_undefined_){}
    , decltype(_impl_.vertical_alignment_undefined_){}
    , decltype(_impl_.vertical_text_undefined_){}
    , decltype(_impl_.default_paragraph_style_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_super()) {
    _this->_impl_.super_ = new ::TSDSOS::BaseShapeStylePropertyChangeSetArchive(*from._impl_.super_);
  }
  if (from._internal_has_columns()) {
    _this->_impl_.columns_ = new ::TSWPSOS::SpecColumnsArchive(*from._impl_.columns_);
  }
  if (from._internal_has_padding()) {
    _this->_impl_.padding_ = new ::TSWPSOS::SpecPaddingArchive(*from._impl_.padding_);
  }
  if (from._internal_has_shrink_text_to_fit()) {
    _this->_impl_.shrink_text_to_fit_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.shrink_text_to_fit_);
  }
  if (from._internal_has_vertical_alignment()) {
    _this->_impl_.vertical_alignment_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.vertical_alignment_);
  }
  if (from._internal_has_vertical_text()) {
    _this->_impl_.vertical_text_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.vertical_text_);
  }
  if (from._internal_has_default_paragraph_style()) {
    _this->_impl_.default_paragraph_style_ = new ::TSWPSOS::SpecParagraphStyleArchive(*from._impl_.default_paragraph_style_);
  }
  ::memcpy(&_impl_.columns_undefined_, &from._impl_.columns_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.default_paragraph_style_undefined_) -
    reinterpret_cast<char*>(&_impl_.columns_undefined_)) + sizeof(_impl_.default_paragraph_style_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.ShapeStylePropertyChangeSetArchive)
}

inline void ShapeStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.super_){nullptr}
    , decltype(_impl_.columns_){nullptr}
    , decltype(_impl_.padding_){nullptr}
    , decltype(_impl_.shrink_text_to_fit_){nullptr}
    , decltype(_impl_.vertical_alignment_){nullptr}
    , decltype(_impl_.vertical_text_){nullptr}
    , decltype(_impl_.default_paragraph_style_){nullptr}
    , decltype(_impl_.columns_undefined_){false}
    , decltype(_impl_.padding_undefined_){false}
    , decltype(_impl_.shrink_text_to_fit_undefined_){false}
    , decltype(_impl_.vertical_alignment_undefined_){false}
    , decltype(_impl_.vertical_text_undefined_){false}
    , decltype(_impl_.default_paragraph_style_undefined_){false}
  };
}

ShapeStylePropertyChangeSetArchive::~ShapeStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.ShapeStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShapeStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.super_;
  if (this != internal_default_instance()) delete _impl_.columns_;
  if (this != internal_default_instance()) delete _impl_.padding_;
  if (this != internal_default_instance()) delete _impl_.shrink_text_to_fit_;
  if (this != internal_default_instance()) delete _impl_.vertical_alignment_;
  if (this != internal_default_instance()) delete _impl_.vertical_text_;
  if (this != internal_default_instance()) delete _impl_.default_paragraph_style_;
}

void ShapeStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShapeStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.ShapeStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.super_ != nullptr);
      _impl_.super_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.columns_ != nullptr);
      _impl_.columns_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.padding_ != nullptr);
      _impl_.padding_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.shrink_text_to_fit_ != nullptr);
      _impl_.shrink_text_to_fit_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.vertical_alignment_ != nullptr);
      _impl_.vertical_alignment_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.vertical_text_ != nullptr);
      _impl_.vertical_text_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.default_paragraph_style_ != nullptr);
      _impl_.default_paragraph_style_->Clear();
    }
  }
  _impl_.columns_undefined_ = false;
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&_impl_.padding_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_paragraph_style_undefined_) -
        reinterpret_cast<char*>(&_impl_.padding_undefined_)) + sizeof(_impl_.default_paragraph_style_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShapeStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TSDSOS.BaseShapeStylePropertyChangeSetArchive super = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_super(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecColumnsArchive columns = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_columns(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool columns_undefined = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_columns_undefined(&has_bits);
          _impl_.columns_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecPaddingArchive padding = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_padding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool padding_undefined = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_padding_undefined(&has_bits);
          _impl_.padding_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive shrink_text_to_fit = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_shrink_text_to_fit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool shrink_text_to_fit_undefined = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_shrink_text_to_fit_undefined(&has_bits);
          _impl_.shrink_text_to_fit_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive vertical_alignment = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_vertical_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool vertical_alignment_undefined = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_vertical_alignment_undefined(&has_bits);
          _impl_.vertical_alignment_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive vertical_text = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_vertical_text(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool vertical_text_undefined = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_vertical_text_undefined(&has_bits);
          _impl_.vertical_text_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecParagraphStyleArchive default_paragraph_style = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_paragraph_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_paragraph_style_undefined = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _Internal::set_has_default_paragraph_style_undefined(&has_bits);
          _impl_.default_paragraph_style_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShapeStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.ShapeStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TSDSOS.BaseShapeStylePropertyChangeSetArchive super = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::super(this),
        _Internal::super(this).GetCachedSize(), target, stream);
  }

  // optional .TSWPSOS.SpecColumnsArchive columns = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::columns(this),
        _Internal::columns(this).GetCachedSize(), target, stream);
  }

  // optional bool columns_undefined = 3;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_columns_undefined(), target);
  }

  // optional .TSWPSOS.SpecPaddingArchive padding = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::padding(this),
        _Internal::padding(this).GetCachedSize(), target, stream);
  }

  // optional bool padding_undefined = 5;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_padding_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive shrink_text_to_fit = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::shrink_text_to_fit(this),
        _Internal::shrink_text_to_fit(this).GetCachedSize(), target, stream);
  }

  // optional bool shrink_text_to_fit_undefined = 7;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_shrink_text_to_fit_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive vertical_alignment = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::vertical_alignment(this),
        _Internal::vertical_alignment(this).GetCachedSize(), target, stream);
  }

  // optional bool vertical_alignment_undefined = 9;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(9, this->_internal_vertical_alignment_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive vertical_text = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::vertical_text(this),
        _Internal::vertical_text(this).GetCachedSize(), target, stream);
  }

  // optional bool vertical_text_undefined = 11;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(11, this->_internal_vertical_text_undefined(), target);
  }

  // optional .TSWPSOS.SpecParagraphStyleArchive default_paragraph_style = 12;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::default_paragraph_style(this),
        _Internal::default_paragraph_style(this).GetCachedSize(), target, stream);
  }

  // optional bool default_paragraph_style_undefined = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(13, this->_internal_default_paragraph_style_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.ShapeStylePropertyChangeSetArchive)
  return target;
}

size_t ShapeStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.ShapeStylePropertyChangeSetArchive)
  size_t total_size = 0;

  // required .TSDSOS.BaseShapeStylePropertyChangeSetArchive super = 1;
  if (_internal_has_super()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.super_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000feu) {
    // optional .TSWPSOS.SpecColumnsArchive columns = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.columns_);
    }

    // optional .TSWPSOS.SpecPaddingArchive padding = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.padding_);
    }

    // optional .TSSSOS.SpecBoolArchive shrink_text_to_fit = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.shrink_text_to_fit_);
    }

    // optional .TSSSOS.SpecIntegerArchive vertical_alignment = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.vertical_alignment_);
    }

    // optional .TSSSOS.SpecBoolArchive vertical_text = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.vertical_text_);
    }

    // optional .TSWPSOS.SpecParagraphStyleArchive default_paragraph_style = 12;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_paragraph_style_);
    }

    // optional bool columns_undefined = 3;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional bool padding_undefined = 5;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional bool shrink_text_to_fit_undefined = 7;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool vertical_alignment_undefined = 9;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool vertical_text_undefined = 11;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool default_paragraph_style_undefined = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShapeStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShapeStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShapeStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ShapeStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShapeStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ShapeStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.ShapeStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_super()->::TSDSOS::BaseShapeStylePropertyChangeSetArchive::MergeFrom(
          from._internal_super());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_columns()->::TSWPSOS::SpecColumnsArchive::MergeFrom(
          from._internal_columns());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_padding()->::TSWPSOS::SpecPaddingArchive::MergeFrom(
          from._internal_padding());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_shrink_text_to_fit()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_shrink_text_to_fit());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_vertical_alignment()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_vertical_alignment());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_vertical_text()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_vertical_text());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_default_paragraph_style()->::TSWPSOS::SpecParagraphStyleArchive::MergeFrom(
          from._internal_default_paragraph_style());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.columns_undefined_ = from._impl_.columns_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.padding_undefined_ = from._impl_.padding_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.shrink_text_to_fit_undefined_ = from._impl_.shrink_text_to_fit_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.vertical_alignment_undefined_ = from._impl_.vertical_alignment_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.vertical_text_undefined_ = from._impl_.vertical_text_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.default_paragraph_style_undefined_ = from._impl_.default_paragraph_style_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShapeStylePropertyChangeSetArchive::CopyFrom(const ShapeStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.ShapeStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShapeStylePropertyChangeSetArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_super()) {
    if (!_impl_.super_->IsInitialized()) return false;
  }
  if (_internal_has_columns()) {
    if (!_impl_.columns_->IsInitialized()) return false;
  }
  if (_internal_has_padding()) {
    if (!_impl_.padding_->IsInitialized()) return false;
  }
  if (_internal_has_shrink_text_to_fit()) {
    if (!_impl_.shrink_text_to_fit_->IsInitialized()) return false;
  }
  if (_internal_has_vertical_alignment()) {
    if (!_impl_.vertical_alignment_->IsInitialized()) return false;
  }
  if (_internal_has_vertical_text()) {
    if (!_impl_.vertical_text_->IsInitialized()) return false;
  }
  if (_internal_has_default_paragraph_style()) {
    if (!_impl_.default_paragraph_style_->IsInitialized()) return false;
  }
  return true;
}

void ShapeStylePropertyChangeSetArchive::InternalSwap(ShapeStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ShapeStylePropertyChangeSetArchive, _impl_.default_paragraph_style_undefined_)
      + sizeof(ShapeStylePropertyChangeSetArchive::_impl_.default_paragraph_style_undefined_)
      - PROTOBUF_FIELD_OFFSET(ShapeStylePropertyChangeSetArchive, _impl_.super_)>(
          reinterpret_cast<char*>(&_impl_.super_),
          reinterpret_cast<char*>(&other->_impl_.super_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ShapeStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[41]);
}

// ===================================================================

class TOCEntryStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<TOCEntryStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSWPSOS::ParagraphStylePropertyChangeSetArchive& super(const TOCEntryStylePropertyChangeSetArchive* msg);
  static void set_has_super(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TSSSOS::SpecBoolArchive& toc_show_page_number(const TOCEntryStylePropertyChangeSetArchive* msg);
  static void set_has_toc_show_page_number(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_toc_show_page_number_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TSWPSOS::SpecCharacterStyleArchive& toc_page_number_style(const TOCEntryStylePropertyChangeSetArchive* msg);
  static void set_has_toc_page_number_style(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_toc_page_number_style_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TSWPSOS::ParagraphStylePropertyChangeSetArchive&
TOCEntryStylePropertyChangeSetArchive::_Internal::super(const TOCEntryStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.super_;
}
const ::TSSSOS::SpecBoolArchive&
TOCEntryStylePropertyChangeSetArchive::_Internal::toc_show_page_number(const TOCEntryStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.toc_show_page_number_;
}
const ::TSWPSOS::SpecCharacterStyleArchive&
TOCEntryStylePropertyChangeSetArchive::_Internal::toc_page_number_style(const TOCEntryStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.toc_page_number_style_;
}
void TOCEntryStylePropertyChangeSetArchive::clear_toc_show_page_number() {
  if (_impl_.toc_show_page_number_ != nullptr) _impl_.toc_show_page_number_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TOCEntryStylePropertyChangeSetArchive::TOCEntryStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.TOCEntryStylePropertyChangeSetArchive)
}
TOCEntryStylePropertyChangeSetArchive::TOCEntryStylePropertyChangeSetArchive(const TOCEntryStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TOCEntryStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.super_){nullptr}
    , decltype(_impl_.toc_show_page_number_){nullptr}
    , decltype(_impl_.toc_page_number_style_){nullptr}
    , decltype(_impl_.toc_show_page_number_undefined_){}
    , decltype(_impl_.toc_page_number_style_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_super()) {
    _this->_impl_.super_ = new ::TSWPSOS::ParagraphStylePropertyChangeSetArchive(*from._impl_.super_);
  }
  if (from._internal_has_toc_show_page_number()) {
    _this->_impl_.toc_show_page_number_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.toc_show_page_number_);
  }
  if (from._internal_has_toc_page_number_style()) {
    _this->_impl_.toc_page_number_style_ = new ::TSWPSOS::SpecCharacterStyleArchive(*from._impl_.toc_page_number_style_);
  }
  ::memcpy(&_impl_.toc_show_page_number_undefined_, &from._impl_.toc_show_page_number_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.toc_page_number_style_undefined_) -
    reinterpret_cast<char*>(&_impl_.toc_show_page_number_undefined_)) + sizeof(_impl_.toc_page_number_style_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.TOCEntryStylePropertyChangeSetArchive)
}

inline void TOCEntryStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.super_){nullptr}
    , decltype(_impl_.toc_show_page_number_){nullptr}
    , decltype(_impl_.toc_page_number_style_){nullptr}
    , decltype(_impl_.toc_show_page_number_undefined_){false}
    , decltype(_impl_.toc_page_number_style_undefined_){false}
  };
}

TOCEntryStylePropertyChangeSetArchive::~TOCEntryStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.TOCEntryStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TOCEntryStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.super_;
  if (this != internal_default_instance()) delete _impl_.toc_show_page_number_;
  if (this != internal_default_instance()) delete _impl_.toc_page_number_style_;
}

void TOCEntryStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TOCEntryStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.TOCEntryStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.super_ != nullptr);
      _impl_.super_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.toc_show_page_number_ != nullptr);
      _impl_.toc_show_page_number_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.toc_page_number_style_ != nullptr);
      _impl_.toc_page_number_style_->Clear();
    }
  }
  ::memset(&_impl_.toc_show_page_number_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.toc_page_number_style_undefined_) -
      reinterpret_cast<char*>(&_impl_.toc_show_page_number_undefined_)) + sizeof(_impl_.toc_page_number_style_undefined_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TOCEntryStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TSWPSOS.ParagraphStylePropertyChangeSetArchive super = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_super(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive toc_show_page_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_toc_show_page_number(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool toc_show_page_number_undefined = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_toc_show_page_number_undefined(&has_bits);
          _impl_.toc_show_page_number_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.SpecCharacterStyleArchive toc_page_number_style = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_toc_page_number_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool toc_page_number_style_undefined = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_toc_page_number_style_undefined(&has_bits);
          _impl_.toc_page_number_style_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TOCEntryStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.TOCEntryStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TSWPSOS.ParagraphStylePropertyChangeSetArchive super = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::super(this),
        _Internal::super(this).GetCachedSize(), target, stream);
  }

  // optional .TSSSOS.SpecBoolArchive toc_show_page_number = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::toc_show_page_number(this),
        _Internal::toc_show_page_number(this).GetCachedSize(), target, stream);
  }

  // optional bool toc_show_page_number_undefined = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_toc_show_page_number_undefined(), target);
  }

  // optional .TSWPSOS.SpecCharacterStyleArchive toc_page_number_style = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::toc_page_number_style(this),
        _Internal::toc_page_number_style(this).GetCachedSize(), target, stream);
  }

  // optional bool toc_page_number_style_undefined = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_toc_page_number_style_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.TOCEntryStylePropertyChangeSetArchive)
  return target;
}

size_t TOCEntryStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.TOCEntryStylePropertyChangeSetArchive)
  size_t total_size = 0;

  // required .TSWPSOS.ParagraphStylePropertyChangeSetArchive super = 1;
  if (_internal_has_super()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.super_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001eu) {
    // optional .TSSSOS.SpecBoolArchive toc_show_page_number = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.toc_show_page_number_);
    }

    // optional .TSWPSOS.SpecCharacterStyleArchive toc_page_number_style = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.toc_page_number_style_);
    }

    // optional bool toc_show_page_number_undefined = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool toc_page_number_style_undefined = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TOCEntryStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TOCEntryStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TOCEntryStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void TOCEntryStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TOCEntryStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const TOCEntryStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.TOCEntryStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_super()->::TSWPSOS::ParagraphStylePropertyChangeSetArchive::MergeFrom(
          from._internal_super());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_toc_show_page_number()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_toc_show_page_number());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_toc_page_number_style()->::TSWPSOS::SpecCharacterStyleArchive::MergeFrom(
          from._internal_toc_page_number_style());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.toc_show_page_number_undefined_ = from._impl_.toc_show_page_number_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.toc_page_number_style_undefined_ = from._impl_.toc_page_number_style_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TOCEntryStylePropertyChangeSetArchive::CopyFrom(const TOCEntryStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.TOCEntryStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TOCEntryStylePropertyChangeSetArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_super()) {
    if (!_impl_.super_->IsInitialized()) return false;
  }
  if (_internal_has_toc_show_page_number()) {
    if (!_impl_.toc_show_page_number_->IsInitialized()) return false;
  }
  if (_internal_has_toc_page_number_style()) {
    if (!_impl_.toc_page_number_style_->IsInitialized()) return false;
  }
  return true;
}

void TOCEntryStylePropertyChangeSetArchive::InternalSwap(TOCEntryStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TOCEntryStylePropertyChangeSetArchive, _impl_.toc_page_number_style_undefined_)
      + sizeof(TOCEntryStylePropertyChangeSetArchive::_impl_.toc_page_number_style_undefined_)
      - PROTOBUF_FIELD_OFFSET(TOCEntryStylePropertyChangeSetArchive, _impl_.super_)>(
          reinterpret_cast<char*>(&_impl_.super_),
          reinterpret_cast<char*>(&other->_impl_.super_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TOCEntryStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[42]);
}

// ===================================================================

class StyleDiffArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<StyleDiffArchive>()._impl_._has_bits_);
  static const ::TSP::Reference& style(const StyleDiffArchive* msg);
  static void set_has_style(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TSWPSOS::CharacterStylePropertyChangeSetArchive& character_change_set(const StyleDiffArchive* msg);
  static void set_has_character_change_set(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TSWPSOS::ParagraphStylePropertyChangeSetArchive& paragraph_change_set(const StyleDiffArchive* msg);
  static void set_has_paragraph_change_set(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TSWPSOS::ShapeStylePropertyChangeSetArchive& shape_change_set(const StyleDiffArchive* msg);
  static void set_has_shape_change_set(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::TSP::Reference&
StyleDiffArchive::_Internal::style(const StyleDiffArchive* msg) {
  return *msg->_impl_.style_;
}
const ::TSWPSOS::CharacterStylePropertyChangeSetArchive&
StyleDiffArchive::_Internal::character_change_set(const StyleDiffArchive* msg) {
  return *msg->_impl_.character_change_set_;
}
const ::TSWPSOS::ParagraphStylePropertyChangeSetArchive&
StyleDiffArchive::_Internal::paragraph_change_set(const StyleDiffArchive* msg) {
  return *msg->_impl_.paragraph_change_set_;
}
const ::TSWPSOS::ShapeStylePropertyChangeSetArchive&
StyleDiffArchive::_Internal::shape_change_set(const StyleDiffArchive* msg) {
  return *msg->_impl_.shape_change_set_;
}
void StyleDiffArchive::clear_style() {
  if (_impl_.style_ != nullptr) _impl_.style_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StyleDiffArchive::StyleDiffArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSWPSOS.StyleDiffArchive)
}
StyleDiffArchive::StyleDiffArchive(const StyleDiffArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StyleDiffArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.style_){nullptr}
    , decltype(_impl_.character_change_set_){nullptr}
    , decltype(_impl_.paragraph_change_set_){nullptr}
    , decltype(_impl_.shape_change_set_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_style()) {
    _this->_impl_.style_ = new ::TSP::Reference(*from._impl_.style_);
  }
  if (from._internal_has_character_change_set()) {
    _this->_impl_.character_change_set_ = new ::TSWPSOS::CharacterStylePropertyChangeSetArchive(*from._impl_.character_change_set_);
  }
  if (from._internal_has_paragraph_change_set()) {
    _this->_impl_.paragraph_change_set_ = new ::TSWPSOS::ParagraphStylePropertyChangeSetArchive(*from._impl_.paragraph_change_set_);
  }
  if (from._internal_has_shape_change_set()) {
    _this->_impl_.shape_change_set_ = new ::TSWPSOS::ShapeStylePropertyChangeSetArchive(*from._impl_.shape_change_set_);
  }
  // @@protoc_insertion_point(copy_constructor:TSWPSOS.StyleDiffArchive)
}

inline void StyleDiffArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.style_){nullptr}
    , decltype(_impl_.character_change_set_){nullptr}
    , decltype(_impl_.paragraph_change_set_){nullptr}
    , decltype(_impl_.shape_change_set_){nullptr}
  };
}

StyleDiffArchive::~StyleDiffArchive() {
  // @@protoc_insertion_point(destructor:TSWPSOS.StyleDiffArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StyleDiffArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.style_;
  if (this != internal_default_instance()) delete _impl_.character_change_set_;
  if (this != internal_default_instance()) delete _impl_.paragraph_change_set_;
  if (this != internal_default_instance()) delete _impl_.shape_change_set_;
}

void StyleDiffArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StyleDiffArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSWPSOS.StyleDiffArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.style_ != nullptr);
      _impl_.style_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.character_change_set_ != nullptr);
      _impl_.character_change_set_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.paragraph_change_set_ != nullptr);
      _impl_.paragraph_change_set_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.shape_change_set_ != nullptr);
      _impl_.shape_change_set_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StyleDiffArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSP.Reference style = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.CharacterStylePropertyChangeSetArchive character_change_set = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_change_set(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.ParagraphStylePropertyChangeSetArchive paragraph_change_set = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_paragraph_change_set(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSWPSOS.ShapeStylePropertyChangeSetArchive shape_change_set = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_shape_change_set(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StyleDiffArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSWPSOS.StyleDiffArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSP.Reference style = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::style(this),
        _Internal::style(this).GetCachedSize(), target, stream);
  }

  // optional .TSWPSOS.CharacterStylePropertyChangeSetArchive character_change_set = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::character_change_set(this),
        _Internal::character_change_set(this).GetCachedSize(), target, stream);
  }

  // optional .TSWPSOS.ParagraphStylePropertyChangeSetArchive paragraph_change_set = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::paragraph_change_set(this),
        _Internal::paragraph_change_set(this).GetCachedSize(), target, stream);
  }

  // optional .TSWPSOS.ShapeStylePropertyChangeSetArchive shape_change_set = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::shape_change_set(this),
        _Internal::shape_change_set(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSWPSOS.StyleDiffArchive)
  return target;
}

size_t StyleDiffArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSWPSOS.StyleDiffArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .TSP.Reference style = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.style_);
    }

    // optional .TSWPSOS.CharacterStylePropertyChangeSetArchive character_change_set = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.character_change_set_);
    }

    // optional .TSWPSOS.ParagraphStylePropertyChangeSetArchive paragraph_change_set = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.paragraph_change_set_);
    }

    // optional .TSWPSOS.ShapeStylePropertyChangeSetArchive shape_change_set = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.shape_change_set_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StyleDiffArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StyleDiffArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StyleDiffArchive::GetClassData() const { return &_class_data_; }


void StyleDiffArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StyleDiffArchive*>(&to_msg);
  auto& from = static_cast<const StyleDiffArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSWPSOS.StyleDiffArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_style()->::TSP::Reference::MergeFrom(
          from._internal_style());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_character_change_set()->::TSWPSOS::CharacterStylePropertyChangeSetArchive::MergeFrom(
          from._internal_character_change_set());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_paragraph_change_set()->::TSWPSOS::ParagraphStylePropertyChangeSetArchive::MergeFrom(
          from._internal_paragraph_change_set());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_shape_change_set()->::TSWPSOS::ShapeStylePropertyChangeSetArchive::MergeFrom(
          from._internal_shape_change_set());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StyleDiffArchive::CopyFrom(const StyleDiffArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSWPSOS.StyleDiffArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StyleDiffArchive::IsInitialized() const {
  if (_internal_has_style()) {
    if (!_impl_.style_->IsInitialized()) return false;
  }
  if (_internal_has_character_change_set()) {
    if (!_impl_.character_change_set_->IsInitialized()) return false;
  }
  if (_internal_has_paragraph_change_set()) {
    if (!_impl_.paragraph_change_set_->IsInitialized()) return false;
  }
  if (_internal_has_shape_change_set()) {
    if (!_impl_.shape_change_set_->IsInitialized()) return false;
  }
  return true;
}

void StyleDiffArchive::InternalSwap(StyleDiffArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StyleDiffArchive, _impl_.shape_change_set_)
      + sizeof(StyleDiffArchive::_impl_.shape_change_set_)
      - PROTOBUF_FIELD_OFFSET(StyleDiffArchive, _impl_.style_)>(
          reinterpret_cast<char*>(&_impl_.style_),
          reinterpret_cast<char*>(&other->_impl_.style_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StyleDiffArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSWPArchives_2esos_2eproto_getter, &descriptor_table_TSWPArchives_2esos_2eproto_once,
      file_level_metadata_TSWPArchives_2esos_2eproto[43]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace TSWPSOS
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetCharacterStyleArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetCharacterStyleArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetCharacterStyleArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetColumnsArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetColumnsArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetColumnsArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetDropCapArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetDropCapArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetDropCapArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetFontFeaturesArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetFontFeaturesArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetFontFeaturesArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetLineSpacingArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetLineSpacingArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetLineSpacingArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetListStyleArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetListStyleArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetListStyleArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetListStyleBoolArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetListStyleBoolArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetListStyleBoolArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetListStyleFloatArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetListStyleFloatArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetListStyleFloatArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetListStyleImageDataArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetListStyleImageDataArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetListStyleImageDataArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetListStyleListLabelGeometryArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetListStyleListLabelTypeArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetListStyleListNumberTypeArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetListStyleStringArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetListStyleStringArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetListStyleStringArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetPaddingArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetPaddingArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetPaddingArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetParagraphStyleArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetParagraphStyleArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetParagraphStyleArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetRuleOffsetArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetRuleOffsetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetRuleOffsetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecSetTabsArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecSetTabsArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecSetTabsArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecCharacterStyleArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecCharacterStyleArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecCharacterStyleArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecColumnsArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecColumnsArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecColumnsArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecDropCapArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecDropCapArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecDropCapArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecFontFeaturesArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecFontFeaturesArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecFontFeaturesArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecLineSpacingArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecLineSpacingArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecLineSpacingArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecListStyleArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecListStyleArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecListStyleArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecListStyleBoolArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecListStyleBoolArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecListStyleBoolArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecListStyleFloatArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecListStyleFloatArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecListStyleFloatArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecListStyleImageDataArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecListStyleImageDataArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecListStyleImageDataArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecListStyleListLabelGeometryArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecListStyleListLabelGeometryArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecListStyleListLabelGeometryArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecListStyleListLabelTypeArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecListStyleListLabelTypeArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecListStyleListLabelTypeArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecListStyleListNumberTypeArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecListStyleListNumberTypeArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecListStyleListNumberTypeArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecListStyleStringArrayArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecListStyleStringArrayArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecListStyleStringArrayArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecPaddingArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecPaddingArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecPaddingArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecParagraphStyleArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecParagraphStyleArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecParagraphStyleArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecRuleOffsetArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecRuleOffsetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecRuleOffsetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::SpecTabsArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::SpecTabsArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::SpecTabsArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::CharacterStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::CharacterStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::CharacterStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::ColumnStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::ColumnStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::ColumnStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::DropCapSpecificStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::DropCapStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::DropCapStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::DropCapStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::ListStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::ListStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::ListStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::ParagraphSpecificStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::ParagraphStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::ParagraphStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::ParagraphStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::ShapeStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::ShapeStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::ShapeStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::TOCEntryStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::TOCEntryStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::TOCEntryStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSWPSOS::StyleDiffArchive*
Arena::CreateMaybeMessage< ::TSWPSOS::StyleDiffArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSWPSOS::StyleDiffArchive >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
