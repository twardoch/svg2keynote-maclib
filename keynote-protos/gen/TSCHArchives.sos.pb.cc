// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSCHArchives.sos.proto

#include "TSCHArchives.sos.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace TSCHSOS {
PROTOBUF_CONSTEXPR SpecSetChart3dLightingPackageArchive::SpecSetChart3dLightingPackageArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.chart3d_lighting_package_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetChart3dLightingPackageArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetChart3dLightingPackageArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetChart3dLightingPackageArchiveDefaultTypeInternal() {}
  union {
    SpecSetChart3dLightingPackageArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetChart3dLightingPackageArchiveDefaultTypeInternal _SpecSetChart3dLightingPackageArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetChart3dVectorArchive::SpecSetChart3dVectorArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.chart3d_vector_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetChart3dVectorArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetChart3dVectorArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetChart3dVectorArchiveDefaultTypeInternal() {}
  union {
    SpecSetChart3dVectorArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetChart3dVectorArchiveDefaultTypeInternal _SpecSetChart3dVectorArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetChartErrorBarCustomDataArchive::SpecSetChartErrorBarCustomDataArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.chart_error_bar_custom_data_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetChartErrorBarCustomDataArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetChartErrorBarCustomDataArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetChartErrorBarCustomDataArchiveDefaultTypeInternal() {}
  union {
    SpecSetChartErrorBarCustomDataArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetChartErrorBarCustomDataArchiveDefaultTypeInternal _SpecSetChartErrorBarCustomDataArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetChartsOptionalDoubleArchiveArchive::SpecSetChartsOptionalDoubleArchiveArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.charts_optional_double_archive_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetChartsOptionalDoubleArchiveArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetChartsOptionalDoubleArchiveArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetChartsOptionalDoubleArchiveArchiveDefaultTypeInternal() {}
  union {
    SpecSetChartsOptionalDoubleArchiveArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetChartsOptionalDoubleArchiveArchiveDefaultTypeInternal _SpecSetChartsOptionalDoubleArchiveArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetFormatObjectArchive::SpecSetFormatObjectArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.format_object_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetFormatObjectArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetFormatObjectArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetFormatObjectArchiveDefaultTypeInternal() {}
  union {
    SpecSetFormatObjectArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetFormatObjectArchiveDefaultTypeInternal _SpecSetFormatObjectArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecSetNumberFormatArchive::SpecSetNumberFormatArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.number_format_)*/nullptr
  , /*decltype(_impl_.unset_)*/false} {}
struct SpecSetNumberFormatArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecSetNumberFormatArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecSetNumberFormatArchiveDefaultTypeInternal() {}
  union {
    SpecSetNumberFormatArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecSetNumberFormatArchiveDefaultTypeInternal _SpecSetNumberFormatArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecChart3dLightingPackageArchive::SpecChart3dLightingPackageArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_chart3d_lighting_package_)*/nullptr} {}
struct SpecChart3dLightingPackageArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecChart3dLightingPackageArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecChart3dLightingPackageArchiveDefaultTypeInternal() {}
  union {
    SpecChart3dLightingPackageArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecChart3dLightingPackageArchiveDefaultTypeInternal _SpecChart3dLightingPackageArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecChart3dVectorArchive::SpecChart3dVectorArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_chart3d_vector_)*/nullptr} {}
struct SpecChart3dVectorArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecChart3dVectorArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecChart3dVectorArchiveDefaultTypeInternal() {}
  union {
    SpecChart3dVectorArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecChart3dVectorArchiveDefaultTypeInternal _SpecChart3dVectorArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecChartErrorBarCustomDataArchive::SpecChartErrorBarCustomDataArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_chart_error_bar_custom_data_)*/nullptr} {}
struct SpecChartErrorBarCustomDataArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecChartErrorBarCustomDataArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecChartErrorBarCustomDataArchiveDefaultTypeInternal() {}
  union {
    SpecChartErrorBarCustomDataArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecChartErrorBarCustomDataArchiveDefaultTypeInternal _SpecChartErrorBarCustomDataArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecChartsOptionalDoubleArchiveArchive::SpecChartsOptionalDoubleArchiveArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_charts_optional_double_archive_)*/nullptr} {}
struct SpecChartsOptionalDoubleArchiveArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecChartsOptionalDoubleArchiveArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecChartsOptionalDoubleArchiveArchiveDefaultTypeInternal() {}
  union {
    SpecChartsOptionalDoubleArchiveArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecChartsOptionalDoubleArchiveArchiveDefaultTypeInternal _SpecChartsOptionalDoubleArchiveArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecFormatObjectArchive::SpecFormatObjectArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_format_object_)*/nullptr} {}
struct SpecFormatObjectArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecFormatObjectArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecFormatObjectArchiveDefaultTypeInternal() {}
  union {
    SpecFormatObjectArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecFormatObjectArchiveDefaultTypeInternal _SpecFormatObjectArchive_default_instance_;
PROTOBUF_CONSTEXPR SpecNumberFormatArchive::SpecNumberFormatArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.spec_set_number_format_)*/nullptr} {}
struct SpecNumberFormatArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecNumberFormatArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecNumberFormatArchiveDefaultTypeInternal() {}
  union {
    SpecNumberFormatArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecNumberFormatArchiveDefaultTypeInternal _SpecNumberFormatArchive_default_instance_;
PROTOBUF_CONSTEXPR ChartAxisNonStylePropertyChangeSetArchive::ChartAxisNonStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.default10_date_format_)*/nullptr
  , /*decltype(_impl_.default10_number_format_)*/nullptr
  , /*decltype(_impl_.default3d_label_position_)*/nullptr
  , /*decltype(_impl_.default_date_format_)*/nullptr
  , /*decltype(_impl_.default_duration_format_)*/nullptr
  , /*decltype(_impl_.default_label_explosion_)*/nullptr
  , /*decltype(_impl_.default_number_format_)*/nullptr
  , /*decltype(_impl_.default_number_format_type_)*/nullptr
  , /*decltype(_impl_.value_number_of_decades_)*/nullptr
  , /*decltype(_impl_.value_number_of_major_gridlines_)*/nullptr
  , /*decltype(_impl_.value_number_of_minor_gridlines_)*/nullptr
  , /*decltype(_impl_.category_plot_to_edges_)*/nullptr
  , /*decltype(_impl_.value_scale_)*/nullptr
  , /*decltype(_impl_.category_show_labels_)*/nullptr
  , /*decltype(_impl_.default_show_labels_)*/nullptr
  , /*decltype(_impl_.value_show_labels_)*/nullptr
  , /*decltype(_impl_.category_show_series_labels_)*/nullptr
  , /*decltype(_impl_.multi_data_show_series_labels_)*/nullptr
  , /*decltype(_impl_.category_show_title_)*/nullptr
  , /*decltype(_impl_.value_show_title_)*/nullptr
  , /*decltype(_impl_.category_title_)*/nullptr
  , /*decltype(_impl_.value_title_)*/nullptr
  , /*decltype(_impl_.default_user_max_)*/nullptr
  , /*decltype(_impl_.default_user_min_)*/nullptr
  , /*decltype(_impl_.default10_date_format_undefined_)*/false
  , /*decltype(_impl_.default10_number_format_undefined_)*/false
  , /*decltype(_impl_.default3d_label_position_undefined_)*/false
  , /*decltype(_impl_.default_date_format_undefined_)*/false
  , /*decltype(_impl_.default_duration_format_undefined_)*/false
  , /*decltype(_impl_.default_label_explosion_undefined_)*/false
  , /*decltype(_impl_.default_number_format_undefined_)*/false
  , /*decltype(_impl_.default_number_format_type_undefined_)*/false
  , /*decltype(_impl_.value_number_of_decades_undefined_)*/false
  , /*decltype(_impl_.value_number_of_major_gridlines_undefined_)*/false
  , /*decltype(_impl_.value_number_of_minor_gridlines_undefined_)*/false
  , /*decltype(_impl_.category_plot_to_edges_undefined_)*/false
  , /*decltype(_impl_.value_scale_undefined_)*/false
  , /*decltype(_impl_.category_show_labels_undefined_)*/false
  , /*decltype(_impl_.default_show_labels_undefined_)*/false
  , /*decltype(_impl_.value_show_labels_undefined_)*/false
  , /*decltype(_impl_.category_show_series_labels_undefined_)*/false
  , /*decltype(_impl_.multi_data_show_series_labels_undefined_)*/false
  , /*decltype(_impl_.category_show_title_undefined_)*/false
  , /*decltype(_impl_.value_show_title_undefined_)*/false
  , /*decltype(_impl_.category_title_undefined_)*/false
  , /*decltype(_impl_.value_title_undefined_)*/false
  , /*decltype(_impl_.default_user_max_undefined_)*/false
  , /*decltype(_impl_.default_user_min_undefined_)*/false} {}
struct ChartAxisNonStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChartAxisNonStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChartAxisNonStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartAxisNonStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChartAxisNonStylePropertyChangeSetArchiveDefaultTypeInternal _ChartAxisNonStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ChartAxisStylePropertyChangeSetArchive::ChartAxisStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.category3d_gridline_opacity_)*/nullptr
  , /*decltype(_impl_.value3d_gridline_opacity_)*/nullptr
  , /*decltype(_impl_.category3d_gridline_stroke_)*/nullptr
  , /*decltype(_impl_.value3d_gridline_stroke_)*/nullptr
  , /*decltype(_impl_.category_horizontal_spacing_)*/nullptr
  , /*decltype(_impl_.default_label_angle_baseline_direction_)*/nullptr
  , /*decltype(_impl_.category_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.default_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.value_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.category_labels_orientation_)*/nullptr
  , /*decltype(_impl_.default_labels_orientation_)*/nullptr
  , /*decltype(_impl_.value_labels_orientation_)*/nullptr
  , /*decltype(_impl_.category_major_gridline_opacity_)*/nullptr
  , /*decltype(_impl_.value_major_gridline_opacity_)*/nullptr
  , /*decltype(_impl_.category_major_gridline_shadow_)*/nullptr
  , /*decltype(_impl_.value_major_gridline_shadow_)*/nullptr
  , /*decltype(_impl_.category_major_gridline_stroke_)*/nullptr
  , /*decltype(_impl_.value_major_gridline_stroke_)*/nullptr
  , /*decltype(_impl_.category_minor_gridline_opacity_)*/nullptr
  , /*decltype(_impl_.value_minor_gridline_opacity_)*/nullptr
  , /*decltype(_impl_.category_minor_gridline_shadow_)*/nullptr
  , /*decltype(_impl_.value_minor_gridline_shadow_)*/nullptr
  , /*decltype(_impl_.category_minor_gridline_stroke_)*/nullptr
  , /*decltype(_impl_.value_minor_gridline_stroke_)*/nullptr
  , /*decltype(_impl_.category_show_axis_)*/nullptr
  , /*decltype(_impl_.value_show_axis_)*/nullptr
  , /*decltype(_impl_.default_show_extension_lines_)*/nullptr
  , /*decltype(_impl_.category_show_gridline_tickmarks_)*/nullptr
  , /*decltype(_impl_.value_show_gridline_tickmarks_)*/nullptr
  , /*decltype(_impl_.category_show_last_label_)*/nullptr
  , /*decltype(_impl_.category_show_major_gridlines_)*/nullptr
  , /*decltype(_impl_.polar_category_show_major_gridlines_)*/nullptr
  , /*decltype(_impl_.value_show_major_gridlines_)*/nullptr
  , /*decltype(_impl_.category_show_major_tickmarks_)*/nullptr
  , /*decltype(_impl_.value_show_major_tickmarks_)*/nullptr
  , /*decltype(_impl_.value_show_minimum_label_)*/nullptr
  , /*decltype(_impl_.category_show_minor_gridlines_)*/nullptr
  , /*decltype(_impl_.value_show_minor_gridlines_)*/nullptr
  , /*decltype(_impl_.category_show_minor_tickmarks_)*/nullptr
  , /*decltype(_impl_.value_show_minor_tickmarks_)*/nullptr
  , /*decltype(_impl_.category_tickmark_location_)*/nullptr
  , /*decltype(_impl_.value_tickmark_location_)*/nullptr
  , /*decltype(_impl_.category_title_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.default_title_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.value_title_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.category_vertical_spacing_)*/nullptr
  , /*decltype(_impl_.category3d_gridline_opacity_undefined_)*/false
  , /*decltype(_impl_.value3d_gridline_opacity_undefined_)*/false
  , /*decltype(_impl_.category3d_gridline_stroke_undefined_)*/false
  , /*decltype(_impl_.value3d_gridline_stroke_undefined_)*/false
  , /*decltype(_impl_.category_horizontal_spacing_undefined_)*/false
  , /*decltype(_impl_.default_label_angle_baseline_direction_undefined_)*/false
  , /*decltype(_impl_.category_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.default_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.value_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.category_labels_orientation_undefined_)*/false
  , /*decltype(_impl_.default_labels_orientation_undefined_)*/false
  , /*decltype(_impl_.value_labels_orientation_undefined_)*/false
  , /*decltype(_impl_.category_major_gridline_opacity_undefined_)*/false
  , /*decltype(_impl_.value_major_gridline_opacity_undefined_)*/false
  , /*decltype(_impl_.category_major_gridline_shadow_undefined_)*/false
  , /*decltype(_impl_.value_major_gridline_shadow_undefined_)*/false
  , /*decltype(_impl_.category_major_gridline_stroke_undefined_)*/false
  , /*decltype(_impl_.value_major_gridline_stroke_undefined_)*/false
  , /*decltype(_impl_.category_minor_gridline_opacity_undefined_)*/false
  , /*decltype(_impl_.value_minor_gridline_opacity_undefined_)*/false
  , /*decltype(_impl_.category_minor_gridline_shadow_undefined_)*/false
  , /*decltype(_impl_.value_minor_gridline_shadow_undefined_)*/false
  , /*decltype(_impl_.category_minor_gridline_stroke_undefined_)*/false
  , /*decltype(_impl_.value_minor_gridline_stroke_undefined_)*/false
  , /*decltype(_impl_.category_show_axis_undefined_)*/false
  , /*decltype(_impl_.value_show_axis_undefined_)*/false
  , /*decltype(_impl_.default_show_extension_lines_undefined_)*/false
  , /*decltype(_impl_.category_show_gridline_tickmarks_undefined_)*/false
  , /*decltype(_impl_.value_show_gridline_tickmarks_undefined_)*/false
  , /*decltype(_impl_.category_show_last_label_undefined_)*/false
  , /*decltype(_impl_.category_show_major_gridlines_undefined_)*/false
  , /*decltype(_impl_.polar_category_show_major_gridlines_undefined_)*/false
  , /*decltype(_impl_.value_show_major_gridlines_undefined_)*/false
  , /*decltype(_impl_.category_show_major_tickmarks_undefined_)*/false
  , /*decltype(_impl_.value_show_major_tickmarks_undefined_)*/false
  , /*decltype(_impl_.value_show_minimum_label_undefined_)*/false
  , /*decltype(_impl_.category_show_minor_gridlines_undefined_)*/false
  , /*decltype(_impl_.value_show_minor_gridlines_undefined_)*/false
  , /*decltype(_impl_.category_show_minor_tickmarks_undefined_)*/false
  , /*decltype(_impl_.value_show_minor_tickmarks_undefined_)*/false
  , /*decltype(_impl_.category_tickmark_location_undefined_)*/false
  , /*decltype(_impl_.value_tickmark_location_undefined_)*/false
  , /*decltype(_impl_.category_title_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.default_title_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.value_title_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.category_vertical_spacing_undefined_)*/false} {}
struct ChartAxisStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChartAxisStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChartAxisStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartAxisStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChartAxisStylePropertyChangeSetArchiveDefaultTypeInternal _ChartAxisStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ChartLegendNonStylePropertyChangeSetArchive::ChartLegendNonStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized) {}
struct ChartLegendNonStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChartLegendNonStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChartLegendNonStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartLegendNonStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChartLegendNonStylePropertyChangeSetArchiveDefaultTypeInternal _ChartLegendNonStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ChartLegendStylePropertyChangeSetArchive::ChartLegendStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.default_fill_)*/nullptr
  , /*decltype(_impl_.default_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.default_opacity_)*/nullptr
  , /*decltype(_impl_.default_shadow_)*/nullptr
  , /*decltype(_impl_.default_stroke_)*/nullptr
  , /*decltype(_impl_.default_fill_undefined_)*/false
  , /*decltype(_impl_.default_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.default_opacity_undefined_)*/false
  , /*decltype(_impl_.default_shadow_undefined_)*/false
  , /*decltype(_impl_.default_stroke_undefined_)*/false} {}
struct ChartLegendStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChartLegendStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChartLegendStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartLegendStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChartLegendStylePropertyChangeSetArchiveDefaultTypeInternal _ChartLegendStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ChartNonStylePropertyChangeSetArchive::ChartNonStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.default3d_bar_shape_)*/nullptr
  , /*decltype(_impl_.default3d_bevel_edges_)*/nullptr
  , /*decltype(_impl_.default3d_inter_set_depth_gap_)*/nullptr
  , /*decltype(_impl_.default3d_rotation_)*/nullptr
  , /*decltype(_impl_.area3d_scale_)*/nullptr
  , /*decltype(_impl_.bar3d_scale_)*/nullptr
  , /*decltype(_impl_.column3d_scale_)*/nullptr
  , /*decltype(_impl_.default3d_scale_)*/nullptr
  , /*decltype(_impl_.line3d_scale_)*/nullptr
  , /*decltype(_impl_.pie3d_scale_)*/nullptr
  , /*decltype(_impl_.default3d_viewport_)*/nullptr
  , /*decltype(_impl_.area_callout_line_type_)*/nullptr
  , /*decltype(_impl_.bar_callout_line_type_)*/nullptr
  , /*decltype(_impl_.bubble_callout_line_type_)*/nullptr
  , /*decltype(_impl_.default_callout_line_type_)*/nullptr
  , /*decltype(_impl_.line_callout_line_type_)*/nullptr
  , /*decltype(_impl_.pie_callout_line_type_)*/nullptr
  , /*decltype(_impl_.scatter_callout_line_type_)*/nullptr
  , /*decltype(_impl_.stacked_area_callout_line_type_)*/nullptr
  , /*decltype(_impl_.stacked_bar_callout_line_type_)*/nullptr
  , /*decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_)*/nullptr
  , /*decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_)*/nullptr
  , /*decltype(_impl_.default_data_set_name_location_)*/nullptr
  , /*decltype(_impl_.default_donut_place_title_at_center_)*/nullptr
  , /*decltype(_impl_.default_inner_radius_)*/nullptr
  , /*decltype(_impl_.default_multi_data_control_type_)*/nullptr
  , /*decltype(_impl_.default_pie_start_angle_)*/nullptr
  , /*decltype(_impl_.default_radar_start_angle_)*/nullptr
  , /*decltype(_impl_.default_show_legend_)*/nullptr
  , /*decltype(_impl_.default_show_title_)*/nullptr
  , /*decltype(_impl_.default_skip_hidden_data_)*/nullptr
  , /*decltype(_impl_.default_title_)*/nullptr
  , /*decltype(_impl_.default3d_bar_shape_undefined_)*/false
  , /*decltype(_impl_.default3d_bevel_edges_undefined_)*/false
  , /*decltype(_impl_.default3d_inter_set_depth_gap_undefined_)*/false
  , /*decltype(_impl_.default3d_rotation_undefined_)*/false
  , /*decltype(_impl_.area3d_scale_undefined_)*/false
  , /*decltype(_impl_.bar3d_scale_undefined_)*/false
  , /*decltype(_impl_.column3d_scale_undefined_)*/false
  , /*decltype(_impl_.default3d_scale_undefined_)*/false
  , /*decltype(_impl_.line3d_scale_undefined_)*/false
  , /*decltype(_impl_.pie3d_scale_undefined_)*/false
  , /*decltype(_impl_.default3d_viewport_undefined_)*/false
  , /*decltype(_impl_.area_callout_line_type_undefined_)*/false
  , /*decltype(_impl_.bar_callout_line_type_undefined_)*/false
  , /*decltype(_impl_.bubble_callout_line_type_undefined_)*/false
  , /*decltype(_impl_.default_callout_line_type_undefined_)*/false
  , /*decltype(_impl_.line_callout_line_type_undefined_)*/false
  , /*decltype(_impl_.pie_callout_line_type_undefined_)*/false
  , /*decltype(_impl_.scatter_callout_line_type_undefined_)*/false
  , /*decltype(_impl_.stacked_area_callout_line_type_undefined_)*/false
  , /*decltype(_impl_.stacked_bar_callout_line_type_undefined_)*/false
  , /*decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_)*/false
  , /*decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_)*/false
  , /*decltype(_impl_.default_data_set_name_location_undefined_)*/false
  , /*decltype(_impl_.default_donut_place_title_at_center_undefined_)*/false
  , /*decltype(_impl_.default_inner_radius_undefined_)*/false
  , /*decltype(_impl_.default_multi_data_control_type_undefined_)*/false
  , /*decltype(_impl_.default_pie_start_angle_undefined_)*/false
  , /*decltype(_impl_.default_radar_start_angle_undefined_)*/false
  , /*decltype(_impl_.default_show_legend_undefined_)*/false
  , /*decltype(_impl_.default_show_title_undefined_)*/false
  , /*decltype(_impl_.default_skip_hidden_data_undefined_)*/false
  , /*decltype(_impl_.default_title_undefined_)*/false} {}
struct ChartNonStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChartNonStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChartNonStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartNonStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChartNonStylePropertyChangeSetArchiveDefaultTypeInternal _ChartNonStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ChartReferenceLineNonStylePropertyChangeSetArchive::ChartReferenceLineNonStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.default_custom_value_)*/nullptr
  , /*decltype(_impl_.default_label_)*/nullptr
  , /*decltype(_impl_.default_show_label_)*/nullptr
  , /*decltype(_impl_.default_show_line_)*/nullptr
  , /*decltype(_impl_.default_show_value_label_)*/nullptr
  , /*decltype(_impl_.default_type_)*/nullptr
  , /*decltype(_impl_.default_custom_value_undefined_)*/false
  , /*decltype(_impl_.default_label_undefined_)*/false
  , /*decltype(_impl_.default_show_label_undefined_)*/false
  , /*decltype(_impl_.default_show_line_undefined_)*/false
  , /*decltype(_impl_.default_show_value_label_undefined_)*/false
  , /*decltype(_impl_.default_type_undefined_)*/false} {}
struct ChartReferenceLineNonStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChartReferenceLineNonStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChartReferenceLineNonStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartReferenceLineNonStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChartReferenceLineNonStylePropertyChangeSetArchiveDefaultTypeInternal _ChartReferenceLineNonStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ChartReferenceLineStylePropertyChangeSetArchive::ChartReferenceLineStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.default_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.default_shadow_)*/nullptr
  , /*decltype(_impl_.default_stroke_)*/nullptr
  , /*decltype(_impl_.default_value_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.default_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.default_shadow_undefined_)*/false
  , /*decltype(_impl_.default_stroke_undefined_)*/false
  , /*decltype(_impl_.default_value_label_paragraph_style_index_undefined_)*/false} {}
struct ChartReferenceLineStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChartReferenceLineStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChartReferenceLineStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartReferenceLineStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChartReferenceLineStylePropertyChangeSetArchiveDefaultTypeInternal _ChartReferenceLineStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ChartSeriesNonStylePropertyChangeSetArchive::ChartSeriesNonStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.default10_date_format_)*/nullptr
  , /*decltype(_impl_.default10_number_format_)*/nullptr
  , /*decltype(_impl_.pie10_number_format_)*/nullptr
  , /*decltype(_impl_.pie23_label_explosion_)*/nullptr
  , /*decltype(_impl_.bubble_adjustment_scale_)*/nullptr
  , /*decltype(_impl_.default_date_format_)*/nullptr
  , /*decltype(_impl_.default_duration_format_)*/nullptr
  , /*decltype(_impl_.area_enable_callout_line_)*/nullptr
  , /*decltype(_impl_.bar_enable_callout_line_)*/nullptr
  , /*decltype(_impl_.bubble_enable_callout_line_)*/nullptr
  , /*decltype(_impl_.default_enable_callout_line_)*/nullptr
  , /*decltype(_impl_.line_enable_callout_line_)*/nullptr
  , /*decltype(_impl_.pie_enable_callout_line_)*/nullptr
  , /*decltype(_impl_.scatter_enable_callout_line_)*/nullptr
  , /*decltype(_impl_.stacked_area_enable_callout_line_)*/nullptr
  , /*decltype(_impl_.stacked_bar_enable_callout_line_)*/nullptr
  , /*decltype(_impl_.default_error_bar_custom_negative_data_)*/nullptr
  , /*decltype(_impl_.default_error_bar_custom_negative_data_scatter_x_)*/nullptr
  , /*decltype(_impl_.default_error_bar_custom_positive_data_)*/nullptr
  , /*decltype(_impl_.default_error_bar_custom_positive_data_scatter_x_)*/nullptr
  , /*decltype(_impl_.default_error_bar_fixed_value_)*/nullptr
  , /*decltype(_impl_.default_error_bar_fixed_value_scatter_x_)*/nullptr
  , /*decltype(_impl_.default_error_bar_percent_value_)*/nullptr
  , /*decltype(_impl_.default_error_bar_percent_value_scatter_x_)*/nullptr
  , /*decltype(_impl_.default_error_bar_setting_)*/nullptr
  , /*decltype(_impl_.default_error_bar_setting_scatter_x_)*/nullptr
  , /*decltype(_impl_.default_error_bar_std_dev_value_)*/nullptr
  , /*decltype(_impl_.default_error_bar_std_dev_value_scatter_x_)*/nullptr
  , /*decltype(_impl_.default_error_bar_type_)*/nullptr
  , /*decltype(_impl_.default_error_bar_type_scatter_x_)*/nullptr
  , /*decltype(_impl_.pie_label_explosion_)*/nullptr
  , /*decltype(_impl_.bubble_line_type_)*/nullptr
  , /*decltype(_impl_.line_line_type_)*/nullptr
  , /*decltype(_impl_.mixed_line_line_type_)*/nullptr
  , /*decltype(_impl_.radar_area_line_type_)*/nullptr
  , /*decltype(_impl_.scatter_line_type_)*/nullptr
  , /*decltype(_impl_.default_number_format_)*/nullptr
  , /*decltype(_impl_.pie_number_format_)*/nullptr
  , /*decltype(_impl_.default_number_format_type_)*/nullptr
  , /*decltype(_impl_.pie_number_format_type_)*/nullptr
  , /*decltype(_impl_.stacked_percent_number_format_)*/nullptr
  , /*decltype(_impl_.default_series_type_)*/nullptr
  , /*decltype(_impl_.default_show_error_bar_)*/nullptr
  , /*decltype(_impl_.default_show_error_bar_scatter_x_)*/nullptr
  , /*decltype(_impl_.bubble_show_labels_in_front_)*/nullptr
  , /*decltype(_impl_.default_show_labels_in_front_)*/nullptr
  , /*decltype(_impl_.scatter_show_line_)*/nullptr
  , /*decltype(_impl_.bubble_show_negative_data_)*/nullptr
  , /*decltype(_impl_.bubble_show_series_labels_)*/nullptr
  , /*decltype(_impl_.pie_show_series_labels_)*/nullptr
  , /*decltype(_impl_.scatter_show_series_labels_)*/nullptr
  , /*decltype(_impl_.area_show_symbol_)*/nullptr
  , /*decltype(_impl_.line_show_symbol_)*/nullptr
  , /*decltype(_impl_.mixed_area_show_symbol_)*/nullptr
  , /*decltype(_impl_.mixed_line_show_symbol_)*/nullptr
  , /*decltype(_impl_.radar_area_show_symbol_)*/nullptr
  , /*decltype(_impl_.scatter_show_symbol_)*/nullptr
  , /*decltype(_impl_.default_show_trend_line_)*/nullptr
  , /*decltype(_impl_.area_show_value_labels_)*/nullptr
  , /*decltype(_impl_.bar_show_value_labels_)*/nullptr
  , /*decltype(_impl_.bubble_show_value_labels_)*/nullptr
  , /*decltype(_impl_.default_show_value_labels_)*/nullptr
  , /*decltype(_impl_.line_show_value_labels_)*/nullptr
  , /*decltype(_impl_.mixed_show_value_labels_)*/nullptr
  , /*decltype(_impl_.pie_show_value_labels_)*/nullptr
  , /*decltype(_impl_.radar_show_value_labels_)*/nullptr
  , /*decltype(_impl_.scatter_show_value_labels_)*/nullptr
  , /*decltype(_impl_.bubble_size_dimension_)*/nullptr
  , /*decltype(_impl_.area_stack_labels_)*/nullptr
  , /*decltype(_impl_.bar_stack_labels_)*/nullptr
  , /*decltype(_impl_.bubble_stack_labels_)*/nullptr
  , /*decltype(_impl_.default_stack_labels_)*/nullptr
  , /*decltype(_impl_.line_stack_labels_)*/nullptr
  , /*decltype(_impl_.pie_stack_labels_)*/nullptr
  , /*decltype(_impl_.scatter_stack_labels_)*/nullptr
  , /*decltype(_impl_.stacked_area_stack_labels_)*/nullptr
  , /*decltype(_impl_.stacked_bar_stack_labels_)*/nullptr
  , /*decltype(_impl_.area_symbol_type_)*/nullptr
  , /*decltype(_impl_.line_symbol_type_)*/nullptr
  , /*decltype(_impl_.mixed_area_symbol_type_)*/nullptr
  , /*decltype(_impl_.mixed_line_symbol_type_)*/nullptr
  , /*decltype(_impl_.radar_area_symbol_type_)*/nullptr
  , /*decltype(_impl_.scatter_symbol_type_)*/nullptr
  , /*decltype(_impl_.default_trend_line_equation_offset_x_)*/nullptr
  , /*decltype(_impl_.default_trend_line_equation_offset_y_)*/nullptr
  , /*decltype(_impl_.default_trend_line_label_string_)*/nullptr
  , /*decltype(_impl_.default_trend_line_order_)*/nullptr
  , /*decltype(_impl_.default_trend_line_period_)*/nullptr
  , /*decltype(_impl_.default_trend_line_r_squared_offset_x_)*/nullptr
  , /*decltype(_impl_.default_trend_line_r_squared_offset_y_)*/nullptr
  , /*decltype(_impl_.default_trend_line_show_equation_)*/nullptr
  , /*decltype(_impl_.default_trend_line_show_label_)*/nullptr
  , /*decltype(_impl_.default_trend_line_show_r2_value_)*/nullptr
  , /*decltype(_impl_.default_trend_line_type_)*/nullptr
  , /*decltype(_impl_.bubble_value_labels_axis_)*/nullptr
  , /*decltype(_impl_.scatter_value_labels_axis_)*/nullptr
  , /*decltype(_impl_.pie_wedge_explosion_)*/nullptr
  , /*decltype(_impl_.default_y_axis_ordinal_)*/nullptr
  , /*decltype(_impl_.default10_date_format_undefined_)*/false
  , /*decltype(_impl_.default10_number_format_undefined_)*/false
  , /*decltype(_impl_.pie10_number_format_undefined_)*/false
  , /*decltype(_impl_.pie23_label_explosion_undefined_)*/false
  , /*decltype(_impl_.bubble_adjustment_scale_undefined_)*/false
  , /*decltype(_impl_.default_date_format_undefined_)*/false
  , /*decltype(_impl_.default_duration_format_undefined_)*/false
  , /*decltype(_impl_.area_enable_callout_line_undefined_)*/false
  , /*decltype(_impl_.bar_enable_callout_line_undefined_)*/false
  , /*decltype(_impl_.bubble_enable_callout_line_undefined_)*/false
  , /*decltype(_impl_.default_enable_callout_line_undefined_)*/false
  , /*decltype(_impl_.line_enable_callout_line_undefined_)*/false
  , /*decltype(_impl_.pie_enable_callout_line_undefined_)*/false
  , /*decltype(_impl_.scatter_enable_callout_line_undefined_)*/false
  , /*decltype(_impl_.stacked_area_enable_callout_line_undefined_)*/false
  , /*decltype(_impl_.stacked_bar_enable_callout_line_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_custom_negative_data_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_custom_negative_data_scatter_x_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_custom_positive_data_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_custom_positive_data_scatter_x_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_fixed_value_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_fixed_value_scatter_x_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_percent_value_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_percent_value_scatter_x_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_setting_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_setting_scatter_x_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_std_dev_value_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_std_dev_value_scatter_x_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_type_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_type_scatter_x_undefined_)*/false
  , /*decltype(_impl_.pie_label_explosion_undefined_)*/false
  , /*decltype(_impl_.bubble_line_type_undefined_)*/false
  , /*decltype(_impl_.line_line_type_undefined_)*/false
  , /*decltype(_impl_.mixed_line_line_type_undefined_)*/false
  , /*decltype(_impl_.radar_area_line_type_undefined_)*/false
  , /*decltype(_impl_.scatter_line_type_undefined_)*/false
  , /*decltype(_impl_.default_number_format_undefined_)*/false
  , /*decltype(_impl_.pie_number_format_undefined_)*/false
  , /*decltype(_impl_.default_number_format_type_undefined_)*/false
  , /*decltype(_impl_.pie_number_format_type_undefined_)*/false
  , /*decltype(_impl_.stacked_percent_number_format_undefined_)*/false
  , /*decltype(_impl_.default_series_type_undefined_)*/false
  , /*decltype(_impl_.default_show_error_bar_undefined_)*/false
  , /*decltype(_impl_.default_show_error_bar_scatter_x_undefined_)*/false
  , /*decltype(_impl_.bubble_show_labels_in_front_undefined_)*/false
  , /*decltype(_impl_.default_show_labels_in_front_undefined_)*/false
  , /*decltype(_impl_.scatter_show_line_undefined_)*/false
  , /*decltype(_impl_.bubble_show_negative_data_undefined_)*/false
  , /*decltype(_impl_.bubble_show_series_labels_undefined_)*/false
  , /*decltype(_impl_.pie_show_series_labels_undefined_)*/false
  , /*decltype(_impl_.scatter_show_series_labels_undefined_)*/false
  , /*decltype(_impl_.area_show_symbol_undefined_)*/false
  , /*decltype(_impl_.line_show_symbol_undefined_)*/false
  , /*decltype(_impl_.mixed_area_show_symbol_undefined_)*/false
  , /*decltype(_impl_.mixed_line_show_symbol_undefined_)*/false
  , /*decltype(_impl_.radar_area_show_symbol_undefined_)*/false
  , /*decltype(_impl_.scatter_show_symbol_undefined_)*/false
  , /*decltype(_impl_.default_show_trend_line_undefined_)*/false
  , /*decltype(_impl_.area_show_value_labels_undefined_)*/false
  , /*decltype(_impl_.bar_show_value_labels_undefined_)*/false
  , /*decltype(_impl_.bubble_show_value_labels_undefined_)*/false
  , /*decltype(_impl_.default_show_value_labels_undefined_)*/false
  , /*decltype(_impl_.line_show_value_labels_undefined_)*/false
  , /*decltype(_impl_.mixed_show_value_labels_undefined_)*/false
  , /*decltype(_impl_.pie_show_value_labels_undefined_)*/false
  , /*decltype(_impl_.radar_show_value_labels_undefined_)*/false
  , /*decltype(_impl_.scatter_show_value_labels_undefined_)*/false
  , /*decltype(_impl_.bubble_size_dimension_undefined_)*/false
  , /*decltype(_impl_.area_stack_labels_undefined_)*/false
  , /*decltype(_impl_.bar_stack_labels_undefined_)*/false
  , /*decltype(_impl_.bubble_stack_labels_undefined_)*/false
  , /*decltype(_impl_.default_stack_labels_undefined_)*/false
  , /*decltype(_impl_.line_stack_labels_undefined_)*/false
  , /*decltype(_impl_.pie_stack_labels_undefined_)*/false
  , /*decltype(_impl_.scatter_stack_labels_undefined_)*/false
  , /*decltype(_impl_.stacked_area_stack_labels_undefined_)*/false
  , /*decltype(_impl_.stacked_bar_stack_labels_undefined_)*/false
  , /*decltype(_impl_.area_symbol_type_undefined_)*/false
  , /*decltype(_impl_.line_symbol_type_undefined_)*/false
  , /*decltype(_impl_.mixed_area_symbol_type_undefined_)*/false
  , /*decltype(_impl_.mixed_line_symbol_type_undefined_)*/false
  , /*decltype(_impl_.radar_area_symbol_type_undefined_)*/false
  , /*decltype(_impl_.scatter_symbol_type_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_equation_offset_x_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_equation_offset_y_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_label_string_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_order_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_period_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_r_squared_offset_x_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_r_squared_offset_y_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_show_equation_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_show_label_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_show_r2_value_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_type_undefined_)*/false
  , /*decltype(_impl_.bubble_value_labels_axis_undefined_)*/false
  , /*decltype(_impl_.scatter_value_labels_axis_undefined_)*/false
  , /*decltype(_impl_.pie_wedge_explosion_undefined_)*/false
  , /*decltype(_impl_.default_y_axis_ordinal_undefined_)*/false} {}
struct ChartSeriesNonStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChartSeriesNonStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChartSeriesNonStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartSeriesNonStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChartSeriesNonStylePropertyChangeSetArchiveDefaultTypeInternal _ChartSeriesNonStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ChartSeriesStylePropertyChangeSetArchive::ChartSeriesStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.default_callout_line_end_line_end_)*/nullptr
  , /*decltype(_impl_.default_callout_line_start_line_end_)*/nullptr
  , /*decltype(_impl_.default_callout_line_stroke_style_)*/nullptr
  , /*decltype(_impl_.default_error_bar_line_end_)*/nullptr
  , /*decltype(_impl_.default_error_bar_line_end_scatter_x_)*/nullptr
  , /*decltype(_impl_.default_error_bar_shadow_)*/nullptr
  , /*decltype(_impl_.default_error_bar_spacing_)*/nullptr
  , /*decltype(_impl_.default_error_bar_spacing_scatter_x_)*/nullptr
  , /*decltype(_impl_.default_error_bar_stroke_)*/nullptr
  , /*decltype(_impl_.default_error_bar_stroke_scatter_x_)*/nullptr
  , /*decltype(_impl_.area3d_fill_)*/nullptr
  , /*decltype(_impl_.bar3d_fill_)*/nullptr
  , /*decltype(_impl_.column3d_fill_)*/nullptr
  , /*decltype(_impl_.line3d_fill_)*/nullptr
  , /*decltype(_impl_.pie3d_fill_)*/nullptr
  , /*decltype(_impl_.area_fill_)*/nullptr
  , /*decltype(_impl_.bar_fill_)*/nullptr
  , /*decltype(_impl_.column_fill_)*/nullptr
  , /*decltype(_impl_.default_fill_)*/nullptr
  , /*decltype(_impl_.mixed_area_fill_)*/nullptr
  , /*decltype(_impl_.mixed_column_fill_)*/nullptr
  , /*decltype(_impl_.pie_fill_)*/nullptr
  , /*decltype(_impl_.radar_area_fill_)*/nullptr
  , /*decltype(_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_)*/nullptr
  , /*decltype(_impl_.radar_area_fill_use_series_stroke_)*/nullptr
  , /*decltype(_impl_.area_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.bar_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.default_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.donut_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.line_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.mixed_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.pie_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.radar_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.default_opacity_)*/nullptr
  , /*decltype(_impl_.area_outside_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.bar_outside_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.default_outside_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.donut_outside_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.mixed_outside_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.pie_outside_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.radar_outside_label_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.area3d_shadow_)*/nullptr
  , /*decltype(_impl_.bar3d_shadow_)*/nullptr
  , /*decltype(_impl_.column3d_shadow_)*/nullptr
  , /*decltype(_impl_.line3d_shadow_)*/nullptr
  , /*decltype(_impl_.pie3d_shadow_)*/nullptr
  , /*decltype(_impl_.area_shadow_)*/nullptr
  , /*decltype(_impl_.bar_shadow_)*/nullptr
  , /*decltype(_impl_.bubble_shadow_)*/nullptr
  , /*decltype(_impl_.default_shadow_)*/nullptr
  , /*decltype(_impl_.line_shadow_)*/nullptr
  , /*decltype(_impl_.mixed_area_shadow_)*/nullptr
  , /*decltype(_impl_.mixed_column_shadow_)*/nullptr
  , /*decltype(_impl_.mixed_line_shadow_)*/nullptr
  , /*decltype(_impl_.pie_shadow_)*/nullptr
  , /*decltype(_impl_.radar_area_shadow_)*/nullptr
  , /*decltype(_impl_.scatter_shadow_)*/nullptr
  , /*decltype(_impl_.area_stroke_)*/nullptr
  , /*decltype(_impl_.bar_stroke_)*/nullptr
  , /*decltype(_impl_.bubble_stroke_)*/nullptr
  , /*decltype(_impl_.line_stroke_)*/nullptr
  , /*decltype(_impl_.mixed_area_stroke_)*/nullptr
  , /*decltype(_impl_.mixed_column_stroke_)*/nullptr
  , /*decltype(_impl_.mixed_line_stroke_)*/nullptr
  , /*decltype(_impl_.pie_stroke_)*/nullptr
  , /*decltype(_impl_.radar_area_stroke_)*/nullptr
  , /*decltype(_impl_.scatter_stroke_)*/nullptr
  , /*decltype(_impl_.area_symbol_fill_)*/nullptr
  , /*decltype(_impl_.bubble_symbol_fill_)*/nullptr
  , /*decltype(_impl_.line_symbol_fill_)*/nullptr
  , /*decltype(_impl_.mixed_area_symbol_fill_)*/nullptr
  , /*decltype(_impl_.mixed_line_symbol_fill_)*/nullptr
  , /*decltype(_impl_.radar_area_symbol_fill_)*/nullptr
  , /*decltype(_impl_.scatter_symbol_fill_)*/nullptr
  , /*decltype(_impl_.area_symbol_fill_use_series_fill_)*/nullptr
  , /*decltype(_impl_.line_symbol_fill_use_series_fill_)*/nullptr
  , /*decltype(_impl_.mixed_area_symbol_fill_use_series_fill_)*/nullptr
  , /*decltype(_impl_.mixed_line_symbol_fill_use_series_fill_)*/nullptr
  , /*decltype(_impl_.radar_area_symbol_fill_use_series_fill_)*/nullptr
  , /*decltype(_impl_.area_symbol_fill_use_series_stroke_)*/nullptr
  , /*decltype(_impl_.bubble_symbol_fill_use_series_stroke_)*/nullptr
  , /*decltype(_impl_.line_symbol_fill_use_series_stroke_)*/nullptr
  , /*decltype(_impl_.mixed_area_symbol_fill_use_series_stroke_)*/nullptr
  , /*decltype(_impl_.mixed_line_symbol_fill_use_series_stroke_)*/nullptr
  , /*decltype(_impl_.radar_area_symbol_fill_use_series_stroke_)*/nullptr
  , /*decltype(_impl_.scatter_symbol_fill_use_series_stroke_)*/nullptr
  , /*decltype(_impl_.area_symbol_size_)*/nullptr
  , /*decltype(_impl_.line_symbol_size_)*/nullptr
  , /*decltype(_impl_.mixed_area_symbol_size_)*/nullptr
  , /*decltype(_impl_.mixed_line_symbol_size_)*/nullptr
  , /*decltype(_impl_.radar_area_symbol_size_)*/nullptr
  , /*decltype(_impl_.scatter_symbol_size_)*/nullptr
  , /*decltype(_impl_.area_symbol_stroke_)*/nullptr
  , /*decltype(_impl_.bubble_symbol_stroke_)*/nullptr
  , /*decltype(_impl_.line_symbol_stroke_)*/nullptr
  , /*decltype(_impl_.mixed_area_symbol_stroke_)*/nullptr
  , /*decltype(_impl_.mixed_line_symbol_stroke_)*/nullptr
  , /*decltype(_impl_.radar_area_symbol_stroke_)*/nullptr
  , /*decltype(_impl_.scatter_symbol_stroke_)*/nullptr
  , /*decltype(_impl_.default_trend_line_shadow_)*/nullptr
  , /*decltype(_impl_.default_trend_line_stroke_)*/nullptr
  , /*decltype(_impl_.default_trendline_equation_opacity_)*/nullptr
  , /*decltype(_impl_.default_trendline_equation_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.default_trendline_r_squared_opacity_)*/nullptr
  , /*decltype(_impl_.default_trendline_r_squared_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.area_value_label_position_)*/nullptr
  , /*decltype(_impl_.bar_value_label_position_)*/nullptr
  , /*decltype(_impl_.bubble_value_label_position_)*/nullptr
  , /*decltype(_impl_.default_value_label_position_)*/nullptr
  , /*decltype(_impl_.line_value_label_position_)*/nullptr
  , /*decltype(_impl_.mixed_area_value_label_position_)*/nullptr
  , /*decltype(_impl_.mixed_column_value_label_position_)*/nullptr
  , /*decltype(_impl_.mixed_line_value_label_position_)*/nullptr
  , /*decltype(_impl_.radar_area_value_label_position_)*/nullptr
  , /*decltype(_impl_.scatter_value_label_position_)*/nullptr
  , /*decltype(_impl_.stacked_area_value_label_position_)*/nullptr
  , /*decltype(_impl_.stacked_bar_value_label_position_)*/nullptr
  , /*decltype(_impl_.default_value_label_spacing_)*/nullptr
  , /*decltype(_impl_.default_callout_line_end_line_end_undefined_)*/false
  , /*decltype(_impl_.default_callout_line_start_line_end_undefined_)*/false
  , /*decltype(_impl_.default_callout_line_stroke_style_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_line_end_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_line_end_scatter_x_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_shadow_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_spacing_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_spacing_scatter_x_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_stroke_undefined_)*/false
  , /*decltype(_impl_.default_error_bar_stroke_scatter_x_undefined_)*/false
  , /*decltype(_impl_.area3d_fill_undefined_)*/false
  , /*decltype(_impl_.bar3d_fill_undefined_)*/false
  , /*decltype(_impl_.column3d_fill_undefined_)*/false
  , /*decltype(_impl_.line3d_fill_undefined_)*/false
  , /*decltype(_impl_.pie3d_fill_undefined_)*/false
  , /*decltype(_impl_.area_fill_undefined_)*/false
  , /*decltype(_impl_.bar_fill_undefined_)*/false
  , /*decltype(_impl_.column_fill_undefined_)*/false
  , /*decltype(_impl_.default_fill_undefined_)*/false
  , /*decltype(_impl_.mixed_area_fill_undefined_)*/false
  , /*decltype(_impl_.mixed_column_fill_undefined_)*/false
  , /*decltype(_impl_.pie_fill_undefined_)*/false
  , /*decltype(_impl_.radar_area_fill_undefined_)*/false
  , /*decltype(_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_undefined_)*/false
  , /*decltype(_impl_.radar_area_fill_use_series_stroke_undefined_)*/false
  , /*decltype(_impl_.area_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.bar_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.default_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.donut_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.line_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.mixed_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.pie_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.radar_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.default_opacity_undefined_)*/false
  , /*decltype(_impl_.area_outside_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.bar_outside_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.default_outside_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.donut_outside_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.mixed_outside_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.pie_outside_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.radar_outside_label_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.area3d_shadow_undefined_)*/false
  , /*decltype(_impl_.bar3d_shadow_undefined_)*/false
  , /*decltype(_impl_.column3d_shadow_undefined_)*/false
  , /*decltype(_impl_.line3d_shadow_undefined_)*/false
  , /*decltype(_impl_.pie3d_shadow_undefined_)*/false
  , /*decltype(_impl_.area_shadow_undefined_)*/false
  , /*decltype(_impl_.bar_shadow_undefined_)*/false
  , /*decltype(_impl_.bubble_shadow_undefined_)*/false
  , /*decltype(_impl_.default_shadow_undefined_)*/false
  , /*decltype(_impl_.line_shadow_undefined_)*/false
  , /*decltype(_impl_.mixed_area_shadow_undefined_)*/false
  , /*decltype(_impl_.mixed_column_shadow_undefined_)*/false
  , /*decltype(_impl_.mixed_line_shadow_undefined_)*/false
  , /*decltype(_impl_.pie_shadow_undefined_)*/false
  , /*decltype(_impl_.radar_area_shadow_undefined_)*/false
  , /*decltype(_impl_.scatter_shadow_undefined_)*/false
  , /*decltype(_impl_.area_stroke_undefined_)*/false
  , /*decltype(_impl_.bar_stroke_undefined_)*/false
  , /*decltype(_impl_.bubble_stroke_undefined_)*/false
  , /*decltype(_impl_.line_stroke_undefined_)*/false
  , /*decltype(_impl_.mixed_area_stroke_undefined_)*/false
  , /*decltype(_impl_.mixed_column_stroke_undefined_)*/false
  , /*decltype(_impl_.mixed_line_stroke_undefined_)*/false
  , /*decltype(_impl_.pie_stroke_undefined_)*/false
  , /*decltype(_impl_.radar_area_stroke_undefined_)*/false
  , /*decltype(_impl_.scatter_stroke_undefined_)*/false
  , /*decltype(_impl_.area_symbol_fill_undefined_)*/false
  , /*decltype(_impl_.bubble_symbol_fill_undefined_)*/false
  , /*decltype(_impl_.line_symbol_fill_undefined_)*/false
  , /*decltype(_impl_.mixed_area_symbol_fill_undefined_)*/false
  , /*decltype(_impl_.mixed_line_symbol_fill_undefined_)*/false
  , /*decltype(_impl_.radar_area_symbol_fill_undefined_)*/false
  , /*decltype(_impl_.scatter_symbol_fill_undefined_)*/false
  , /*decltype(_impl_.area_symbol_fill_use_series_fill_undefined_)*/false
  , /*decltype(_impl_.line_symbol_fill_use_series_fill_undefined_)*/false
  , /*decltype(_impl_.mixed_area_symbol_fill_use_series_fill_undefined_)*/false
  , /*decltype(_impl_.mixed_line_symbol_fill_use_series_fill_undefined_)*/false
  , /*decltype(_impl_.radar_area_symbol_fill_use_series_fill_undefined_)*/false
  , /*decltype(_impl_.area_symbol_fill_use_series_stroke_undefined_)*/false
  , /*decltype(_impl_.bubble_symbol_fill_use_series_stroke_undefined_)*/false
  , /*decltype(_impl_.line_symbol_fill_use_series_stroke_undefined_)*/false
  , /*decltype(_impl_.mixed_area_symbol_fill_use_series_stroke_undefined_)*/false
  , /*decltype(_impl_.mixed_line_symbol_fill_use_series_stroke_undefined_)*/false
  , /*decltype(_impl_.radar_area_symbol_fill_use_series_stroke_undefined_)*/false
  , /*decltype(_impl_.scatter_symbol_fill_use_series_stroke_undefined_)*/false
  , /*decltype(_impl_.area_symbol_size_undefined_)*/false
  , /*decltype(_impl_.line_symbol_size_undefined_)*/false
  , /*decltype(_impl_.mixed_area_symbol_size_undefined_)*/false
  , /*decltype(_impl_.mixed_line_symbol_size_undefined_)*/false
  , /*decltype(_impl_.radar_area_symbol_size_undefined_)*/false
  , /*decltype(_impl_.scatter_symbol_size_undefined_)*/false
  , /*decltype(_impl_.area_symbol_stroke_undefined_)*/false
  , /*decltype(_impl_.bubble_symbol_stroke_undefined_)*/false
  , /*decltype(_impl_.line_symbol_stroke_undefined_)*/false
  , /*decltype(_impl_.mixed_area_symbol_stroke_undefined_)*/false
  , /*decltype(_impl_.mixed_line_symbol_stroke_undefined_)*/false
  , /*decltype(_impl_.radar_area_symbol_stroke_undefined_)*/false
  , /*decltype(_impl_.scatter_symbol_stroke_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_shadow_undefined_)*/false
  , /*decltype(_impl_.default_trend_line_stroke_undefined_)*/false
  , /*decltype(_impl_.default_trendline_equation_opacity_undefined_)*/false
  , /*decltype(_impl_.default_trendline_equation_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.default_trendline_r_squared_opacity_undefined_)*/false
  , /*decltype(_impl_.default_trendline_r_squared_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.area_value_label_position_undefined_)*/false
  , /*decltype(_impl_.bar_value_label_position_undefined_)*/false
  , /*decltype(_impl_.bubble_value_label_position_undefined_)*/false
  , /*decltype(_impl_.default_value_label_position_undefined_)*/false
  , /*decltype(_impl_.line_value_label_position_undefined_)*/false
  , /*decltype(_impl_.mixed_area_value_label_position_undefined_)*/false
  , /*decltype(_impl_.mixed_column_value_label_position_undefined_)*/false
  , /*decltype(_impl_.mixed_line_value_label_position_undefined_)*/false
  , /*decltype(_impl_.radar_area_value_label_position_undefined_)*/false
  , /*decltype(_impl_.scatter_value_label_position_undefined_)*/false
  , /*decltype(_impl_.stacked_area_value_label_position_undefined_)*/false
  , /*decltype(_impl_.stacked_bar_value_label_position_undefined_)*/false
  , /*decltype(_impl_.default_value_label_spacing_undefined_)*/false} {}
struct ChartSeriesStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChartSeriesStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChartSeriesStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartSeriesStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChartSeriesStylePropertyChangeSetArchiveDefaultTypeInternal _ChartSeriesStylePropertyChangeSetArchive_default_instance_;
PROTOBUF_CONSTEXPR ChartStylePropertyChangeSetArchive::ChartStylePropertyChangeSetArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.default3d_chart_opacity_)*/nullptr
  , /*decltype(_impl_.area3d_lighting_package_)*/nullptr
  , /*decltype(_impl_.bar3d_lighting_package_)*/nullptr
  , /*decltype(_impl_.column3d_lighting_package_)*/nullptr
  , /*decltype(_impl_.default3d_lighting_package_)*/nullptr
  , /*decltype(_impl_.line3d_lighting_package_)*/nullptr
  , /*decltype(_impl_.pie3d_lighting_package_)*/nullptr
  , /*decltype(_impl_.default_background_fill_)*/nullptr
  , /*decltype(_impl_.default_background_stroke_)*/nullptr
  , /*decltype(_impl_.default_border_opacity_)*/nullptr
  , /*decltype(_impl_.default_border_shadow_)*/nullptr
  , /*decltype(_impl_.default_border_stroke_)*/nullptr
  , /*decltype(_impl_.default_combine_layers_)*/nullptr
  , /*decltype(_impl_.default_data_set_name_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.default_grid_background_fill_)*/nullptr
  , /*decltype(_impl_.default_grid_background_opacity_)*/nullptr
  , /*decltype(_impl_.default_inter_bar_gap_)*/nullptr
  , /*decltype(_impl_.default_inter_set_gap_)*/nullptr
  , /*decltype(_impl_.default_radar_radius_gridline_curve_)*/nullptr
  , /*decltype(_impl_.default_rounded_corner_outer_end_only_)*/nullptr
  , /*decltype(_impl_.default_rounded_corner_radius_)*/nullptr
  , /*decltype(_impl_.default_show_border_)*/nullptr
  , /*decltype(_impl_.default_title_color_)*/nullptr
  , /*decltype(_impl_.default_title_paragraph_style_index_)*/nullptr
  , /*decltype(_impl_.default3d_chart_opacity_undefined_)*/false
  , /*decltype(_impl_.area3d_lighting_package_undefined_)*/false
  , /*decltype(_impl_.bar3d_lighting_package_undefined_)*/false
  , /*decltype(_impl_.column3d_lighting_package_undefined_)*/false
  , /*decltype(_impl_.default3d_lighting_package_undefined_)*/false
  , /*decltype(_impl_.line3d_lighting_package_undefined_)*/false
  , /*decltype(_impl_.pie3d_lighting_package_undefined_)*/false
  , /*decltype(_impl_.default_background_fill_undefined_)*/false
  , /*decltype(_impl_.default_background_stroke_undefined_)*/false
  , /*decltype(_impl_.default_border_opacity_undefined_)*/false
  , /*decltype(_impl_.default_border_shadow_undefined_)*/false
  , /*decltype(_impl_.default_border_stroke_undefined_)*/false
  , /*decltype(_impl_.default_combine_layers_undefined_)*/false
  , /*decltype(_impl_.default_data_set_name_paragraph_style_index_undefined_)*/false
  , /*decltype(_impl_.default_grid_background_fill_undefined_)*/false
  , /*decltype(_impl_.default_grid_background_opacity_undefined_)*/false
  , /*decltype(_impl_.default_inter_bar_gap_undefined_)*/false
  , /*decltype(_impl_.default_inter_set_gap_undefined_)*/false
  , /*decltype(_impl_.default_radar_radius_gridline_curve_undefined_)*/false
  , /*decltype(_impl_.default_rounded_corner_outer_end_only_undefined_)*/false
  , /*decltype(_impl_.default_rounded_corner_radius_undefined_)*/false
  , /*decltype(_impl_.default_show_border_undefined_)*/false
  , /*decltype(_impl_.default_title_color_undefined_)*/false
  , /*decltype(_impl_.default_title_paragraph_style_index_undefined_)*/false} {}
struct ChartStylePropertyChangeSetArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChartStylePropertyChangeSetArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChartStylePropertyChangeSetArchiveDefaultTypeInternal() {}
  union {
    ChartStylePropertyChangeSetArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChartStylePropertyChangeSetArchiveDefaultTypeInternal _ChartStylePropertyChangeSetArchive_default_instance_;
}  // namespace TSCHSOS
static ::_pb::Metadata file_level_metadata_TSCHArchives_2esos_2eproto[22];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_TSCHArchives_2esos_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_TSCHArchives_2esos_2eproto = nullptr;

const uint32_t TableStruct_TSCHArchives_2esos_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dLightingPackageArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dLightingPackageArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dLightingPackageArchive, _impl_.chart3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dLightingPackageArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dVectorArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dVectorArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dVectorArchive, _impl_.chart3d_vector_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChart3dVectorArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartErrorBarCustomDataArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartErrorBarCustomDataArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartErrorBarCustomDataArchive, _impl_.chart_error_bar_custom_data_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartErrorBarCustomDataArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive, _impl_.charts_optional_double_archive_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetFormatObjectArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetFormatObjectArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetFormatObjectArchive, _impl_.format_object_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetFormatObjectArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetNumberFormatArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetNumberFormatArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetNumberFormatArchive, _impl_.number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecSetNumberFormatArchive, _impl_.unset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dLightingPackageArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dLightingPackageArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dLightingPackageArchive, _impl_.spec_set_chart3d_lighting_package_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dVectorArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dVectorArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChart3dVectorArchive, _impl_.spec_set_chart3d_vector_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartErrorBarCustomDataArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartErrorBarCustomDataArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartErrorBarCustomDataArchive, _impl_.spec_set_chart_error_bar_custom_data_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive, _impl_.spec_set_charts_optional_double_archive_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecFormatObjectArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecFormatObjectArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecFormatObjectArchive, _impl_.spec_set_format_object_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecNumberFormatArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecNumberFormatArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::SpecNumberFormatArchive, _impl_.spec_set_number_format_),
  0,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default10_date_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default10_date_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default10_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default10_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default3d_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default3d_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_date_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_date_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_duration_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_duration_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_label_explosion_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_label_explosion_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_number_format_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_number_format_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_number_of_decades_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_number_of_decades_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_number_of_major_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_number_of_major_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_number_of_minor_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_number_of_minor_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.category_plot_to_edges_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.category_plot_to_edges_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.category_show_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.category_show_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_show_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_show_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_show_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_show_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.category_show_series_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.category_show_series_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.multi_data_show_series_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.multi_data_show_series_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.category_show_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.category_show_title_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_show_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_show_title_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.category_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.category_title_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.value_title_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_user_max_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_user_max_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_user_min_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_user_min_undefined_),
  0,
  24,
  1,
  25,
  2,
  26,
  3,
  27,
  4,
  28,
  5,
  29,
  6,
  30,
  7,
  31,
  8,
  32,
  9,
  33,
  10,
  34,
  11,
  35,
  12,
  36,
  13,
  37,
  14,
  38,
  15,
  39,
  16,
  40,
  17,
  41,
  18,
  42,
  19,
  43,
  20,
  44,
  21,
  45,
  22,
  46,
  23,
  47,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category3d_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category3d_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value3d_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value3d_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category3d_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category3d_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value3d_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value3d_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_horizontal_spacing_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_horizontal_spacing_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.default_label_angle_baseline_direction_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.default_label_angle_baseline_direction_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.default_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.default_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_labels_orientation_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_labels_orientation_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.default_labels_orientation_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.default_labels_orientation_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_labels_orientation_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_labels_orientation_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_major_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_major_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_major_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_major_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_major_gridline_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_major_gridline_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_major_gridline_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_major_gridline_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_major_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_major_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_major_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_major_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_minor_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_minor_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_minor_gridline_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_minor_gridline_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_minor_gridline_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_minor_gridline_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_minor_gridline_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_minor_gridline_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_minor_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_minor_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_minor_gridline_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_minor_gridline_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_axis_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_axis_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_axis_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_axis_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.default_show_extension_lines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.default_show_extension_lines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_gridline_tickmarks_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_gridline_tickmarks_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_gridline_tickmarks_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_gridline_tickmarks_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_last_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_last_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_major_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_major_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.polar_category_show_major_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.polar_category_show_major_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_major_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_major_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_major_tickmarks_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_major_tickmarks_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_major_tickmarks_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_major_tickmarks_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_minimum_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_minimum_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_minor_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_minor_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_minor_gridlines_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_minor_gridlines_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_minor_tickmarks_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_show_minor_tickmarks_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_minor_tickmarks_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_show_minor_tickmarks_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_tickmark_location_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_tickmark_location_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_tickmark_location_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_tickmark_location_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_title_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_title_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.default_title_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.default_title_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_title_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.value_title_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_vertical_spacing_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive, _impl_.category_vertical_spacing_undefined_),
  0,
  46,
  1,
  47,
  2,
  48,
  3,
  49,
  4,
  50,
  5,
  51,
  6,
  52,
  7,
  53,
  8,
  54,
  9,
  55,
  10,
  56,
  11,
  57,
  12,
  58,
  13,
  59,
  14,
  60,
  15,
  61,
  16,
  62,
  17,
  63,
  18,
  64,
  19,
  65,
  20,
  66,
  21,
  67,
  22,
  68,
  23,
  69,
  24,
  70,
  25,
  71,
  26,
  72,
  27,
  73,
  28,
  74,
  29,
  75,
  30,
  76,
  31,
  77,
  32,
  78,
  33,
  79,
  34,
  80,
  35,
  81,
  36,
  82,
  37,
  83,
  38,
  84,
  39,
  85,
  40,
  86,
  41,
  87,
  42,
  88,
  43,
  89,
  44,
  90,
  45,
  91,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendNonStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _impl_.default_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _impl_.default_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _impl_.default_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _impl_.default_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _impl_.default_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _impl_.default_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _impl_.default_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _impl_.default_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _impl_.default_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive, _impl_.default_stroke_undefined_),
  0,
  5,
  1,
  6,
  2,
  7,
  3,
  8,
  4,
  9,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_bar_shape_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_bar_shape_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_bevel_edges_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_bevel_edges_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_inter_set_depth_gap_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_inter_set_depth_gap_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_rotation_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_rotation_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.area3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.area3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.bar3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.bar3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.column3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.column3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.line3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.line3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.pie3d_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.pie3d_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_viewport_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default3d_viewport_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.area_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.area_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.bar_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.bar_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.bubble_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.bubble_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.line_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.line_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.pie_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.pie_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.scatter_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.scatter_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.stacked_area_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.stacked_area_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.stacked_bar_callout_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.stacked_bar_callout_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_data_set_name_location_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_data_set_name_location_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_donut_place_title_at_center_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_donut_place_title_at_center_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_inner_radius_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_inner_radius_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_multi_data_control_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_multi_data_control_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_pie_start_angle_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_pie_start_angle_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_radar_start_angle_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_radar_start_angle_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_show_legend_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_show_legend_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_show_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_show_title_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_skip_hidden_data_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_skip_hidden_data_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_title_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartNonStylePropertyChangeSetArchive, _impl_.default_title_undefined_),
  0,
  32,
  1,
  33,
  2,
  34,
  3,
  35,
  4,
  36,
  5,
  37,
  6,
  38,
  7,
  39,
  8,
  40,
  9,
  41,
  10,
  42,
  11,
  43,
  12,
  44,
  13,
  45,
  14,
  46,
  15,
  47,
  16,
  48,
  17,
  49,
  18,
  50,
  19,
  51,
  20,
  52,
  21,
  53,
  22,
  54,
  23,
  55,
  24,
  56,
  25,
  57,
  26,
  58,
  27,
  59,
  28,
  60,
  29,
  61,
  30,
  62,
  31,
  63,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_custom_value_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_custom_value_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_show_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_show_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_show_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_show_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_show_value_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_show_value_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_type_undefined_),
  0,
  6,
  1,
  7,
  2,
  8,
  3,
  9,
  4,
  10,
  5,
  11,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _impl_.default_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _impl_.default_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _impl_.default_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _impl_.default_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _impl_.default_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _impl_.default_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _impl_.default_value_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive, _impl_.default_value_label_paragraph_style_index_undefined_),
  0,
  4,
  1,
  5,
  2,
  6,
  3,
  7,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default10_date_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default10_date_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default10_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default10_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie10_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie10_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie23_label_explosion_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie23_label_explosion_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_adjustment_scale_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_adjustment_scale_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_date_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_date_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_duration_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_duration_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.area_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.area_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bar_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bar_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.stacked_area_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.stacked_area_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.stacked_bar_enable_callout_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.stacked_bar_enable_callout_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_custom_negative_data_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_custom_negative_data_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_custom_negative_data_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_custom_negative_data_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_custom_positive_data_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_custom_positive_data_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_custom_positive_data_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_custom_positive_data_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_fixed_value_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_fixed_value_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_fixed_value_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_fixed_value_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_percent_value_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_percent_value_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_percent_value_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_percent_value_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_setting_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_setting_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_setting_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_setting_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_std_dev_value_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_std_dev_value_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_std_dev_value_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_std_dev_value_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_type_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_error_bar_type_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_label_explosion_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_label_explosion_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_line_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_line_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.radar_area_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.radar_area_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_number_format_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_number_format_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_number_format_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_number_format_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.stacked_percent_number_format_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.stacked_percent_number_format_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_series_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_series_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_show_error_bar_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_show_error_bar_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_show_error_bar_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_show_error_bar_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_show_labels_in_front_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_show_labels_in_front_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_show_labels_in_front_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_show_labels_in_front_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_show_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_show_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_show_negative_data_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_show_negative_data_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_show_series_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_show_series_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_show_series_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_show_series_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_show_series_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_show_series_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.area_show_symbol_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.area_show_symbol_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_show_symbol_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_show_symbol_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_area_show_symbol_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_area_show_symbol_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_line_show_symbol_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_line_show_symbol_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.radar_area_show_symbol_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.radar_area_show_symbol_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_show_symbol_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_show_symbol_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_show_trend_line_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_show_trend_line_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.area_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.area_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bar_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bar_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.radar_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.radar_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_show_value_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_show_value_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_size_dimension_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_size_dimension_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.area_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.area_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bar_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bar_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.stacked_area_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.stacked_area_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.stacked_bar_stack_labels_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.stacked_bar_stack_labels_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.area_symbol_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.area_symbol_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_symbol_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.line_symbol_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.radar_area_symbol_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.radar_area_symbol_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_symbol_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_symbol_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_equation_offset_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_equation_offset_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_equation_offset_y_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_equation_offset_y_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_label_string_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_label_string_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_order_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_order_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_period_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_period_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_r_squared_offset_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_r_squared_offset_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_r_squared_offset_y_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_r_squared_offset_y_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_show_equation_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_show_equation_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_show_label_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_show_label_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_show_r2_value_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_show_r2_value_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_type_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_trend_line_type_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_value_labels_axis_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.bubble_value_labels_axis_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_value_labels_axis_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.scatter_value_labels_axis_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_wedge_explosion_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.pie_wedge_explosion_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_y_axis_ordinal_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_y_axis_ordinal_undefined_),
  0,
  98,
  1,
  99,
  2,
  100,
  3,
  101,
  4,
  102,
  5,
  103,
  6,
  104,
  7,
  105,
  8,
  106,
  9,
  107,
  10,
  108,
  11,
  109,
  12,
  110,
  13,
  111,
  14,
  112,
  15,
  113,
  16,
  114,
  17,
  115,
  18,
  116,
  19,
  117,
  20,
  118,
  21,
  119,
  22,
  120,
  23,
  121,
  24,
  122,
  25,
  123,
  26,
  124,
  27,
  125,
  28,
  126,
  29,
  127,
  30,
  128,
  31,
  129,
  32,
  130,
  33,
  131,
  34,
  132,
  35,
  133,
  36,
  134,
  37,
  135,
  38,
  136,
  39,
  137,
  40,
  138,
  41,
  139,
  42,
  140,
  43,
  141,
  44,
  142,
  45,
  143,
  46,
  144,
  47,
  145,
  48,
  146,
  49,
  147,
  50,
  148,
  51,
  149,
  52,
  150,
  53,
  151,
  54,
  152,
  55,
  153,
  56,
  154,
  57,
  155,
  58,
  156,
  59,
  157,
  60,
  158,
  61,
  159,
  62,
  160,
  63,
  161,
  64,
  162,
  65,
  163,
  66,
  164,
  67,
  165,
  68,
  166,
  69,
  167,
  70,
  168,
  71,
  169,
  72,
  170,
  73,
  171,
  74,
  172,
  75,
  173,
  76,
  174,
  77,
  175,
  78,
  176,
  79,
  177,
  80,
  178,
  81,
  179,
  82,
  180,
  83,
  181,
  84,
  182,
  85,
  183,
  86,
  184,
  87,
  185,
  88,
  186,
  89,
  187,
  90,
  188,
  91,
  189,
  92,
  190,
  93,
  191,
  94,
  192,
  95,
  193,
  96,
  194,
  97,
  195,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_callout_line_end_line_end_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_callout_line_end_line_end_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_callout_line_start_line_end_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_callout_line_start_line_end_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_callout_line_stroke_style_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_callout_line_stroke_style_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_line_end_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_line_end_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_line_end_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_line_end_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_spacing_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_spacing_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_spacing_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_spacing_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_stroke_scatter_x_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_error_bar_stroke_scatter_x_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area3d_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area3d_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar3d_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar3d_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.column3d_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.column3d_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line3d_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line3d_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie3d_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie3d_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.column_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.column_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_column_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_column_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_fill_use_series_stroke_alpha_multiplier_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_fill_use_series_stroke_alpha_multiplier_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.donut_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.donut_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.donut_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.donut_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_outside_label_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_outside_label_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area3d_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area3d_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar3d_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar3d_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.column3d_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.column3d_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line3d_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line3d_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie3d_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie3d_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_column_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_column_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_column_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_column_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.pie_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_symbol_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_symbol_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_symbol_fill_use_series_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_symbol_fill_use_series_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_symbol_fill_use_series_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_symbol_fill_use_series_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_fill_use_series_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_fill_use_series_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_fill_use_series_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_fill_use_series_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_symbol_fill_use_series_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_symbol_fill_use_series_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_symbol_fill_use_series_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_symbol_fill_use_series_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_symbol_size_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_symbol_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_symbol_size_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_symbol_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_size_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_size_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_symbol_size_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_symbol_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_symbol_size_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_symbol_size_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_symbol_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_symbol_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trend_line_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trend_line_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trend_line_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trend_line_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trendline_equation_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trendline_equation_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trendline_equation_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trendline_equation_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trendline_r_squared_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trendline_r_squared_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trendline_r_squared_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_trendline_r_squared_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.area_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bar_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.bubble_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.line_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_area_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_column_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_column_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.mixed_line_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.radar_area_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.scatter_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.stacked_area_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.stacked_area_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.stacked_bar_value_label_position_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.stacked_bar_value_label_position_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_value_label_spacing_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive, _impl_.default_value_label_spacing_undefined_),
  0,
  118,
  1,
  119,
  2,
  120,
  3,
  121,
  4,
  122,
  5,
  123,
  6,
  124,
  7,
  125,
  8,
  126,
  9,
  127,
  10,
  128,
  11,
  129,
  12,
  130,
  13,
  131,
  14,
  132,
  15,
  133,
  16,
  134,
  17,
  135,
  18,
  136,
  19,
  137,
  20,
  138,
  21,
  139,
  22,
  140,
  23,
  141,
  24,
  142,
  25,
  143,
  26,
  144,
  27,
  145,
  28,
  146,
  29,
  147,
  30,
  148,
  31,
  149,
  32,
  150,
  33,
  151,
  34,
  152,
  35,
  153,
  36,
  154,
  37,
  155,
  38,
  156,
  39,
  157,
  40,
  158,
  41,
  159,
  42,
  160,
  43,
  161,
  44,
  162,
  45,
  163,
  46,
  164,
  47,
  165,
  48,
  166,
  49,
  167,
  50,
  168,
  51,
  169,
  52,
  170,
  53,
  171,
  54,
  172,
  55,
  173,
  56,
  174,
  57,
  175,
  58,
  176,
  59,
  177,
  60,
  178,
  61,
  179,
  62,
  180,
  63,
  181,
  64,
  182,
  65,
  183,
  66,
  184,
  67,
  185,
  68,
  186,
  69,
  187,
  70,
  188,
  71,
  189,
  72,
  190,
  73,
  191,
  74,
  192,
  75,
  193,
  76,
  194,
  77,
  195,
  78,
  196,
  79,
  197,
  80,
  198,
  81,
  199,
  82,
  200,
  83,
  201,
  84,
  202,
  85,
  203,
  86,
  204,
  87,
  205,
  88,
  206,
  89,
  207,
  90,
  208,
  91,
  209,
  92,
  210,
  93,
  211,
  94,
  212,
  95,
  213,
  96,
  214,
  97,
  215,
  98,
  216,
  99,
  217,
  100,
  218,
  101,
  219,
  102,
  220,
  103,
  221,
  104,
  222,
  105,
  223,
  106,
  224,
  107,
  225,
  108,
  226,
  109,
  227,
  110,
  228,
  111,
  229,
  112,
  230,
  113,
  231,
  114,
  232,
  115,
  233,
  116,
  234,
  117,
  235,
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default3d_chart_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default3d_chart_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.area3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.area3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.bar3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.bar3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.column3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.column3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.line3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.line3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.pie3d_lighting_package_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.pie3d_lighting_package_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_background_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_background_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_background_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_background_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_border_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_border_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_border_shadow_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_border_shadow_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_border_stroke_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_border_stroke_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_combine_layers_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_combine_layers_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_data_set_name_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_data_set_name_paragraph_style_index_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_grid_background_fill_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_grid_background_fill_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_grid_background_opacity_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_grid_background_opacity_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_inter_bar_gap_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_inter_bar_gap_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_inter_set_gap_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_inter_set_gap_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_radar_radius_gridline_curve_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_radar_radius_gridline_curve_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_rounded_corner_outer_end_only_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_rounded_corner_outer_end_only_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_rounded_corner_radius_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_rounded_corner_radius_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_show_border_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_show_border_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_title_color_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_title_color_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_title_paragraph_style_index_),
  PROTOBUF_FIELD_OFFSET(::TSCHSOS::ChartStylePropertyChangeSetArchive, _impl_.default_title_paragraph_style_index_undefined_),
  0,
  24,
  1,
  25,
  2,
  26,
  3,
  27,
  4,
  28,
  5,
  29,
  6,
  30,
  7,
  31,
  8,
  32,
  9,
  33,
  10,
  34,
  11,
  35,
  12,
  36,
  13,
  37,
  14,
  38,
  15,
  39,
  16,
  40,
  17,
  41,
  18,
  42,
  19,
  43,
  20,
  44,
  21,
  45,
  22,
  46,
  23,
  47,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::TSCHSOS::SpecSetChart3dLightingPackageArchive)},
  { 10, 18, -1, sizeof(::TSCHSOS::SpecSetChart3dVectorArchive)},
  { 20, 28, -1, sizeof(::TSCHSOS::SpecSetChartErrorBarCustomDataArchive)},
  { 30, 38, -1, sizeof(::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive)},
  { 40, 48, -1, sizeof(::TSCHSOS::SpecSetFormatObjectArchive)},
  { 50, 58, -1, sizeof(::TSCHSOS::SpecSetNumberFormatArchive)},
  { 60, 67, -1, sizeof(::TSCHSOS::SpecChart3dLightingPackageArchive)},
  { 68, 75, -1, sizeof(::TSCHSOS::SpecChart3dVectorArchive)},
  { 76, 83, -1, sizeof(::TSCHSOS::SpecChartErrorBarCustomDataArchive)},
  { 84, 91, -1, sizeof(::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive)},
  { 92, 99, -1, sizeof(::TSCHSOS::SpecFormatObjectArchive)},
  { 100, 107, -1, sizeof(::TSCHSOS::SpecNumberFormatArchive)},
  { 108, 162, -1, sizeof(::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive)},
  { 210, 308, -1, sizeof(::TSCHSOS::ChartAxisStylePropertyChangeSetArchive)},
  { 400, -1, -1, sizeof(::TSCHSOS::ChartLegendNonStylePropertyChangeSetArchive)},
  { 406, 422, -1, sizeof(::TSCHSOS::ChartLegendStylePropertyChangeSetArchive)},
  { 432, 502, -1, sizeof(::TSCHSOS::ChartNonStylePropertyChangeSetArchive)},
  { 566, 584, -1, sizeof(::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive)},
  { 596, 610, -1, sizeof(::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive)},
  { 618, 820, -1, sizeof(::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive)},
  { 1016, 1258, -1, sizeof(::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive)},
  { 1494, 1548, -1, sizeof(::TSCHSOS::ChartStylePropertyChangeSetArchive)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::TSCHSOS::_SpecSetChart3dLightingPackageArchive_default_instance_._instance,
  &::TSCHSOS::_SpecSetChart3dVectorArchive_default_instance_._instance,
  &::TSCHSOS::_SpecSetChartErrorBarCustomDataArchive_default_instance_._instance,
  &::TSCHSOS::_SpecSetChartsOptionalDoubleArchiveArchive_default_instance_._instance,
  &::TSCHSOS::_SpecSetFormatObjectArchive_default_instance_._instance,
  &::TSCHSOS::_SpecSetNumberFormatArchive_default_instance_._instance,
  &::TSCHSOS::_SpecChart3dLightingPackageArchive_default_instance_._instance,
  &::TSCHSOS::_SpecChart3dVectorArchive_default_instance_._instance,
  &::TSCHSOS::_SpecChartErrorBarCustomDataArchive_default_instance_._instance,
  &::TSCHSOS::_SpecChartsOptionalDoubleArchiveArchive_default_instance_._instance,
  &::TSCHSOS::_SpecFormatObjectArchive_default_instance_._instance,
  &::TSCHSOS::_SpecNumberFormatArchive_default_instance_._instance,
  &::TSCHSOS::_ChartAxisNonStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSCHSOS::_ChartAxisStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSCHSOS::_ChartLegendNonStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSCHSOS::_ChartLegendStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSCHSOS::_ChartNonStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSCHSOS::_ChartReferenceLineNonStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSCHSOS::_ChartReferenceLineStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSCHSOS::_ChartSeriesNonStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSCHSOS::_ChartSeriesStylePropertyChangeSetArchive_default_instance_._instance,
  &::TSCHSOS::_ChartStylePropertyChangeSetArchive_default_instance_._instance,
};

const char descriptor_table_protodef_TSCHArchives_2esos_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026TSCHArchives.sos.proto\022\007TSCHSOS\032\024TSCH3"
  "DArchives.proto\032\031TSCHArchives.Common.pro"
  "to\032\025TSDArchives.sos.proto\032\021TSKArchives.p"
  "roto\032\025TSSArchives.sos.proto\"|\n$SpecSetCh"
  "art3dLightingPackageArchive\022E\n\030chart3d_l"
  "ighting_package\030\001 \001(\0132#.TSCH.Chart3DLigh"
  "tingPackageArchive\022\r\n\005unset\030\002 \002(\010\"`\n\033Spe"
  "cSetChart3dVectorArchive\0222\n\016chart3d_vect"
  "or\030\001 \001(\0132\032.TSCH.Chart3DVectorArchive\022\r\n\005"
  "unset\030\002 \002(\010\"\207\001\n%SpecSetChartErrorBarCust"
  "omDataArchive\022O\n\033chart_error_bar_custom_"
  "data\030\001 \001(\0132*.TSCH.ChartsNSArrayOfNSNumbe"
  "rDoubleArchive\022\r\n\005unset\030\002 \002(\010\"\205\001\n)SpecSe"
  "tChartsOptionalDoubleArchiveArchive\022I\n\036c"
  "harts_optional_double_archive\030\001 \001(\0132!.TS"
  "CH.ChartsNSNumberDoubleArchive\022\r\n\005unset\030"
  "\002 \002(\010\"\\\n\032SpecSetFormatObjectArchive\022/\n\rf"
  "ormat_object\030\001 \001(\0132\030.TSK.FormatStructArc"
  "hive\022\r\n\005unset\030\002 \002(\010\"\\\n\032SpecSetNumberForm"
  "atArchive\022/\n\rnumber_format\030\001 \001(\0132\030.TSK.F"
  "ormatStructArchive\022\r\n\005unset\030\002 \002(\010\"}\n!Spe"
  "cChart3dLightingPackageArchive\022X\n!spec_s"
  "et_chart3d_lighting_package\030\001 \001(\0132-.TSCH"
  "SOS.SpecSetChart3dLightingPackageArchive"
  "\"a\n\030SpecChart3dVectorArchive\022E\n\027spec_set"
  "_chart3d_vector\030\001 \001(\0132$.TSCHSOS.SpecSetC"
  "hart3dVectorArchive\"\202\001\n\"SpecChartErrorBa"
  "rCustomDataArchive\022\\\n$spec_set_chart_err"
  "or_bar_custom_data\030\001 \001(\0132..TSCHSOS.SpecS"
  "etChartErrorBarCustomDataArchive\"\215\001\n&Spe"
  "cChartsOptionalDoubleArchiveArchive\022c\n\'s"
  "pec_set_charts_optional_double_archive\030\001"
  " \001(\01322.TSCHSOS.SpecSetChartsOptionalDoub"
  "leArchiveArchive\"^\n\027SpecFormatObjectArch"
  "ive\022C\n\026spec_set_format_object\030\001 \001(\0132#.TS"
  "CHSOS.SpecSetFormatObjectArchive\"^\n\027Spec"
  "NumberFormatArchive\022C\n\026spec_set_number_f"
  "ormat\030\001 \001(\0132#.TSCHSOS.SpecSetNumberForma"
  "tArchive\"\264\023\n)ChartAxisNonStylePropertyCh"
  "angeSetArchive\022\?\n\025default10_date_format\030"
  "\001 \001(\0132 .TSCHSOS.SpecFormatObjectArchive\022"
  "\'\n\037default10_date_format_undefined\030\002 \001(\010"
  "\022A\n\027default10_number_format\030\003 \001(\0132 .TSCH"
  "SOS.SpecNumberFormatArchive\022)\n!default10"
  "_number_format_undefined\030\004 \001(\010\022<\n\030defaul"
  "t3d_label_position\030\005 \001(\0132\032.TSSSOS.SpecIn"
  "tegerArchive\022*\n\"default3d_label_position"
  "_undefined\030\006 \001(\010\022=\n\023default_date_format\030"
  "\007 \001(\0132 .TSCHSOS.SpecFormatObjectArchive\022"
  "%\n\035default_date_format_undefined\030\010 \001(\010\022A"
  "\n\027default_duration_format\030\t \001(\0132 .TSCHSO"
  "S.SpecFormatObjectArchive\022)\n!default_dur"
  "ation_format_undefined\030\n \001(\010\022:\n\027default_"
  "label_explosion\030\013 \001(\0132\031.TSSSOS.SpecDoubl"
  "eArchive\022)\n!default_label_explosion_unde"
  "fined\030\014 \001(\010\022\?\n\025default_number_format\030\r \001"
  "(\0132 .TSCHSOS.SpecNumberFormatArchive\022\'\n\037"
  "default_number_format_undefined\030\016 \001(\010\022>\n"
  "\032default_number_format_type\030\017 \001(\0132\032.TSSS"
  "OS.SpecIntegerArchive\022,\n$default_number_"
  "format_type_undefined\030\020 \001(\010\022;\n\027value_num"
  "ber_of_decades\030\021 \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\022)\n!value_number_of_decades_unde"
  "fined\030\022 \001(\010\022C\n\037value_number_of_major_gri"
  "dlines\030\023 \001(\0132\032.TSSSOS.SpecIntegerArchive"
  "\0221\n)value_number_of_major_gridlines_unde"
  "fined\030\024 \001(\010\022C\n\037value_number_of_minor_gri"
  "dlines\030\025 \001(\0132\032.TSSSOS.SpecIntegerArchive"
  "\0221\n)value_number_of_minor_gridlines_unde"
  "fined\030\026 \001(\010\0227\n\026category_plot_to_edges\030\027 "
  "\001(\0132\027.TSSSOS.SpecBoolArchive\022(\n category"
  "_plot_to_edges_undefined\030\030 \001(\010\022/\n\013value_"
  "scale\030\031 \001(\0132\032.TSSSOS.SpecIntegerArchive\022"
  "\035\n\025value_scale_undefined\030\032 \001(\010\0225\n\024catego"
  "ry_show_labels\030\033 \001(\0132\027.TSSSOS.SpecBoolAr"
  "chive\022&\n\036category_show_labels_undefined\030"
  "\034 \001(\010\0224\n\023default_show_labels\030\035 \001(\0132\027.TSS"
  "SOS.SpecBoolArchive\022%\n\035default_show_labe"
  "ls_undefined\030\036 \001(\010\0222\n\021value_show_labels\030"
  "\037 \001(\0132\027.TSSSOS.SpecBoolArchive\022#\n\033value_"
  "show_labels_undefined\030  \001(\010\022<\n\033category_"
  "show_series_labels\030! \001(\0132\027.TSSSOS.SpecBo"
  "olArchive\022-\n%category_show_series_labels"
  "_undefined\030\" \001(\010\022>\n\035multi_data_show_seri"
  "es_labels\030# \001(\0132\027.TSSSOS.SpecBoolArchive"
  "\022/\n\'multi_data_show_series_labels_undefi"
  "ned\030$ \001(\010\0224\n\023category_show_title\030% \001(\0132\027"
  ".TSSSOS.SpecBoolArchive\022%\n\035category_show"
  "_title_undefined\030& \001(\010\0221\n\020value_show_tit"
  "le\030\' \001(\0132\027.TSSSOS.SpecBoolArchive\022\"\n\032val"
  "ue_show_title_undefined\030( \001(\010\0221\n\016categor"
  "y_title\030) \001(\0132\031.TSSSOS.SpecStringArchive"
  "\022 \n\030category_title_undefined\030* \001(\010\022.\n\013va"
  "lue_title\030+ \001(\0132\031.TSSSOS.SpecStringArchi"
  "ve\022\035\n\025value_title_undefined\030, \001(\010\022I\n\020def"
  "ault_user_max\030- \001(\0132/.TSCHSOS.SpecCharts"
  "OptionalDoubleArchiveArchive\022\"\n\032default_"
  "user_max_undefined\030. \001(\010\022I\n\020default_user"
  "_min\030/ \001(\0132/.TSCHSOS.SpecChartsOptionalD"
  "oubleArchiveArchive\022\"\n\032default_user_min_"
  "undefined\0300 \001(\010\"\357(\n&ChartAxisStyleProper"
  "tyChangeSetArchive\022>\n\033category3d_gridlin"
  "e_opacity\030\001 \001(\0132\031.TSSSOS.SpecDoubleArchi"
  "ve\022-\n%category3d_gridline_opacity_undefi"
  "ned\030\002 \001(\010\022;\n\030value3d_gridline_opacity\030\003 "
  "\001(\0132\031.TSSSOS.SpecDoubleArchive\022*\n\"value3"
  "d_gridline_opacity_undefined\030\004 \001(\010\022=\n\032ca"
  "tegory3d_gridline_stroke\030\005 \001(\0132\031.TSDSOS."
  "SpecStrokeArchive\022,\n$category3d_gridline"
  "_stroke_undefined\030\006 \001(\010\022:\n\027value3d_gridl"
  "ine_stroke\030\007 \001(\0132\031.TSDSOS.SpecStrokeArch"
  "ive\022)\n!value3d_gridline_stroke_undefined"
  "\030\010 \001(\010\022\?\n\033category_horizontal_spacing\030\t "
  "\001(\0132\032.TSSSOS.SpecIntegerArchive\022-\n%categ"
  "ory_horizontal_spacing_undefined\030\n \001(\010\022J"
  "\n&default_label_angle_baseline_direction"
  "\030\013 \001(\0132\032.TSSSOS.SpecIntegerArchive\0228\n0de"
  "fault_label_angle_baseline_direction_und"
  "efined\030\014 \001(\010\022H\n$category_label_paragraph"
  "_style_index\030\r \001(\0132\032.TSSSOS.SpecIntegerA"
  "rchive\0226\n.category_label_paragraph_style"
  "_index_undefined\030\016 \001(\010\022G\n#default_label_"
  "paragraph_style_index\030\017 \001(\0132\032.TSSSOS.Spe"
  "cIntegerArchive\0225\n-default_label_paragra"
  "ph_style_index_undefined\030\020 \001(\010\022E\n!value_"
  "label_paragraph_style_index\030\021 \001(\0132\032.TSSS"
  "OS.SpecIntegerArchive\0223\n+value_label_par"
  "agraph_style_index_undefined\030\022 \001(\010\022>\n\033ca"
  "tegory_labels_orientation\030\023 \001(\0132\031.TSSSOS"
  ".SpecDoubleArchive\022-\n%category_labels_or"
  "ientation_undefined\030\024 \001(\010\022=\n\032default_lab"
  "els_orientation\030\025 \001(\0132\031.TSSSOS.SpecDoubl"
  "eArchive\022,\n$default_labels_orientation_u"
  "ndefined\030\026 \001(\010\022;\n\030value_labels_orientati"
  "on\030\027 \001(\0132\031.TSSSOS.SpecDoubleArchive\022*\n\"v"
  "alue_labels_orientation_undefined\030\030 \001(\010\022"
  "B\n\037category_major_gridline_opacity\030\031 \001(\013"
  "2\031.TSSSOS.SpecDoubleArchive\0221\n)category_"
  "major_gridline_opacity_undefined\030\032 \001(\010\022\?"
  "\n\034value_major_gridline_opacity\030\033 \001(\0132\031.T"
  "SSSOS.SpecDoubleArchive\022.\n&value_major_g"
  "ridline_opacity_undefined\030\034 \001(\010\022A\n\036categ"
  "ory_major_gridline_shadow\030\035 \001(\0132\031.TSDSOS"
  ".SpecShadowArchive\0220\n(category_major_gri"
  "dline_shadow_undefined\030\036 \001(\010\022>\n\033value_ma"
  "jor_gridline_shadow\030\037 \001(\0132\031.TSDSOS.SpecS"
  "hadowArchive\022-\n%value_major_gridline_sha"
  "dow_undefined\030  \001(\010\022A\n\036category_major_gr"
  "idline_stroke\030! \001(\0132\031.TSDSOS.SpecStrokeA"
  "rchive\0220\n(category_major_gridline_stroke"
  "_undefined\030\" \001(\010\022>\n\033value_major_gridline"
  "_stroke\030# \001(\0132\031.TSDSOS.SpecStrokeArchive"
  "\022-\n%value_major_gridline_stroke_undefine"
  "d\030$ \001(\010\022B\n\037category_minor_gridline_opaci"
  "ty\030% \001(\0132\031.TSSSOS.SpecDoubleArchive\0221\n)c"
  "ategory_minor_gridline_opacity_undefined"
  "\030& \001(\010\022\?\n\034value_minor_gridline_opacity\030\'"
  " \001(\0132\031.TSSSOS.SpecDoubleArchive\022.\n&value"
  "_minor_gridline_opacity_undefined\030( \001(\010\022"
  "A\n\036category_minor_gridline_shadow\030) \001(\0132"
  "\031.TSDSOS.SpecShadowArchive\0220\n(category_m"
  "inor_gridline_shadow_undefined\030* \001(\010\022>\n\033"
  "value_minor_gridline_shadow\030+ \001(\0132\031.TSDS"
  "OS.SpecShadowArchive\022-\n%value_minor_grid"
  "line_shadow_undefined\030, \001(\010\022A\n\036category_"
  "minor_gridline_stroke\030- \001(\0132\031.TSDSOS.Spe"
  "cStrokeArchive\0220\n(category_minor_gridlin"
  "e_stroke_undefined\030. \001(\010\022>\n\033value_minor_"
  "gridline_stroke\030/ \001(\0132\031.TSDSOS.SpecStrok"
  "eArchive\022-\n%value_minor_gridline_stroke_"
  "undefined\0300 \001(\010\0223\n\022category_show_axis\0301 "
  "\001(\0132\027.TSSSOS.SpecBoolArchive\022$\n\034category"
  "_show_axis_undefined\0302 \001(\010\0220\n\017value_show"
  "_axis\0303 \001(\0132\027.TSSSOS.SpecBoolArchive\022!\n\031"
  "value_show_axis_undefined\0304 \001(\010\022=\n\034defau"
  "lt_show_extension_lines\0305 \001(\0132\027.TSSSOS.S"
  "pecBoolArchive\022.\n&default_show_extension"
  "_lines_undefined\0306 \001(\010\022A\n category_show_"
  "gridline_tickmarks\0307 \001(\0132\027.TSSSOS.SpecBo"
  "olArchive\0222\n*category_show_gridline_tick"
  "marks_undefined\0308 \001(\010\022>\n\035value_show_grid"
  "line_tickmarks\0309 \001(\0132\027.TSSSOS.SpecBoolAr"
  "chive\022/\n\'value_show_gridline_tickmarks_u"
  "ndefined\030: \001(\010\0229\n\030category_show_last_lab"
  "el\030; \001(\0132\027.TSSSOS.SpecBoolArchive\022*\n\"cat"
  "egory_show_last_label_undefined\030< \001(\010\022>\n"
  "\035category_show_major_gridlines\030= \001(\0132\027.T"
  "SSSOS.SpecBoolArchive\022/\n\'category_show_m"
  "ajor_gridlines_undefined\030> \001(\010\022D\n#polar_"
  "category_show_major_gridlines\030\? \001(\0132\027.TS"
  "SSOS.SpecBoolArchive\0225\n-polar_category_s"
  "how_major_gridlines_undefined\030@ \001(\010\022;\n\032v"
  "alue_show_major_gridlines\030A \001(\0132\027.TSSSOS"
  ".SpecBoolArchive\022,\n$value_show_major_gri"
  "dlines_undefined\030B \001(\010\022>\n\035category_show_"
  "major_tickmarks\030C \001(\0132\027.TSSSOS.SpecBoolA"
  "rchive\022/\n\'category_show_major_tickmarks_"
  "undefined\030D \001(\010\022;\n\032value_show_major_tick"
  "marks\030E \001(\0132\027.TSSSOS.SpecBoolArchive\022,\n$"
  "value_show_major_tickmarks_undefined\030F \001"
  "(\010\0229\n\030value_show_minimum_label\030G \001(\0132\027.T"
  "SSSOS.SpecBoolArchive\022*\n\"value_show_mini"
  "mum_label_undefined\030H \001(\010\022>\n\035category_sh"
  "ow_minor_gridlines\030I \001(\0132\027.TSSSOS.SpecBo"
  "olArchive\022/\n\'category_show_minor_gridlin"
  "es_undefined\030J \001(\010\022;\n\032value_show_minor_g"
  "ridlines\030K \001(\0132\027.TSSSOS.SpecBoolArchive\022"
  ",\n$value_show_minor_gridlines_undefined\030"
  "L \001(\010\022>\n\035category_show_minor_tickmarks\030M"
  " \001(\0132\027.TSSSOS.SpecBoolArchive\022/\n\'categor"
  "y_show_minor_tickmarks_undefined\030N \001(\010\022;"
  "\n\032value_show_minor_tickmarks\030O \001(\0132\027.TSS"
  "SOS.SpecBoolArchive\022,\n$value_show_minor_"
  "tickmarks_undefined\030P \001(\010\022>\n\032category_ti"
  "ckmark_location\030Q \001(\0132\032.TSSSOS.SpecInteg"
  "erArchive\022,\n$category_tickmark_location_"
  "undefined\030R \001(\010\022;\n\027value_tickmark_locati"
  "on\030S \001(\0132\032.TSSSOS.SpecIntegerArchive\022)\n!"
  "value_tickmark_location_undefined\030T \001(\010\022"
  "H\n$category_title_paragraph_style_index\030"
  "U \001(\0132\032.TSSSOS.SpecIntegerArchive\0226\n.cat"
  "egory_title_paragraph_style_index_undefi"
  "ned\030V \001(\010\022G\n#default_title_paragraph_sty"
  "le_index\030W \001(\0132\032.TSSSOS.SpecIntegerArchi"
  "ve\0225\n-default_title_paragraph_style_inde"
  "x_undefined\030X \001(\010\022E\n!value_title_paragra"
  "ph_style_index\030Y \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\0223\n+value_title_paragraph_style_"
  "index_undefined\030Z \001(\010\022=\n\031category_vertic"
  "al_spacing\030[ \001(\0132\032.TSSSOS.SpecIntegerArc"
  "hive\022+\n#category_vertical_spacing_undefi"
  "ned\030\\ \001(\010\"-\n+ChartLegendNonStyleProperty"
  "ChangeSetArchive\"\372\003\n(ChartLegendStylePro"
  "pertyChangeSetArchive\022-\n\014default_fill\030\001 "
  "\001(\0132\027.TSDSOS.SpecFillArchive\022\036\n\026default_"
  "fill_undefined\030\002 \001(\010\022G\n#default_label_pa"
  "ragraph_style_index\030\003 \001(\0132\032.TSSSOS.SpecI"
  "ntegerArchive\0225\n-default_label_paragraph"
  "_style_index_undefined\030\004 \001(\010\0222\n\017default_"
  "opacity\030\005 \001(\0132\031.TSSSOS.SpecDoubleArchive"
  "\022!\n\031default_opacity_undefined\030\006 \001(\010\0221\n\016d"
  "efault_shadow\030\007 \001(\0132\031.TSDSOS.SpecShadowA"
  "rchive\022 \n\030default_shadow_undefined\030\010 \001(\010"
  "\0221\n\016default_stroke\030\t \001(\0132\031.TSDSOS.SpecSt"
  "rokeArchive\022 \n\030default_stroke_undefined\030"
  "\n \001(\010\"\325\032\n%ChartNonStylePropertyChangeSet"
  "Archive\0227\n\023default3d_bar_shape\030\001 \001(\0132\032.T"
  "SSSOS.SpecIntegerArchive\022%\n\035default3d_ba"
  "r_shape_undefined\030\002 \001(\010\0226\n\025default3d_bev"
  "el_edges\030\003 \001(\0132\027.TSSSOS.SpecBoolArchive\022"
  "\'\n\037default3d_bevel_edges_undefined\030\004 \001(\010"
  "\022@\n\035default3d_inter_set_depth_gap\030\005 \001(\0132"
  "\031.TSSSOS.SpecDoubleArchive\022/\n\'default3d_"
  "inter_set_depth_gap_undefined\030\006 \001(\010\022=\n\022d"
  "efault3d_rotation\030\007 \001(\0132!.TSCHSOS.SpecCh"
  "art3dVectorArchive\022$\n\034default3d_rotation"
  "_undefined\030\010 \001(\010\0227\n\014area3d_scale\030\t \001(\0132!"
  ".TSCHSOS.SpecChart3dVectorArchive\022\036\n\026are"
  "a3d_scale_undefined\030\n \001(\010\0226\n\013bar3d_scale"
  "\030\013 \001(\0132!.TSCHSOS.SpecChart3dVectorArchiv"
  "e\022\035\n\025bar3d_scale_undefined\030\014 \001(\010\0229\n\016colu"
  "mn3d_scale\030\r \001(\0132!.TSCHSOS.SpecChart3dVe"
  "ctorArchive\022 \n\030column3d_scale_undefined\030"
  "\016 \001(\010\022:\n\017default3d_scale\030\017 \001(\0132!.TSCHSOS"
  ".SpecChart3dVectorArchive\022!\n\031default3d_s"
  "cale_undefined\030\020 \001(\010\0227\n\014line3d_scale\030\021 \001"
  "(\0132!.TSCHSOS.SpecChart3dVectorArchive\022\036\n"
  "\026line3d_scale_undefined\030\022 \001(\010\0226\n\013pie3d_s"
  "cale\030\023 \001(\0132!.TSCHSOS.SpecChart3dVectorAr"
  "chive\022\035\n\025pie3d_scale_undefined\030\024 \001(\010\022=\n\022"
  "default3d_viewport\030\025 \001(\0132!.TSCHSOS.SpecC"
  "hart3dVectorArchive\022$\n\034default3d_viewpor"
  "t_undefined\030\026 \001(\010\022:\n\026area_callout_line_t"
  "ype\030\027 \001(\0132\032.TSSSOS.SpecIntegerArchive\022(\n"
  " area_callout_line_type_undefined\030\030 \001(\010\022"
  "9\n\025bar_callout_line_type\030\031 \001(\0132\032.TSSSOS."
  "SpecIntegerArchive\022\'\n\037bar_callout_line_t"
  "ype_undefined\030\032 \001(\010\022<\n\030bubble_callout_li"
  "ne_type\030\033 \001(\0132\032.TSSSOS.SpecIntegerArchiv"
  "e\022*\n\"bubble_callout_line_type_undefined\030"
  "\034 \001(\010\022=\n\031default_callout_line_type\030\035 \001(\013"
  "2\032.TSSSOS.SpecIntegerArchive\022+\n#default_"
  "callout_line_type_undefined\030\036 \001(\010\022:\n\026lin"
  "e_callout_line_type\030\037 \001(\0132\032.TSSSOS.SpecI"
  "ntegerArchive\022(\n line_callout_line_type_"
  "undefined\030  \001(\010\0229\n\025pie_callout_line_type"
  "\030! \001(\0132\032.TSSSOS.SpecIntegerArchive\022\'\n\037pi"
  "e_callout_line_type_undefined\030\" \001(\010\022=\n\031s"
  "catter_callout_line_type\030# \001(\0132\032.TSSSOS."
  "SpecIntegerArchive\022+\n#scatter_callout_li"
  "ne_type_undefined\030$ \001(\010\022B\n\036stacked_area_"
  "callout_line_type\030% \001(\0132\032.TSSSOS.SpecInt"
  "egerArchive\0220\n(stacked_area_callout_line"
  "_type_undefined\030& \001(\010\022A\n\035stacked_bar_cal"
  "lout_line_type\030\' \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\022/\n\'stacked_bar_callout_line_typ"
  "e_undefined\030( \001(\010\022Z\n9default_d_e_p_r_e_c"
  "_a_t_e_d_rounded_corner_outer_end_only\030)"
  " \001(\0132\027.TSSSOS.SpecBoolArchive\022K\nCdefault"
  "_d_e_p_r_e_c_a_t_e_d_rounded_corner_oute"
  "r_end_only_undefined\030* \001(\010\022T\n1default_d_"
  "e_p_r_e_c_a_t_e_d_rounded_corner_radius\030"
  "+ \001(\0132\031.TSSSOS.SpecDoubleArchive\022C\n;defa"
  "ult_d_e_p_r_e_c_a_t_e_d_rounded_corner_r"
  "adius_undefined\030, \001(\010\022B\n\036default_data_se"
  "t_name_location\030- \001(\0132\032.TSSSOS.SpecInteg"
  "erArchive\0220\n(default_data_set_name_locat"
  "ion_undefined\030. \001(\010\022D\n#default_donut_pla"
  "ce_title_at_center\030/ \001(\0132\027.TSSSOS.SpecBo"
  "olArchive\0225\n-default_donut_place_title_a"
  "t_center_undefined\0300 \001(\010\0227\n\024default_inne"
  "r_radius\0301 \001(\0132\031.TSSSOS.SpecDoubleArchiv"
  "e\022&\n\036default_inner_radius_undefined\0302 \001("
  "\010\022C\n\037default_multi_data_control_type\0303 \001"
  "(\0132\032.TSSSOS.SpecIntegerArchive\0221\n)defaul"
  "t_multi_data_control_type_undefined\0304 \001("
  "\010\022:\n\027default_pie_start_angle\0305 \001(\0132\031.TSS"
  "SOS.SpecDoubleArchive\022)\n!default_pie_sta"
  "rt_angle_undefined\0306 \001(\010\022<\n\031default_rada"
  "r_start_angle\0307 \001(\0132\031.TSSSOS.SpecDoubleA"
  "rchive\022+\n#default_radar_start_angle_unde"
  "fined\0308 \001(\010\0224\n\023default_show_legend\0309 \001(\013"
  "2\027.TSSSOS.SpecBoolArchive\022%\n\035default_sho"
  "w_legend_undefined\030: \001(\010\0223\n\022default_show"
  "_title\030; \001(\0132\027.TSSSOS.SpecBoolArchive\022$\n"
  "\034default_show_title_undefined\030< \001(\010\0229\n\030d"
  "efault_skip_hidden_data\030= \001(\0132\027.TSSSOS.S"
  "pecBoolArchive\022*\n\"default_skip_hidden_da"
  "ta_undefined\030> \001(\010\0220\n\rdefault_title\030\? \001("
  "\0132\031.TSSSOS.SpecStringArchive\022\037\n\027default_"
  "title_undefined\030@ \001(\010\"\353\004\n2ChartReference"
  "LineNonStylePropertyChangeSetArchive\022M\n\024"
  "default_custom_value\030\001 \001(\0132/.TSCHSOS.Spe"
  "cChartsOptionalDoubleArchiveArchive\022&\n\036d"
  "efault_custom_value_undefined\030\002 \001(\010\0220\n\rd"
  "efault_label\030\003 \001(\0132\031.TSSSOS.SpecStringAr"
  "chive\022\037\n\027default_label_undefined\030\004 \001(\010\0223"
  "\n\022default_show_label\030\005 \001(\0132\027.TSSSOS.Spec"
  "BoolArchive\022$\n\034default_show_label_undefi"
  "ned\030\006 \001(\010\0222\n\021default_show_line\030\007 \001(\0132\027.T"
  "SSSOS.SpecBoolArchive\022#\n\033default_show_li"
  "ne_undefined\030\010 \001(\010\0229\n\030default_show_value"
  "_label\030\t \001(\0132\027.TSSSOS.SpecBoolArchive\022*\n"
  "\"default_show_value_label_undefined\030\n \001("
  "\010\0220\n\014default_type\030\013 \001(\0132\032.TSSSOS.SpecInt"
  "egerArchive\022\036\n\026default_type_undefined\030\014 "
  "\001(\010\"\347\003\n/ChartReferenceLineStylePropertyC"
  "hangeSetArchive\022G\n#default_label_paragra"
  "ph_style_index\030\001 \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\0225\n-default_label_paragraph_styl"
  "e_index_undefined\030\002 \001(\010\0221\n\016default_shado"
  "w\030\003 \001(\0132\031.TSDSOS.SpecShadowArchive\022 \n\030de"
  "fault_shadow_undefined\030\004 \001(\010\0221\n\016default_"
  "stroke\030\005 \001(\0132\031.TSDSOS.SpecStrokeArchive\022"
  " \n\030default_stroke_undefined\030\006 \001(\010\022M\n)def"
  "ault_value_label_paragraph_style_index\030\007"
  " \001(\0132\032.TSSSOS.SpecIntegerArchive\022;\n3defa"
  "ult_value_label_paragraph_style_index_un"
  "defined\030\010 \001(\010\"\250S\n+ChartSeriesNonStylePro"
  "pertyChangeSetArchive\022\?\n\025default10_date_"
  "format\030\001 \001(\0132 .TSCHSOS.SpecFormatObjectA"
  "rchive\022\'\n\037default10_date_format_undefine"
  "d\030\002 \001(\010\022A\n\027default10_number_format\030\003 \001(\013"
  "2 .TSCHSOS.SpecNumberFormatArchive\022)\n!de"
  "fault10_number_format_undefined\030\004 \001(\010\022=\n"
  "\023pie10_number_format\030\005 \001(\0132 .TSCHSOS.Spe"
  "cNumberFormatArchive\022%\n\035pie10_number_for"
  "mat_undefined\030\006 \001(\010\0228\n\025pie23_label_explo"
  "sion\030\007 \001(\0132\031.TSSSOS.SpecDoubleArchive\022\'\n"
  "\037pie23_label_explosion_undefined\030\010 \001(\010\022:"
  "\n\027bubble_adjustment_scale\030\t \001(\0132\031.TSSSOS"
  ".SpecDoubleArchive\022)\n!bubble_adjustment_"
  "scale_undefined\030\n \001(\010\022=\n\023default_date_fo"
  "rmat\030\013 \001(\0132 .TSCHSOS.SpecFormatObjectArc"
  "hive\022%\n\035default_date_format_undefined\030\014 "
  "\001(\010\022A\n\027default_duration_format\030\r \001(\0132 .T"
  "SCHSOS.SpecFormatObjectArchive\022)\n!defaul"
  "t_duration_format_undefined\030\016 \001(\010\022<\n\030are"
  "a_enable_callout_line\030\017 \001(\0132\032.TSSSOS.Spe"
  "cIntegerArchive\022*\n\"area_enable_callout_l"
  "ine_undefined\030\020 \001(\010\022;\n\027bar_enable_callou"
  "t_line\030\021 \001(\0132\032.TSSSOS.SpecIntegerArchive"
  "\022)\n!bar_enable_callout_line_undefined\030\022 "
  "\001(\010\022>\n\032bubble_enable_callout_line\030\023 \001(\0132"
  "\032.TSSSOS.SpecIntegerArchive\022,\n$bubble_en"
  "able_callout_line_undefined\030\024 \001(\010\022\?\n\033def"
  "ault_enable_callout_line\030\025 \001(\0132\032.TSSSOS."
  "SpecIntegerArchive\022-\n%default_enable_cal"
  "lout_line_undefined\030\026 \001(\010\022<\n\030line_enable"
  "_callout_line\030\027 \001(\0132\032.TSSSOS.SpecInteger"
  "Archive\022*\n\"line_enable_callout_line_unde"
  "fined\030\030 \001(\010\022;\n\027pie_enable_callout_line\030\031"
  " \001(\0132\032.TSSSOS.SpecIntegerArchive\022)\n!pie_"
  "enable_callout_line_undefined\030\032 \001(\010\022\?\n\033s"
  "catter_enable_callout_line\030\033 \001(\0132\032.TSSSO"
  "S.SpecIntegerArchive\022-\n%scatter_enable_c"
  "allout_line_undefined\030\034 \001(\010\022D\n stacked_a"
  "rea_enable_callout_line\030\035 \001(\0132\032.TSSSOS.S"
  "pecIntegerArchive\0222\n*stacked_area_enable"
  "_callout_line_undefined\030\036 \001(\010\022C\n\037stacked"
  "_bar_enable_callout_line\030\037 \001(\0132\032.TSSSOS."
  "SpecIntegerArchive\0221\n)stacked_bar_enable"
  "_callout_line_undefined\030  \001(\010\022[\n&default"
  "_error_bar_custom_negative_data\030! \001(\0132+."
  "TSCHSOS.SpecChartErrorBarCustomDataArchi"
  "ve\0228\n0default_error_bar_custom_negative_"
  "data_undefined\030\" \001(\010\022e\n0default_error_ba"
  "r_custom_negative_data_scatter_x\030# \001(\0132+"
  ".TSCHSOS.SpecChartErrorBarCustomDataArch"
  "ive\022B\n:default_error_bar_custom_negative"
  "_data_scatter_x_undefined\030$ \001(\010\022[\n&defau"
  "lt_error_bar_custom_positive_data\030% \001(\0132"
  "+.TSCHSOS.SpecChartErrorBarCustomDataArc"
  "hive\0228\n0default_error_bar_custom_positiv"
  "e_data_undefined\030& \001(\010\022e\n0default_error_"
  "bar_custom_positive_data_scatter_x\030\' \001(\013"
  "2+.TSCHSOS.SpecChartErrorBarCustomDataAr"
  "chive\022B\n:default_error_bar_custom_positi"
  "ve_data_scatter_x_undefined\030( \001(\010\022@\n\035def"
  "ault_error_bar_fixed_value\030) \001(\0132\031.TSSSO"
  "S.SpecDoubleArchive\022/\n\'default_error_bar"
  "_fixed_value_undefined\030* \001(\010\022J\n\'default_"
  "error_bar_fixed_value_scatter_x\030+ \001(\0132\031."
  "TSSSOS.SpecDoubleArchive\0229\n1default_erro"
  "r_bar_fixed_value_scatter_x_undefined\030, "
  "\001(\010\022B\n\037default_error_bar_percent_value\030-"
  " \001(\0132\031.TSSSOS.SpecDoubleArchive\0221\n)defau"
  "lt_error_bar_percent_value_undefined\030. \001"
  "(\010\022L\n)default_error_bar_percent_value_sc"
  "atter_x\030/ \001(\0132\031.TSSSOS.SpecDoubleArchive"
  "\022;\n3default_error_bar_percent_value_scat"
  "ter_x_undefined\0300 \001(\010\022=\n\031default_error_b"
  "ar_setting\0301 \001(\0132\032.TSSSOS.SpecIntegerArc"
  "hive\022+\n#default_error_bar_setting_undefi"
  "ned\0302 \001(\010\022G\n#default_error_bar_setting_s"
  "catter_x\0303 \001(\0132\032.TSSSOS.SpecIntegerArchi"
  "ve\0225\n-default_error_bar_setting_scatter_"
  "x_undefined\0304 \001(\010\022B\n\037default_error_bar_s"
  "td_dev_value\0305 \001(\0132\031.TSSSOS.SpecDoubleAr"
  "chive\0221\n)default_error_bar_std_dev_value"
  "_undefined\0306 \001(\010\022L\n)default_error_bar_st"
  "d_dev_value_scatter_x\0307 \001(\0132\031.TSSSOS.Spe"
  "cDoubleArchive\022;\n3default_error_bar_std_"
  "dev_value_scatter_x_undefined\0308 \001(\010\022:\n\026d"
  "efault_error_bar_type\0309 \001(\0132\032.TSSSOS.Spe"
  "cIntegerArchive\022(\n default_error_bar_typ"
  "e_undefined\030: \001(\010\022D\n default_error_bar_t"
  "ype_scatter_x\030; \001(\0132\032.TSSSOS.SpecInteger"
  "Archive\0222\n*default_error_bar_type_scatte"
  "r_x_undefined\030< \001(\010\0226\n\023pie_label_explosi"
  "on\030= \001(\0132\031.TSSSOS.SpecDoubleArchive\022%\n\035p"
  "ie_label_explosion_undefined\030> \001(\010\0224\n\020bu"
  "bble_line_type\030\? \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\022\"\n\032bubble_line_type_undefined\030@"
  " \001(\010\0222\n\016line_line_type\030A \001(\0132\032.TSSSOS.Sp"
  "ecIntegerArchive\022 \n\030line_line_type_undef"
  "ined\030B \001(\010\0228\n\024mixed_line_line_type\030C \001(\013"
  "2\032.TSSSOS.SpecIntegerArchive\022&\n\036mixed_li"
  "ne_line_type_undefined\030D \001(\010\0228\n\024radar_ar"
  "ea_line_type\030E \001(\0132\032.TSSSOS.SpecIntegerA"
  "rchive\022&\n\036radar_area_line_type_undefined"
  "\030F \001(\010\0225\n\021scatter_line_type\030G \001(\0132\032.TSSS"
  "OS.SpecIntegerArchive\022#\n\033scatter_line_ty"
  "pe_undefined\030H \001(\010\022\?\n\025default_number_for"
  "mat\030I \001(\0132 .TSCHSOS.SpecNumberFormatArch"
  "ive\022\'\n\037default_number_format_undefined\030J"
  " \001(\010\022;\n\021pie_number_format\030K \001(\0132 .TSCHSO"
  "S.SpecNumberFormatArchive\022#\n\033pie_number_"
  "format_undefined\030L \001(\010\022>\n\032default_number"
  "_format_type\030M \001(\0132\032.TSSSOS.SpecIntegerA"
  "rchive\022,\n$default_number_format_type_und"
  "efined\030N \001(\010\022:\n\026pie_number_format_type\030O"
  " \001(\0132\032.TSSSOS.SpecIntegerArchive\022(\n pie_"
  "number_format_type_undefined\030P \001(\010\022G\n\035st"
  "acked_percent_number_format\030Q \001(\0132 .TSCH"
  "SOS.SpecNumberFormatArchive\022/\n\'stacked_p"
  "ercent_number_format_undefined\030R \001(\010\0227\n\023"
  "default_series_type\030S \001(\0132\032.TSSSOS.SpecI"
  "ntegerArchive\022%\n\035default_series_type_und"
  "efined\030T \001(\010\0227\n\026default_show_error_bar\030U"
  " \001(\0132\027.TSSSOS.SpecBoolArchive\022(\n default"
  "_show_error_bar_undefined\030V \001(\010\022A\n defau"
  "lt_show_error_bar_scatter_x\030W \001(\0132\027.TSSS"
  "OS.SpecBoolArchive\0222\n*default_show_error"
  "_bar_scatter_x_undefined\030X \001(\010\022<\n\033bubble"
  "_show_labels_in_front\030Y \001(\0132\027.TSSSOS.Spe"
  "cBoolArchive\022-\n%bubble_show_labels_in_fr"
  "ont_undefined\030Z \001(\010\022=\n\034default_show_labe"
  "ls_in_front\030[ \001(\0132\027.TSSSOS.SpecBoolArchi"
  "ve\022.\n&default_show_labels_in_front_undef"
  "ined\030\\ \001(\010\0222\n\021scatter_show_line\030] \001(\0132\027."
  "TSSSOS.SpecBoolArchive\022#\n\033scatter_show_l"
  "ine_undefined\030^ \001(\010\022:\n\031bubble_show_negat"
  "ive_data\030_ \001(\0132\027.TSSSOS.SpecBoolArchive\022"
  "+\n#bubble_show_negative_data_undefined\030`"
  " \001(\010\022:\n\031bubble_show_series_labels\030a \001(\0132"
  "\027.TSSSOS.SpecBoolArchive\022+\n#bubble_show_"
  "series_labels_undefined\030b \001(\010\0227\n\026pie_sho"
  "w_series_labels\030c \001(\0132\027.TSSSOS.SpecBoolA"
  "rchive\022(\n pie_show_series_labels_undefin"
  "ed\030d \001(\010\022;\n\032scatter_show_series_labels\030e"
  " \001(\0132\027.TSSSOS.SpecBoolArchive\022,\n$scatter"
  "_show_series_labels_undefined\030f \001(\010\0221\n\020a"
  "rea_show_symbol\030g \001(\0132\027.TSSSOS.SpecBoolA"
  "rchive\022\"\n\032area_show_symbol_undefined\030h \001"
  "(\010\0221\n\020line_show_symbol\030i \001(\0132\027.TSSSOS.Sp"
  "ecBoolArchive\022\"\n\032line_show_symbol_undefi"
  "ned\030j \001(\010\0227\n\026mixed_area_show_symbol\030k \001("
  "\0132\027.TSSSOS.SpecBoolArchive\022(\n mixed_area"
  "_show_symbol_undefined\030l \001(\010\0227\n\026mixed_li"
  "ne_show_symbol\030m \001(\0132\027.TSSSOS.SpecBoolAr"
  "chive\022(\n mixed_line_show_symbol_undefine"
  "d\030n \001(\010\0227\n\026radar_area_show_symbol\030o \001(\0132"
  "\027.TSSSOS.SpecBoolArchive\022(\n radar_area_s"
  "how_symbol_undefined\030p \001(\010\0224\n\023scatter_sh"
  "ow_symbol\030q \001(\0132\027.TSSSOS.SpecBoolArchive"
  "\022%\n\035scatter_show_symbol_undefined\030r \001(\010\022"
  "8\n\027default_show_trend_line\030s \001(\0132\027.TSSSO"
  "S.SpecBoolArchive\022)\n!default_show_trend_"
  "line_undefined\030t \001(\010\0227\n\026area_show_value_"
  "labels\030u \001(\0132\027.TSSSOS.SpecBoolArchive\022(\n"
  " area_show_value_labels_undefined\030v \001(\010\022"
  "6\n\025bar_show_value_labels\030w \001(\0132\027.TSSSOS."
  "SpecBoolArchive\022\'\n\037bar_show_value_labels"
  "_undefined\030x \001(\010\0229\n\030bubble_show_value_la"
  "bels\030y \001(\0132\027.TSSSOS.SpecBoolArchive\022*\n\"b"
  "ubble_show_value_labels_undefined\030z \001(\010\022"
  ":\n\031default_show_value_labels\030{ \001(\0132\027.TSS"
  "SOS.SpecBoolArchive\022+\n#default_show_valu"
  "e_labels_undefined\030| \001(\010\0227\n\026line_show_va"
  "lue_labels\030} \001(\0132\027.TSSSOS.SpecBoolArchiv"
  "e\022(\n line_show_value_labels_undefined\030~ "
  "\001(\010\0228\n\027mixed_show_value_labels\030\177 \001(\0132\027.T"
  "SSSOS.SpecBoolArchive\022*\n!mixed_show_valu"
  "e_labels_undefined\030\200\001 \001(\010\0227\n\025pie_show_va"
  "lue_labels\030\201\001 \001(\0132\027.TSSSOS.SpecBoolArchi"
  "ve\022(\n\037pie_show_value_labels_undefined\030\202\001"
  " \001(\010\0229\n\027radar_show_value_labels\030\203\001 \001(\0132\027"
  ".TSSSOS.SpecBoolArchive\022*\n!radar_show_va"
  "lue_labels_undefined\030\204\001 \001(\010\022;\n\031scatter_s"
  "how_value_labels\030\205\001 \001(\0132\027.TSSSOS.SpecBoo"
  "lArchive\022,\n#scatter_show_value_labels_un"
  "defined\030\206\001 \001(\010\022:\n\025bubble_size_dimension\030"
  "\207\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\022(\n\037bu"
  "bble_size_dimension_undefined\030\210\001 \001(\010\0223\n\021"
  "area_stack_labels\030\211\001 \001(\0132\027.TSSSOS.SpecBo"
  "olArchive\022$\n\033area_stack_labels_undefined"
  "\030\212\001 \001(\010\0222\n\020bar_stack_labels\030\213\001 \001(\0132\027.TSS"
  "SOS.SpecBoolArchive\022#\n\032bar_stack_labels_"
  "undefined\030\214\001 \001(\010\0225\n\023bubble_stack_labels\030"
  "\215\001 \001(\0132\027.TSSSOS.SpecBoolArchive\022&\n\035bubbl"
  "e_stack_labels_undefined\030\216\001 \001(\010\0226\n\024defau"
  "lt_stack_labels\030\217\001 \001(\0132\027.TSSSOS.SpecBool"
  "Archive\022\'\n\036default_stack_labels_undefine"
  "d\030\220\001 \001(\010\0223\n\021line_stack_labels\030\221\001 \001(\0132\027.T"
  "SSSOS.SpecBoolArchive\022$\n\033line_stack_labe"
  "ls_undefined\030\222\001 \001(\010\0222\n\020pie_stack_labels\030"
  "\223\001 \001(\0132\027.TSSSOS.SpecBoolArchive\022#\n\032pie_s"
  "tack_labels_undefined\030\224\001 \001(\010\0226\n\024scatter_"
  "stack_labels\030\225\001 \001(\0132\027.TSSSOS.SpecBoolArc"
  "hive\022\'\n\036scatter_stack_labels_undefined\030\226"
  "\001 \001(\010\022;\n\031stacked_area_stack_labels\030\227\001 \001("
  "\0132\027.TSSSOS.SpecBoolArchive\022,\n#stacked_ar"
  "ea_stack_labels_undefined\030\230\001 \001(\010\022:\n\030stac"
  "ked_bar_stack_labels\030\231\001 \001(\0132\027.TSSSOS.Spe"
  "cBoolArchive\022+\n\"stacked_bar_stack_labels"
  "_undefined\030\232\001 \001(\010\0225\n\020area_symbol_type\030\233\001"
  " \001(\0132\032.TSSSOS.SpecIntegerArchive\022#\n\032area"
  "_symbol_type_undefined\030\234\001 \001(\010\0225\n\020line_sy"
  "mbol_type\030\235\001 \001(\0132\032.TSSSOS.SpecIntegerArc"
  "hive\022#\n\032line_symbol_type_undefined\030\236\001 \001("
  "\010\022;\n\026mixed_area_symbol_type\030\237\001 \001(\0132\032.TSS"
  "SOS.SpecIntegerArchive\022)\n mixed_area_sym"
  "bol_type_undefined\030\240\001 \001(\010\022;\n\026mixed_line_"
  "symbol_type\030\241\001 \001(\0132\032.TSSSOS.SpecIntegerA"
  "rchive\022)\n mixed_line_symbol_type_undefin"
  "ed\030\242\001 \001(\010\022;\n\026radar_area_symbol_type\030\243\001 \001"
  "(\0132\032.TSSSOS.SpecIntegerArchive\022)\n radar_"
  "area_symbol_type_undefined\030\244\001 \001(\010\0228\n\023sca"
  "tter_symbol_type\030\245\001 \001(\0132\032.TSSSOS.SpecInt"
  "egerArchive\022&\n\035scatter_symbol_type_undef"
  "ined\030\246\001 \001(\010\022H\n$default_trend_line_equati"
  "on_offset_x\030\247\001 \001(\0132\031.TSSSOS.SpecDoubleAr"
  "chive\0227\n.default_trend_line_equation_off"
  "set_x_undefined\030\250\001 \001(\010\022H\n$default_trend_"
  "line_equation_offset_y\030\251\001 \001(\0132\031.TSSSOS.S"
  "pecDoubleArchive\0227\n.default_trend_line_e"
  "quation_offset_y_undefined\030\252\001 \001(\010\022C\n\037def"
  "ault_trend_line_label_string\030\253\001 \001(\0132\031.TS"
  "SSOS.SpecStringArchive\0222\n)default_trend_"
  "line_label_string_undefined\030\254\001 \001(\010\022=\n\030de"
  "fault_trend_line_order\030\255\001 \001(\0132\032.TSSSOS.S"
  "pecIntegerArchive\022+\n\"default_trend_line_"
  "order_undefined\030\256\001 \001(\010\022>\n\031default_trend_"
  "line_period\030\257\001 \001(\0132\032.TSSSOS.SpecIntegerA"
  "rchive\022,\n#default_trend_line_period_unde"
  "fined\030\260\001 \001(\010\022I\n%default_trend_line_r_squ"
  "ared_offset_x\030\261\001 \001(\0132\031.TSSSOS.SpecDouble"
  "Archive\0228\n/default_trend_line_r_squared_"
  "offset_x_undefined\030\262\001 \001(\010\022I\n%default_tre"
  "nd_line_r_squared_offset_y\030\263\001 \001(\0132\031.TSSS"
  "OS.SpecDoubleArchive\0228\n/default_trend_li"
  "ne_r_squared_offset_y_undefined\030\264\001 \001(\010\022B"
  "\n default_trend_line_show_equation\030\265\001 \001("
  "\0132\027.TSSSOS.SpecBoolArchive\0223\n*default_tr"
  "end_line_show_equation_undefined\030\266\001 \001(\010\022"
  "\?\n\035default_trend_line_show_label\030\267\001 \001(\0132"
  "\027.TSSSOS.SpecBoolArchive\0220\n\'default_tren"
  "d_line_show_label_undefined\030\270\001 \001(\010\022B\n de"
  "fault_trend_line_show_r2_value\030\271\001 \001(\0132\027."
  "TSSSOS.SpecBoolArchive\0223\n*default_trend_"
  "line_show_r2_value_undefined\030\272\001 \001(\010\022<\n\027d"
  "efault_trend_line_type\030\273\001 \001(\0132\032.TSSSOS.S"
  "pecIntegerArchive\022*\n!default_trend_line_"
  "type_undefined\030\274\001 \001(\010\022=\n\030bubble_value_la"
  "bels_axis\030\275\001 \001(\0132\032.TSSSOS.SpecIntegerArc"
  "hive\022+\n\"bubble_value_labels_axis_undefin"
  "ed\030\276\001 \001(\010\022>\n\031scatter_value_labels_axis\030\277"
  "\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\022,\n#sca"
  "tter_value_labels_axis_undefined\030\300\001 \001(\010\022"
  "7\n\023pie_wedge_explosion\030\301\001 \001(\0132\031.TSSSOS.S"
  "pecDoubleArchive\022&\n\035pie_wedge_explosion_"
  "undefined\030\302\001 \001(\010\022;\n\026default_y_axis_ordin"
  "al\030\303\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\022)\n"
  " default_y_axis_ordinal_undefined\030\304\001 \001(\010"
  "\"\311b\n(ChartSeriesStylePropertyChangeSetAr"
  "chive\022E\n!default_callout_line_end_line_e"
  "nd\030\001 \001(\0132\032.TSDSOS.SpecLineEndArchive\0223\n+"
  "default_callout_line_end_line_end_undefi"
  "ned\030\002 \001(\010\022G\n#default_callout_line_start_"
  "line_end\030\003 \001(\0132\032.TSDSOS.SpecLineEndArchi"
  "ve\0225\n-default_callout_line_start_line_en"
  "d_undefined\030\004 \001(\010\022D\n!default_callout_lin"
  "e_stroke_style\030\005 \001(\0132\031.TSDSOS.SpecStroke"
  "Archive\0223\n+default_callout_line_stroke_s"
  "tyle_undefined\030\006 \001(\010\022>\n\032default_error_ba"
  "r_line_end\030\007 \001(\0132\032.TSDSOS.SpecLineEndArc"
  "hive\022,\n$default_error_bar_line_end_undef"
  "ined\030\010 \001(\010\022H\n$default_error_bar_line_end"
  "_scatter_x\030\t \001(\0132\032.TSDSOS.SpecLineEndArc"
  "hive\0226\n.default_error_bar_line_end_scatt"
  "er_x_undefined\030\n \001(\010\022;\n\030default_error_ba"
  "r_shadow\030\013 \001(\0132\031.TSDSOS.SpecShadowArchiv"
  "e\022*\n\"default_error_bar_shadow_undefined\030"
  "\014 \001(\010\022=\n\031default_error_bar_spacing\030\r \001(\013"
  "2\032.TSSSOS.SpecIntegerArchive\022+\n#default_"
  "error_bar_spacing_undefined\030\016 \001(\010\022G\n#def"
  "ault_error_bar_spacing_scatter_x\030\017 \001(\0132\032"
  ".TSSSOS.SpecIntegerArchive\0225\n-default_er"
  "ror_bar_spacing_scatter_x_undefined\030\020 \001("
  "\010\022;\n\030default_error_bar_stroke\030\021 \001(\0132\031.TS"
  "DSOS.SpecStrokeArchive\022*\n\"default_error_"
  "bar_stroke_undefined\030\022 \001(\010\022E\n\"default_er"
  "ror_bar_stroke_scatter_x\030\023 \001(\0132\031.TSDSOS."
  "SpecStrokeArchive\0224\n,default_error_bar_s"
  "troke_scatter_x_undefined\030\024 \001(\010\022,\n\013area3"
  "d_fill\030\025 \001(\0132\027.TSDSOS.SpecFillArchive\022\035\n"
  "\025area3d_fill_undefined\030\026 \001(\010\022+\n\nbar3d_fi"
  "ll\030\027 \001(\0132\027.TSDSOS.SpecFillArchive\022\034\n\024bar"
  "3d_fill_undefined\030\030 \001(\010\022.\n\rcolumn3d_fill"
  "\030\031 \001(\0132\027.TSDSOS.SpecFillArchive\022\037\n\027colum"
  "n3d_fill_undefined\030\032 \001(\010\022,\n\013line3d_fill\030"
  "\033 \001(\0132\027.TSDSOS.SpecFillArchive\022\035\n\025line3d"
  "_fill_undefined\030\034 \001(\010\022+\n\npie3d_fill\030\035 \001("
  "\0132\027.TSDSOS.SpecFillArchive\022\034\n\024pie3d_fill"
  "_undefined\030\036 \001(\010\022*\n\tarea_fill\030\037 \001(\0132\027.TS"
  "DSOS.SpecFillArchive\022\033\n\023area_fill_undefi"
  "ned\030  \001(\010\022)\n\010bar_fill\030! \001(\0132\027.TSDSOS.Spe"
  "cFillArchive\022\032\n\022bar_fill_undefined\030\" \001(\010"
  "\022,\n\013column_fill\030# \001(\0132\027.TSDSOS.SpecFillA"
  "rchive\022\035\n\025column_fill_undefined\030$ \001(\010\022-\n"
  "\014default_fill\030% \001(\0132\027.TSDSOS.SpecFillArc"
  "hive\022\036\n\026default_fill_undefined\030& \001(\010\0220\n\017"
  "mixed_area_fill\030\' \001(\0132\027.TSDSOS.SpecFillA"
  "rchive\022!\n\031mixed_area_fill_undefined\030( \001("
  "\010\0222\n\021mixed_column_fill\030) \001(\0132\027.TSDSOS.Sp"
  "ecFillArchive\022#\n\033mixed_column_fill_undef"
  "ined\030* \001(\010\022)\n\010pie_fill\030+ \001(\0132\027.TSDSOS.Sp"
  "ecFillArchive\022\032\n\022pie_fill_undefined\030, \001("
  "\010\0220\n\017radar_area_fill\030- \001(\0132\027.TSDSOS.Spec"
  "FillArchive\022!\n\031radar_area_fill_undefined"
  "\030. \001(\010\022U\n2radar_area_fill_use_series_str"
  "oke_alpha_multiplier\030/ \001(\0132\031.TSSSOS.Spec"
  "DoubleArchive\022D\n<radar_area_fill_use_ser"
  "ies_stroke_alpha_multiplier_undefined\0300 "
  "\001(\010\022B\n!radar_area_fill_use_series_stroke"
  "\0301 \001(\0132\027.TSSSOS.SpecBoolArchive\0223\n+radar"
  "_area_fill_use_series_stroke_undefined\0302"
  " \001(\010\022D\n area_label_paragraph_style_index"
  "\0303 \001(\0132\032.TSSSOS.SpecIntegerArchive\0222\n*ar"
  "ea_label_paragraph_style_index_undefined"
  "\0304 \001(\010\022C\n\037bar_label_paragraph_style_inde"
  "x\0305 \001(\0132\032.TSSSOS.SpecIntegerArchive\0221\n)b"
  "ar_label_paragraph_style_index_undefined"
  "\0306 \001(\010\022G\n#default_label_paragraph_style_"
  "index\0307 \001(\0132\032.TSSSOS.SpecIntegerArchive\022"
  "5\n-default_label_paragraph_style_index_u"
  "ndefined\0308 \001(\010\022E\n!donut_label_paragraph_"
  "style_index\0309 \001(\0132\032.TSSSOS.SpecIntegerAr"
  "chive\0223\n+donut_label_paragraph_style_ind"
  "ex_undefined\030: \001(\010\022D\n line_label_paragra"
  "ph_style_index\030; \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\0222\n*line_label_paragraph_style_i"
  "ndex_undefined\030< \001(\010\022E\n!mixed_label_para"
  "graph_style_index\030= \001(\0132\032.TSSSOS.SpecInt"
  "egerArchive\0223\n+mixed_label_paragraph_sty"
  "le_index_undefined\030> \001(\010\022C\n\037pie_label_pa"
  "ragraph_style_index\030\? \001(\0132\032.TSSSOS.SpecI"
  "ntegerArchive\0221\n)pie_label_paragraph_sty"
  "le_index_undefined\030@ \001(\010\022E\n!radar_label_"
  "paragraph_style_index\030A \001(\0132\032.TSSSOS.Spe"
  "cIntegerArchive\0223\n+radar_label_paragraph"
  "_style_index_undefined\030B \001(\010\0222\n\017default_"
  "opacity\030C \001(\0132\031.TSSSOS.SpecDoubleArchive"
  "\022!\n\031default_opacity_undefined\030D \001(\010\022L\n(a"
  "rea_outside_label_paragraph_style_index\030"
  "E \001(\0132\032.TSSSOS.SpecIntegerArchive\022:\n2are"
  "a_outside_label_paragraph_style_index_un"
  "defined\030F \001(\010\022K\n\'bar_outside_label_parag"
  "raph_style_index\030G \001(\0132\032.TSSSOS.SpecInte"
  "gerArchive\0229\n1bar_outside_label_paragrap"
  "h_style_index_undefined\030H \001(\010\022O\n+default"
  "_outside_label_paragraph_style_index\030I \001"
  "(\0132\032.TSSSOS.SpecIntegerArchive\022=\n5defaul"
  "t_outside_label_paragraph_style_index_un"
  "defined\030J \001(\010\022M\n)donut_outside_label_par"
  "agraph_style_index\030K \001(\0132\032.TSSSOS.SpecIn"
  "tegerArchive\022;\n3donut_outside_label_para"
  "graph_style_index_undefined\030L \001(\010\022M\n)mix"
  "ed_outside_label_paragraph_style_index\030M"
  " \001(\0132\032.TSSSOS.SpecIntegerArchive\022;\n3mixe"
  "d_outside_label_paragraph_style_index_un"
  "defined\030N \001(\010\022K\n\'pie_outside_label_parag"
  "raph_style_index\030O \001(\0132\032.TSSSOS.SpecInte"
  "gerArchive\0229\n1pie_outside_label_paragrap"
  "h_style_index_undefined\030P \001(\010\022M\n)radar_o"
  "utside_label_paragraph_style_index\030Q \001(\013"
  "2\032.TSSSOS.SpecIntegerArchive\022;\n3radar_ou"
  "tside_label_paragraph_style_index_undefi"
  "ned\030R \001(\010\0220\n\rarea3d_shadow\030S \001(\0132\031.TSDSO"
  "S.SpecShadowArchive\022\037\n\027area3d_shadow_und"
  "efined\030T \001(\010\022/\n\014bar3d_shadow\030U \001(\0132\031.TSD"
  "SOS.SpecShadowArchive\022\036\n\026bar3d_shadow_un"
  "defined\030V \001(\010\0222\n\017column3d_shadow\030W \001(\0132\031"
  ".TSDSOS.SpecShadowArchive\022!\n\031column3d_sh"
  "adow_undefined\030X \001(\010\0220\n\rline3d_shadow\030Y "
  "\001(\0132\031.TSDSOS.SpecShadowArchive\022\037\n\027line3d"
  "_shadow_undefined\030Z \001(\010\022/\n\014pie3d_shadow\030"
  "[ \001(\0132\031.TSDSOS.SpecShadowArchive\022\036\n\026pie3"
  "d_shadow_undefined\030\\ \001(\010\022.\n\013area_shadow\030"
  "] \001(\0132\031.TSDSOS.SpecShadowArchive\022\035\n\025area"
  "_shadow_undefined\030^ \001(\010\022-\n\nbar_shadow\030_ "
  "\001(\0132\031.TSDSOS.SpecShadowArchive\022\034\n\024bar_sh"
  "adow_undefined\030` \001(\010\0220\n\rbubble_shadow\030a "
  "\001(\0132\031.TSDSOS.SpecShadowArchive\022\037\n\027bubble"
  "_shadow_undefined\030b \001(\010\0221\n\016default_shado"
  "w\030c \001(\0132\031.TSDSOS.SpecShadowArchive\022 \n\030de"
  "fault_shadow_undefined\030d \001(\010\022.\n\013line_sha"
  "dow\030e \001(\0132\031.TSDSOS.SpecShadowArchive\022\035\n\025"
  "line_shadow_undefined\030f \001(\010\0224\n\021mixed_are"
  "a_shadow\030g \001(\0132\031.TSDSOS.SpecShadowArchiv"
  "e\022#\n\033mixed_area_shadow_undefined\030h \001(\010\0226"
  "\n\023mixed_column_shadow\030i \001(\0132\031.TSDSOS.Spe"
  "cShadowArchive\022%\n\035mixed_column_shadow_un"
  "defined\030j \001(\010\0224\n\021mixed_line_shadow\030k \001(\013"
  "2\031.TSDSOS.SpecShadowArchive\022#\n\033mixed_lin"
  "e_shadow_undefined\030l \001(\010\022-\n\npie_shadow\030m"
  " \001(\0132\031.TSDSOS.SpecShadowArchive\022\034\n\024pie_s"
  "hadow_undefined\030n \001(\010\0224\n\021radar_area_shad"
  "ow\030o \001(\0132\031.TSDSOS.SpecShadowArchive\022#\n\033r"
  "adar_area_shadow_undefined\030p \001(\010\0221\n\016scat"
  "ter_shadow\030q \001(\0132\031.TSDSOS.SpecShadowArch"
  "ive\022 \n\030scatter_shadow_undefined\030r \001(\010\022.\n"
  "\013area_stroke\030s \001(\0132\031.TSDSOS.SpecStrokeAr"
  "chive\022\035\n\025area_stroke_undefined\030t \001(\010\022-\n\n"
  "bar_stroke\030u \001(\0132\031.TSDSOS.SpecStrokeArch"
  "ive\022\034\n\024bar_stroke_undefined\030v \001(\010\0220\n\rbub"
  "ble_stroke\030w \001(\0132\031.TSDSOS.SpecStrokeArch"
  "ive\022\037\n\027bubble_stroke_undefined\030x \001(\010\022.\n\013"
  "line_stroke\030y \001(\0132\031.TSDSOS.SpecStrokeArc"
  "hive\022\035\n\025line_stroke_undefined\030z \001(\010\0224\n\021m"
  "ixed_area_stroke\030{ \001(\0132\031.TSDSOS.SpecStro"
  "keArchive\022#\n\033mixed_area_stroke_undefined"
  "\030| \001(\010\0226\n\023mixed_column_stroke\030} \001(\0132\031.TS"
  "DSOS.SpecStrokeArchive\022%\n\035mixed_column_s"
  "troke_undefined\030~ \001(\010\0224\n\021mixed_line_stro"
  "ke\030\177 \001(\0132\031.TSDSOS.SpecStrokeArchive\022$\n\033m"
  "ixed_line_stroke_undefined\030\200\001 \001(\010\022.\n\npie"
  "_stroke\030\201\001 \001(\0132\031.TSDSOS.SpecStrokeArchiv"
  "e\022\035\n\024pie_stroke_undefined\030\202\001 \001(\010\0225\n\021rada"
  "r_area_stroke\030\203\001 \001(\0132\031.TSDSOS.SpecStroke"
  "Archive\022$\n\033radar_area_stroke_undefined\030\204"
  "\001 \001(\010\0222\n\016scatter_stroke\030\205\001 \001(\0132\031.TSDSOS."
  "SpecStrokeArchive\022!\n\030scatter_stroke_unde"
  "fined\030\206\001 \001(\010\0222\n\020area_symbol_fill\030\207\001 \001(\0132"
  "\027.TSDSOS.SpecFillArchive\022#\n\032area_symbol_"
  "fill_undefined\030\210\001 \001(\010\0224\n\022bubble_symbol_f"
  "ill\030\211\001 \001(\0132\027.TSDSOS.SpecFillArchive\022%\n\034b"
  "ubble_symbol_fill_undefined\030\212\001 \001(\010\0222\n\020li"
  "ne_symbol_fill\030\213\001 \001(\0132\027.TSDSOS.SpecFillA"
  "rchive\022#\n\032line_symbol_fill_undefined\030\214\001 "
  "\001(\010\0228\n\026mixed_area_symbol_fill\030\215\001 \001(\0132\027.T"
  "SDSOS.SpecFillArchive\022)\n mixed_area_symb"
  "ol_fill_undefined\030\216\001 \001(\010\0228\n\026mixed_line_s"
  "ymbol_fill\030\217\001 \001(\0132\027.TSDSOS.SpecFillArchi"
  "ve\022)\n mixed_line_symbol_fill_undefined\030\220"
  "\001 \001(\010\0228\n\026radar_area_symbol_fill\030\221\001 \001(\0132\027"
  ".TSDSOS.SpecFillArchive\022)\n radar_area_sy"
  "mbol_fill_undefined\030\222\001 \001(\010\0225\n\023scatter_sy"
  "mbol_fill\030\223\001 \001(\0132\027.TSDSOS.SpecFillArchiv"
  "e\022&\n\035scatter_symbol_fill_undefined\030\224\001 \001("
  "\010\022B\n area_symbol_fill_use_series_fill\030\225\001"
  " \001(\0132\027.TSSSOS.SpecBoolArchive\0223\n*area_sy"
  "mbol_fill_use_series_fill_undefined\030\226\001 \001"
  "(\010\022B\n line_symbol_fill_use_series_fill\030\227"
  "\001 \001(\0132\027.TSSSOS.SpecBoolArchive\0223\n*line_s"
  "ymbol_fill_use_series_fill_undefined\030\230\001 "
  "\001(\010\022H\n&mixed_area_symbol_fill_use_series"
  "_fill\030\231\001 \001(\0132\027.TSSSOS.SpecBoolArchive\0229\n"
  "0mixed_area_symbol_fill_use_series_fill_"
  "undefined\030\232\001 \001(\010\022H\n&mixed_line_symbol_fi"
  "ll_use_series_fill\030\233\001 \001(\0132\027.TSSSOS.SpecB"
  "oolArchive\0229\n0mixed_line_symbol_fill_use"
  "_series_fill_undefined\030\234\001 \001(\010\022H\n&radar_a"
  "rea_symbol_fill_use_series_fill\030\235\001 \001(\0132\027"
  ".TSSSOS.SpecBoolArchive\0229\n0radar_area_sy"
  "mbol_fill_use_series_fill_undefined\030\236\001 \001"
  "(\010\022D\n\"area_symbol_fill_use_series_stroke"
  "\030\237\001 \001(\0132\027.TSSSOS.SpecBoolArchive\0225\n,area"
  "_symbol_fill_use_series_stroke_undefined"
  "\030\240\001 \001(\010\022F\n$bubble_symbol_fill_use_series"
  "_stroke\030\241\001 \001(\0132\027.TSSSOS.SpecBoolArchive\022"
  "7\n.bubble_symbol_fill_use_series_stroke_"
  "undefined\030\242\001 \001(\010\022D\n\"line_symbol_fill_use"
  "_series_stroke\030\243\001 \001(\0132\027.TSSSOS.SpecBoolA"
  "rchive\0225\n,line_symbol_fill_use_series_st"
  "roke_undefined\030\244\001 \001(\010\022J\n(mixed_area_symb"
  "ol_fill_use_series_stroke\030\245\001 \001(\0132\027.TSSSO"
  "S.SpecBoolArchive\022;\n2mixed_area_symbol_f"
  "ill_use_series_stroke_undefined\030\246\001 \001(\010\022J"
  "\n(mixed_line_symbol_fill_use_series_stro"
  "ke\030\247\001 \001(\0132\027.TSSSOS.SpecBoolArchive\022;\n2mi"
  "xed_line_symbol_fill_use_series_stroke_u"
  "ndefined\030\250\001 \001(\010\022J\n(radar_area_symbol_fil"
  "l_use_series_stroke\030\251\001 \001(\0132\027.TSSSOS.Spec"
  "BoolArchive\022;\n2radar_area_symbol_fill_us"
  "e_series_stroke_undefined\030\252\001 \001(\010\022G\n%scat"
  "ter_symbol_fill_use_series_stroke\030\253\001 \001(\013"
  "2\027.TSSSOS.SpecBoolArchive\0228\n/scatter_sym"
  "bol_fill_use_series_stroke_undefined\030\254\001 "
  "\001(\010\0224\n\020area_symbol_size\030\255\001 \001(\0132\031.TSSSOS."
  "SpecDoubleArchive\022#\n\032area_symbol_size_un"
  "defined\030\256\001 \001(\010\0224\n\020line_symbol_size\030\257\001 \001("
  "\0132\031.TSSSOS.SpecDoubleArchive\022#\n\032line_sym"
  "bol_size_undefined\030\260\001 \001(\010\022:\n\026mixed_area_"
  "symbol_size\030\261\001 \001(\0132\031.TSSSOS.SpecDoubleAr"
  "chive\022)\n mixed_area_symbol_size_undefine"
  "d\030\262\001 \001(\010\022:\n\026mixed_line_symbol_size\030\263\001 \001("
  "\0132\031.TSSSOS.SpecDoubleArchive\022)\n mixed_li"
  "ne_symbol_size_undefined\030\264\001 \001(\010\022:\n\026radar"
  "_area_symbol_size\030\265\001 \001(\0132\031.TSSSOS.SpecDo"
  "ubleArchive\022)\n radar_area_symbol_size_un"
  "defined\030\266\001 \001(\010\0227\n\023scatter_symbol_size\030\267\001"
  " \001(\0132\031.TSSSOS.SpecDoubleArchive\022&\n\035scatt"
  "er_symbol_size_undefined\030\270\001 \001(\010\0226\n\022area_"
  "symbol_stroke\030\271\001 \001(\0132\031.TSDSOS.SpecStroke"
  "Archive\022%\n\034area_symbol_stroke_undefined\030"
  "\272\001 \001(\010\0228\n\024bubble_symbol_stroke\030\273\001 \001(\0132\031."
  "TSDSOS.SpecStrokeArchive\022\'\n\036bubble_symbo"
  "l_stroke_undefined\030\274\001 \001(\010\0226\n\022line_symbol"
  "_stroke\030\275\001 \001(\0132\031.TSDSOS.SpecStrokeArchiv"
  "e\022%\n\034line_symbol_stroke_undefined\030\276\001 \001(\010"
  "\022<\n\030mixed_area_symbol_stroke\030\277\001 \001(\0132\031.TS"
  "DSOS.SpecStrokeArchive\022+\n\"mixed_area_sym"
  "bol_stroke_undefined\030\300\001 \001(\010\022<\n\030mixed_lin"
  "e_symbol_stroke\030\301\001 \001(\0132\031.TSDSOS.SpecStro"
  "keArchive\022+\n\"mixed_line_symbol_stroke_un"
  "defined\030\302\001 \001(\010\022<\n\030radar_area_symbol_stro"
  "ke\030\303\001 \001(\0132\031.TSDSOS.SpecStrokeArchive\022+\n\""
  "radar_area_symbol_stroke_undefined\030\304\001 \001("
  "\010\0229\n\025scatter_symbol_stroke\030\305\001 \001(\0132\031.TSDS"
  "OS.SpecStrokeArchive\022(\n\037scatter_symbol_s"
  "troke_undefined\030\306\001 \001(\010\022=\n\031default_trend_"
  "line_shadow\030\307\001 \001(\0132\031.TSDSOS.SpecShadowAr"
  "chive\022,\n#default_trend_line_shadow_undef"
  "ined\030\310\001 \001(\010\022=\n\031default_trend_line_stroke"
  "\030\311\001 \001(\0132\031.TSDSOS.SpecStrokeArchive\022,\n#de"
  "fault_trend_line_stroke_undefined\030\312\001 \001(\010"
  "\022F\n\"default_trendline_equation_opacity\030\313"
  "\001 \001(\0132\031.TSSSOS.SpecDoubleArchive\0225\n,defa"
  "ult_trendline_equation_opacity_undefined"
  "\030\314\001 \001(\010\022U\n0default_trendline_equation_pa"
  "ragraph_style_index\030\315\001 \001(\0132\032.TSSSOS.Spec"
  "IntegerArchive\022C\n:default_trendline_equa"
  "tion_paragraph_style_index_undefined\030\316\001 "
  "\001(\010\022G\n#default_trendline_r_squared_opaci"
  "ty\030\317\001 \001(\0132\031.TSSSOS.SpecDoubleArchive\0226\n-"
  "default_trendline_r_squared_opacity_unde"
  "fined\030\320\001 \001(\010\022V\n1default_trendline_r_squa"
  "red_paragraph_style_index\030\321\001 \001(\0132\032.TSSSO"
  "S.SpecIntegerArchive\022D\n;default_trendlin"
  "e_r_squared_paragraph_style_index_undefi"
  "ned\030\322\001 \001(\010\022>\n\031area_value_label_position\030"
  "\323\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\022,\n#ar"
  "ea_value_label_position_undefined\030\324\001 \001(\010"
  "\022=\n\030bar_value_label_position\030\325\001 \001(\0132\032.TS"
  "SSOS.SpecIntegerArchive\022+\n\"bar_value_lab"
  "el_position_undefined\030\326\001 \001(\010\022@\n\033bubble_v"
  "alue_label_position\030\327\001 \001(\0132\032.TSSSOS.Spec"
  "IntegerArchive\022.\n%bubble_value_label_pos"
  "ition_undefined\030\330\001 \001(\010\022A\n\034default_value_"
  "label_position\030\331\001 \001(\0132\032.TSSSOS.SpecInteg"
  "erArchive\022/\n&default_value_label_positio"
  "n_undefined\030\332\001 \001(\010\022>\n\031line_value_label_p"
  "osition\030\333\001 \001(\0132\032.TSSSOS.SpecIntegerArchi"
  "ve\022,\n#line_value_label_position_undefine"
  "d\030\334\001 \001(\010\022D\n\037mixed_area_value_label_posit"
  "ion\030\335\001 \001(\0132\032.TSSSOS.SpecIntegerArchive\0222"
  "\n)mixed_area_value_label_position_undefi"
  "ned\030\336\001 \001(\010\022F\n!mixed_column_value_label_p"
  "osition\030\337\001 \001(\0132\032.TSSSOS.SpecIntegerArchi"
  "ve\0224\n+mixed_column_value_label_position_"
  "undefined\030\340\001 \001(\010\022D\n\037mixed_line_value_lab"
  "el_position\030\341\001 \001(\0132\032.TSSSOS.SpecIntegerA"
  "rchive\0222\n)mixed_line_value_label_positio"
  "n_undefined\030\342\001 \001(\010\022D\n\037radar_area_value_l"
  "abel_position\030\343\001 \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\0222\n)radar_area_value_label_posit"
  "ion_undefined\030\344\001 \001(\010\022A\n\034scatter_value_la"
  "bel_position\030\345\001 \001(\0132\032.TSSSOS.SpecInteger"
  "Archive\022/\n&scatter_value_label_position_"
  "undefined\030\346\001 \001(\010\022F\n!stacked_area_value_l"
  "abel_position\030\347\001 \001(\0132\032.TSSSOS.SpecIntege"
  "rArchive\0224\n+stacked_area_value_label_pos"
  "ition_undefined\030\350\001 \001(\010\022E\n stacked_bar_va"
  "lue_label_position\030\351\001 \001(\0132\032.TSSSOS.SpecI"
  "ntegerArchive\0223\n*stacked_bar_value_label"
  "_position_undefined\030\352\001 \001(\010\022@\n\033default_va"
  "lue_label_spacing\030\353\001 \001(\0132\032.TSSSOS.SpecIn"
  "tegerArchive\022.\n%default_value_label_spac"
  "ing_undefined\030\354\001 \001(\010\"\247\025\n\"ChartStylePrope"
  "rtyChangeSetArchive\022:\n\027default3d_chart_o"
  "pacity\030\001 \001(\0132\031.TSSSOS.SpecDoubleArchive\022"
  ")\n!default3d_chart_opacity_undefined\030\002 \001"
  "(\010\022K\n\027area3d_lighting_package\030\003 \001(\0132*.TS"
  "CHSOS.SpecChart3dLightingPackageArchive\022"
  ")\n!area3d_lighting_package_undefined\030\004 \001"
  "(\010\022J\n\026bar3d_lighting_package\030\005 \001(\0132*.TSC"
  "HSOS.SpecChart3dLightingPackageArchive\022("
  "\n bar3d_lighting_package_undefined\030\006 \001(\010"
  "\022M\n\031column3d_lighting_package\030\007 \001(\0132*.TS"
  "CHSOS.SpecChart3dLightingPackageArchive\022"
  "+\n#column3d_lighting_package_undefined\030\010"
  " \001(\010\022N\n\032default3d_lighting_package\030\t \001(\013"
  "2*.TSCHSOS.SpecChart3dLightingPackageArc"
  "hive\022,\n$default3d_lighting_package_undef"
  "ined\030\n \001(\010\022K\n\027line3d_lighting_package\030\013 "
  "\001(\0132*.TSCHSOS.SpecChart3dLightingPackage"
  "Archive\022)\n!line3d_lighting_package_undef"
  "ined\030\014 \001(\010\022J\n\026pie3d_lighting_package\030\r \001"
  "(\0132*.TSCHSOS.SpecChart3dLightingPackageA"
  "rchive\022(\n pie3d_lighting_package_undefin"
  "ed\030\016 \001(\010\0228\n\027default_background_fill\030\017 \001("
  "\0132\027.TSDSOS.SpecFillArchive\022)\n!default_ba"
  "ckground_fill_undefined\030\020 \001(\010\022<\n\031default"
  "_background_stroke\030\021 \001(\0132\031.TSDSOS.SpecSt"
  "rokeArchive\022+\n#default_background_stroke"
  "_undefined\030\022 \001(\010\0229\n\026default_border_opaci"
  "ty\030\023 \001(\0132\031.TSSSOS.SpecDoubleArchive\022(\n d"
  "efault_border_opacity_undefined\030\024 \001(\010\0228\n"
  "\025default_border_shadow\030\025 \001(\0132\031.TSDSOS.Sp"
  "ecShadowArchive\022\'\n\037default_border_shadow"
  "_undefined\030\026 \001(\010\0228\n\025default_border_strok"
  "e\030\027 \001(\0132\031.TSDSOS.SpecStrokeArchive\022\'\n\037de"
  "fault_border_stroke_undefined\030\030 \001(\010\0227\n\026d"
  "efault_combine_layers\030\031 \001(\0132\027.TSSSOS.Spe"
  "cBoolArchive\022(\n default_combine_layers_u"
  "ndefined\030\032 \001(\010\022O\n+default_data_set_name_"
  "paragraph_style_index\030\033 \001(\0132\032.TSSSOS.Spe"
  "cIntegerArchive\022=\n5default_data_set_name"
  "_paragraph_style_index_undefined\030\034 \001(\010\022="
  "\n\034default_grid_background_fill\030\035 \001(\0132\027.T"
  "SDSOS.SpecFillArchive\022.\n&default_grid_ba"
  "ckground_fill_undefined\030\036 \001(\010\022B\n\037default"
  "_grid_background_opacity\030\037 \001(\0132\031.TSSSOS."
  "SpecDoubleArchive\0221\n)default_grid_backgr"
  "ound_opacity_undefined\030  \001(\010\0228\n\025default_"
  "inter_bar_gap\030! \001(\0132\031.TSSSOS.SpecDoubleA"
  "rchive\022\'\n\037default_inter_bar_gap_undefine"
  "d\030\" \001(\010\0228\n\025default_inter_set_gap\030# \001(\0132\031"
  ".TSSSOS.SpecDoubleArchive\022\'\n\037default_int"
  "er_set_gap_undefined\030$ \001(\010\022D\n#default_ra"
  "dar_radius_gridline_curve\030% \001(\0132\027.TSSSOS"
  ".SpecBoolArchive\0225\n-default_radar_radius"
  "_gridline_curve_undefined\030& \001(\010\022F\n%defau"
  "lt_rounded_corner_outer_end_only\030\' \001(\0132\027"
  ".TSSSOS.SpecBoolArchive\0227\n/default_round"
  "ed_corner_outer_end_only_undefined\030( \001(\010"
  "\022@\n\035default_rounded_corner_radius\030) \001(\0132"
  "\031.TSSSOS.SpecDoubleArchive\022/\n\'default_ro"
  "unded_corner_radius_undefined\030* \001(\010\0224\n\023d"
  "efault_show_border\030+ \001(\0132\027.TSSSOS.SpecBo"
  "olArchive\022%\n\035default_show_border_undefin"
  "ed\030, \001(\010\0225\n\023default_title_color\030- \001(\0132\030."
  "TSSSOS.SpecColorArchive\022%\n\035default_title"
  "_color_undefined\030. \001(\010\022G\n#default_title_"
  "paragraph_style_index\030/ \001(\0132\032.TSSSOS.Spe"
  "cIntegerArchive\0225\n-default_title_paragra"
  "ph_style_index_undefined\0300 \001(\010"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_TSCHArchives_2esos_2eproto_deps[5] = {
  &::descriptor_table_TSCH3DArchives_2eproto,
  &::descriptor_table_TSCHArchives_2eCommon_2eproto,
  &::descriptor_table_TSDArchives_2esos_2eproto,
  &::descriptor_table_TSKArchives_2eproto,
  &::descriptor_table_TSSArchives_2esos_2eproto,
};
static ::_pbi::once_flag descriptor_table_TSCHArchives_2esos_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_TSCHArchives_2esos_2eproto = {
    false, false, 40350, descriptor_table_protodef_TSCHArchives_2esos_2eproto,
    "TSCHArchives.sos.proto",
    &descriptor_table_TSCHArchives_2esos_2eproto_once, descriptor_table_TSCHArchives_2esos_2eproto_deps, 5, 22,
    schemas, file_default_instances, TableStruct_TSCHArchives_2esos_2eproto::offsets,
    file_level_metadata_TSCHArchives_2esos_2eproto, file_level_enum_descriptors_TSCHArchives_2esos_2eproto,
    file_level_service_descriptors_TSCHArchives_2esos_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_TSCHArchives_2esos_2eproto_getter() {
  return &descriptor_table_TSCHArchives_2esos_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_TSCHArchives_2esos_2eproto(&descriptor_table_TSCHArchives_2esos_2eproto);
namespace TSCHSOS {

// ===================================================================

class SpecSetChart3dLightingPackageArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetChart3dLightingPackageArchive>()._impl_._has_bits_);
  static const ::TSCH::Chart3DLightingPackageArchive& chart3d_lighting_package(const SpecSetChart3dLightingPackageArchive* msg);
  static void set_has_chart3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSCH::Chart3DLightingPackageArchive&
SpecSetChart3dLightingPackageArchive::_Internal::chart3d_lighting_package(const SpecSetChart3dLightingPackageArchive* msg) {
  return *msg->_impl_.chart3d_lighting_package_;
}
void SpecSetChart3dLightingPackageArchive::clear_chart3d_lighting_package() {
  if (_impl_.chart3d_lighting_package_ != nullptr) _impl_.chart3d_lighting_package_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetChart3dLightingPackageArchive::SpecSetChart3dLightingPackageArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetChart3dLightingPackageArchive)
}
SpecSetChart3dLightingPackageArchive::SpecSetChart3dLightingPackageArchive(const SpecSetChart3dLightingPackageArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetChart3dLightingPackageArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.chart3d_lighting_package_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chart3d_lighting_package()) {
    _this->_impl_.chart3d_lighting_package_ = new ::TSCH::Chart3DLightingPackageArchive(*from._impl_.chart3d_lighting_package_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetChart3dLightingPackageArchive)
}

inline void SpecSetChart3dLightingPackageArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.chart3d_lighting_package_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetChart3dLightingPackageArchive::~SpecSetChart3dLightingPackageArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetChart3dLightingPackageArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.chart3d_lighting_package_;
}

void SpecSetChart3dLightingPackageArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetChart3dLightingPackageArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.chart3d_lighting_package_ != nullptr);
    _impl_.chart3d_lighting_package_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetChart3dLightingPackageArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCH.Chart3DLightingPackageArchive chart3d_lighting_package = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chart3d_lighting_package(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetChart3dLightingPackageArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCH.Chart3DLightingPackageArchive chart3d_lighting_package = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::chart3d_lighting_package(this),
        _Internal::chart3d_lighting_package(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  return target;
}

size_t SpecSetChart3dLightingPackageArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCH.Chart3DLightingPackageArchive chart3d_lighting_package = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.chart3d_lighting_package_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetChart3dLightingPackageArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetChart3dLightingPackageArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetChart3dLightingPackageArchive::GetClassData() const { return &_class_data_; }


void SpecSetChart3dLightingPackageArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetChart3dLightingPackageArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetChart3dLightingPackageArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_chart3d_lighting_package()->::TSCH::Chart3DLightingPackageArchive::MergeFrom(
          from._internal_chart3d_lighting_package());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetChart3dLightingPackageArchive::CopyFrom(const SpecSetChart3dLightingPackageArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetChart3dLightingPackageArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetChart3dLightingPackageArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_chart3d_lighting_package()) {
    if (!_impl_.chart3d_lighting_package_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetChart3dLightingPackageArchive::InternalSwap(SpecSetChart3dLightingPackageArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetChart3dLightingPackageArchive, _impl_.unset_)
      + sizeof(SpecSetChart3dLightingPackageArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetChart3dLightingPackageArchive, _impl_.chart3d_lighting_package_)>(
          reinterpret_cast<char*>(&_impl_.chart3d_lighting_package_),
          reinterpret_cast<char*>(&other->_impl_.chart3d_lighting_package_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetChart3dLightingPackageArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[0]);
}

// ===================================================================

class SpecSetChart3dVectorArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetChart3dVectorArchive>()._impl_._has_bits_);
  static const ::TSCH::Chart3DVectorArchive& chart3d_vector(const SpecSetChart3dVectorArchive* msg);
  static void set_has_chart3d_vector(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSCH::Chart3DVectorArchive&
SpecSetChart3dVectorArchive::_Internal::chart3d_vector(const SpecSetChart3dVectorArchive* msg) {
  return *msg->_impl_.chart3d_vector_;
}
void SpecSetChart3dVectorArchive::clear_chart3d_vector() {
  if (_impl_.chart3d_vector_ != nullptr) _impl_.chart3d_vector_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetChart3dVectorArchive::SpecSetChart3dVectorArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetChart3dVectorArchive)
}
SpecSetChart3dVectorArchive::SpecSetChart3dVectorArchive(const SpecSetChart3dVectorArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetChart3dVectorArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.chart3d_vector_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chart3d_vector()) {
    _this->_impl_.chart3d_vector_ = new ::TSCH::Chart3DVectorArchive(*from._impl_.chart3d_vector_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetChart3dVectorArchive)
}

inline void SpecSetChart3dVectorArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.chart3d_vector_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetChart3dVectorArchive::~SpecSetChart3dVectorArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetChart3dVectorArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetChart3dVectorArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.chart3d_vector_;
}

void SpecSetChart3dVectorArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetChart3dVectorArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetChart3dVectorArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.chart3d_vector_ != nullptr);
    _impl_.chart3d_vector_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetChart3dVectorArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCH.Chart3DVectorArchive chart3d_vector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chart3d_vector(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetChart3dVectorArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetChart3dVectorArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCH.Chart3DVectorArchive chart3d_vector = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::chart3d_vector(this),
        _Internal::chart3d_vector(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetChart3dVectorArchive)
  return target;
}

size_t SpecSetChart3dVectorArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetChart3dVectorArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCH.Chart3DVectorArchive chart3d_vector = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.chart3d_vector_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetChart3dVectorArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetChart3dVectorArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetChart3dVectorArchive::GetClassData() const { return &_class_data_; }


void SpecSetChart3dVectorArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetChart3dVectorArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetChart3dVectorArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetChart3dVectorArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_chart3d_vector()->::TSCH::Chart3DVectorArchive::MergeFrom(
          from._internal_chart3d_vector());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetChart3dVectorArchive::CopyFrom(const SpecSetChart3dVectorArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetChart3dVectorArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetChart3dVectorArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_chart3d_vector()) {
    if (!_impl_.chart3d_vector_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetChart3dVectorArchive::InternalSwap(SpecSetChart3dVectorArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetChart3dVectorArchive, _impl_.unset_)
      + sizeof(SpecSetChart3dVectorArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetChart3dVectorArchive, _impl_.chart3d_vector_)>(
          reinterpret_cast<char*>(&_impl_.chart3d_vector_),
          reinterpret_cast<char*>(&other->_impl_.chart3d_vector_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetChart3dVectorArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[1]);
}

// ===================================================================

class SpecSetChartErrorBarCustomDataArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetChartErrorBarCustomDataArchive>()._impl_._has_bits_);
  static const ::TSCH::ChartsNSArrayOfNSNumberDoubleArchive& chart_error_bar_custom_data(const SpecSetChartErrorBarCustomDataArchive* msg);
  static void set_has_chart_error_bar_custom_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSCH::ChartsNSArrayOfNSNumberDoubleArchive&
SpecSetChartErrorBarCustomDataArchive::_Internal::chart_error_bar_custom_data(const SpecSetChartErrorBarCustomDataArchive* msg) {
  return *msg->_impl_.chart_error_bar_custom_data_;
}
void SpecSetChartErrorBarCustomDataArchive::clear_chart_error_bar_custom_data() {
  if (_impl_.chart_error_bar_custom_data_ != nullptr) _impl_.chart_error_bar_custom_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetChartErrorBarCustomDataArchive::SpecSetChartErrorBarCustomDataArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
}
SpecSetChartErrorBarCustomDataArchive::SpecSetChartErrorBarCustomDataArchive(const SpecSetChartErrorBarCustomDataArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetChartErrorBarCustomDataArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.chart_error_bar_custom_data_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chart_error_bar_custom_data()) {
    _this->_impl_.chart_error_bar_custom_data_ = new ::TSCH::ChartsNSArrayOfNSNumberDoubleArchive(*from._impl_.chart_error_bar_custom_data_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
}

inline void SpecSetChartErrorBarCustomDataArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.chart_error_bar_custom_data_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetChartErrorBarCustomDataArchive::~SpecSetChartErrorBarCustomDataArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetChartErrorBarCustomDataArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.chart_error_bar_custom_data_;
}

void SpecSetChartErrorBarCustomDataArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetChartErrorBarCustomDataArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.chart_error_bar_custom_data_ != nullptr);
    _impl_.chart_error_bar_custom_data_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetChartErrorBarCustomDataArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive chart_error_bar_custom_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chart_error_bar_custom_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetChartErrorBarCustomDataArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive chart_error_bar_custom_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::chart_error_bar_custom_data(this),
        _Internal::chart_error_bar_custom_data(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  return target;
}

size_t SpecSetChartErrorBarCustomDataArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive chart_error_bar_custom_data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.chart_error_bar_custom_data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetChartErrorBarCustomDataArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetChartErrorBarCustomDataArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetChartErrorBarCustomDataArchive::GetClassData() const { return &_class_data_; }


void SpecSetChartErrorBarCustomDataArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetChartErrorBarCustomDataArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetChartErrorBarCustomDataArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_chart_error_bar_custom_data()->::TSCH::ChartsNSArrayOfNSNumberDoubleArchive::MergeFrom(
          from._internal_chart_error_bar_custom_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetChartErrorBarCustomDataArchive::CopyFrom(const SpecSetChartErrorBarCustomDataArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetChartErrorBarCustomDataArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetChartErrorBarCustomDataArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetChartErrorBarCustomDataArchive::InternalSwap(SpecSetChartErrorBarCustomDataArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetChartErrorBarCustomDataArchive, _impl_.unset_)
      + sizeof(SpecSetChartErrorBarCustomDataArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetChartErrorBarCustomDataArchive, _impl_.chart_error_bar_custom_data_)>(
          reinterpret_cast<char*>(&_impl_.chart_error_bar_custom_data_),
          reinterpret_cast<char*>(&other->_impl_.chart_error_bar_custom_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetChartErrorBarCustomDataArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[2]);
}

// ===================================================================

class SpecSetChartsOptionalDoubleArchiveArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetChartsOptionalDoubleArchiveArchive>()._impl_._has_bits_);
  static const ::TSCH::ChartsNSNumberDoubleArchive& charts_optional_double_archive(const SpecSetChartsOptionalDoubleArchiveArchive* msg);
  static void set_has_charts_optional_double_archive(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSCH::ChartsNSNumberDoubleArchive&
SpecSetChartsOptionalDoubleArchiveArchive::_Internal::charts_optional_double_archive(const SpecSetChartsOptionalDoubleArchiveArchive* msg) {
  return *msg->_impl_.charts_optional_double_archive_;
}
void SpecSetChartsOptionalDoubleArchiveArchive::clear_charts_optional_double_archive() {
  if (_impl_.charts_optional_double_archive_ != nullptr) _impl_.charts_optional_double_archive_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetChartsOptionalDoubleArchiveArchive::SpecSetChartsOptionalDoubleArchiveArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
}
SpecSetChartsOptionalDoubleArchiveArchive::SpecSetChartsOptionalDoubleArchiveArchive(const SpecSetChartsOptionalDoubleArchiveArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetChartsOptionalDoubleArchiveArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.charts_optional_double_archive_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_charts_optional_double_archive()) {
    _this->_impl_.charts_optional_double_archive_ = new ::TSCH::ChartsNSNumberDoubleArchive(*from._impl_.charts_optional_double_archive_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
}

inline void SpecSetChartsOptionalDoubleArchiveArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.charts_optional_double_archive_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetChartsOptionalDoubleArchiveArchive::~SpecSetChartsOptionalDoubleArchiveArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetChartsOptionalDoubleArchiveArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.charts_optional_double_archive_;
}

void SpecSetChartsOptionalDoubleArchiveArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetChartsOptionalDoubleArchiveArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.charts_optional_double_archive_ != nullptr);
    _impl_.charts_optional_double_archive_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetChartsOptionalDoubleArchiveArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCH.ChartsNSNumberDoubleArchive charts_optional_double_archive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_charts_optional_double_archive(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetChartsOptionalDoubleArchiveArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCH.ChartsNSNumberDoubleArchive charts_optional_double_archive = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::charts_optional_double_archive(this),
        _Internal::charts_optional_double_archive(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  return target;
}

size_t SpecSetChartsOptionalDoubleArchiveArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCH.ChartsNSNumberDoubleArchive charts_optional_double_archive = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.charts_optional_double_archive_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetChartsOptionalDoubleArchiveArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetChartsOptionalDoubleArchiveArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetChartsOptionalDoubleArchiveArchive::GetClassData() const { return &_class_data_; }


void SpecSetChartsOptionalDoubleArchiveArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetChartsOptionalDoubleArchiveArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetChartsOptionalDoubleArchiveArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_charts_optional_double_archive()->::TSCH::ChartsNSNumberDoubleArchive::MergeFrom(
          from._internal_charts_optional_double_archive());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetChartsOptionalDoubleArchiveArchive::CopyFrom(const SpecSetChartsOptionalDoubleArchiveArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetChartsOptionalDoubleArchiveArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void SpecSetChartsOptionalDoubleArchiveArchive::InternalSwap(SpecSetChartsOptionalDoubleArchiveArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetChartsOptionalDoubleArchiveArchive, _impl_.unset_)
      + sizeof(SpecSetChartsOptionalDoubleArchiveArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetChartsOptionalDoubleArchiveArchive, _impl_.charts_optional_double_archive_)>(
          reinterpret_cast<char*>(&_impl_.charts_optional_double_archive_),
          reinterpret_cast<char*>(&other->_impl_.charts_optional_double_archive_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetChartsOptionalDoubleArchiveArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[3]);
}

// ===================================================================

class SpecSetFormatObjectArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetFormatObjectArchive>()._impl_._has_bits_);
  static const ::TSK::FormatStructArchive& format_object(const SpecSetFormatObjectArchive* msg);
  static void set_has_format_object(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSK::FormatStructArchive&
SpecSetFormatObjectArchive::_Internal::format_object(const SpecSetFormatObjectArchive* msg) {
  return *msg->_impl_.format_object_;
}
void SpecSetFormatObjectArchive::clear_format_object() {
  if (_impl_.format_object_ != nullptr) _impl_.format_object_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetFormatObjectArchive::SpecSetFormatObjectArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetFormatObjectArchive)
}
SpecSetFormatObjectArchive::SpecSetFormatObjectArchive(const SpecSetFormatObjectArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetFormatObjectArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.format_object_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_format_object()) {
    _this->_impl_.format_object_ = new ::TSK::FormatStructArchive(*from._impl_.format_object_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetFormatObjectArchive)
}

inline void SpecSetFormatObjectArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.format_object_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetFormatObjectArchive::~SpecSetFormatObjectArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetFormatObjectArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetFormatObjectArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.format_object_;
}

void SpecSetFormatObjectArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetFormatObjectArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetFormatObjectArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.format_object_ != nullptr);
    _impl_.format_object_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetFormatObjectArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSK.FormatStructArchive format_object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_format_object(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetFormatObjectArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetFormatObjectArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSK.FormatStructArchive format_object = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::format_object(this),
        _Internal::format_object(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetFormatObjectArchive)
  return target;
}

size_t SpecSetFormatObjectArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetFormatObjectArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSK.FormatStructArchive format_object = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.format_object_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetFormatObjectArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetFormatObjectArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetFormatObjectArchive::GetClassData() const { return &_class_data_; }


void SpecSetFormatObjectArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetFormatObjectArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetFormatObjectArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetFormatObjectArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_format_object()->::TSK::FormatStructArchive::MergeFrom(
          from._internal_format_object());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetFormatObjectArchive::CopyFrom(const SpecSetFormatObjectArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetFormatObjectArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetFormatObjectArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_format_object()) {
    if (!_impl_.format_object_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetFormatObjectArchive::InternalSwap(SpecSetFormatObjectArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetFormatObjectArchive, _impl_.unset_)
      + sizeof(SpecSetFormatObjectArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetFormatObjectArchive, _impl_.format_object_)>(
          reinterpret_cast<char*>(&_impl_.format_object_),
          reinterpret_cast<char*>(&other->_impl_.format_object_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetFormatObjectArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[4]);
}

// ===================================================================

class SpecSetNumberFormatArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecSetNumberFormatArchive>()._impl_._has_bits_);
  static const ::TSK::FormatStructArchive& number_format(const SpecSetNumberFormatArchive* msg);
  static void set_has_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::TSK::FormatStructArchive&
SpecSetNumberFormatArchive::_Internal::number_format(const SpecSetNumberFormatArchive* msg) {
  return *msg->_impl_.number_format_;
}
void SpecSetNumberFormatArchive::clear_number_format() {
  if (_impl_.number_format_ != nullptr) _impl_.number_format_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SpecSetNumberFormatArchive::SpecSetNumberFormatArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecSetNumberFormatArchive)
}
SpecSetNumberFormatArchive::SpecSetNumberFormatArchive(const SpecSetNumberFormatArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecSetNumberFormatArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.number_format_){nullptr}
    , decltype(_impl_.unset_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_number_format()) {
    _this->_impl_.number_format_ = new ::TSK::FormatStructArchive(*from._impl_.number_format_);
  }
  _this->_impl_.unset_ = from._impl_.unset_;
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecSetNumberFormatArchive)
}

inline void SpecSetNumberFormatArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.number_format_){nullptr}
    , decltype(_impl_.unset_){false}
  };
}

SpecSetNumberFormatArchive::~SpecSetNumberFormatArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecSetNumberFormatArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecSetNumberFormatArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.number_format_;
}

void SpecSetNumberFormatArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecSetNumberFormatArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecSetNumberFormatArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.number_format_ != nullptr);
    _impl_.number_format_->Clear();
  }
  _impl_.unset_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecSetNumberFormatArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSK.FormatStructArchive number_format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_number_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool unset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unset(&has_bits);
          _impl_.unset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecSetNumberFormatArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecSetNumberFormatArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSK.FormatStructArchive number_format = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::number_format(this),
        _Internal::number_format(this).GetCachedSize(), target, stream);
  }

  // required bool unset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_unset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecSetNumberFormatArchive)
  return target;
}

size_t SpecSetNumberFormatArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecSetNumberFormatArchive)
  size_t total_size = 0;

  // required bool unset = 2;
  if (_internal_has_unset()) {
    total_size += 1 + 1;
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSK.FormatStructArchive number_format = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.number_format_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecSetNumberFormatArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecSetNumberFormatArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecSetNumberFormatArchive::GetClassData() const { return &_class_data_; }


void SpecSetNumberFormatArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecSetNumberFormatArchive*>(&to_msg);
  auto& from = static_cast<const SpecSetNumberFormatArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecSetNumberFormatArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_number_format()->::TSK::FormatStructArchive::MergeFrom(
          from._internal_number_format());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unset_ = from._impl_.unset_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecSetNumberFormatArchive::CopyFrom(const SpecSetNumberFormatArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecSetNumberFormatArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecSetNumberFormatArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_number_format()) {
    if (!_impl_.number_format_->IsInitialized()) return false;
  }
  return true;
}

void SpecSetNumberFormatArchive::InternalSwap(SpecSetNumberFormatArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecSetNumberFormatArchive, _impl_.unset_)
      + sizeof(SpecSetNumberFormatArchive::_impl_.unset_)
      - PROTOBUF_FIELD_OFFSET(SpecSetNumberFormatArchive, _impl_.number_format_)>(
          reinterpret_cast<char*>(&_impl_.number_format_),
          reinterpret_cast<char*>(&other->_impl_.number_format_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecSetNumberFormatArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[5]);
}

// ===================================================================

class SpecChart3dLightingPackageArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecChart3dLightingPackageArchive>()._impl_._has_bits_);
  static const ::TSCHSOS::SpecSetChart3dLightingPackageArchive& spec_set_chart3d_lighting_package(const SpecChart3dLightingPackageArchive* msg);
  static void set_has_spec_set_chart3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetChart3dLightingPackageArchive&
SpecChart3dLightingPackageArchive::_Internal::spec_set_chart3d_lighting_package(const SpecChart3dLightingPackageArchive* msg) {
  return *msg->_impl_.spec_set_chart3d_lighting_package_;
}
SpecChart3dLightingPackageArchive::SpecChart3dLightingPackageArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecChart3dLightingPackageArchive)
}
SpecChart3dLightingPackageArchive::SpecChart3dLightingPackageArchive(const SpecChart3dLightingPackageArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecChart3dLightingPackageArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_chart3d_lighting_package_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_chart3d_lighting_package()) {
    _this->_impl_.spec_set_chart3d_lighting_package_ = new ::TSCHSOS::SpecSetChart3dLightingPackageArchive(*from._impl_.spec_set_chart3d_lighting_package_);
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecChart3dLightingPackageArchive)
}

inline void SpecChart3dLightingPackageArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_chart3d_lighting_package_){nullptr}
  };
}

SpecChart3dLightingPackageArchive::~SpecChart3dLightingPackageArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecChart3dLightingPackageArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecChart3dLightingPackageArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_chart3d_lighting_package_;
}

void SpecChart3dLightingPackageArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecChart3dLightingPackageArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_chart3d_lighting_package_ != nullptr);
    _impl_.spec_set_chart3d_lighting_package_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecChart3dLightingPackageArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetChart3dLightingPackageArchive spec_set_chart3d_lighting_package = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_chart3d_lighting_package(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecChart3dLightingPackageArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecSetChart3dLightingPackageArchive spec_set_chart3d_lighting_package = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_chart3d_lighting_package(this),
        _Internal::spec_set_chart3d_lighting_package(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecChart3dLightingPackageArchive)
  return target;
}

size_t SpecChart3dLightingPackageArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetChart3dLightingPackageArchive spec_set_chart3d_lighting_package = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_chart3d_lighting_package_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecChart3dLightingPackageArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecChart3dLightingPackageArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecChart3dLightingPackageArchive::GetClassData() const { return &_class_data_; }


void SpecChart3dLightingPackageArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecChart3dLightingPackageArchive*>(&to_msg);
  auto& from = static_cast<const SpecChart3dLightingPackageArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_chart3d_lighting_package()) {
    _this->_internal_mutable_spec_set_chart3d_lighting_package()->::TSCHSOS::SpecSetChart3dLightingPackageArchive::MergeFrom(
        from._internal_spec_set_chart3d_lighting_package());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecChart3dLightingPackageArchive::CopyFrom(const SpecChart3dLightingPackageArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecChart3dLightingPackageArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecChart3dLightingPackageArchive::IsInitialized() const {
  if (_internal_has_spec_set_chart3d_lighting_package()) {
    if (!_impl_.spec_set_chart3d_lighting_package_->IsInitialized()) return false;
  }
  return true;
}

void SpecChart3dLightingPackageArchive::InternalSwap(SpecChart3dLightingPackageArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_chart3d_lighting_package_, other->_impl_.spec_set_chart3d_lighting_package_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecChart3dLightingPackageArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[6]);
}

// ===================================================================

class SpecChart3dVectorArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecChart3dVectorArchive>()._impl_._has_bits_);
  static const ::TSCHSOS::SpecSetChart3dVectorArchive& spec_set_chart3d_vector(const SpecChart3dVectorArchive* msg);
  static void set_has_spec_set_chart3d_vector(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetChart3dVectorArchive&
SpecChart3dVectorArchive::_Internal::spec_set_chart3d_vector(const SpecChart3dVectorArchive* msg) {
  return *msg->_impl_.spec_set_chart3d_vector_;
}
SpecChart3dVectorArchive::SpecChart3dVectorArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecChart3dVectorArchive)
}
SpecChart3dVectorArchive::SpecChart3dVectorArchive(const SpecChart3dVectorArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecChart3dVectorArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_chart3d_vector_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_chart3d_vector()) {
    _this->_impl_.spec_set_chart3d_vector_ = new ::TSCHSOS::SpecSetChart3dVectorArchive(*from._impl_.spec_set_chart3d_vector_);
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecChart3dVectorArchive)
}

inline void SpecChart3dVectorArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_chart3d_vector_){nullptr}
  };
}

SpecChart3dVectorArchive::~SpecChart3dVectorArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecChart3dVectorArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecChart3dVectorArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_chart3d_vector_;
}

void SpecChart3dVectorArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecChart3dVectorArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecChart3dVectorArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_chart3d_vector_ != nullptr);
    _impl_.spec_set_chart3d_vector_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecChart3dVectorArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetChart3dVectorArchive spec_set_chart3d_vector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_chart3d_vector(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecChart3dVectorArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecChart3dVectorArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecSetChart3dVectorArchive spec_set_chart3d_vector = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_chart3d_vector(this),
        _Internal::spec_set_chart3d_vector(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecChart3dVectorArchive)
  return target;
}

size_t SpecChart3dVectorArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecChart3dVectorArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetChart3dVectorArchive spec_set_chart3d_vector = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_chart3d_vector_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecChart3dVectorArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecChart3dVectorArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecChart3dVectorArchive::GetClassData() const { return &_class_data_; }


void SpecChart3dVectorArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecChart3dVectorArchive*>(&to_msg);
  auto& from = static_cast<const SpecChart3dVectorArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecChart3dVectorArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_chart3d_vector()) {
    _this->_internal_mutable_spec_set_chart3d_vector()->::TSCHSOS::SpecSetChart3dVectorArchive::MergeFrom(
        from._internal_spec_set_chart3d_vector());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecChart3dVectorArchive::CopyFrom(const SpecChart3dVectorArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecChart3dVectorArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecChart3dVectorArchive::IsInitialized() const {
  if (_internal_has_spec_set_chart3d_vector()) {
    if (!_impl_.spec_set_chart3d_vector_->IsInitialized()) return false;
  }
  return true;
}

void SpecChart3dVectorArchive::InternalSwap(SpecChart3dVectorArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_chart3d_vector_, other->_impl_.spec_set_chart3d_vector_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecChart3dVectorArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[7]);
}

// ===================================================================

class SpecChartErrorBarCustomDataArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecChartErrorBarCustomDataArchive>()._impl_._has_bits_);
  static const ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive& spec_set_chart_error_bar_custom_data(const SpecChartErrorBarCustomDataArchive* msg);
  static void set_has_spec_set_chart_error_bar_custom_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive&
SpecChartErrorBarCustomDataArchive::_Internal::spec_set_chart_error_bar_custom_data(const SpecChartErrorBarCustomDataArchive* msg) {
  return *msg->_impl_.spec_set_chart_error_bar_custom_data_;
}
SpecChartErrorBarCustomDataArchive::SpecChartErrorBarCustomDataArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecChartErrorBarCustomDataArchive)
}
SpecChartErrorBarCustomDataArchive::SpecChartErrorBarCustomDataArchive(const SpecChartErrorBarCustomDataArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecChartErrorBarCustomDataArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_chart_error_bar_custom_data_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_chart_error_bar_custom_data()) {
    _this->_impl_.spec_set_chart_error_bar_custom_data_ = new ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive(*from._impl_.spec_set_chart_error_bar_custom_data_);
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecChartErrorBarCustomDataArchive)
}

inline void SpecChartErrorBarCustomDataArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_chart_error_bar_custom_data_){nullptr}
  };
}

SpecChartErrorBarCustomDataArchive::~SpecChartErrorBarCustomDataArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecChartErrorBarCustomDataArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_chart_error_bar_custom_data_;
}

void SpecChartErrorBarCustomDataArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecChartErrorBarCustomDataArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_chart_error_bar_custom_data_ != nullptr);
    _impl_.spec_set_chart_error_bar_custom_data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecChartErrorBarCustomDataArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetChartErrorBarCustomDataArchive spec_set_chart_error_bar_custom_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_chart_error_bar_custom_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecChartErrorBarCustomDataArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecSetChartErrorBarCustomDataArchive spec_set_chart_error_bar_custom_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_chart_error_bar_custom_data(this),
        _Internal::spec_set_chart_error_bar_custom_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  return target;
}

size_t SpecChartErrorBarCustomDataArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetChartErrorBarCustomDataArchive spec_set_chart_error_bar_custom_data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_chart_error_bar_custom_data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecChartErrorBarCustomDataArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecChartErrorBarCustomDataArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecChartErrorBarCustomDataArchive::GetClassData() const { return &_class_data_; }


void SpecChartErrorBarCustomDataArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecChartErrorBarCustomDataArchive*>(&to_msg);
  auto& from = static_cast<const SpecChartErrorBarCustomDataArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_chart_error_bar_custom_data()) {
    _this->_internal_mutable_spec_set_chart_error_bar_custom_data()->::TSCHSOS::SpecSetChartErrorBarCustomDataArchive::MergeFrom(
        from._internal_spec_set_chart_error_bar_custom_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecChartErrorBarCustomDataArchive::CopyFrom(const SpecChartErrorBarCustomDataArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecChartErrorBarCustomDataArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecChartErrorBarCustomDataArchive::IsInitialized() const {
  if (_internal_has_spec_set_chart_error_bar_custom_data()) {
    if (!_impl_.spec_set_chart_error_bar_custom_data_->IsInitialized()) return false;
  }
  return true;
}

void SpecChartErrorBarCustomDataArchive::InternalSwap(SpecChartErrorBarCustomDataArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_chart_error_bar_custom_data_, other->_impl_.spec_set_chart_error_bar_custom_data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecChartErrorBarCustomDataArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[8]);
}

// ===================================================================

class SpecChartsOptionalDoubleArchiveArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecChartsOptionalDoubleArchiveArchive>()._impl_._has_bits_);
  static const ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive& spec_set_charts_optional_double_archive(const SpecChartsOptionalDoubleArchiveArchive* msg);
  static void set_has_spec_set_charts_optional_double_archive(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive&
SpecChartsOptionalDoubleArchiveArchive::_Internal::spec_set_charts_optional_double_archive(const SpecChartsOptionalDoubleArchiveArchive* msg) {
  return *msg->_impl_.spec_set_charts_optional_double_archive_;
}
SpecChartsOptionalDoubleArchiveArchive::SpecChartsOptionalDoubleArchiveArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
}
SpecChartsOptionalDoubleArchiveArchive::SpecChartsOptionalDoubleArchiveArchive(const SpecChartsOptionalDoubleArchiveArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecChartsOptionalDoubleArchiveArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_charts_optional_double_archive_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_charts_optional_double_archive()) {
    _this->_impl_.spec_set_charts_optional_double_archive_ = new ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive(*from._impl_.spec_set_charts_optional_double_archive_);
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
}

inline void SpecChartsOptionalDoubleArchiveArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_charts_optional_double_archive_){nullptr}
  };
}

SpecChartsOptionalDoubleArchiveArchive::~SpecChartsOptionalDoubleArchiveArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecChartsOptionalDoubleArchiveArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_charts_optional_double_archive_;
}

void SpecChartsOptionalDoubleArchiveArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecChartsOptionalDoubleArchiveArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_charts_optional_double_archive_ != nullptr);
    _impl_.spec_set_charts_optional_double_archive_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecChartsOptionalDoubleArchiveArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive spec_set_charts_optional_double_archive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_charts_optional_double_archive(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecChartsOptionalDoubleArchiveArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive spec_set_charts_optional_double_archive = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_charts_optional_double_archive(this),
        _Internal::spec_set_charts_optional_double_archive(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  return target;
}

size_t SpecChartsOptionalDoubleArchiveArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive spec_set_charts_optional_double_archive = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_charts_optional_double_archive_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecChartsOptionalDoubleArchiveArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecChartsOptionalDoubleArchiveArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecChartsOptionalDoubleArchiveArchive::GetClassData() const { return &_class_data_; }


void SpecChartsOptionalDoubleArchiveArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecChartsOptionalDoubleArchiveArchive*>(&to_msg);
  auto& from = static_cast<const SpecChartsOptionalDoubleArchiveArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_charts_optional_double_archive()) {
    _this->_internal_mutable_spec_set_charts_optional_double_archive()->::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive::MergeFrom(
        from._internal_spec_set_charts_optional_double_archive());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecChartsOptionalDoubleArchiveArchive::CopyFrom(const SpecChartsOptionalDoubleArchiveArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecChartsOptionalDoubleArchiveArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecChartsOptionalDoubleArchiveArchive::IsInitialized() const {
  if (_internal_has_spec_set_charts_optional_double_archive()) {
    if (!_impl_.spec_set_charts_optional_double_archive_->IsInitialized()) return false;
  }
  return true;
}

void SpecChartsOptionalDoubleArchiveArchive::InternalSwap(SpecChartsOptionalDoubleArchiveArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_charts_optional_double_archive_, other->_impl_.spec_set_charts_optional_double_archive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecChartsOptionalDoubleArchiveArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[9]);
}

// ===================================================================

class SpecFormatObjectArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecFormatObjectArchive>()._impl_._has_bits_);
  static const ::TSCHSOS::SpecSetFormatObjectArchive& spec_set_format_object(const SpecFormatObjectArchive* msg);
  static void set_has_spec_set_format_object(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetFormatObjectArchive&
SpecFormatObjectArchive::_Internal::spec_set_format_object(const SpecFormatObjectArchive* msg) {
  return *msg->_impl_.spec_set_format_object_;
}
SpecFormatObjectArchive::SpecFormatObjectArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecFormatObjectArchive)
}
SpecFormatObjectArchive::SpecFormatObjectArchive(const SpecFormatObjectArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecFormatObjectArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_format_object_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_format_object()) {
    _this->_impl_.spec_set_format_object_ = new ::TSCHSOS::SpecSetFormatObjectArchive(*from._impl_.spec_set_format_object_);
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecFormatObjectArchive)
}

inline void SpecFormatObjectArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_format_object_){nullptr}
  };
}

SpecFormatObjectArchive::~SpecFormatObjectArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecFormatObjectArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecFormatObjectArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_format_object_;
}

void SpecFormatObjectArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecFormatObjectArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecFormatObjectArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_format_object_ != nullptr);
    _impl_.spec_set_format_object_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecFormatObjectArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetFormatObjectArchive spec_set_format_object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_format_object(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecFormatObjectArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecFormatObjectArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecSetFormatObjectArchive spec_set_format_object = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_format_object(this),
        _Internal::spec_set_format_object(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecFormatObjectArchive)
  return target;
}

size_t SpecFormatObjectArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecFormatObjectArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetFormatObjectArchive spec_set_format_object = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_format_object_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecFormatObjectArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecFormatObjectArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecFormatObjectArchive::GetClassData() const { return &_class_data_; }


void SpecFormatObjectArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecFormatObjectArchive*>(&to_msg);
  auto& from = static_cast<const SpecFormatObjectArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecFormatObjectArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_format_object()) {
    _this->_internal_mutable_spec_set_format_object()->::TSCHSOS::SpecSetFormatObjectArchive::MergeFrom(
        from._internal_spec_set_format_object());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecFormatObjectArchive::CopyFrom(const SpecFormatObjectArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecFormatObjectArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecFormatObjectArchive::IsInitialized() const {
  if (_internal_has_spec_set_format_object()) {
    if (!_impl_.spec_set_format_object_->IsInitialized()) return false;
  }
  return true;
}

void SpecFormatObjectArchive::InternalSwap(SpecFormatObjectArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_format_object_, other->_impl_.spec_set_format_object_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecFormatObjectArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[10]);
}

// ===================================================================

class SpecNumberFormatArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecNumberFormatArchive>()._impl_._has_bits_);
  static const ::TSCHSOS::SpecSetNumberFormatArchive& spec_set_number_format(const SpecNumberFormatArchive* msg);
  static void set_has_spec_set_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TSCHSOS::SpecSetNumberFormatArchive&
SpecNumberFormatArchive::_Internal::spec_set_number_format(const SpecNumberFormatArchive* msg) {
  return *msg->_impl_.spec_set_number_format_;
}
SpecNumberFormatArchive::SpecNumberFormatArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.SpecNumberFormatArchive)
}
SpecNumberFormatArchive::SpecNumberFormatArchive(const SpecNumberFormatArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpecNumberFormatArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_number_format_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_spec_set_number_format()) {
    _this->_impl_.spec_set_number_format_ = new ::TSCHSOS::SpecSetNumberFormatArchive(*from._impl_.spec_set_number_format_);
  }
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.SpecNumberFormatArchive)
}

inline void SpecNumberFormatArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.spec_set_number_format_){nullptr}
  };
}

SpecNumberFormatArchive::~SpecNumberFormatArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.SpecNumberFormatArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpecNumberFormatArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.spec_set_number_format_;
}

void SpecNumberFormatArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpecNumberFormatArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.SpecNumberFormatArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.spec_set_number_format_ != nullptr);
    _impl_.spec_set_number_format_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpecNumberFormatArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecSetNumberFormatArchive spec_set_number_format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec_set_number_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpecNumberFormatArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.SpecNumberFormatArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecSetNumberFormatArchive spec_set_number_format = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::spec_set_number_format(this),
        _Internal::spec_set_number_format(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.SpecNumberFormatArchive)
  return target;
}

size_t SpecNumberFormatArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.SpecNumberFormatArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TSCHSOS.SpecSetNumberFormatArchive spec_set_number_format = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.spec_set_number_format_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpecNumberFormatArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpecNumberFormatArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpecNumberFormatArchive::GetClassData() const { return &_class_data_; }


void SpecNumberFormatArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpecNumberFormatArchive*>(&to_msg);
  auto& from = static_cast<const SpecNumberFormatArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.SpecNumberFormatArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_spec_set_number_format()) {
    _this->_internal_mutable_spec_set_number_format()->::TSCHSOS::SpecSetNumberFormatArchive::MergeFrom(
        from._internal_spec_set_number_format());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpecNumberFormatArchive::CopyFrom(const SpecNumberFormatArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.SpecNumberFormatArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecNumberFormatArchive::IsInitialized() const {
  if (_internal_has_spec_set_number_format()) {
    if (!_impl_.spec_set_number_format_->IsInitialized()) return false;
  }
  return true;
}

void SpecNumberFormatArchive::InternalSwap(SpecNumberFormatArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.spec_set_number_format_, other->_impl_.spec_set_number_format_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpecNumberFormatArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[11]);
}

// ===================================================================

class ChartAxisNonStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartAxisNonStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSCHSOS::SpecFormatObjectArchive& default10_date_format(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default10_date_format(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default10_date_format_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& default10_number_format(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default10_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default10_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default3d_label_position(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_label_position(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default3d_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static const ::TSCHSOS::SpecFormatObjectArchive& default_date_format(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_date_format(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default_date_format_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::TSCHSOS::SpecFormatObjectArchive& default_duration_format(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_duration_format(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default_duration_format_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_label_explosion(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_label_explosion(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_default_label_explosion_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& default_number_format(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_default_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_number_format_type(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_number_format_type(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_default_number_format_type_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_number_of_decades(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_number_of_decades(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_value_number_of_decades_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_number_of_major_gridlines(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_number_of_major_gridlines(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_value_number_of_major_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_number_of_minor_gridlines(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_number_of_minor_gridlines(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_value_number_of_minor_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_plot_to_edges(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_category_plot_to_edges(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_category_plot_to_edges_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_scale(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_value_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_labels(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_category_show_labels_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_labels(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_default_show_labels_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_labels(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_value_show_labels_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_series_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_series_labels(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_category_show_series_labels_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& multi_data_show_series_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_multi_data_show_series_labels(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_multi_data_show_series_labels_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_title(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_title(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_category_show_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_title(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_title(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_value_show_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::TSSSOS::SpecStringArchive& category_title(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_category_title(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_category_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::TSSSOS::SpecStringArchive& value_title(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_value_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_value_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive& default_user_max(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_user_max(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_default_user_max_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive& default_user_min(const ChartAxisNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_user_min(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_default_user_min_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
};

const ::TSCHSOS::SpecFormatObjectArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default10_date_format(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default10_date_format_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default10_number_format(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default10_number_format_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default3d_label_position(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default3d_label_position_;
}
const ::TSCHSOS::SpecFormatObjectArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_date_format(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_date_format_;
}
const ::TSCHSOS::SpecFormatObjectArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_duration_format(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_duration_format_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_label_explosion(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_label_explosion_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_number_format(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_number_format_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_number_format_type(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_number_format_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_number_of_decades(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_number_of_decades_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_number_of_major_gridlines(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_number_of_major_gridlines_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_number_of_minor_gridlines(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_number_of_minor_gridlines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::category_plot_to_edges(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_plot_to_edges_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_scale(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_scale_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::category_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_show_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_show_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_show_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::category_show_series_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_show_series_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::multi_data_show_series_labels(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.multi_data_show_series_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::category_show_title(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_show_title_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_show_title(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_show_title_;
}
const ::TSSSOS::SpecStringArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::category_title(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_title_;
}
const ::TSSSOS::SpecStringArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::value_title(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_title_;
}
const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_user_max(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_user_max_;
}
const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive&
ChartAxisNonStylePropertyChangeSetArchive::_Internal::default_user_min(const ChartAxisNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_user_min_;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_default3d_label_position() {
  if (_impl_.default3d_label_position_ != nullptr) _impl_.default3d_label_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_default_label_explosion() {
  if (_impl_.default_label_explosion_ != nullptr) _impl_.default_label_explosion_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_default_number_format_type() {
  if (_impl_.default_number_format_type_ != nullptr) _impl_.default_number_format_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_number_of_decades() {
  if (_impl_.value_number_of_decades_ != nullptr) _impl_.value_number_of_decades_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_number_of_major_gridlines() {
  if (_impl_.value_number_of_major_gridlines_ != nullptr) _impl_.value_number_of_major_gridlines_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_number_of_minor_gridlines() {
  if (_impl_.value_number_of_minor_gridlines_ != nullptr) _impl_.value_number_of_minor_gridlines_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_category_plot_to_edges() {
  if (_impl_.category_plot_to_edges_ != nullptr) _impl_.category_plot_to_edges_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_scale() {
  if (_impl_.value_scale_ != nullptr) _impl_.value_scale_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_category_show_labels() {
  if (_impl_.category_show_labels_ != nullptr) _impl_.category_show_labels_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_default_show_labels() {
  if (_impl_.default_show_labels_ != nullptr) _impl_.default_show_labels_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_show_labels() {
  if (_impl_.value_show_labels_ != nullptr) _impl_.value_show_labels_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_category_show_series_labels() {
  if (_impl_.category_show_series_labels_ != nullptr) _impl_.category_show_series_labels_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_multi_data_show_series_labels() {
  if (_impl_.multi_data_show_series_labels_ != nullptr) _impl_.multi_data_show_series_labels_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_category_show_title() {
  if (_impl_.category_show_title_ != nullptr) _impl_.category_show_title_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_show_title() {
  if (_impl_.value_show_title_ != nullptr) _impl_.value_show_title_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_category_title() {
  if (_impl_.category_title_ != nullptr) _impl_.category_title_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void ChartAxisNonStylePropertyChangeSetArchive::clear_value_title() {
  if (_impl_.value_title_ != nullptr) _impl_.value_title_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
ChartAxisNonStylePropertyChangeSetArchive::ChartAxisNonStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
}
ChartAxisNonStylePropertyChangeSetArchive::ChartAxisNonStylePropertyChangeSetArchive(const ChartAxisNonStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChartAxisNonStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default10_date_format_){nullptr}
    , decltype(_impl_.default10_number_format_){nullptr}
    , decltype(_impl_.default3d_label_position_){nullptr}
    , decltype(_impl_.default_date_format_){nullptr}
    , decltype(_impl_.default_duration_format_){nullptr}
    , decltype(_impl_.default_label_explosion_){nullptr}
    , decltype(_impl_.default_number_format_){nullptr}
    , decltype(_impl_.default_number_format_type_){nullptr}
    , decltype(_impl_.value_number_of_decades_){nullptr}
    , decltype(_impl_.value_number_of_major_gridlines_){nullptr}
    , decltype(_impl_.value_number_of_minor_gridlines_){nullptr}
    , decltype(_impl_.category_plot_to_edges_){nullptr}
    , decltype(_impl_.value_scale_){nullptr}
    , decltype(_impl_.category_show_labels_){nullptr}
    , decltype(_impl_.default_show_labels_){nullptr}
    , decltype(_impl_.value_show_labels_){nullptr}
    , decltype(_impl_.category_show_series_labels_){nullptr}
    , decltype(_impl_.multi_data_show_series_labels_){nullptr}
    , decltype(_impl_.category_show_title_){nullptr}
    , decltype(_impl_.value_show_title_){nullptr}
    , decltype(_impl_.category_title_){nullptr}
    , decltype(_impl_.value_title_){nullptr}
    , decltype(_impl_.default_user_max_){nullptr}
    , decltype(_impl_.default_user_min_){nullptr}
    , decltype(_impl_.default10_date_format_undefined_){}
    , decltype(_impl_.default10_number_format_undefined_){}
    , decltype(_impl_.default3d_label_position_undefined_){}
    , decltype(_impl_.default_date_format_undefined_){}
    , decltype(_impl_.default_duration_format_undefined_){}
    , decltype(_impl_.default_label_explosion_undefined_){}
    , decltype(_impl_.default_number_format_undefined_){}
    , decltype(_impl_.default_number_format_type_undefined_){}
    , decltype(_impl_.value_number_of_decades_undefined_){}
    , decltype(_impl_.value_number_of_major_gridlines_undefined_){}
    , decltype(_impl_.value_number_of_minor_gridlines_undefined_){}
    , decltype(_impl_.category_plot_to_edges_undefined_){}
    , decltype(_impl_.value_scale_undefined_){}
    , decltype(_impl_.category_show_labels_undefined_){}
    , decltype(_impl_.default_show_labels_undefined_){}
    , decltype(_impl_.value_show_labels_undefined_){}
    , decltype(_impl_.category_show_series_labels_undefined_){}
    , decltype(_impl_.multi_data_show_series_labels_undefined_){}
    , decltype(_impl_.category_show_title_undefined_){}
    , decltype(_impl_.value_show_title_undefined_){}
    , decltype(_impl_.category_title_undefined_){}
    , decltype(_impl_.value_title_undefined_){}
    , decltype(_impl_.default_user_max_undefined_){}
    , decltype(_impl_.default_user_min_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default10_date_format()) {
    _this->_impl_.default10_date_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from._impl_.default10_date_format_);
  }
  if (from._internal_has_default10_number_format()) {
    _this->_impl_.default10_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from._impl_.default10_number_format_);
  }
  if (from._internal_has_default3d_label_position()) {
    _this->_impl_.default3d_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default3d_label_position_);
  }
  if (from._internal_has_default_date_format()) {
    _this->_impl_.default_date_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from._impl_.default_date_format_);
  }
  if (from._internal_has_default_duration_format()) {
    _this->_impl_.default_duration_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from._impl_.default_duration_format_);
  }
  if (from._internal_has_default_label_explosion()) {
    _this->_impl_.default_label_explosion_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_label_explosion_);
  }
  if (from._internal_has_default_number_format()) {
    _this->_impl_.default_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from._impl_.default_number_format_);
  }
  if (from._internal_has_default_number_format_type()) {
    _this->_impl_.default_number_format_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_number_format_type_);
  }
  if (from._internal_has_value_number_of_decades()) {
    _this->_impl_.value_number_of_decades_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.value_number_of_decades_);
  }
  if (from._internal_has_value_number_of_major_gridlines()) {
    _this->_impl_.value_number_of_major_gridlines_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.value_number_of_major_gridlines_);
  }
  if (from._internal_has_value_number_of_minor_gridlines()) {
    _this->_impl_.value_number_of_minor_gridlines_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.value_number_of_minor_gridlines_);
  }
  if (from._internal_has_category_plot_to_edges()) {
    _this->_impl_.category_plot_to_edges_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.category_plot_to_edges_);
  }
  if (from._internal_has_value_scale()) {
    _this->_impl_.value_scale_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.value_scale_);
  }
  if (from._internal_has_category_show_labels()) {
    _this->_impl_.category_show_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.category_show_labels_);
  }
  if (from._internal_has_default_show_labels()) {
    _this->_impl_.default_show_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_labels_);
  }
  if (from._internal_has_value_show_labels()) {
    _this->_impl_.value_show_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.value_show_labels_);
  }
  if (from._internal_has_category_show_series_labels()) {
    _this->_impl_.category_show_series_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.category_show_series_labels_);
  }
  if (from._internal_has_multi_data_show_series_labels()) {
    _this->_impl_.multi_data_show_series_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.multi_data_show_series_labels_);
  }
  if (from._internal_has_category_show_title()) {
    _this->_impl_.category_show_title_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.category_show_title_);
  }
  if (from._internal_has_value_show_title()) {
    _this->_impl_.value_show_title_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.value_show_title_);
  }
  if (from._internal_has_category_title()) {
    _this->_impl_.category_title_ = new ::TSSSOS::SpecStringArchive(*from._impl_.category_title_);
  }
  if (from._internal_has_value_title()) {
    _this->_impl_.value_title_ = new ::TSSSOS::SpecStringArchive(*from._impl_.value_title_);
  }
  if (from._internal_has_default_user_max()) {
    _this->_impl_.default_user_max_ = new ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive(*from._impl_.default_user_max_);
  }
  if (from._internal_has_default_user_min()) {
    _this->_impl_.default_user_min_ = new ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive(*from._impl_.default_user_min_);
  }
  ::memcpy(&_impl_.default10_date_format_undefined_, &from._impl_.default10_date_format_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.default_user_min_undefined_) -
    reinterpret_cast<char*>(&_impl_.default10_date_format_undefined_)) + sizeof(_impl_.default_user_min_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
}

inline void ChartAxisNonStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default10_date_format_){nullptr}
    , decltype(_impl_.default10_number_format_){nullptr}
    , decltype(_impl_.default3d_label_position_){nullptr}
    , decltype(_impl_.default_date_format_){nullptr}
    , decltype(_impl_.default_duration_format_){nullptr}
    , decltype(_impl_.default_label_explosion_){nullptr}
    , decltype(_impl_.default_number_format_){nullptr}
    , decltype(_impl_.default_number_format_type_){nullptr}
    , decltype(_impl_.value_number_of_decades_){nullptr}
    , decltype(_impl_.value_number_of_major_gridlines_){nullptr}
    , decltype(_impl_.value_number_of_minor_gridlines_){nullptr}
    , decltype(_impl_.category_plot_to_edges_){nullptr}
    , decltype(_impl_.value_scale_){nullptr}
    , decltype(_impl_.category_show_labels_){nullptr}
    , decltype(_impl_.default_show_labels_){nullptr}
    , decltype(_impl_.value_show_labels_){nullptr}
    , decltype(_impl_.category_show_series_labels_){nullptr}
    , decltype(_impl_.multi_data_show_series_labels_){nullptr}
    , decltype(_impl_.category_show_title_){nullptr}
    , decltype(_impl_.value_show_title_){nullptr}
    , decltype(_impl_.category_title_){nullptr}
    , decltype(_impl_.value_title_){nullptr}
    , decltype(_impl_.default_user_max_){nullptr}
    , decltype(_impl_.default_user_min_){nullptr}
    , decltype(_impl_.default10_date_format_undefined_){false}
    , decltype(_impl_.default10_number_format_undefined_){false}
    , decltype(_impl_.default3d_label_position_undefined_){false}
    , decltype(_impl_.default_date_format_undefined_){false}
    , decltype(_impl_.default_duration_format_undefined_){false}
    , decltype(_impl_.default_label_explosion_undefined_){false}
    , decltype(_impl_.default_number_format_undefined_){false}
    , decltype(_impl_.default_number_format_type_undefined_){false}
    , decltype(_impl_.value_number_of_decades_undefined_){false}
    , decltype(_impl_.value_number_of_major_gridlines_undefined_){false}
    , decltype(_impl_.value_number_of_minor_gridlines_undefined_){false}
    , decltype(_impl_.category_plot_to_edges_undefined_){false}
    , decltype(_impl_.value_scale_undefined_){false}
    , decltype(_impl_.category_show_labels_undefined_){false}
    , decltype(_impl_.default_show_labels_undefined_){false}
    , decltype(_impl_.value_show_labels_undefined_){false}
    , decltype(_impl_.category_show_series_labels_undefined_){false}
    , decltype(_impl_.multi_data_show_series_labels_undefined_){false}
    , decltype(_impl_.category_show_title_undefined_){false}
    , decltype(_impl_.value_show_title_undefined_){false}
    , decltype(_impl_.category_title_undefined_){false}
    , decltype(_impl_.value_title_undefined_){false}
    , decltype(_impl_.default_user_max_undefined_){false}
    , decltype(_impl_.default_user_min_undefined_){false}
  };
}

ChartAxisNonStylePropertyChangeSetArchive::~ChartAxisNonStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChartAxisNonStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.default10_date_format_;
  if (this != internal_default_instance()) delete _impl_.default10_number_format_;
  if (this != internal_default_instance()) delete _impl_.default3d_label_position_;
  if (this != internal_default_instance()) delete _impl_.default_date_format_;
  if (this != internal_default_instance()) delete _impl_.default_duration_format_;
  if (this != internal_default_instance()) delete _impl_.default_label_explosion_;
  if (this != internal_default_instance()) delete _impl_.default_number_format_;
  if (this != internal_default_instance()) delete _impl_.default_number_format_type_;
  if (this != internal_default_instance()) delete _impl_.value_number_of_decades_;
  if (this != internal_default_instance()) delete _impl_.value_number_of_major_gridlines_;
  if (this != internal_default_instance()) delete _impl_.value_number_of_minor_gridlines_;
  if (this != internal_default_instance()) delete _impl_.category_plot_to_edges_;
  if (this != internal_default_instance()) delete _impl_.value_scale_;
  if (this != internal_default_instance()) delete _impl_.category_show_labels_;
  if (this != internal_default_instance()) delete _impl_.default_show_labels_;
  if (this != internal_default_instance()) delete _impl_.value_show_labels_;
  if (this != internal_default_instance()) delete _impl_.category_show_series_labels_;
  if (this != internal_default_instance()) delete _impl_.multi_data_show_series_labels_;
  if (this != internal_default_instance()) delete _impl_.category_show_title_;
  if (this != internal_default_instance()) delete _impl_.value_show_title_;
  if (this != internal_default_instance()) delete _impl_.category_title_;
  if (this != internal_default_instance()) delete _impl_.value_title_;
  if (this != internal_default_instance()) delete _impl_.default_user_max_;
  if (this != internal_default_instance()) delete _impl_.default_user_min_;
}

void ChartAxisNonStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChartAxisNonStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.default10_date_format_ != nullptr);
      _impl_.default10_date_format_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.default10_number_format_ != nullptr);
      _impl_.default10_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.default3d_label_position_ != nullptr);
      _impl_.default3d_label_position_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.default_date_format_ != nullptr);
      _impl_.default_date_format_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.default_duration_format_ != nullptr);
      _impl_.default_duration_format_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.default_label_explosion_ != nullptr);
      _impl_.default_label_explosion_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.default_number_format_ != nullptr);
      _impl_.default_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.default_number_format_type_ != nullptr);
      _impl_.default_number_format_type_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.value_number_of_decades_ != nullptr);
      _impl_.value_number_of_decades_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.value_number_of_major_gridlines_ != nullptr);
      _impl_.value_number_of_major_gridlines_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.value_number_of_minor_gridlines_ != nullptr);
      _impl_.value_number_of_minor_gridlines_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.category_plot_to_edges_ != nullptr);
      _impl_.category_plot_to_edges_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.value_scale_ != nullptr);
      _impl_.value_scale_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.category_show_labels_ != nullptr);
      _impl_.category_show_labels_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.default_show_labels_ != nullptr);
      _impl_.default_show_labels_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.value_show_labels_ != nullptr);
      _impl_.value_show_labels_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.category_show_series_labels_ != nullptr);
      _impl_.category_show_series_labels_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.multi_data_show_series_labels_ != nullptr);
      _impl_.multi_data_show_series_labels_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.category_show_title_ != nullptr);
      _impl_.category_show_title_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.value_show_title_ != nullptr);
      _impl_.value_show_title_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.category_title_ != nullptr);
      _impl_.category_title_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.value_title_ != nullptr);
      _impl_.value_title_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.default_user_max_ != nullptr);
      _impl_.default_user_max_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.default_user_min_ != nullptr);
      _impl_.default_user_min_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.default10_date_format_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_number_format_type_undefined_) -
        reinterpret_cast<char*>(&_impl_.default10_date_format_undefined_)) + sizeof(_impl_.default_number_format_type_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.value_number_of_decades_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.value_show_labels_undefined_) -
        reinterpret_cast<char*>(&_impl_.value_number_of_decades_undefined_)) + sizeof(_impl_.value_show_labels_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.category_show_series_labels_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_user_min_undefined_) -
        reinterpret_cast<char*>(&_impl_.category_show_series_labels_undefined_)) + sizeof(_impl_.default_user_min_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartAxisNonStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default10_date_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default10_date_format_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_default10_date_format_undefined(&_impl_._has_bits_);
          _impl_.default10_date_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default10_number_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default10_number_format_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default10_number_format_undefined(&_impl_._has_bits_);
          _impl_.default10_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default3d_label_position = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default3d_label_position_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_default3d_label_position_undefined(&_impl_._has_bits_);
          _impl_.default3d_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_date_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_date_format_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_default_date_format_undefined(&_impl_._has_bits_);
          _impl_.default_date_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_duration_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_duration_format_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default_duration_format_undefined(&_impl_._has_bits_);
          _impl_.default_duration_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_label_explosion = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label_explosion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_label_explosion_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_default_label_explosion_undefined(&_impl_._has_bits_);
          _impl_.default_label_explosion_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_number_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_number_format_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_default_number_format_undefined(&_impl_._has_bits_);
          _impl_.default_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_number_format_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_number_format_type_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default_number_format_type_undefined(&_impl_._has_bits_);
          _impl_.default_number_format_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_number_of_decades = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_number_of_decades(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_number_of_decades_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_value_number_of_decades_undefined(&_impl_._has_bits_);
          _impl_.value_number_of_decades_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_number_of_major_gridlines = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_number_of_major_gridlines(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_number_of_major_gridlines_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_value_number_of_major_gridlines_undefined(&_impl_._has_bits_);
          _impl_.value_number_of_major_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_number_of_minor_gridlines = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_number_of_minor_gridlines(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_number_of_minor_gridlines_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_value_number_of_minor_gridlines_undefined(&_impl_._has_bits_);
          _impl_.value_number_of_minor_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_plot_to_edges = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_plot_to_edges(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_plot_to_edges_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_category_plot_to_edges_undefined(&_impl_._has_bits_);
          _impl_.category_plot_to_edges_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_scale = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_scale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_scale_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_value_scale_undefined(&_impl_._has_bits_);
          _impl_.value_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_labels = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_show_labels_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_category_show_labels_undefined(&_impl_._has_bits_);
          _impl_.category_show_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_labels = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_labels_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_default_show_labels_undefined(&_impl_._has_bits_);
          _impl_.default_show_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_labels = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_show_labels_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_value_show_labels_undefined(&_impl_._has_bits_);
          _impl_.value_show_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_series_labels = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_series_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_show_series_labels_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_category_show_series_labels_undefined(&_impl_._has_bits_);
          _impl_.category_show_series_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive multi_data_show_series_labels = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_multi_data_show_series_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool multi_data_show_series_labels_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_multi_data_show_series_labels_undefined(&_impl_._has_bits_);
          _impl_.multi_data_show_series_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_title = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_title(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_show_title_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_category_show_title_undefined(&_impl_._has_bits_);
          _impl_.category_show_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_title = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_title(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_show_title_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_value_show_title_undefined(&_impl_._has_bits_);
          _impl_.value_show_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive category_title = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_title(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_title_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_category_title_undefined(&_impl_._has_bits_);
          _impl_.category_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive value_title = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_title(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_title_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_value_title_undefined(&_impl_._has_bits_);
          _impl_.value_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_max = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_user_max(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_user_max_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_default_user_max_undefined(&_impl_._has_bits_);
          _impl_.default_user_max_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_min = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_user_min(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_user_min_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default_user_min_undefined(&_impl_._has_bits_);
          _impl_.default_user_min_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChartAxisNonStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::default10_date_format(this),
        _Internal::default10_date_format(this).GetCachedSize(), target, stream);
  }

  // optional bool default10_date_format_undefined = 2;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_default10_date_format_undefined(), target);
  }

  // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::default10_number_format(this),
        _Internal::default10_number_format(this).GetCachedSize(), target, stream);
  }

  // optional bool default10_number_format_undefined = 4;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_default10_number_format_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive default3d_label_position = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::default3d_label_position(this),
        _Internal::default3d_label_position(this).GetCachedSize(), target, stream);
  }

  // optional bool default3d_label_position_undefined = 6;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_default3d_label_position_undefined(), target);
  }

  // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::default_date_format(this),
        _Internal::default_date_format(this).GetCachedSize(), target, stream);
  }

  // optional bool default_date_format_undefined = 8;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_default_date_format_undefined(), target);
  }

  // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::default_duration_format(this),
        _Internal::default_duration_format(this).GetCachedSize(), target, stream);
  }

  // optional bool default_duration_format_undefined = 10;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_default_duration_format_undefined(), target);
  }

  // optional .TSSSOS.SpecDoubleArchive default_label_explosion = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::default_label_explosion(this),
        _Internal::default_label_explosion(this).GetCachedSize(), target, stream);
  }

  // optional bool default_label_explosion_undefined = 12;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_default_label_explosion_undefined(), target);
  }

  // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::default_number_format(this),
        _Internal::default_number_format(this).GetCachedSize(), target, stream);
  }

  // optional bool default_number_format_undefined = 14;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_default_number_format_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::default_number_format_type(this),
        _Internal::default_number_format_type(this).GetCachedSize(), target, stream);
  }

  // optional bool default_number_format_type_undefined = 16;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_default_number_format_type_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive value_number_of_decades = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::value_number_of_decades(this),
        _Internal::value_number_of_decades(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_number_of_decades_undefined = 18;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_value_number_of_decades_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive value_number_of_major_gridlines = 19;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::value_number_of_major_gridlines(this),
        _Internal::value_number_of_major_gridlines(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_number_of_major_gridlines_undefined = 20;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(20, this->_internal_value_number_of_major_gridlines_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive value_number_of_minor_gridlines = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::value_number_of_minor_gridlines(this),
        _Internal::value_number_of_minor_gridlines(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_number_of_minor_gridlines_undefined = 22;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(22, this->_internal_value_number_of_minor_gridlines_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_plot_to_edges = 23;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::category_plot_to_edges(this),
        _Internal::category_plot_to_edges(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category_plot_to_edges_undefined = 24;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(24, this->_internal_category_plot_to_edges_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive value_scale = 25;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::value_scale(this),
        _Internal::value_scale(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_scale_undefined = 26;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(26, this->_internal_value_scale_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_labels = 27;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(27, _Internal::category_show_labels(this),
        _Internal::category_show_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category_show_labels_undefined = 28;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(28, this->_internal_category_show_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_show_labels = 29;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(29, _Internal::default_show_labels(this),
        _Internal::default_show_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_show_labels_undefined = 30;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(30, this->_internal_default_show_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive value_show_labels = 31;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, _Internal::value_show_labels(this),
        _Internal::value_show_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_show_labels_undefined = 32;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(32, this->_internal_value_show_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_series_labels = 33;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(33, _Internal::category_show_series_labels(this),
        _Internal::category_show_series_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category_show_series_labels_undefined = 34;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(34, this->_internal_category_show_series_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive multi_data_show_series_labels = 35;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, _Internal::multi_data_show_series_labels(this),
        _Internal::multi_data_show_series_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool multi_data_show_series_labels_undefined = 36;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(36, this->_internal_multi_data_show_series_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_title = 37;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(37, _Internal::category_show_title(this),
        _Internal::category_show_title(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category_show_title_undefined = 38;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(38, this->_internal_category_show_title_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive value_show_title = 39;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(39, _Internal::value_show_title(this),
        _Internal::value_show_title(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_show_title_undefined = 40;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(40, this->_internal_value_show_title_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecStringArchive category_title = 41;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(41, _Internal::category_title(this),
        _Internal::category_title(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category_title_undefined = 42;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(42, this->_internal_category_title_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecStringArchive value_title = 43;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(43, _Internal::value_title(this),
        _Internal::value_title(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_title_undefined = 44;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(44, this->_internal_value_title_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_max = 45;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(45, _Internal::default_user_max(this),
        _Internal::default_user_max(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_user_max_undefined = 46;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(46, this->_internal_default_user_max_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_min = 47;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(47, _Internal::default_user_min(this),
        _Internal::default_user_min(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_user_min_undefined = 48;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(48, this->_internal_default_user_min_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  return target;
}

size_t ChartAxisNonStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default10_date_format_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default10_number_format_);
    }

    // optional .TSSSOS.SpecIntegerArchive default3d_label_position = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default3d_label_position_);
    }

    // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_date_format_);
    }

    // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_duration_format_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_label_explosion = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_label_explosion_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_number_format_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_number_format_type_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive value_number_of_decades = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_number_of_decades_);
    }

    // optional .TSSSOS.SpecIntegerArchive value_number_of_major_gridlines = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_number_of_major_gridlines_);
    }

    // optional .TSSSOS.SpecIntegerArchive value_number_of_minor_gridlines = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_number_of_minor_gridlines_);
    }

    // optional .TSSSOS.SpecBoolArchive category_plot_to_edges = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_plot_to_edges_);
    }

    // optional .TSSSOS.SpecIntegerArchive value_scale = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_scale_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_labels = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_show_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_labels = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_labels = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_show_labels_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecBoolArchive category_show_series_labels = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_show_series_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive multi_data_show_series_labels = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.multi_data_show_series_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_title = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_show_title_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_title = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_show_title_);
    }

    // optional .TSSSOS.SpecStringArchive category_title = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_title_);
    }

    // optional .TSSSOS.SpecStringArchive value_title = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_title_);
    }

    // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_max = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_user_max_);
    }

    // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_user_min = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_user_min_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool default10_date_format_undefined = 2;
    if (cached_has_bits & 0x01000000u) {
      total_size += 1 + 1;
    }

    // optional bool default10_number_format_undefined = 4;
    if (cached_has_bits & 0x02000000u) {
      total_size += 1 + 1;
    }

    // optional bool default3d_label_position_undefined = 6;
    if (cached_has_bits & 0x04000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_date_format_undefined = 8;
    if (cached_has_bits & 0x08000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_duration_format_undefined = 10;
    if (cached_has_bits & 0x10000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_label_explosion_undefined = 12;
    if (cached_has_bits & 0x20000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_number_format_undefined = 14;
    if (cached_has_bits & 0x40000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_number_format_type_undefined = 16;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool value_number_of_decades_undefined = 18;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool value_number_of_major_gridlines_undefined = 20;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool value_number_of_minor_gridlines_undefined = 22;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool category_plot_to_edges_undefined = 24;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool value_scale_undefined = 26;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_labels_undefined = 28;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_labels_undefined = 30;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_labels_undefined = 32;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool category_show_series_labels_undefined = 34;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool multi_data_show_series_labels_undefined = 36;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_title_undefined = 38;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_title_undefined = 40;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool category_title_undefined = 42;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool value_title_undefined = 44;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool default_user_max_undefined = 46;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool default_user_min_undefined = 48;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChartAxisNonStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChartAxisNonStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChartAxisNonStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ChartAxisNonStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChartAxisNonStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ChartAxisNonStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_default10_date_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(
          from._internal_default10_date_format());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_default10_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(
          from._internal_default10_number_format());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_default3d_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default3d_label_position());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_default_date_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(
          from._internal_default_date_format());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_default_duration_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(
          from._internal_default_duration_format());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_default_label_explosion()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_label_explosion());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_default_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(
          from._internal_default_number_format());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_default_number_format_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_number_format_type());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_value_number_of_decades()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_value_number_of_decades());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_value_number_of_major_gridlines()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_value_number_of_major_gridlines());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_value_number_of_minor_gridlines()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_value_number_of_minor_gridlines());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_category_plot_to_edges()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_category_plot_to_edges());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_value_scale()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_value_scale());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_category_show_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_category_show_labels());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_default_show_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_labels());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_value_show_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_value_show_labels());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_category_show_series_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_category_show_series_labels());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_multi_data_show_series_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_multi_data_show_series_labels());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_category_show_title()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_category_show_title());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_value_show_title()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_value_show_title());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_category_title()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_category_title());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_value_title()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_value_title());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_default_user_max()->::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive::MergeFrom(
          from._internal_default_user_max());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_default_user_min()->::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive::MergeFrom(
          from._internal_default_user_min());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.default10_date_format_undefined_ = from._impl_.default10_date_format_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.default10_number_format_undefined_ = from._impl_.default10_number_format_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.default3d_label_position_undefined_ = from._impl_.default3d_label_position_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.default_date_format_undefined_ = from._impl_.default_date_format_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.default_duration_format_undefined_ = from._impl_.default_duration_format_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.default_label_explosion_undefined_ = from._impl_.default_label_explosion_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.default_number_format_undefined_ = from._impl_.default_number_format_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.default_number_format_type_undefined_ = from._impl_.default_number_format_type_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.value_number_of_decades_undefined_ = from._impl_.value_number_of_decades_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.value_number_of_major_gridlines_undefined_ = from._impl_.value_number_of_major_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.value_number_of_minor_gridlines_undefined_ = from._impl_.value_number_of_minor_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.category_plot_to_edges_undefined_ = from._impl_.category_plot_to_edges_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.value_scale_undefined_ = from._impl_.value_scale_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.category_show_labels_undefined_ = from._impl_.category_show_labels_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.default_show_labels_undefined_ = from._impl_.default_show_labels_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.value_show_labels_undefined_ = from._impl_.value_show_labels_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.category_show_series_labels_undefined_ = from._impl_.category_show_series_labels_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.multi_data_show_series_labels_undefined_ = from._impl_.multi_data_show_series_labels_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.category_show_title_undefined_ = from._impl_.category_show_title_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.value_show_title_undefined_ = from._impl_.value_show_title_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.category_title_undefined_ = from._impl_.category_title_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.value_title_undefined_ = from._impl_.value_title_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.default_user_max_undefined_ = from._impl_.default_user_max_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.default_user_min_undefined_ = from._impl_.default_user_min_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChartAxisNonStylePropertyChangeSetArchive::CopyFrom(const ChartAxisNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartAxisNonStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default10_date_format()) {
    if (!_impl_.default10_date_format_->IsInitialized()) return false;
  }
  if (_internal_has_default10_number_format()) {
    if (!_impl_.default10_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_label_position()) {
    if (!_impl_.default3d_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_default_date_format()) {
    if (!_impl_.default_date_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_duration_format()) {
    if (!_impl_.default_duration_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_label_explosion()) {
    if (!_impl_.default_label_explosion_->IsInitialized()) return false;
  }
  if (_internal_has_default_number_format()) {
    if (!_impl_.default_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_number_format_type()) {
    if (!_impl_.default_number_format_type_->IsInitialized()) return false;
  }
  if (_internal_has_value_number_of_decades()) {
    if (!_impl_.value_number_of_decades_->IsInitialized()) return false;
  }
  if (_internal_has_value_number_of_major_gridlines()) {
    if (!_impl_.value_number_of_major_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_value_number_of_minor_gridlines()) {
    if (!_impl_.value_number_of_minor_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_category_plot_to_edges()) {
    if (!_impl_.category_plot_to_edges_->IsInitialized()) return false;
  }
  if (_internal_has_value_scale()) {
    if (!_impl_.value_scale_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_labels()) {
    if (!_impl_.category_show_labels_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_labels()) {
    if (!_impl_.default_show_labels_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_labels()) {
    if (!_impl_.value_show_labels_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_series_labels()) {
    if (!_impl_.category_show_series_labels_->IsInitialized()) return false;
  }
  if (_internal_has_multi_data_show_series_labels()) {
    if (!_impl_.multi_data_show_series_labels_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_title()) {
    if (!_impl_.category_show_title_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_title()) {
    if (!_impl_.value_show_title_->IsInitialized()) return false;
  }
  if (_internal_has_category_title()) {
    if (!_impl_.category_title_->IsInitialized()) return false;
  }
  if (_internal_has_value_title()) {
    if (!_impl_.value_title_->IsInitialized()) return false;
  }
  if (_internal_has_default_user_max()) {
    if (!_impl_.default_user_max_->IsInitialized()) return false;
  }
  if (_internal_has_default_user_min()) {
    if (!_impl_.default_user_min_->IsInitialized()) return false;
  }
  return true;
}

void ChartAxisNonStylePropertyChangeSetArchive::InternalSwap(ChartAxisNonStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartAxisNonStylePropertyChangeSetArchive, _impl_.default_user_min_undefined_)
      + sizeof(ChartAxisNonStylePropertyChangeSetArchive::_impl_.default_user_min_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartAxisNonStylePropertyChangeSetArchive, _impl_.default10_date_format_)>(
          reinterpret_cast<char*>(&_impl_.default10_date_format_),
          reinterpret_cast<char*>(&other->_impl_.default10_date_format_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartAxisNonStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[12]);
}

// ===================================================================

class ChartAxisStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartAxisStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSSSOS::SpecDoubleArchive& category3d_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category3d_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_category3d_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::TSSSOS::SpecDoubleArchive& value3d_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value3d_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_value3d_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static const ::TSDSOS::SpecStrokeArchive& category3d_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category3d_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_category3d_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static const ::TSDSOS::SpecStrokeArchive& value3d_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value3d_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_value3d_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static const ::TSSSOS::SpecIntegerArchive& category_horizontal_spacing(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_horizontal_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_category_horizontal_spacing_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_label_angle_baseline_direction(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_default_label_angle_baseline_direction(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_default_label_angle_baseline_direction_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static const ::TSSSOS::SpecIntegerArchive& category_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_category_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_default_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_default_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_value_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static const ::TSSSOS::SpecDoubleArchive& category_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_labels_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_category_labels_orientation_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_default_labels_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_default_labels_orientation_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16777216u;
  }
  static const ::TSSSOS::SpecDoubleArchive& value_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_labels_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_value_labels_orientation_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 33554432u;
  }
  static const ::TSSSOS::SpecDoubleArchive& category_major_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_major_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_category_major_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 67108864u;
  }
  static const ::TSSSOS::SpecDoubleArchive& value_major_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_major_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_value_major_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 134217728u;
  }
  static const ::TSDSOS::SpecShadowArchive& category_major_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_major_gridline_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_category_major_gridline_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 268435456u;
  }
  static const ::TSDSOS::SpecShadowArchive& value_major_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_major_gridline_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_value_major_gridline_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 536870912u;
  }
  static const ::TSDSOS::SpecStrokeArchive& category_major_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_major_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_category_major_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1073741824u;
  }
  static const ::TSDSOS::SpecStrokeArchive& value_major_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_major_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_value_major_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2147483648u;
  }
  static const ::TSSSOS::SpecDoubleArchive& category_minor_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_minor_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_category_minor_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 1u;
  }
  static const ::TSSSOS::SpecDoubleArchive& value_minor_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_minor_gridline_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_value_minor_gridline_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 2u;
  }
  static const ::TSDSOS::SpecShadowArchive& category_minor_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_minor_gridline_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_category_minor_gridline_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 4u;
  }
  static const ::TSDSOS::SpecShadowArchive& value_minor_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_minor_gridline_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_value_minor_gridline_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 8u;
  }
  static const ::TSDSOS::SpecStrokeArchive& category_minor_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_minor_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_category_minor_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 16u;
  }
  static const ::TSDSOS::SpecStrokeArchive& value_minor_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_minor_gridline_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_value_minor_gridline_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 32u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_axis(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_category_show_axis_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 64u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_axis(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_axis(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_value_show_axis_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 128u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_extension_lines(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_extension_lines(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_default_show_extension_lines_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_gridline_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_gridline_tickmarks(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_category_show_gridline_tickmarks_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 512u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_gridline_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_gridline_tickmarks(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_value_show_gridline_tickmarks_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 1024u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_last_label(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_last_label(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_category_show_last_label_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 2048u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_major_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_major_gridlines(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_category_show_major_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 4096u;
  }
  static const ::TSSSOS::SpecBoolArchive& polar_category_show_major_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_polar_category_show_major_gridlines(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_polar_category_show_major_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 8192u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_major_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_major_gridlines(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_value_show_major_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 16384u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_major_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_major_tickmarks(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_category_show_major_tickmarks_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 32768u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_major_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_major_tickmarks(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_value_show_major_tickmarks_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 65536u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_minimum_label(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_minimum_label(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_value_show_minimum_label_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 131072u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_minor_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_minor_gridlines(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static void set_has_category_show_minor_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 262144u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_minor_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_minor_gridlines(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static void set_has_value_show_minor_gridlines_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 524288u;
  }
  static const ::TSSSOS::SpecBoolArchive& category_show_minor_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_show_minor_tickmarks(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static void set_has_category_show_minor_tickmarks_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 1048576u;
  }
  static const ::TSSSOS::SpecBoolArchive& value_show_minor_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_show_minor_tickmarks(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static void set_has_value_show_minor_tickmarks_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 2097152u;
  }
  static const ::TSSSOS::SpecIntegerArchive& category_tickmark_location(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_tickmark_location(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static void set_has_category_tickmark_location_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 4194304u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_tickmark_location(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_tickmark_location(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static void set_has_value_tickmark_location_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 8388608u;
  }
  static const ::TSSSOS::SpecIntegerArchive& category_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_title_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static void set_has_category_title_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 16777216u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_default_title_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static void set_has_default_title_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 33554432u;
  }
  static const ::TSSSOS::SpecIntegerArchive& value_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_value_title_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static void set_has_value_title_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 67108864u;
  }
  static const ::TSSSOS::SpecIntegerArchive& category_vertical_spacing(const ChartAxisStylePropertyChangeSetArchive* msg);
  static void set_has_category_vertical_spacing(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static void set_has_category_vertical_spacing_undefined(HasBits* has_bits) {
    (*has_bits)[2] |= 134217728u;
  }
};

const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category3d_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category3d_gridline_opacity_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value3d_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value3d_gridline_opacity_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category3d_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category3d_gridline_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value3d_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value3d_gridline_stroke_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_horizontal_spacing(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_horizontal_spacing_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::default_label_angle_baseline_direction(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_label_angle_baseline_direction_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::default_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_label_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_label_paragraph_style_index_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_labels_orientation_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::default_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_labels_orientation_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_labels_orientation(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_labels_orientation_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_major_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_major_gridline_opacity_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_major_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_major_gridline_opacity_;
}
const ::TSDSOS::SpecShadowArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_major_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_major_gridline_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_major_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_major_gridline_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_major_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_major_gridline_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_major_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_major_gridline_stroke_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_minor_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_minor_gridline_opacity_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_minor_gridline_opacity(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_minor_gridline_opacity_;
}
const ::TSDSOS::SpecShadowArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_minor_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_minor_gridline_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_minor_gridline_shadow(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_minor_gridline_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_minor_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_minor_gridline_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_minor_gridline_stroke(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_minor_gridline_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_axis(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_show_axis_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_axis(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_show_axis_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::default_show_extension_lines(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_extension_lines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_gridline_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_show_gridline_tickmarks_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_gridline_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_show_gridline_tickmarks_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_last_label(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_show_last_label_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_major_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_show_major_gridlines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::polar_category_show_major_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.polar_category_show_major_gridlines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_major_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_show_major_gridlines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_major_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_show_major_tickmarks_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_major_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_show_major_tickmarks_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_minimum_label(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_show_minimum_label_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_minor_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_show_minor_gridlines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_minor_gridlines(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_show_minor_gridlines_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_show_minor_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_show_minor_tickmarks_;
}
const ::TSSSOS::SpecBoolArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_show_minor_tickmarks(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_show_minor_tickmarks_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_tickmark_location(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_tickmark_location_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_tickmark_location(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_tickmark_location_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_title_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::default_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_title_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::value_title_paragraph_style_index(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.value_title_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartAxisStylePropertyChangeSetArchive::_Internal::category_vertical_spacing(const ChartAxisStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.category_vertical_spacing_;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category3d_gridline_opacity() {
  if (_impl_.category3d_gridline_opacity_ != nullptr) _impl_.category3d_gridline_opacity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value3d_gridline_opacity() {
  if (_impl_.value3d_gridline_opacity_ != nullptr) _impl_.value3d_gridline_opacity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category3d_gridline_stroke() {
  if (_impl_.category3d_gridline_stroke_ != nullptr) _impl_.category3d_gridline_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value3d_gridline_stroke() {
  if (_impl_.value3d_gridline_stroke_ != nullptr) _impl_.value3d_gridline_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_horizontal_spacing() {
  if (_impl_.category_horizontal_spacing_ != nullptr) _impl_.category_horizontal_spacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_default_label_angle_baseline_direction() {
  if (_impl_.default_label_angle_baseline_direction_ != nullptr) _impl_.default_label_angle_baseline_direction_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_label_paragraph_style_index() {
  if (_impl_.category_label_paragraph_style_index_ != nullptr) _impl_.category_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_default_label_paragraph_style_index() {
  if (_impl_.default_label_paragraph_style_index_ != nullptr) _impl_.default_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_label_paragraph_style_index() {
  if (_impl_.value_label_paragraph_style_index_ != nullptr) _impl_.value_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_labels_orientation() {
  if (_impl_.category_labels_orientation_ != nullptr) _impl_.category_labels_orientation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_default_labels_orientation() {
  if (_impl_.default_labels_orientation_ != nullptr) _impl_.default_labels_orientation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_labels_orientation() {
  if (_impl_.value_labels_orientation_ != nullptr) _impl_.value_labels_orientation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_major_gridline_opacity() {
  if (_impl_.category_major_gridline_opacity_ != nullptr) _impl_.category_major_gridline_opacity_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_major_gridline_opacity() {
  if (_impl_.value_major_gridline_opacity_ != nullptr) _impl_.value_major_gridline_opacity_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_major_gridline_shadow() {
  if (_impl_.category_major_gridline_shadow_ != nullptr) _impl_.category_major_gridline_shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_major_gridline_shadow() {
  if (_impl_.value_major_gridline_shadow_ != nullptr) _impl_.value_major_gridline_shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_major_gridline_stroke() {
  if (_impl_.category_major_gridline_stroke_ != nullptr) _impl_.category_major_gridline_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_major_gridline_stroke() {
  if (_impl_.value_major_gridline_stroke_ != nullptr) _impl_.value_major_gridline_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_minor_gridline_opacity() {
  if (_impl_.category_minor_gridline_opacity_ != nullptr) _impl_.category_minor_gridline_opacity_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_minor_gridline_opacity() {
  if (_impl_.value_minor_gridline_opacity_ != nullptr) _impl_.value_minor_gridline_opacity_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_minor_gridline_shadow() {
  if (_impl_.category_minor_gridline_shadow_ != nullptr) _impl_.category_minor_gridline_shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_minor_gridline_shadow() {
  if (_impl_.value_minor_gridline_shadow_ != nullptr) _impl_.value_minor_gridline_shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_minor_gridline_stroke() {
  if (_impl_.category_minor_gridline_stroke_ != nullptr) _impl_.category_minor_gridline_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_minor_gridline_stroke() {
  if (_impl_.value_minor_gridline_stroke_ != nullptr) _impl_.value_minor_gridline_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_axis() {
  if (_impl_.category_show_axis_ != nullptr) _impl_.category_show_axis_->Clear();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_axis() {
  if (_impl_.value_show_axis_ != nullptr) _impl_.value_show_axis_->Clear();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_default_show_extension_lines() {
  if (_impl_.default_show_extension_lines_ != nullptr) _impl_.default_show_extension_lines_->Clear();
  _impl_._has_bits_[0] &= ~0x04000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_gridline_tickmarks() {
  if (_impl_.category_show_gridline_tickmarks_ != nullptr) _impl_.category_show_gridline_tickmarks_->Clear();
  _impl_._has_bits_[0] &= ~0x08000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_gridline_tickmarks() {
  if (_impl_.value_show_gridline_tickmarks_ != nullptr) _impl_.value_show_gridline_tickmarks_->Clear();
  _impl_._has_bits_[0] &= ~0x10000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_last_label() {
  if (_impl_.category_show_last_label_ != nullptr) _impl_.category_show_last_label_->Clear();
  _impl_._has_bits_[0] &= ~0x20000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_major_gridlines() {
  if (_impl_.category_show_major_gridlines_ != nullptr) _impl_.category_show_major_gridlines_->Clear();
  _impl_._has_bits_[0] &= ~0x40000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_polar_category_show_major_gridlines() {
  if (_impl_.polar_category_show_major_gridlines_ != nullptr) _impl_.polar_category_show_major_gridlines_->Clear();
  _impl_._has_bits_[0] &= ~0x80000000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_major_gridlines() {
  if (_impl_.value_show_major_gridlines_ != nullptr) _impl_.value_show_major_gridlines_->Clear();
  _impl_._has_bits_[1] &= ~0x00000001u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_major_tickmarks() {
  if (_impl_.category_show_major_tickmarks_ != nullptr) _impl_.category_show_major_tickmarks_->Clear();
  _impl_._has_bits_[1] &= ~0x00000002u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_major_tickmarks() {
  if (_impl_.value_show_major_tickmarks_ != nullptr) _impl_.value_show_major_tickmarks_->Clear();
  _impl_._has_bits_[1] &= ~0x00000004u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_minimum_label() {
  if (_impl_.value_show_minimum_label_ != nullptr) _impl_.value_show_minimum_label_->Clear();
  _impl_._has_bits_[1] &= ~0x00000008u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_minor_gridlines() {
  if (_impl_.category_show_minor_gridlines_ != nullptr) _impl_.category_show_minor_gridlines_->Clear();
  _impl_._has_bits_[1] &= ~0x00000010u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_minor_gridlines() {
  if (_impl_.value_show_minor_gridlines_ != nullptr) _impl_.value_show_minor_gridlines_->Clear();
  _impl_._has_bits_[1] &= ~0x00000020u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_show_minor_tickmarks() {
  if (_impl_.category_show_minor_tickmarks_ != nullptr) _impl_.category_show_minor_tickmarks_->Clear();
  _impl_._has_bits_[1] &= ~0x00000040u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_show_minor_tickmarks() {
  if (_impl_.value_show_minor_tickmarks_ != nullptr) _impl_.value_show_minor_tickmarks_->Clear();
  _impl_._has_bits_[1] &= ~0x00000080u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_tickmark_location() {
  if (_impl_.category_tickmark_location_ != nullptr) _impl_.category_tickmark_location_->Clear();
  _impl_._has_bits_[1] &= ~0x00000100u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_tickmark_location() {
  if (_impl_.value_tickmark_location_ != nullptr) _impl_.value_tickmark_location_->Clear();
  _impl_._has_bits_[1] &= ~0x00000200u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_title_paragraph_style_index() {
  if (_impl_.category_title_paragraph_style_index_ != nullptr) _impl_.category_title_paragraph_style_index_->Clear();
  _impl_._has_bits_[1] &= ~0x00000400u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_default_title_paragraph_style_index() {
  if (_impl_.default_title_paragraph_style_index_ != nullptr) _impl_.default_title_paragraph_style_index_->Clear();
  _impl_._has_bits_[1] &= ~0x00000800u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_value_title_paragraph_style_index() {
  if (_impl_.value_title_paragraph_style_index_ != nullptr) _impl_.value_title_paragraph_style_index_->Clear();
  _impl_._has_bits_[1] &= ~0x00001000u;
}
void ChartAxisStylePropertyChangeSetArchive::clear_category_vertical_spacing() {
  if (_impl_.category_vertical_spacing_ != nullptr) _impl_.category_vertical_spacing_->Clear();
  _impl_._has_bits_[1] &= ~0x00002000u;
}
ChartAxisStylePropertyChangeSetArchive::ChartAxisStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
}
ChartAxisStylePropertyChangeSetArchive::ChartAxisStylePropertyChangeSetArchive(const ChartAxisStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChartAxisStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.category3d_gridline_opacity_){nullptr}
    , decltype(_impl_.value3d_gridline_opacity_){nullptr}
    , decltype(_impl_.category3d_gridline_stroke_){nullptr}
    , decltype(_impl_.value3d_gridline_stroke_){nullptr}
    , decltype(_impl_.category_horizontal_spacing_){nullptr}
    , decltype(_impl_.default_label_angle_baseline_direction_){nullptr}
    , decltype(_impl_.category_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.value_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.category_labels_orientation_){nullptr}
    , decltype(_impl_.default_labels_orientation_){nullptr}
    , decltype(_impl_.value_labels_orientation_){nullptr}
    , decltype(_impl_.category_major_gridline_opacity_){nullptr}
    , decltype(_impl_.value_major_gridline_opacity_){nullptr}
    , decltype(_impl_.category_major_gridline_shadow_){nullptr}
    , decltype(_impl_.value_major_gridline_shadow_){nullptr}
    , decltype(_impl_.category_major_gridline_stroke_){nullptr}
    , decltype(_impl_.value_major_gridline_stroke_){nullptr}
    , decltype(_impl_.category_minor_gridline_opacity_){nullptr}
    , decltype(_impl_.value_minor_gridline_opacity_){nullptr}
    , decltype(_impl_.category_minor_gridline_shadow_){nullptr}
    , decltype(_impl_.value_minor_gridline_shadow_){nullptr}
    , decltype(_impl_.category_minor_gridline_stroke_){nullptr}
    , decltype(_impl_.value_minor_gridline_stroke_){nullptr}
    , decltype(_impl_.category_show_axis_){nullptr}
    , decltype(_impl_.value_show_axis_){nullptr}
    , decltype(_impl_.default_show_extension_lines_){nullptr}
    , decltype(_impl_.category_show_gridline_tickmarks_){nullptr}
    , decltype(_impl_.value_show_gridline_tickmarks_){nullptr}
    , decltype(_impl_.category_show_last_label_){nullptr}
    , decltype(_impl_.category_show_major_gridlines_){nullptr}
    , decltype(_impl_.polar_category_show_major_gridlines_){nullptr}
    , decltype(_impl_.value_show_major_gridlines_){nullptr}
    , decltype(_impl_.category_show_major_tickmarks_){nullptr}
    , decltype(_impl_.value_show_major_tickmarks_){nullptr}
    , decltype(_impl_.value_show_minimum_label_){nullptr}
    , decltype(_impl_.category_show_minor_gridlines_){nullptr}
    , decltype(_impl_.value_show_minor_gridlines_){nullptr}
    , decltype(_impl_.category_show_minor_tickmarks_){nullptr}
    , decltype(_impl_.value_show_minor_tickmarks_){nullptr}
    , decltype(_impl_.category_tickmark_location_){nullptr}
    , decltype(_impl_.value_tickmark_location_){nullptr}
    , decltype(_impl_.category_title_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_title_paragraph_style_index_){nullptr}
    , decltype(_impl_.value_title_paragraph_style_index_){nullptr}
    , decltype(_impl_.category_vertical_spacing_){nullptr}
    , decltype(_impl_.category3d_gridline_opacity_undefined_){}
    , decltype(_impl_.value3d_gridline_opacity_undefined_){}
    , decltype(_impl_.category3d_gridline_stroke_undefined_){}
    , decltype(_impl_.value3d_gridline_stroke_undefined_){}
    , decltype(_impl_.category_horizontal_spacing_undefined_){}
    , decltype(_impl_.default_label_angle_baseline_direction_undefined_){}
    , decltype(_impl_.category_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.default_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.value_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.category_labels_orientation_undefined_){}
    , decltype(_impl_.default_labels_orientation_undefined_){}
    , decltype(_impl_.value_labels_orientation_undefined_){}
    , decltype(_impl_.category_major_gridline_opacity_undefined_){}
    , decltype(_impl_.value_major_gridline_opacity_undefined_){}
    , decltype(_impl_.category_major_gridline_shadow_undefined_){}
    , decltype(_impl_.value_major_gridline_shadow_undefined_){}
    , decltype(_impl_.category_major_gridline_stroke_undefined_){}
    , decltype(_impl_.value_major_gridline_stroke_undefined_){}
    , decltype(_impl_.category_minor_gridline_opacity_undefined_){}
    , decltype(_impl_.value_minor_gridline_opacity_undefined_){}
    , decltype(_impl_.category_minor_gridline_shadow_undefined_){}
    , decltype(_impl_.value_minor_gridline_shadow_undefined_){}
    , decltype(_impl_.category_minor_gridline_stroke_undefined_){}
    , decltype(_impl_.value_minor_gridline_stroke_undefined_){}
    , decltype(_impl_.category_show_axis_undefined_){}
    , decltype(_impl_.value_show_axis_undefined_){}
    , decltype(_impl_.default_show_extension_lines_undefined_){}
    , decltype(_impl_.category_show_gridline_tickmarks_undefined_){}
    , decltype(_impl_.value_show_gridline_tickmarks_undefined_){}
    , decltype(_impl_.category_show_last_label_undefined_){}
    , decltype(_impl_.category_show_major_gridlines_undefined_){}
    , decltype(_impl_.polar_category_show_major_gridlines_undefined_){}
    , decltype(_impl_.value_show_major_gridlines_undefined_){}
    , decltype(_impl_.category_show_major_tickmarks_undefined_){}
    , decltype(_impl_.value_show_major_tickmarks_undefined_){}
    , decltype(_impl_.value_show_minimum_label_undefined_){}
    , decltype(_impl_.category_show_minor_gridlines_undefined_){}
    , decltype(_impl_.value_show_minor_gridlines_undefined_){}
    , decltype(_impl_.category_show_minor_tickmarks_undefined_){}
    , decltype(_impl_.value_show_minor_tickmarks_undefined_){}
    , decltype(_impl_.category_tickmark_location_undefined_){}
    , decltype(_impl_.value_tickmark_location_undefined_){}
    , decltype(_impl_.category_title_paragraph_style_index_undefined_){}
    , decltype(_impl_.default_title_paragraph_style_index_undefined_){}
    , decltype(_impl_.value_title_paragraph_style_index_undefined_){}
    , decltype(_impl_.category_vertical_spacing_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_category3d_gridline_opacity()) {
    _this->_impl_.category3d_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.category3d_gridline_opacity_);
  }
  if (from._internal_has_value3d_gridline_opacity()) {
    _this->_impl_.value3d_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.value3d_gridline_opacity_);
  }
  if (from._internal_has_category3d_gridline_stroke()) {
    _this->_impl_.category3d_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.category3d_gridline_stroke_);
  }
  if (from._internal_has_value3d_gridline_stroke()) {
    _this->_impl_.value3d_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.value3d_gridline_stroke_);
  }
  if (from._internal_has_category_horizontal_spacing()) {
    _this->_impl_.category_horizontal_spacing_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.category_horizontal_spacing_);
  }
  if (from._internal_has_default_label_angle_baseline_direction()) {
    _this->_impl_.default_label_angle_baseline_direction_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_label_angle_baseline_direction_);
  }
  if (from._internal_has_category_label_paragraph_style_index()) {
    _this->_impl_.category_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.category_label_paragraph_style_index_);
  }
  if (from._internal_has_default_label_paragraph_style_index()) {
    _this->_impl_.default_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_label_paragraph_style_index_);
  }
  if (from._internal_has_value_label_paragraph_style_index()) {
    _this->_impl_.value_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.value_label_paragraph_style_index_);
  }
  if (from._internal_has_category_labels_orientation()) {
    _this->_impl_.category_labels_orientation_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.category_labels_orientation_);
  }
  if (from._internal_has_default_labels_orientation()) {
    _this->_impl_.default_labels_orientation_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_labels_orientation_);
  }
  if (from._internal_has_value_labels_orientation()) {
    _this->_impl_.value_labels_orientation_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.value_labels_orientation_);
  }
  if (from._internal_has_category_major_gridline_opacity()) {
    _this->_impl_.category_major_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.category_major_gridline_opacity_);
  }
  if (from._internal_has_value_major_gridline_opacity()) {
    _this->_impl_.value_major_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.value_major_gridline_opacity_);
  }
  if (from._internal_has_category_major_gridline_shadow()) {
    _this->_impl_.category_major_gridline_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.category_major_gridline_shadow_);
  }
  if (from._internal_has_value_major_gridline_shadow()) {
    _this->_impl_.value_major_gridline_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.value_major_gridline_shadow_);
  }
  if (from._internal_has_category_major_gridline_stroke()) {
    _this->_impl_.category_major_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.category_major_gridline_stroke_);
  }
  if (from._internal_has_value_major_gridline_stroke()) {
    _this->_impl_.value_major_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.value_major_gridline_stroke_);
  }
  if (from._internal_has_category_minor_gridline_opacity()) {
    _this->_impl_.category_minor_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.category_minor_gridline_opacity_);
  }
  if (from._internal_has_value_minor_gridline_opacity()) {
    _this->_impl_.value_minor_gridline_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.value_minor_gridline_opacity_);
  }
  if (from._internal_has_category_minor_gridline_shadow()) {
    _this->_impl_.category_minor_gridline_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.category_minor_gridline_shadow_);
  }
  if (from._internal_has_value_minor_gridline_shadow()) {
    _this->_impl_.value_minor_gridline_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.value_minor_gridline_shadow_);
  }
  if (from._internal_has_category_minor_gridline_stroke()) {
    _this->_impl_.category_minor_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.category_minor_gridline_stroke_);
  }
  if (from._internal_has_value_minor_gridline_stroke()) {
    _this->_impl_.value_minor_gridline_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.value_minor_gridline_stroke_);
  }
  if (from._internal_has_category_show_axis()) {
    _this->_impl_.category_show_axis_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.category_show_axis_);
  }
  if (from._internal_has_value_show_axis()) {
    _this->_impl_.value_show_axis_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.value_show_axis_);
  }
  if (from._internal_has_default_show_extension_lines()) {
    _this->_impl_.default_show_extension_lines_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_extension_lines_);
  }
  if (from._internal_has_category_show_gridline_tickmarks()) {
    _this->_impl_.category_show_gridline_tickmarks_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.category_show_gridline_tickmarks_);
  }
  if (from._internal_has_value_show_gridline_tickmarks()) {
    _this->_impl_.value_show_gridline_tickmarks_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.value_show_gridline_tickmarks_);
  }
  if (from._internal_has_category_show_last_label()) {
    _this->_impl_.category_show_last_label_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.category_show_last_label_);
  }
  if (from._internal_has_category_show_major_gridlines()) {
    _this->_impl_.category_show_major_gridlines_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.category_show_major_gridlines_);
  }
  if (from._internal_has_polar_category_show_major_gridlines()) {
    _this->_impl_.polar_category_show_major_gridlines_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.polar_category_show_major_gridlines_);
  }
  if (from._internal_has_value_show_major_gridlines()) {
    _this->_impl_.value_show_major_gridlines_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.value_show_major_gridlines_);
  }
  if (from._internal_has_category_show_major_tickmarks()) {
    _this->_impl_.category_show_major_tickmarks_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.category_show_major_tickmarks_);
  }
  if (from._internal_has_value_show_major_tickmarks()) {
    _this->_impl_.value_show_major_tickmarks_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.value_show_major_tickmarks_);
  }
  if (from._internal_has_value_show_minimum_label()) {
    _this->_impl_.value_show_minimum_label_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.value_show_minimum_label_);
  }
  if (from._internal_has_category_show_minor_gridlines()) {
    _this->_impl_.category_show_minor_gridlines_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.category_show_minor_gridlines_);
  }
  if (from._internal_has_value_show_minor_gridlines()) {
    _this->_impl_.value_show_minor_gridlines_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.value_show_minor_gridlines_);
  }
  if (from._internal_has_category_show_minor_tickmarks()) {
    _this->_impl_.category_show_minor_tickmarks_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.category_show_minor_tickmarks_);
  }
  if (from._internal_has_value_show_minor_tickmarks()) {
    _this->_impl_.value_show_minor_tickmarks_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.value_show_minor_tickmarks_);
  }
  if (from._internal_has_category_tickmark_location()) {
    _this->_impl_.category_tickmark_location_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.category_tickmark_location_);
  }
  if (from._internal_has_value_tickmark_location()) {
    _this->_impl_.value_tickmark_location_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.value_tickmark_location_);
  }
  if (from._internal_has_category_title_paragraph_style_index()) {
    _this->_impl_.category_title_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.category_title_paragraph_style_index_);
  }
  if (from._internal_has_default_title_paragraph_style_index()) {
    _this->_impl_.default_title_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_title_paragraph_style_index_);
  }
  if (from._internal_has_value_title_paragraph_style_index()) {
    _this->_impl_.value_title_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.value_title_paragraph_style_index_);
  }
  if (from._internal_has_category_vertical_spacing()) {
    _this->_impl_.category_vertical_spacing_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.category_vertical_spacing_);
  }
  ::memcpy(&_impl_.category3d_gridline_opacity_undefined_, &from._impl_.category3d_gridline_opacity_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.category_vertical_spacing_undefined_) -
    reinterpret_cast<char*>(&_impl_.category3d_gridline_opacity_undefined_)) + sizeof(_impl_.category_vertical_spacing_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
}

inline void ChartAxisStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.category3d_gridline_opacity_){nullptr}
    , decltype(_impl_.value3d_gridline_opacity_){nullptr}
    , decltype(_impl_.category3d_gridline_stroke_){nullptr}
    , decltype(_impl_.value3d_gridline_stroke_){nullptr}
    , decltype(_impl_.category_horizontal_spacing_){nullptr}
    , decltype(_impl_.default_label_angle_baseline_direction_){nullptr}
    , decltype(_impl_.category_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.value_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.category_labels_orientation_){nullptr}
    , decltype(_impl_.default_labels_orientation_){nullptr}
    , decltype(_impl_.value_labels_orientation_){nullptr}
    , decltype(_impl_.category_major_gridline_opacity_){nullptr}
    , decltype(_impl_.value_major_gridline_opacity_){nullptr}
    , decltype(_impl_.category_major_gridline_shadow_){nullptr}
    , decltype(_impl_.value_major_gridline_shadow_){nullptr}
    , decltype(_impl_.category_major_gridline_stroke_){nullptr}
    , decltype(_impl_.value_major_gridline_stroke_){nullptr}
    , decltype(_impl_.category_minor_gridline_opacity_){nullptr}
    , decltype(_impl_.value_minor_gridline_opacity_){nullptr}
    , decltype(_impl_.category_minor_gridline_shadow_){nullptr}
    , decltype(_impl_.value_minor_gridline_shadow_){nullptr}
    , decltype(_impl_.category_minor_gridline_stroke_){nullptr}
    , decltype(_impl_.value_minor_gridline_stroke_){nullptr}
    , decltype(_impl_.category_show_axis_){nullptr}
    , decltype(_impl_.value_show_axis_){nullptr}
    , decltype(_impl_.default_show_extension_lines_){nullptr}
    , decltype(_impl_.category_show_gridline_tickmarks_){nullptr}
    , decltype(_impl_.value_show_gridline_tickmarks_){nullptr}
    , decltype(_impl_.category_show_last_label_){nullptr}
    , decltype(_impl_.category_show_major_gridlines_){nullptr}
    , decltype(_impl_.polar_category_show_major_gridlines_){nullptr}
    , decltype(_impl_.value_show_major_gridlines_){nullptr}
    , decltype(_impl_.category_show_major_tickmarks_){nullptr}
    , decltype(_impl_.value_show_major_tickmarks_){nullptr}
    , decltype(_impl_.value_show_minimum_label_){nullptr}
    , decltype(_impl_.category_show_minor_gridlines_){nullptr}
    , decltype(_impl_.value_show_minor_gridlines_){nullptr}
    , decltype(_impl_.category_show_minor_tickmarks_){nullptr}
    , decltype(_impl_.value_show_minor_tickmarks_){nullptr}
    , decltype(_impl_.category_tickmark_location_){nullptr}
    , decltype(_impl_.value_tickmark_location_){nullptr}
    , decltype(_impl_.category_title_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_title_paragraph_style_index_){nullptr}
    , decltype(_impl_.value_title_paragraph_style_index_){nullptr}
    , decltype(_impl_.category_vertical_spacing_){nullptr}
    , decltype(_impl_.category3d_gridline_opacity_undefined_){false}
    , decltype(_impl_.value3d_gridline_opacity_undefined_){false}
    , decltype(_impl_.category3d_gridline_stroke_undefined_){false}
    , decltype(_impl_.value3d_gridline_stroke_undefined_){false}
    , decltype(_impl_.category_horizontal_spacing_undefined_){false}
    , decltype(_impl_.default_label_angle_baseline_direction_undefined_){false}
    , decltype(_impl_.category_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.default_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.value_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.category_labels_orientation_undefined_){false}
    , decltype(_impl_.default_labels_orientation_undefined_){false}
    , decltype(_impl_.value_labels_orientation_undefined_){false}
    , decltype(_impl_.category_major_gridline_opacity_undefined_){false}
    , decltype(_impl_.value_major_gridline_opacity_undefined_){false}
    , decltype(_impl_.category_major_gridline_shadow_undefined_){false}
    , decltype(_impl_.value_major_gridline_shadow_undefined_){false}
    , decltype(_impl_.category_major_gridline_stroke_undefined_){false}
    , decltype(_impl_.value_major_gridline_stroke_undefined_){false}
    , decltype(_impl_.category_minor_gridline_opacity_undefined_){false}
    , decltype(_impl_.value_minor_gridline_opacity_undefined_){false}
    , decltype(_impl_.category_minor_gridline_shadow_undefined_){false}
    , decltype(_impl_.value_minor_gridline_shadow_undefined_){false}
    , decltype(_impl_.category_minor_gridline_stroke_undefined_){false}
    , decltype(_impl_.value_minor_gridline_stroke_undefined_){false}
    , decltype(_impl_.category_show_axis_undefined_){false}
    , decltype(_impl_.value_show_axis_undefined_){false}
    , decltype(_impl_.default_show_extension_lines_undefined_){false}
    , decltype(_impl_.category_show_gridline_tickmarks_undefined_){false}
    , decltype(_impl_.value_show_gridline_tickmarks_undefined_){false}
    , decltype(_impl_.category_show_last_label_undefined_){false}
    , decltype(_impl_.category_show_major_gridlines_undefined_){false}
    , decltype(_impl_.polar_category_show_major_gridlines_undefined_){false}
    , decltype(_impl_.value_show_major_gridlines_undefined_){false}
    , decltype(_impl_.category_show_major_tickmarks_undefined_){false}
    , decltype(_impl_.value_show_major_tickmarks_undefined_){false}
    , decltype(_impl_.value_show_minimum_label_undefined_){false}
    , decltype(_impl_.category_show_minor_gridlines_undefined_){false}
    , decltype(_impl_.value_show_minor_gridlines_undefined_){false}
    , decltype(_impl_.category_show_minor_tickmarks_undefined_){false}
    , decltype(_impl_.value_show_minor_tickmarks_undefined_){false}
    , decltype(_impl_.category_tickmark_location_undefined_){false}
    , decltype(_impl_.value_tickmark_location_undefined_){false}
    , decltype(_impl_.category_title_paragraph_style_index_undefined_){false}
    , decltype(_impl_.default_title_paragraph_style_index_undefined_){false}
    , decltype(_impl_.value_title_paragraph_style_index_undefined_){false}
    , decltype(_impl_.category_vertical_spacing_undefined_){false}
  };
}

ChartAxisStylePropertyChangeSetArchive::~ChartAxisStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChartAxisStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.category3d_gridline_opacity_;
  if (this != internal_default_instance()) delete _impl_.value3d_gridline_opacity_;
  if (this != internal_default_instance()) delete _impl_.category3d_gridline_stroke_;
  if (this != internal_default_instance()) delete _impl_.value3d_gridline_stroke_;
  if (this != internal_default_instance()) delete _impl_.category_horizontal_spacing_;
  if (this != internal_default_instance()) delete _impl_.default_label_angle_baseline_direction_;
  if (this != internal_default_instance()) delete _impl_.category_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.default_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.value_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.category_labels_orientation_;
  if (this != internal_default_instance()) delete _impl_.default_labels_orientation_;
  if (this != internal_default_instance()) delete _impl_.value_labels_orientation_;
  if (this != internal_default_instance()) delete _impl_.category_major_gridline_opacity_;
  if (this != internal_default_instance()) delete _impl_.value_major_gridline_opacity_;
  if (this != internal_default_instance()) delete _impl_.category_major_gridline_shadow_;
  if (this != internal_default_instance()) delete _impl_.value_major_gridline_shadow_;
  if (this != internal_default_instance()) delete _impl_.category_major_gridline_stroke_;
  if (this != internal_default_instance()) delete _impl_.value_major_gridline_stroke_;
  if (this != internal_default_instance()) delete _impl_.category_minor_gridline_opacity_;
  if (this != internal_default_instance()) delete _impl_.value_minor_gridline_opacity_;
  if (this != internal_default_instance()) delete _impl_.category_minor_gridline_shadow_;
  if (this != internal_default_instance()) delete _impl_.value_minor_gridline_shadow_;
  if (this != internal_default_instance()) delete _impl_.category_minor_gridline_stroke_;
  if (this != internal_default_instance()) delete _impl_.value_minor_gridline_stroke_;
  if (this != internal_default_instance()) delete _impl_.category_show_axis_;
  if (this != internal_default_instance()) delete _impl_.value_show_axis_;
  if (this != internal_default_instance()) delete _impl_.default_show_extension_lines_;
  if (this != internal_default_instance()) delete _impl_.category_show_gridline_tickmarks_;
  if (this != internal_default_instance()) delete _impl_.value_show_gridline_tickmarks_;
  if (this != internal_default_instance()) delete _impl_.category_show_last_label_;
  if (this != internal_default_instance()) delete _impl_.category_show_major_gridlines_;
  if (this != internal_default_instance()) delete _impl_.polar_category_show_major_gridlines_;
  if (this != internal_default_instance()) delete _impl_.value_show_major_gridlines_;
  if (this != internal_default_instance()) delete _impl_.category_show_major_tickmarks_;
  if (this != internal_default_instance()) delete _impl_.value_show_major_tickmarks_;
  if (this != internal_default_instance()) delete _impl_.value_show_minimum_label_;
  if (this != internal_default_instance()) delete _impl_.category_show_minor_gridlines_;
  if (this != internal_default_instance()) delete _impl_.value_show_minor_gridlines_;
  if (this != internal_default_instance()) delete _impl_.category_show_minor_tickmarks_;
  if (this != internal_default_instance()) delete _impl_.value_show_minor_tickmarks_;
  if (this != internal_default_instance()) delete _impl_.category_tickmark_location_;
  if (this != internal_default_instance()) delete _impl_.value_tickmark_location_;
  if (this != internal_default_instance()) delete _impl_.category_title_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.default_title_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.value_title_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.category_vertical_spacing_;
}

void ChartAxisStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChartAxisStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.category3d_gridline_opacity_ != nullptr);
      _impl_.category3d_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.value3d_gridline_opacity_ != nullptr);
      _impl_.value3d_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.category3d_gridline_stroke_ != nullptr);
      _impl_.category3d_gridline_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.value3d_gridline_stroke_ != nullptr);
      _impl_.value3d_gridline_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.category_horizontal_spacing_ != nullptr);
      _impl_.category_horizontal_spacing_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.default_label_angle_baseline_direction_ != nullptr);
      _impl_.default_label_angle_baseline_direction_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.category_label_paragraph_style_index_ != nullptr);
      _impl_.category_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.default_label_paragraph_style_index_ != nullptr);
      _impl_.default_label_paragraph_style_index_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.value_label_paragraph_style_index_ != nullptr);
      _impl_.value_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.category_labels_orientation_ != nullptr);
      _impl_.category_labels_orientation_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.default_labels_orientation_ != nullptr);
      _impl_.default_labels_orientation_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.value_labels_orientation_ != nullptr);
      _impl_.value_labels_orientation_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.category_major_gridline_opacity_ != nullptr);
      _impl_.category_major_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.value_major_gridline_opacity_ != nullptr);
      _impl_.value_major_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.category_major_gridline_shadow_ != nullptr);
      _impl_.category_major_gridline_shadow_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.value_major_gridline_shadow_ != nullptr);
      _impl_.value_major_gridline_shadow_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.category_major_gridline_stroke_ != nullptr);
      _impl_.category_major_gridline_stroke_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.value_major_gridline_stroke_ != nullptr);
      _impl_.value_major_gridline_stroke_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.category_minor_gridline_opacity_ != nullptr);
      _impl_.category_minor_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.value_minor_gridline_opacity_ != nullptr);
      _impl_.value_minor_gridline_opacity_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.category_minor_gridline_shadow_ != nullptr);
      _impl_.category_minor_gridline_shadow_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.value_minor_gridline_shadow_ != nullptr);
      _impl_.value_minor_gridline_shadow_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.category_minor_gridline_stroke_ != nullptr);
      _impl_.category_minor_gridline_stroke_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.value_minor_gridline_stroke_ != nullptr);
      _impl_.value_minor_gridline_stroke_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(_impl_.category_show_axis_ != nullptr);
      _impl_.category_show_axis_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(_impl_.value_show_axis_ != nullptr);
      _impl_.value_show_axis_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(_impl_.default_show_extension_lines_ != nullptr);
      _impl_.default_show_extension_lines_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(_impl_.category_show_gridline_tickmarks_ != nullptr);
      _impl_.category_show_gridline_tickmarks_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(_impl_.value_show_gridline_tickmarks_ != nullptr);
      _impl_.value_show_gridline_tickmarks_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(_impl_.category_show_last_label_ != nullptr);
      _impl_.category_show_last_label_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(_impl_.category_show_major_gridlines_ != nullptr);
      _impl_.category_show_major_gridlines_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(_impl_.polar_category_show_major_gridlines_ != nullptr);
      _impl_.polar_category_show_major_gridlines_->Clear();
    }
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.value_show_major_gridlines_ != nullptr);
      _impl_.value_show_major_gridlines_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.category_show_major_tickmarks_ != nullptr);
      _impl_.category_show_major_tickmarks_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.value_show_major_tickmarks_ != nullptr);
      _impl_.value_show_major_tickmarks_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.value_show_minimum_label_ != nullptr);
      _impl_.value_show_minimum_label_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.category_show_minor_gridlines_ != nullptr);
      _impl_.category_show_minor_gridlines_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.value_show_minor_gridlines_ != nullptr);
      _impl_.value_show_minor_gridlines_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.category_show_minor_tickmarks_ != nullptr);
      _impl_.category_show_minor_tickmarks_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.value_show_minor_tickmarks_ != nullptr);
      _impl_.value_show_minor_tickmarks_->Clear();
    }
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.category_tickmark_location_ != nullptr);
      _impl_.category_tickmark_location_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.value_tickmark_location_ != nullptr);
      _impl_.value_tickmark_location_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.category_title_paragraph_style_index_ != nullptr);
      _impl_.category_title_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.default_title_paragraph_style_index_ != nullptr);
      _impl_.default_title_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.value_title_paragraph_style_index_ != nullptr);
      _impl_.value_title_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.category_vertical_spacing_ != nullptr);
      _impl_.category_vertical_spacing_->Clear();
    }
  }
  if (cached_has_bits & 0x0000c000u) {
    ::memset(&_impl_.category3d_gridline_opacity_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.value3d_gridline_opacity_undefined_) -
        reinterpret_cast<char*>(&_impl_.category3d_gridline_opacity_undefined_)) + sizeof(_impl_.value3d_gridline_opacity_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.category3d_gridline_stroke_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.category_labels_orientation_undefined_) -
        reinterpret_cast<char*>(&_impl_.category3d_gridline_stroke_undefined_)) + sizeof(_impl_.category_labels_orientation_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.default_labels_orientation_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.value_major_gridline_stroke_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_labels_orientation_undefined_)) + sizeof(_impl_.value_major_gridline_stroke_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.category_minor_gridline_opacity_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.value_show_axis_undefined_) -
        reinterpret_cast<char*>(&_impl_.category_minor_gridline_opacity_undefined_)) + sizeof(_impl_.value_show_axis_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.default_show_extension_lines_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.category_show_major_tickmarks_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_show_extension_lines_undefined_)) + sizeof(_impl_.category_show_major_tickmarks_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.value_show_major_tickmarks_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.value_tickmark_location_undefined_) -
        reinterpret_cast<char*>(&_impl_.value_show_major_tickmarks_undefined_)) + sizeof(_impl_.value_tickmark_location_undefined_));
  }
  if (cached_has_bits & 0x0f000000u) {
    ::memset(&_impl_.category_title_paragraph_style_index_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.category_vertical_spacing_undefined_) -
        reinterpret_cast<char*>(&_impl_.category_title_paragraph_style_index_undefined_)) + sizeof(_impl_.category_vertical_spacing_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartAxisStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSSSOS.SpecDoubleArchive category3d_gridline_opacity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_category3d_gridline_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category3d_gridline_opacity_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_category3d_gridline_opacity_undefined(&_impl_._has_bits_);
          _impl_.category3d_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive value3d_gridline_opacity = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value3d_gridline_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value3d_gridline_opacity_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_value3d_gridline_opacity_undefined(&_impl_._has_bits_);
          _impl_.value3d_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive category3d_gridline_stroke = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_category3d_gridline_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category3d_gridline_stroke_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_category3d_gridline_stroke_undefined(&_impl_._has_bits_);
          _impl_.category3d_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive value3d_gridline_stroke = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_value3d_gridline_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value3d_gridline_stroke_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_value3d_gridline_stroke_undefined(&_impl_._has_bits_);
          _impl_.value3d_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive category_horizontal_spacing = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_horizontal_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_horizontal_spacing_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_category_horizontal_spacing_undefined(&_impl_._has_bits_);
          _impl_.category_horizontal_spacing_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_label_angle_baseline_direction = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label_angle_baseline_direction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_label_angle_baseline_direction_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_default_label_angle_baseline_direction_undefined(&_impl_._has_bits_);
          _impl_.default_label_angle_baseline_direction_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive category_label_paragraph_style_index = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_label_paragraph_style_index_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_category_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.category_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_label_paragraph_style_index_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.default_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_label_paragraph_style_index = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_label_paragraph_style_index_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_value_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.value_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive category_labels_orientation = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_labels_orientation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_labels_orientation_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_category_labels_orientation_undefined(&_impl_._has_bits_);
          _impl_.category_labels_orientation_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_labels_orientation = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_labels_orientation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_labels_orientation_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_default_labels_orientation_undefined(&_impl_._has_bits_);
          _impl_.default_labels_orientation_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive value_labels_orientation = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_labels_orientation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_labels_orientation_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_value_labels_orientation_undefined(&_impl_._has_bits_);
          _impl_.value_labels_orientation_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive category_major_gridline_opacity = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_major_gridline_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_major_gridline_opacity_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_category_major_gridline_opacity_undefined(&_impl_._has_bits_);
          _impl_.category_major_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive value_major_gridline_opacity = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_major_gridline_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_major_gridline_opacity_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_value_major_gridline_opacity_undefined(&_impl_._has_bits_);
          _impl_.value_major_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive category_major_gridline_shadow = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_major_gridline_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_major_gridline_shadow_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_category_major_gridline_shadow_undefined(&_impl_._has_bits_);
          _impl_.category_major_gridline_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive value_major_gridline_shadow = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_major_gridline_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_major_gridline_shadow_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_value_major_gridline_shadow_undefined(&_impl_._has_bits_);
          _impl_.value_major_gridline_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive category_major_gridline_stroke = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_major_gridline_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_major_gridline_stroke_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_category_major_gridline_stroke_undefined(&_impl_._has_bits_);
          _impl_.category_major_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive value_major_gridline_stroke = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_major_gridline_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_major_gridline_stroke_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_value_major_gridline_stroke_undefined(&_impl_._has_bits_);
          _impl_.value_major_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive category_minor_gridline_opacity = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_minor_gridline_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_minor_gridline_opacity_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_category_minor_gridline_opacity_undefined(&_impl_._has_bits_);
          _impl_.category_minor_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive value_minor_gridline_opacity = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_minor_gridline_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_minor_gridline_opacity_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_value_minor_gridline_opacity_undefined(&_impl_._has_bits_);
          _impl_.value_minor_gridline_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive category_minor_gridline_shadow = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_minor_gridline_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_minor_gridline_shadow_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_category_minor_gridline_shadow_undefined(&_impl_._has_bits_);
          _impl_.category_minor_gridline_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive value_minor_gridline_shadow = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_minor_gridline_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_minor_gridline_shadow_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_value_minor_gridline_shadow_undefined(&_impl_._has_bits_);
          _impl_.value_minor_gridline_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive category_minor_gridline_stroke = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_minor_gridline_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_minor_gridline_stroke_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_category_minor_gridline_stroke_undefined(&_impl_._has_bits_);
          _impl_.category_minor_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive value_minor_gridline_stroke = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_minor_gridline_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_minor_gridline_stroke_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_value_minor_gridline_stroke_undefined(&_impl_._has_bits_);
          _impl_.value_minor_gridline_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_axis = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_axis(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_show_axis_undefined = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_category_show_axis_undefined(&_impl_._has_bits_);
          _impl_.category_show_axis_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_axis = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_axis(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_show_axis_undefined = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_value_show_axis_undefined(&_impl_._has_bits_);
          _impl_.value_show_axis_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_extension_lines = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_extension_lines(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_extension_lines_undefined = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_default_show_extension_lines_undefined(&_impl_._has_bits_);
          _impl_.default_show_extension_lines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_gridline_tickmarks = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_gridline_tickmarks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_show_gridline_tickmarks_undefined = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_category_show_gridline_tickmarks_undefined(&_impl_._has_bits_);
          _impl_.category_show_gridline_tickmarks_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_gridline_tickmarks = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_gridline_tickmarks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_show_gridline_tickmarks_undefined = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_value_show_gridline_tickmarks_undefined(&_impl_._has_bits_);
          _impl_.value_show_gridline_tickmarks_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_last_label = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_last_label(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_show_last_label_undefined = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_category_show_last_label_undefined(&_impl_._has_bits_);
          _impl_.category_show_last_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_major_gridlines = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_major_gridlines(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_show_major_gridlines_undefined = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_category_show_major_gridlines_undefined(&_impl_._has_bits_);
          _impl_.category_show_major_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive polar_category_show_major_gridlines = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_polar_category_show_major_gridlines(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool polar_category_show_major_gridlines_undefined = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_polar_category_show_major_gridlines_undefined(&_impl_._has_bits_);
          _impl_.polar_category_show_major_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_major_gridlines = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_major_gridlines(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_show_major_gridlines_undefined = 66;
      case 66:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_value_show_major_gridlines_undefined(&_impl_._has_bits_);
          _impl_.value_show_major_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_major_tickmarks = 67;
      case 67:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_major_tickmarks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_show_major_tickmarks_undefined = 68;
      case 68:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_category_show_major_tickmarks_undefined(&_impl_._has_bits_);
          _impl_.category_show_major_tickmarks_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_major_tickmarks = 69;
      case 69:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_major_tickmarks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_show_major_tickmarks_undefined = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_value_show_major_tickmarks_undefined(&_impl_._has_bits_);
          _impl_.value_show_major_tickmarks_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_minimum_label = 71;
      case 71:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_minimum_label(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_show_minimum_label_undefined = 72;
      case 72:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_value_show_minimum_label_undefined(&_impl_._has_bits_);
          _impl_.value_show_minimum_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_minor_gridlines = 73;
      case 73:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_minor_gridlines(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_show_minor_gridlines_undefined = 74;
      case 74:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_category_show_minor_gridlines_undefined(&_impl_._has_bits_);
          _impl_.category_show_minor_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_minor_gridlines = 75;
      case 75:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_minor_gridlines(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_show_minor_gridlines_undefined = 76;
      case 76:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_value_show_minor_gridlines_undefined(&_impl_._has_bits_);
          _impl_.value_show_minor_gridlines_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive category_show_minor_tickmarks = 77;
      case 77:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_show_minor_tickmarks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_show_minor_tickmarks_undefined = 78;
      case 78:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_category_show_minor_tickmarks_undefined(&_impl_._has_bits_);
          _impl_.category_show_minor_tickmarks_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive value_show_minor_tickmarks = 79;
      case 79:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_show_minor_tickmarks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_show_minor_tickmarks_undefined = 80;
      case 80:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_value_show_minor_tickmarks_undefined(&_impl_._has_bits_);
          _impl_.value_show_minor_tickmarks_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive category_tickmark_location = 81;
      case 81:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_tickmark_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_tickmark_location_undefined = 82;
      case 82:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_category_tickmark_location_undefined(&_impl_._has_bits_);
          _impl_.category_tickmark_location_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_tickmark_location = 83;
      case 83:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_tickmark_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_tickmark_location_undefined = 84;
      case 84:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_value_tickmark_location_undefined(&_impl_._has_bits_);
          _impl_.value_tickmark_location_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive category_title_paragraph_style_index = 85;
      case 85:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_title_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_title_paragraph_style_index_undefined = 86;
      case 86:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_category_title_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.category_title_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 87;
      case 87:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_title_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_title_paragraph_style_index_undefined = 88;
      case 88:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_default_title_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.default_title_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive value_title_paragraph_style_index = 89;
      case 89:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_title_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool value_title_paragraph_style_index_undefined = 90;
      case 90:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_value_title_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.value_title_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive category_vertical_spacing = 91;
      case 91:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_category_vertical_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool category_vertical_spacing_undefined = 92;
      case 92:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_category_vertical_spacing_undefined(&_impl_._has_bits_);
          _impl_.category_vertical_spacing_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChartAxisStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive category3d_gridline_opacity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::category3d_gridline_opacity(this),
        _Internal::category3d_gridline_opacity(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category3d_gridline_opacity_undefined = 2;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_category3d_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive value3d_gridline_opacity = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::value3d_gridline_opacity(this),
        _Internal::value3d_gridline_opacity(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value3d_gridline_opacity_undefined = 4;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_value3d_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive category3d_gridline_stroke = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::category3d_gridline_stroke(this),
        _Internal::category3d_gridline_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category3d_gridline_stroke_undefined = 6;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_category3d_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive value3d_gridline_stroke = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::value3d_gridline_stroke(this),
        _Internal::value3d_gridline_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value3d_gridline_stroke_undefined = 8;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_value3d_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive category_horizontal_spacing = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::category_horizontal_spacing(this),
        _Internal::category_horizontal_spacing(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category_horizontal_spacing_undefined = 10;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_category_horizontal_spacing_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_label_angle_baseline_direction = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::default_label_angle_baseline_direction(this),
        _Internal::default_label_angle_baseline_direction(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_label_angle_baseline_direction_undefined = 12;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_default_label_angle_baseline_direction_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive category_label_paragraph_style_index = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::category_label_paragraph_style_index(this),
        _Internal::category_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category_label_paragraph_style_index_undefined = 14;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_category_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::default_label_paragraph_style_index(this),
        _Internal::default_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_label_paragraph_style_index_undefined = 16;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_default_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive value_label_paragraph_style_index = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::value_label_paragraph_style_index(this),
        _Internal::value_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_label_paragraph_style_index_undefined = 18;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_value_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive category_labels_orientation = 19;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::category_labels_orientation(this),
        _Internal::category_labels_orientation(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category_labels_orientation_undefined = 20;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(20, this->_internal_category_labels_orientation_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_labels_orientation = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::default_labels_orientation(this),
        _Internal::default_labels_orientation(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_labels_orientation_undefined = 22;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(22, this->_internal_default_labels_orientation_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive value_labels_orientation = 23;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::value_labels_orientation(this),
        _Internal::value_labels_orientation(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_labels_orientation_undefined = 24;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(24, this->_internal_value_labels_orientation_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive category_major_gridline_opacity = 25;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::category_major_gridline_opacity(this),
        _Internal::category_major_gridline_opacity(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category_major_gridline_opacity_undefined = 26;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(26, this->_internal_category_major_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive value_major_gridline_opacity = 27;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(27, _Internal::value_major_gridline_opacity(this),
        _Internal::value_major_gridline_opacity(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_major_gridline_opacity_undefined = 28;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(28, this->_internal_value_major_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive category_major_gridline_shadow = 29;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(29, _Internal::category_major_gridline_shadow(this),
        _Internal::category_major_gridline_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category_major_gridline_shadow_undefined = 30;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(30, this->_internal_category_major_gridline_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive value_major_gridline_shadow = 31;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, _Internal::value_major_gridline_shadow(this),
        _Internal::value_major_gridline_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_major_gridline_shadow_undefined = 32;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(32, this->_internal_value_major_gridline_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive category_major_gridline_stroke = 33;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(33, _Internal::category_major_gridline_stroke(this),
        _Internal::category_major_gridline_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool category_major_gridline_stroke_undefined = 34;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(34, this->_internal_category_major_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive value_major_gridline_stroke = 35;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, _Internal::value_major_gridline_stroke(this),
        _Internal::value_major_gridline_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool value_major_gridline_stroke_undefined = 36;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(36, this->_internal_value_major_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive category_minor_gridline_opacity = 37;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(37, _Internal::category_minor_gridline_opacity(this),
        _Internal::category_minor_gridline_opacity(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_minor_gridline_opacity_undefined = 38;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(38, this->_internal_category_minor_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive value_minor_gridline_opacity = 39;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(39, _Internal::value_minor_gridline_opacity(this),
        _Internal::value_minor_gridline_opacity(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_minor_gridline_opacity_undefined = 40;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(40, this->_internal_value_minor_gridline_opacity_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive category_minor_gridline_shadow = 41;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(41, _Internal::category_minor_gridline_shadow(this),
        _Internal::category_minor_gridline_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_minor_gridline_shadow_undefined = 42;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(42, this->_internal_category_minor_gridline_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive value_minor_gridline_shadow = 43;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(43, _Internal::value_minor_gridline_shadow(this),
        _Internal::value_minor_gridline_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_minor_gridline_shadow_undefined = 44;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(44, this->_internal_value_minor_gridline_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive category_minor_gridline_stroke = 45;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(45, _Internal::category_minor_gridline_stroke(this),
        _Internal::category_minor_gridline_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_minor_gridline_stroke_undefined = 46;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(46, this->_internal_category_minor_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive value_minor_gridline_stroke = 47;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(47, _Internal::value_minor_gridline_stroke(this),
        _Internal::value_minor_gridline_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_minor_gridline_stroke_undefined = 48;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(48, this->_internal_value_minor_gridline_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_axis = 49;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(49, _Internal::category_show_axis(this),
        _Internal::category_show_axis(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_show_axis_undefined = 50;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(50, this->_internal_category_show_axis_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive value_show_axis = 51;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(51, _Internal::value_show_axis(this),
        _Internal::value_show_axis(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_show_axis_undefined = 52;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(52, this->_internal_value_show_axis_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_show_extension_lines = 53;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(53, _Internal::default_show_extension_lines(this),
        _Internal::default_show_extension_lines(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool default_show_extension_lines_undefined = 54;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(54, this->_internal_default_show_extension_lines_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_gridline_tickmarks = 55;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(55, _Internal::category_show_gridline_tickmarks(this),
        _Internal::category_show_gridline_tickmarks(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_show_gridline_tickmarks_undefined = 56;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(56, this->_internal_category_show_gridline_tickmarks_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive value_show_gridline_tickmarks = 57;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(57, _Internal::value_show_gridline_tickmarks(this),
        _Internal::value_show_gridline_tickmarks(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_show_gridline_tickmarks_undefined = 58;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(58, this->_internal_value_show_gridline_tickmarks_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_last_label = 59;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(59, _Internal::category_show_last_label(this),
        _Internal::category_show_last_label(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_show_last_label_undefined = 60;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(60, this->_internal_category_show_last_label_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive category_show_major_gridlines = 61;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(61, _Internal::category_show_major_gridlines(this),
        _Internal::category_show_major_gridlines(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_show_major_gridlines_undefined = 62;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(62, this->_internal_category_show_major_gridlines_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive polar_category_show_major_gridlines = 63;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(63, _Internal::polar_category_show_major_gridlines(this),
        _Internal::polar_category_show_major_gridlines(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool polar_category_show_major_gridlines_undefined = 64;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(64, this->_internal_polar_category_show_major_gridlines_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive value_show_major_gridlines = 65;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(65, _Internal::value_show_major_gridlines(this),
        _Internal::value_show_major_gridlines(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_show_major_gridlines_undefined = 66;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(66, this->_internal_value_show_major_gridlines_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive category_show_major_tickmarks = 67;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(67, _Internal::category_show_major_tickmarks(this),
        _Internal::category_show_major_tickmarks(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_show_major_tickmarks_undefined = 68;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(68, this->_internal_category_show_major_tickmarks_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive value_show_major_tickmarks = 69;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(69, _Internal::value_show_major_tickmarks(this),
        _Internal::value_show_major_tickmarks(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_show_major_tickmarks_undefined = 70;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(70, this->_internal_value_show_major_tickmarks_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive value_show_minimum_label = 71;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(71, _Internal::value_show_minimum_label(this),
        _Internal::value_show_minimum_label(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_show_minimum_label_undefined = 72;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(72, this->_internal_value_show_minimum_label_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive category_show_minor_gridlines = 73;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(73, _Internal::category_show_minor_gridlines(this),
        _Internal::category_show_minor_gridlines(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_show_minor_gridlines_undefined = 74;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(74, this->_internal_category_show_minor_gridlines_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive value_show_minor_gridlines = 75;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(75, _Internal::value_show_minor_gridlines(this),
        _Internal::value_show_minor_gridlines(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_show_minor_gridlines_undefined = 76;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(76, this->_internal_value_show_minor_gridlines_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive category_show_minor_tickmarks = 77;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(77, _Internal::category_show_minor_tickmarks(this),
        _Internal::category_show_minor_tickmarks(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_show_minor_tickmarks_undefined = 78;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(78, this->_internal_category_show_minor_tickmarks_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive value_show_minor_tickmarks = 79;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(79, _Internal::value_show_minor_tickmarks(this),
        _Internal::value_show_minor_tickmarks(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_show_minor_tickmarks_undefined = 80;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(80, this->_internal_value_show_minor_tickmarks_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive category_tickmark_location = 81;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(81, _Internal::category_tickmark_location(this),
        _Internal::category_tickmark_location(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_tickmark_location_undefined = 82;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(82, this->_internal_category_tickmark_location_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive value_tickmark_location = 83;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(83, _Internal::value_tickmark_location(this),
        _Internal::value_tickmark_location(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_tickmark_location_undefined = 84;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(84, this->_internal_value_tickmark_location_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive category_title_paragraph_style_index = 85;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(85, _Internal::category_title_paragraph_style_index(this),
        _Internal::category_title_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_title_paragraph_style_index_undefined = 86;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(86, this->_internal_category_title_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 87;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(87, _Internal::default_title_paragraph_style_index(this),
        _Internal::default_title_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool default_title_paragraph_style_index_undefined = 88;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(88, this->_internal_default_title_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive value_title_paragraph_style_index = 89;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(89, _Internal::value_title_paragraph_style_index(this),
        _Internal::value_title_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool value_title_paragraph_style_index_undefined = 90;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(90, this->_internal_value_title_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive category_vertical_spacing = 91;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(91, _Internal::category_vertical_spacing(this),
        _Internal::category_vertical_spacing(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool category_vertical_spacing_undefined = 92;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(92, this->_internal_category_vertical_spacing_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  return target;
}

size_t ChartAxisStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecDoubleArchive category3d_gridline_opacity = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category3d_gridline_opacity_);
    }

    // optional .TSSSOS.SpecDoubleArchive value3d_gridline_opacity = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value3d_gridline_opacity_);
    }

    // optional .TSDSOS.SpecStrokeArchive category3d_gridline_stroke = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category3d_gridline_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive value3d_gridline_stroke = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value3d_gridline_stroke_);
    }

    // optional .TSSSOS.SpecIntegerArchive category_horizontal_spacing = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_horizontal_spacing_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_label_angle_baseline_direction = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_label_angle_baseline_direction_);
    }

    // optional .TSSSOS.SpecIntegerArchive category_label_paragraph_style_index = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_label_paragraph_style_index_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive value_label_paragraph_style_index = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecDoubleArchive category_labels_orientation = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_labels_orientation_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_labels_orientation = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_labels_orientation_);
    }

    // optional .TSSSOS.SpecDoubleArchive value_labels_orientation = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_labels_orientation_);
    }

    // optional .TSSSOS.SpecDoubleArchive category_major_gridline_opacity = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_major_gridline_opacity_);
    }

    // optional .TSSSOS.SpecDoubleArchive value_major_gridline_opacity = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_major_gridline_opacity_);
    }

    // optional .TSDSOS.SpecShadowArchive category_major_gridline_shadow = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_major_gridline_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive value_major_gridline_shadow = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_major_gridline_shadow_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSDSOS.SpecStrokeArchive category_major_gridline_stroke = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_major_gridline_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive value_major_gridline_stroke = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_major_gridline_stroke_);
    }

    // optional .TSSSOS.SpecDoubleArchive category_minor_gridline_opacity = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_minor_gridline_opacity_);
    }

    // optional .TSSSOS.SpecDoubleArchive value_minor_gridline_opacity = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_minor_gridline_opacity_);
    }

    // optional .TSDSOS.SpecShadowArchive category_minor_gridline_shadow = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_minor_gridline_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive value_minor_gridline_shadow = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_minor_gridline_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive category_minor_gridline_stroke = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_minor_gridline_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive value_minor_gridline_stroke = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_minor_gridline_stroke_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecBoolArchive category_show_axis = 49;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_show_axis_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_axis = 51;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_show_axis_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_extension_lines = 53;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_extension_lines_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_gridline_tickmarks = 55;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_show_gridline_tickmarks_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_gridline_tickmarks = 57;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_show_gridline_tickmarks_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_last_label = 59;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_show_last_label_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_major_gridlines = 61;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_show_major_gridlines_);
    }

    // optional .TSSSOS.SpecBoolArchive polar_category_show_major_gridlines = 63;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.polar_category_show_major_gridlines_);
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecBoolArchive value_show_major_gridlines = 65;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_show_major_gridlines_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_major_tickmarks = 67;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_show_major_tickmarks_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_major_tickmarks = 69;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_show_major_tickmarks_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_minimum_label = 71;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_show_minimum_label_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_minor_gridlines = 73;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_show_minor_gridlines_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_minor_gridlines = 75;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_show_minor_gridlines_);
    }

    // optional .TSSSOS.SpecBoolArchive category_show_minor_tickmarks = 77;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_show_minor_tickmarks_);
    }

    // optional .TSSSOS.SpecBoolArchive value_show_minor_tickmarks = 79;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_show_minor_tickmarks_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive category_tickmark_location = 81;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_tickmark_location_);
    }

    // optional .TSSSOS.SpecIntegerArchive value_tickmark_location = 83;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_tickmark_location_);
    }

    // optional .TSSSOS.SpecIntegerArchive category_title_paragraph_style_index = 85;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_title_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 87;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_title_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive value_title_paragraph_style_index = 89;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_title_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive category_vertical_spacing = 91;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.category_vertical_spacing_);
    }

    // optional bool category3d_gridline_opacity_undefined = 2;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool value3d_gridline_opacity_undefined = 4;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool category3d_gridline_stroke_undefined = 6;
    if (cached_has_bits & 0x00010000u) {
      total_size += 1 + 1;
    }

    // optional bool value3d_gridline_stroke_undefined = 8;
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 + 1;
    }

    // optional bool category_horizontal_spacing_undefined = 10;
    if (cached_has_bits & 0x00040000u) {
      total_size += 1 + 1;
    }

    // optional bool default_label_angle_baseline_direction_undefined = 12;
    if (cached_has_bits & 0x00080000u) {
      total_size += 1 + 1;
    }

    // optional bool category_label_paragraph_style_index_undefined = 14;
    if (cached_has_bits & 0x00100000u) {
      total_size += 1 + 1;
    }

    // optional bool default_label_paragraph_style_index_undefined = 16;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool value_label_paragraph_style_index_undefined = 18;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool category_labels_orientation_undefined = 20;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool default_labels_orientation_undefined = 22;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool value_labels_orientation_undefined = 24;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool category_major_gridline_opacity_undefined = 26;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool value_major_gridline_opacity_undefined = 28;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool category_major_gridline_shadow_undefined = 30;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool value_major_gridline_shadow_undefined = 32;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool category_major_gridline_stroke_undefined = 34;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool value_major_gridline_stroke_undefined = 36;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool category_minor_gridline_opacity_undefined = 38;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool value_minor_gridline_opacity_undefined = 40;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool category_minor_gridline_shadow_undefined = 42;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool value_minor_gridline_shadow_undefined = 44;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool category_minor_gridline_stroke_undefined = 46;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool value_minor_gridline_stroke_undefined = 48;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_axis_undefined = 50;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_axis_undefined = 52;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool default_show_extension_lines_undefined = 54;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_gridline_tickmarks_undefined = 56;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_gridline_tickmarks_undefined = 58;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_last_label_undefined = 60;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_major_gridlines_undefined = 62;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool polar_category_show_major_gridlines_undefined = 64;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_major_gridlines_undefined = 66;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_major_tickmarks_undefined = 68;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool value_show_major_tickmarks_undefined = 70;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_minimum_label_undefined = 72;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_minor_gridlines_undefined = 74;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_minor_gridlines_undefined = 76;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool category_show_minor_tickmarks_undefined = 78;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool value_show_minor_tickmarks_undefined = 80;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool category_tickmark_location_undefined = 82;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool value_tickmark_location_undefined = 84;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0f000000u) {
    // optional bool category_title_paragraph_style_index_undefined = 86;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_title_paragraph_style_index_undefined = 88;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool value_title_paragraph_style_index_undefined = 90;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool category_vertical_spacing_undefined = 92;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChartAxisStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChartAxisStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChartAxisStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ChartAxisStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChartAxisStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ChartAxisStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_category3d_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_category3d_gridline_opacity());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_value3d_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_value3d_gridline_opacity());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_category3d_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_category3d_gridline_stroke());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_value3d_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_value3d_gridline_stroke());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_category_horizontal_spacing()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_category_horizontal_spacing());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_default_label_angle_baseline_direction()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_label_angle_baseline_direction());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_category_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_category_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_default_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_label_paragraph_style_index());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_value_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_value_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_category_labels_orientation()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_category_labels_orientation());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_default_labels_orientation()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_labels_orientation());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_value_labels_orientation()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_value_labels_orientation());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_category_major_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_category_major_gridline_opacity());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_value_major_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_value_major_gridline_opacity());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_category_major_gridline_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_category_major_gridline_shadow());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_value_major_gridline_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_value_major_gridline_shadow());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_category_major_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_category_major_gridline_stroke());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_value_major_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_value_major_gridline_stroke());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_category_minor_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_category_minor_gridline_opacity());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_value_minor_gridline_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_value_minor_gridline_opacity());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_category_minor_gridline_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_category_minor_gridline_shadow());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_value_minor_gridline_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_value_minor_gridline_shadow());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_category_minor_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_category_minor_gridline_stroke());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_value_minor_gridline_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_value_minor_gridline_stroke());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_category_show_axis()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_category_show_axis());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_value_show_axis()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_value_show_axis());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_mutable_default_show_extension_lines()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_extension_lines());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_mutable_category_show_gridline_tickmarks()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_category_show_gridline_tickmarks());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_mutable_value_show_gridline_tickmarks()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_value_show_gridline_tickmarks());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_mutable_category_show_last_label()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_category_show_last_label());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_mutable_category_show_major_gridlines()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_category_show_major_gridlines());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_internal_mutable_polar_category_show_major_gridlines()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_polar_category_show_major_gridlines());
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_value_show_major_gridlines()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_value_show_major_gridlines());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_category_show_major_tickmarks()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_category_show_major_tickmarks());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_value_show_major_tickmarks()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_value_show_major_tickmarks());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_value_show_minimum_label()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_value_show_minimum_label());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_category_show_minor_gridlines()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_category_show_minor_gridlines());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_value_show_minor_gridlines()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_value_show_minor_gridlines());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_category_show_minor_tickmarks()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_category_show_minor_tickmarks());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_value_show_minor_tickmarks()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_value_show_minor_tickmarks());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_category_tickmark_location()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_category_tickmark_location());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_value_tickmark_location()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_value_tickmark_location());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_category_title_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_category_title_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_default_title_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_title_paragraph_style_index());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_value_title_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_value_title_paragraph_style_index());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_category_vertical_spacing()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_category_vertical_spacing());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.category3d_gridline_opacity_undefined_ = from._impl_.category3d_gridline_opacity_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.value3d_gridline_opacity_undefined_ = from._impl_.value3d_gridline_opacity_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.category3d_gridline_stroke_undefined_ = from._impl_.category3d_gridline_stroke_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.value3d_gridline_stroke_undefined_ = from._impl_.value3d_gridline_stroke_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.category_horizontal_spacing_undefined_ = from._impl_.category_horizontal_spacing_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.default_label_angle_baseline_direction_undefined_ = from._impl_.default_label_angle_baseline_direction_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.category_label_paragraph_style_index_undefined_ = from._impl_.category_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.default_label_paragraph_style_index_undefined_ = from._impl_.default_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.value_label_paragraph_style_index_undefined_ = from._impl_.value_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.category_labels_orientation_undefined_ = from._impl_.category_labels_orientation_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.default_labels_orientation_undefined_ = from._impl_.default_labels_orientation_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.value_labels_orientation_undefined_ = from._impl_.value_labels_orientation_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.category_major_gridline_opacity_undefined_ = from._impl_.category_major_gridline_opacity_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.value_major_gridline_opacity_undefined_ = from._impl_.value_major_gridline_opacity_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.category_major_gridline_shadow_undefined_ = from._impl_.category_major_gridline_shadow_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.value_major_gridline_shadow_undefined_ = from._impl_.value_major_gridline_shadow_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.category_major_gridline_stroke_undefined_ = from._impl_.category_major_gridline_stroke_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.value_major_gridline_stroke_undefined_ = from._impl_.value_major_gridline_stroke_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.category_minor_gridline_opacity_undefined_ = from._impl_.category_minor_gridline_opacity_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.value_minor_gridline_opacity_undefined_ = from._impl_.value_minor_gridline_opacity_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.category_minor_gridline_shadow_undefined_ = from._impl_.category_minor_gridline_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.value_minor_gridline_shadow_undefined_ = from._impl_.value_minor_gridline_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.category_minor_gridline_stroke_undefined_ = from._impl_.category_minor_gridline_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.value_minor_gridline_stroke_undefined_ = from._impl_.value_minor_gridline_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.category_show_axis_undefined_ = from._impl_.category_show_axis_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.value_show_axis_undefined_ = from._impl_.value_show_axis_undefined_;
    }
    _this->_impl_._has_bits_[2] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.default_show_extension_lines_undefined_ = from._impl_.default_show_extension_lines_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.category_show_gridline_tickmarks_undefined_ = from._impl_.category_show_gridline_tickmarks_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.value_show_gridline_tickmarks_undefined_ = from._impl_.value_show_gridline_tickmarks_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.category_show_last_label_undefined_ = from._impl_.category_show_last_label_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.category_show_major_gridlines_undefined_ = from._impl_.category_show_major_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.polar_category_show_major_gridlines_undefined_ = from._impl_.polar_category_show_major_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.value_show_major_gridlines_undefined_ = from._impl_.value_show_major_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.category_show_major_tickmarks_undefined_ = from._impl_.category_show_major_tickmarks_undefined_;
    }
    _this->_impl_._has_bits_[2] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.value_show_major_tickmarks_undefined_ = from._impl_.value_show_major_tickmarks_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.value_show_minimum_label_undefined_ = from._impl_.value_show_minimum_label_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.category_show_minor_gridlines_undefined_ = from._impl_.category_show_minor_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.value_show_minor_gridlines_undefined_ = from._impl_.value_show_minor_gridlines_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.category_show_minor_tickmarks_undefined_ = from._impl_.category_show_minor_tickmarks_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.value_show_minor_tickmarks_undefined_ = from._impl_.value_show_minor_tickmarks_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.category_tickmark_location_undefined_ = from._impl_.category_tickmark_location_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.value_tickmark_location_undefined_ = from._impl_.value_tickmark_location_undefined_;
    }
    _this->_impl_._has_bits_[2] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0f000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.category_title_paragraph_style_index_undefined_ = from._impl_.category_title_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.default_title_paragraph_style_index_undefined_ = from._impl_.default_title_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.value_title_paragraph_style_index_undefined_ = from._impl_.value_title_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.category_vertical_spacing_undefined_ = from._impl_.category_vertical_spacing_undefined_;
    }
    _this->_impl_._has_bits_[2] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChartAxisStylePropertyChangeSetArchive::CopyFrom(const ChartAxisStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartAxisStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartAxisStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_category3d_gridline_opacity()) {
    if (!_impl_.category3d_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_value3d_gridline_opacity()) {
    if (!_impl_.value3d_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_category3d_gridline_stroke()) {
    if (!_impl_.category3d_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_value3d_gridline_stroke()) {
    if (!_impl_.value3d_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_category_horizontal_spacing()) {
    if (!_impl_.category_horizontal_spacing_->IsInitialized()) return false;
  }
  if (_internal_has_default_label_angle_baseline_direction()) {
    if (!_impl_.default_label_angle_baseline_direction_->IsInitialized()) return false;
  }
  if (_internal_has_category_label_paragraph_style_index()) {
    if (!_impl_.category_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_label_paragraph_style_index()) {
    if (!_impl_.default_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_value_label_paragraph_style_index()) {
    if (!_impl_.value_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_category_labels_orientation()) {
    if (!_impl_.category_labels_orientation_->IsInitialized()) return false;
  }
  if (_internal_has_default_labels_orientation()) {
    if (!_impl_.default_labels_orientation_->IsInitialized()) return false;
  }
  if (_internal_has_value_labels_orientation()) {
    if (!_impl_.value_labels_orientation_->IsInitialized()) return false;
  }
  if (_internal_has_category_major_gridline_opacity()) {
    if (!_impl_.category_major_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_value_major_gridline_opacity()) {
    if (!_impl_.value_major_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_category_major_gridline_shadow()) {
    if (!_impl_.category_major_gridline_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_value_major_gridline_shadow()) {
    if (!_impl_.value_major_gridline_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_category_major_gridline_stroke()) {
    if (!_impl_.category_major_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_value_major_gridline_stroke()) {
    if (!_impl_.value_major_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_category_minor_gridline_opacity()) {
    if (!_impl_.category_minor_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_value_minor_gridline_opacity()) {
    if (!_impl_.value_minor_gridline_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_category_minor_gridline_shadow()) {
    if (!_impl_.category_minor_gridline_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_value_minor_gridline_shadow()) {
    if (!_impl_.value_minor_gridline_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_category_minor_gridline_stroke()) {
    if (!_impl_.category_minor_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_value_minor_gridline_stroke()) {
    if (!_impl_.value_minor_gridline_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_axis()) {
    if (!_impl_.category_show_axis_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_axis()) {
    if (!_impl_.value_show_axis_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_extension_lines()) {
    if (!_impl_.default_show_extension_lines_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_gridline_tickmarks()) {
    if (!_impl_.category_show_gridline_tickmarks_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_gridline_tickmarks()) {
    if (!_impl_.value_show_gridline_tickmarks_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_last_label()) {
    if (!_impl_.category_show_last_label_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_major_gridlines()) {
    if (!_impl_.category_show_major_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_polar_category_show_major_gridlines()) {
    if (!_impl_.polar_category_show_major_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_major_gridlines()) {
    if (!_impl_.value_show_major_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_major_tickmarks()) {
    if (!_impl_.category_show_major_tickmarks_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_major_tickmarks()) {
    if (!_impl_.value_show_major_tickmarks_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_minimum_label()) {
    if (!_impl_.value_show_minimum_label_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_minor_gridlines()) {
    if (!_impl_.category_show_minor_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_minor_gridlines()) {
    if (!_impl_.value_show_minor_gridlines_->IsInitialized()) return false;
  }
  if (_internal_has_category_show_minor_tickmarks()) {
    if (!_impl_.category_show_minor_tickmarks_->IsInitialized()) return false;
  }
  if (_internal_has_value_show_minor_tickmarks()) {
    if (!_impl_.value_show_minor_tickmarks_->IsInitialized()) return false;
  }
  if (_internal_has_category_tickmark_location()) {
    if (!_impl_.category_tickmark_location_->IsInitialized()) return false;
  }
  if (_internal_has_value_tickmark_location()) {
    if (!_impl_.value_tickmark_location_->IsInitialized()) return false;
  }
  if (_internal_has_category_title_paragraph_style_index()) {
    if (!_impl_.category_title_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_title_paragraph_style_index()) {
    if (!_impl_.default_title_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_value_title_paragraph_style_index()) {
    if (!_impl_.value_title_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_category_vertical_spacing()) {
    if (!_impl_.category_vertical_spacing_->IsInitialized()) return false;
  }
  return true;
}

void ChartAxisStylePropertyChangeSetArchive::InternalSwap(ChartAxisStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  swap(_impl_._has_bits_[2], other->_impl_._has_bits_[2]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartAxisStylePropertyChangeSetArchive, _impl_.category_vertical_spacing_undefined_)
      + sizeof(ChartAxisStylePropertyChangeSetArchive::_impl_.category_vertical_spacing_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartAxisStylePropertyChangeSetArchive, _impl_.category3d_gridline_opacity_)>(
          reinterpret_cast<char*>(&_impl_.category3d_gridline_opacity_),
          reinterpret_cast<char*>(&other->_impl_.category3d_gridline_opacity_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartAxisStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[13]);
}

// ===================================================================

class ChartLegendNonStylePropertyChangeSetArchive::_Internal {
 public:
};

ChartLegendNonStylePropertyChangeSetArchive::ChartLegendNonStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
}
ChartLegendNonStylePropertyChangeSetArchive::ChartLegendNonStylePropertyChangeSetArchive(const ChartLegendNonStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ChartLegendNonStylePropertyChangeSetArchive* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChartLegendNonStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChartLegendNonStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ChartLegendNonStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[14]);
}

// ===================================================================

class ChartLegendStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartLegendStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSDSOS::SpecFillArchive& default_fill(const ChartLegendStylePropertyChangeSetArchive* msg);
  static void set_has_default_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default_fill_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_label_paragraph_style_index(const ChartLegendStylePropertyChangeSetArchive* msg);
  static void set_has_default_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_opacity(const ChartLegendStylePropertyChangeSetArchive* msg);
  static void set_has_default_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_shadow(const ChartLegendStylePropertyChangeSetArchive* msg);
  static void set_has_default_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_stroke(const ChartLegendStylePropertyChangeSetArchive* msg);
  static void set_has_default_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

const ::TSDSOS::SpecFillArchive&
ChartLegendStylePropertyChangeSetArchive::_Internal::default_fill(const ChartLegendStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_fill_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartLegendStylePropertyChangeSetArchive::_Internal::default_label_paragraph_style_index(const ChartLegendStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_label_paragraph_style_index_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartLegendStylePropertyChangeSetArchive::_Internal::default_opacity(const ChartLegendStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_opacity_;
}
const ::TSDSOS::SpecShadowArchive&
ChartLegendStylePropertyChangeSetArchive::_Internal::default_shadow(const ChartLegendStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartLegendStylePropertyChangeSetArchive::_Internal::default_stroke(const ChartLegendStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_stroke_;
}
void ChartLegendStylePropertyChangeSetArchive::clear_default_fill() {
  if (_impl_.default_fill_ != nullptr) _impl_.default_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ChartLegendStylePropertyChangeSetArchive::clear_default_label_paragraph_style_index() {
  if (_impl_.default_label_paragraph_style_index_ != nullptr) _impl_.default_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ChartLegendStylePropertyChangeSetArchive::clear_default_opacity() {
  if (_impl_.default_opacity_ != nullptr) _impl_.default_opacity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ChartLegendStylePropertyChangeSetArchive::clear_default_shadow() {
  if (_impl_.default_shadow_ != nullptr) _impl_.default_shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void ChartLegendStylePropertyChangeSetArchive::clear_default_stroke() {
  if (_impl_.default_stroke_ != nullptr) _impl_.default_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
ChartLegendStylePropertyChangeSetArchive::ChartLegendStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
}
ChartLegendStylePropertyChangeSetArchive::ChartLegendStylePropertyChangeSetArchive(const ChartLegendStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChartLegendStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default_fill_){nullptr}
    , decltype(_impl_.default_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_opacity_){nullptr}
    , decltype(_impl_.default_shadow_){nullptr}
    , decltype(_impl_.default_stroke_){nullptr}
    , decltype(_impl_.default_fill_undefined_){}
    , decltype(_impl_.default_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.default_opacity_undefined_){}
    , decltype(_impl_.default_shadow_undefined_){}
    , decltype(_impl_.default_stroke_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default_fill()) {
    _this->_impl_.default_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.default_fill_);
  }
  if (from._internal_has_default_label_paragraph_style_index()) {
    _this->_impl_.default_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_label_paragraph_style_index_);
  }
  if (from._internal_has_default_opacity()) {
    _this->_impl_.default_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_opacity_);
  }
  if (from._internal_has_default_shadow()) {
    _this->_impl_.default_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.default_shadow_);
  }
  if (from._internal_has_default_stroke()) {
    _this->_impl_.default_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.default_stroke_);
  }
  ::memcpy(&_impl_.default_fill_undefined_, &from._impl_.default_fill_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.default_stroke_undefined_) -
    reinterpret_cast<char*>(&_impl_.default_fill_undefined_)) + sizeof(_impl_.default_stroke_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
}

inline void ChartLegendStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default_fill_){nullptr}
    , decltype(_impl_.default_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_opacity_){nullptr}
    , decltype(_impl_.default_shadow_){nullptr}
    , decltype(_impl_.default_stroke_){nullptr}
    , decltype(_impl_.default_fill_undefined_){false}
    , decltype(_impl_.default_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.default_opacity_undefined_){false}
    , decltype(_impl_.default_shadow_undefined_){false}
    , decltype(_impl_.default_stroke_undefined_){false}
  };
}

ChartLegendStylePropertyChangeSetArchive::~ChartLegendStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChartLegendStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.default_fill_;
  if (this != internal_default_instance()) delete _impl_.default_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.default_opacity_;
  if (this != internal_default_instance()) delete _impl_.default_shadow_;
  if (this != internal_default_instance()) delete _impl_.default_stroke_;
}

void ChartLegendStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChartLegendStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.default_fill_ != nullptr);
      _impl_.default_fill_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.default_label_paragraph_style_index_ != nullptr);
      _impl_.default_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.default_opacity_ != nullptr);
      _impl_.default_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.default_shadow_ != nullptr);
      _impl_.default_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.default_stroke_ != nullptr);
      _impl_.default_stroke_->Clear();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&_impl_.default_fill_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_opacity_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_fill_undefined_)) + sizeof(_impl_.default_opacity_undefined_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&_impl_.default_shadow_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_stroke_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_shadow_undefined_)) + sizeof(_impl_.default_stroke_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartLegendStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSDSOS.SpecFillArchive default_fill = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_fill_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_default_fill_undefined(&has_bits);
          _impl_.default_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_label_paragraph_style_index_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default_label_paragraph_style_index_undefined(&has_bits);
          _impl_.default_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_opacity = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_opacity_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_default_opacity_undefined(&has_bits);
          _impl_.default_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_shadow = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_shadow_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_default_shadow_undefined(&has_bits);
          _impl_.default_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_stroke = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_stroke_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default_stroke_undefined(&has_bits);
          _impl_.default_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChartLegendStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive default_fill = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::default_fill(this),
        _Internal::default_fill(this).GetCachedSize(), target, stream);
  }

  // optional bool default_fill_undefined = 2;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_default_fill_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::default_label_paragraph_style_index(this),
        _Internal::default_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  // optional bool default_label_paragraph_style_index_undefined = 4;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_default_label_paragraph_style_index_undefined(), target);
  }

  // optional .TSSSOS.SpecDoubleArchive default_opacity = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::default_opacity(this),
        _Internal::default_opacity(this).GetCachedSize(), target, stream);
  }

  // optional bool default_opacity_undefined = 6;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_default_opacity_undefined(), target);
  }

  // optional .TSDSOS.SpecShadowArchive default_shadow = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::default_shadow(this),
        _Internal::default_shadow(this).GetCachedSize(), target, stream);
  }

  // optional bool default_shadow_undefined = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_default_shadow_undefined(), target);
  }

  // optional .TSDSOS.SpecStrokeArchive default_stroke = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::default_stroke(this),
        _Internal::default_stroke(this).GetCachedSize(), target, stream);
  }

  // optional bool default_stroke_undefined = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_default_stroke_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  return target;
}

size_t ChartLegendStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSDSOS.SpecFillArchive default_fill = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_fill_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_opacity = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_opacity_);
    }

    // optional .TSDSOS.SpecShadowArchive default_shadow = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive default_stroke = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_stroke_);
    }

    // optional bool default_fill_undefined = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool default_label_paragraph_style_index_undefined = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool default_opacity_undefined = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional bool default_shadow_undefined = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional bool default_stroke_undefined = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChartLegendStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChartLegendStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChartLegendStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ChartLegendStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChartLegendStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ChartLegendStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_default_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_default_fill());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_default_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_default_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_opacity());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_default_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_default_shadow());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_default_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_default_stroke());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.default_fill_undefined_ = from._impl_.default_fill_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.default_label_paragraph_style_index_undefined_ = from._impl_.default_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.default_opacity_undefined_ = from._impl_.default_opacity_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.default_shadow_undefined_ = from._impl_.default_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.default_stroke_undefined_ = from._impl_.default_stroke_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChartLegendStylePropertyChangeSetArchive::CopyFrom(const ChartLegendStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartLegendStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartLegendStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default_fill()) {
    if (!_impl_.default_fill_->IsInitialized()) return false;
  }
  if (_internal_has_default_label_paragraph_style_index()) {
    if (!_impl_.default_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_opacity()) {
    if (!_impl_.default_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_default_shadow()) {
    if (!_impl_.default_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_stroke()) {
    if (!_impl_.default_stroke_->IsInitialized()) return false;
  }
  return true;
}

void ChartLegendStylePropertyChangeSetArchive::InternalSwap(ChartLegendStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartLegendStylePropertyChangeSetArchive, _impl_.default_stroke_undefined_)
      + sizeof(ChartLegendStylePropertyChangeSetArchive::_impl_.default_stroke_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartLegendStylePropertyChangeSetArchive, _impl_.default_fill_)>(
          reinterpret_cast<char*>(&_impl_.default_fill_),
          reinterpret_cast<char*>(&other->_impl_.default_fill_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartLegendStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[15]);
}

// ===================================================================

class ChartNonStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartNonStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSSSOS::SpecIntegerArchive& default3d_bar_shape(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_bar_shape(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default3d_bar_shape_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::TSSSOS::SpecBoolArchive& default3d_bevel_edges(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_bevel_edges(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default3d_bevel_edges_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default3d_inter_set_depth_gap(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_inter_set_depth_gap(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default3d_inter_set_depth_gap_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& default3d_rotation(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default3d_rotation_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& area3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_area3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_area3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& bar3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_bar3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_bar3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& column3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_column3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_column3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& default3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_default3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& line3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_line3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_line3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& pie3d_scale(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie3d_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_pie3d_scale_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::TSCHSOS::SpecChart3dVectorArchive& default3d_viewport(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_viewport(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_default3d_viewport_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_area_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bar_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_bar_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_bar_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_bubble_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_default_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_line_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static const ::TSSSOS::SpecIntegerArchive& pie_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_pie_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_scatter_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_area_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_area_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_stacked_area_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_bar_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_bar_callout_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_stacked_bar_callout_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_data_set_name_location(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_data_set_name_location(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_default_data_set_name_location_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_donut_place_title_at_center(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_donut_place_title_at_center(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_default_donut_place_title_at_center_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_inner_radius(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_inner_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_default_inner_radius_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16777216u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_multi_data_control_type(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_multi_data_control_type(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_default_multi_data_control_type_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 33554432u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_pie_start_angle(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_pie_start_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_default_pie_start_angle_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 67108864u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_radar_start_angle(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_radar_start_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_default_radar_start_angle_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 134217728u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_legend(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_legend(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_default_show_legend_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 268435456u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_title(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_title(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_default_show_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 536870912u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_skip_hidden_data(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_skip_hidden_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_default_skip_hidden_data_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1073741824u;
  }
  static const ::TSSSOS::SpecStringArchive& default_title(const ChartNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_title(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_default_title_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2147483648u;
  }
};

const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_bar_shape(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default3d_bar_shape_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_bevel_edges(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default3d_bevel_edges_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_inter_set_depth_gap(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default3d_inter_set_depth_gap_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_rotation(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default3d_rotation_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::area3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::bar3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::column3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.column3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::line3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::pie3d_scale(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie3d_scale_;
}
const ::TSCHSOS::SpecChart3dVectorArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default3d_viewport(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default3d_viewport_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::area_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::bar_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::bubble_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::line_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::pie_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::scatter_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::stacked_area_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.stacked_area_callout_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::stacked_bar_callout_line_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.stacked_bar_callout_line_type_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_data_set_name_location(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_data_set_name_location_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_donut_place_title_at_center(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_donut_place_title_at_center_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_inner_radius(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_inner_radius_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_multi_data_control_type(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_multi_data_control_type_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_pie_start_angle(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_pie_start_angle_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_radar_start_angle(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_radar_start_angle_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_show_legend(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_legend_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_show_title(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_title_;
}
const ::TSSSOS::SpecBoolArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_skip_hidden_data(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_skip_hidden_data_;
}
const ::TSSSOS::SpecStringArchive&
ChartNonStylePropertyChangeSetArchive::_Internal::default_title(const ChartNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_title_;
}
void ChartNonStylePropertyChangeSetArchive::clear_default3d_bar_shape() {
  if (_impl_.default3d_bar_shape_ != nullptr) _impl_.default3d_bar_shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default3d_bevel_edges() {
  if (_impl_.default3d_bevel_edges_ != nullptr) _impl_.default3d_bevel_edges_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default3d_inter_set_depth_gap() {
  if (_impl_.default3d_inter_set_depth_gap_ != nullptr) _impl_.default3d_inter_set_depth_gap_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ChartNonStylePropertyChangeSetArchive::clear_area_callout_line_type() {
  if (_impl_.area_callout_line_type_ != nullptr) _impl_.area_callout_line_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void ChartNonStylePropertyChangeSetArchive::clear_bar_callout_line_type() {
  if (_impl_.bar_callout_line_type_ != nullptr) _impl_.bar_callout_line_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_bubble_callout_line_type() {
  if (_impl_.bubble_callout_line_type_ != nullptr) _impl_.bubble_callout_line_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_callout_line_type() {
  if (_impl_.default_callout_line_type_ != nullptr) _impl_.default_callout_line_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_line_callout_line_type() {
  if (_impl_.line_callout_line_type_ != nullptr) _impl_.line_callout_line_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_pie_callout_line_type() {
  if (_impl_.pie_callout_line_type_ != nullptr) _impl_.pie_callout_line_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_scatter_callout_line_type() {
  if (_impl_.scatter_callout_line_type_ != nullptr) _impl_.scatter_callout_line_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_stacked_area_callout_line_type() {
  if (_impl_.stacked_area_callout_line_type_ != nullptr) _impl_.stacked_area_callout_line_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_stacked_bar_callout_line_type() {
  if (_impl_.stacked_bar_callout_line_type_ != nullptr) _impl_.stacked_bar_callout_line_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only() {
  if (_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_ != nullptr) _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius() {
  if (_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_ != nullptr) _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_data_set_name_location() {
  if (_impl_.default_data_set_name_location_ != nullptr) _impl_.default_data_set_name_location_->Clear();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_donut_place_title_at_center() {
  if (_impl_.default_donut_place_title_at_center_ != nullptr) _impl_.default_donut_place_title_at_center_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_inner_radius() {
  if (_impl_.default_inner_radius_ != nullptr) _impl_.default_inner_radius_->Clear();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_multi_data_control_type() {
  if (_impl_.default_multi_data_control_type_ != nullptr) _impl_.default_multi_data_control_type_->Clear();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_pie_start_angle() {
  if (_impl_.default_pie_start_angle_ != nullptr) _impl_.default_pie_start_angle_->Clear();
  _impl_._has_bits_[0] &= ~0x04000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_radar_start_angle() {
  if (_impl_.default_radar_start_angle_ != nullptr) _impl_.default_radar_start_angle_->Clear();
  _impl_._has_bits_[0] &= ~0x08000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_show_legend() {
  if (_impl_.default_show_legend_ != nullptr) _impl_.default_show_legend_->Clear();
  _impl_._has_bits_[0] &= ~0x10000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_show_title() {
  if (_impl_.default_show_title_ != nullptr) _impl_.default_show_title_->Clear();
  _impl_._has_bits_[0] &= ~0x20000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_skip_hidden_data() {
  if (_impl_.default_skip_hidden_data_ != nullptr) _impl_.default_skip_hidden_data_->Clear();
  _impl_._has_bits_[0] &= ~0x40000000u;
}
void ChartNonStylePropertyChangeSetArchive::clear_default_title() {
  if (_impl_.default_title_ != nullptr) _impl_.default_title_->Clear();
  _impl_._has_bits_[0] &= ~0x80000000u;
}
ChartNonStylePropertyChangeSetArchive::ChartNonStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
}
ChartNonStylePropertyChangeSetArchive::ChartNonStylePropertyChangeSetArchive(const ChartNonStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChartNonStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default3d_bar_shape_){nullptr}
    , decltype(_impl_.default3d_bevel_edges_){nullptr}
    , decltype(_impl_.default3d_inter_set_depth_gap_){nullptr}
    , decltype(_impl_.default3d_rotation_){nullptr}
    , decltype(_impl_.area3d_scale_){nullptr}
    , decltype(_impl_.bar3d_scale_){nullptr}
    , decltype(_impl_.column3d_scale_){nullptr}
    , decltype(_impl_.default3d_scale_){nullptr}
    , decltype(_impl_.line3d_scale_){nullptr}
    , decltype(_impl_.pie3d_scale_){nullptr}
    , decltype(_impl_.default3d_viewport_){nullptr}
    , decltype(_impl_.area_callout_line_type_){nullptr}
    , decltype(_impl_.bar_callout_line_type_){nullptr}
    , decltype(_impl_.bubble_callout_line_type_){nullptr}
    , decltype(_impl_.default_callout_line_type_){nullptr}
    , decltype(_impl_.line_callout_line_type_){nullptr}
    , decltype(_impl_.pie_callout_line_type_){nullptr}
    , decltype(_impl_.scatter_callout_line_type_){nullptr}
    , decltype(_impl_.stacked_area_callout_line_type_){nullptr}
    , decltype(_impl_.stacked_bar_callout_line_type_){nullptr}
    , decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_){nullptr}
    , decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_){nullptr}
    , decltype(_impl_.default_data_set_name_location_){nullptr}
    , decltype(_impl_.default_donut_place_title_at_center_){nullptr}
    , decltype(_impl_.default_inner_radius_){nullptr}
    , decltype(_impl_.default_multi_data_control_type_){nullptr}
    , decltype(_impl_.default_pie_start_angle_){nullptr}
    , decltype(_impl_.default_radar_start_angle_){nullptr}
    , decltype(_impl_.default_show_legend_){nullptr}
    , decltype(_impl_.default_show_title_){nullptr}
    , decltype(_impl_.default_skip_hidden_data_){nullptr}
    , decltype(_impl_.default_title_){nullptr}
    , decltype(_impl_.default3d_bar_shape_undefined_){}
    , decltype(_impl_.default3d_bevel_edges_undefined_){}
    , decltype(_impl_.default3d_inter_set_depth_gap_undefined_){}
    , decltype(_impl_.default3d_rotation_undefined_){}
    , decltype(_impl_.area3d_scale_undefined_){}
    , decltype(_impl_.bar3d_scale_undefined_){}
    , decltype(_impl_.column3d_scale_undefined_){}
    , decltype(_impl_.default3d_scale_undefined_){}
    , decltype(_impl_.line3d_scale_undefined_){}
    , decltype(_impl_.pie3d_scale_undefined_){}
    , decltype(_impl_.default3d_viewport_undefined_){}
    , decltype(_impl_.area_callout_line_type_undefined_){}
    , decltype(_impl_.bar_callout_line_type_undefined_){}
    , decltype(_impl_.bubble_callout_line_type_undefined_){}
    , decltype(_impl_.default_callout_line_type_undefined_){}
    , decltype(_impl_.line_callout_line_type_undefined_){}
    , decltype(_impl_.pie_callout_line_type_undefined_){}
    , decltype(_impl_.scatter_callout_line_type_undefined_){}
    , decltype(_impl_.stacked_area_callout_line_type_undefined_){}
    , decltype(_impl_.stacked_bar_callout_line_type_undefined_){}
    , decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_){}
    , decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_){}
    , decltype(_impl_.default_data_set_name_location_undefined_){}
    , decltype(_impl_.default_donut_place_title_at_center_undefined_){}
    , decltype(_impl_.default_inner_radius_undefined_){}
    , decltype(_impl_.default_multi_data_control_type_undefined_){}
    , decltype(_impl_.default_pie_start_angle_undefined_){}
    , decltype(_impl_.default_radar_start_angle_undefined_){}
    , decltype(_impl_.default_show_legend_undefined_){}
    , decltype(_impl_.default_show_title_undefined_){}
    , decltype(_impl_.default_skip_hidden_data_undefined_){}
    , decltype(_impl_.default_title_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default3d_bar_shape()) {
    _this->_impl_.default3d_bar_shape_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default3d_bar_shape_);
  }
  if (from._internal_has_default3d_bevel_edges()) {
    _this->_impl_.default3d_bevel_edges_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default3d_bevel_edges_);
  }
  if (from._internal_has_default3d_inter_set_depth_gap()) {
    _this->_impl_.default3d_inter_set_depth_gap_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default3d_inter_set_depth_gap_);
  }
  if (from._internal_has_default3d_rotation()) {
    _this->_impl_.default3d_rotation_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from._impl_.default3d_rotation_);
  }
  if (from._internal_has_area3d_scale()) {
    _this->_impl_.area3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from._impl_.area3d_scale_);
  }
  if (from._internal_has_bar3d_scale()) {
    _this->_impl_.bar3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from._impl_.bar3d_scale_);
  }
  if (from._internal_has_column3d_scale()) {
    _this->_impl_.column3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from._impl_.column3d_scale_);
  }
  if (from._internal_has_default3d_scale()) {
    _this->_impl_.default3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from._impl_.default3d_scale_);
  }
  if (from._internal_has_line3d_scale()) {
    _this->_impl_.line3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from._impl_.line3d_scale_);
  }
  if (from._internal_has_pie3d_scale()) {
    _this->_impl_.pie3d_scale_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from._impl_.pie3d_scale_);
  }
  if (from._internal_has_default3d_viewport()) {
    _this->_impl_.default3d_viewport_ = new ::TSCHSOS::SpecChart3dVectorArchive(*from._impl_.default3d_viewport_);
  }
  if (from._internal_has_area_callout_line_type()) {
    _this->_impl_.area_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.area_callout_line_type_);
  }
  if (from._internal_has_bar_callout_line_type()) {
    _this->_impl_.bar_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.bar_callout_line_type_);
  }
  if (from._internal_has_bubble_callout_line_type()) {
    _this->_impl_.bubble_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.bubble_callout_line_type_);
  }
  if (from._internal_has_default_callout_line_type()) {
    _this->_impl_.default_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_callout_line_type_);
  }
  if (from._internal_has_line_callout_line_type()) {
    _this->_impl_.line_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.line_callout_line_type_);
  }
  if (from._internal_has_pie_callout_line_type()) {
    _this->_impl_.pie_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.pie_callout_line_type_);
  }
  if (from._internal_has_scatter_callout_line_type()) {
    _this->_impl_.scatter_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.scatter_callout_line_type_);
  }
  if (from._internal_has_stacked_area_callout_line_type()) {
    _this->_impl_.stacked_area_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.stacked_area_callout_line_type_);
  }
  if (from._internal_has_stacked_bar_callout_line_type()) {
    _this->_impl_.stacked_bar_callout_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.stacked_bar_callout_line_type_);
  }
  if (from._internal_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only()) {
    _this->_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_);
  }
  if (from._internal_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius()) {
    _this->_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_);
  }
  if (from._internal_has_default_data_set_name_location()) {
    _this->_impl_.default_data_set_name_location_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_data_set_name_location_);
  }
  if (from._internal_has_default_donut_place_title_at_center()) {
    _this->_impl_.default_donut_place_title_at_center_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_donut_place_title_at_center_);
  }
  if (from._internal_has_default_inner_radius()) {
    _this->_impl_.default_inner_radius_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_inner_radius_);
  }
  if (from._internal_has_default_multi_data_control_type()) {
    _this->_impl_.default_multi_data_control_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_multi_data_control_type_);
  }
  if (from._internal_has_default_pie_start_angle()) {
    _this->_impl_.default_pie_start_angle_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_pie_start_angle_);
  }
  if (from._internal_has_default_radar_start_angle()) {
    _this->_impl_.default_radar_start_angle_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_radar_start_angle_);
  }
  if (from._internal_has_default_show_legend()) {
    _this->_impl_.default_show_legend_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_legend_);
  }
  if (from._internal_has_default_show_title()) {
    _this->_impl_.default_show_title_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_title_);
  }
  if (from._internal_has_default_skip_hidden_data()) {
    _this->_impl_.default_skip_hidden_data_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_skip_hidden_data_);
  }
  if (from._internal_has_default_title()) {
    _this->_impl_.default_title_ = new ::TSSSOS::SpecStringArchive(*from._impl_.default_title_);
  }
  ::memcpy(&_impl_.default3d_bar_shape_undefined_, &from._impl_.default3d_bar_shape_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.default_title_undefined_) -
    reinterpret_cast<char*>(&_impl_.default3d_bar_shape_undefined_)) + sizeof(_impl_.default_title_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
}

inline void ChartNonStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default3d_bar_shape_){nullptr}
    , decltype(_impl_.default3d_bevel_edges_){nullptr}
    , decltype(_impl_.default3d_inter_set_depth_gap_){nullptr}
    , decltype(_impl_.default3d_rotation_){nullptr}
    , decltype(_impl_.area3d_scale_){nullptr}
    , decltype(_impl_.bar3d_scale_){nullptr}
    , decltype(_impl_.column3d_scale_){nullptr}
    , decltype(_impl_.default3d_scale_){nullptr}
    , decltype(_impl_.line3d_scale_){nullptr}
    , decltype(_impl_.pie3d_scale_){nullptr}
    , decltype(_impl_.default3d_viewport_){nullptr}
    , decltype(_impl_.area_callout_line_type_){nullptr}
    , decltype(_impl_.bar_callout_line_type_){nullptr}
    , decltype(_impl_.bubble_callout_line_type_){nullptr}
    , decltype(_impl_.default_callout_line_type_){nullptr}
    , decltype(_impl_.line_callout_line_type_){nullptr}
    , decltype(_impl_.pie_callout_line_type_){nullptr}
    , decltype(_impl_.scatter_callout_line_type_){nullptr}
    , decltype(_impl_.stacked_area_callout_line_type_){nullptr}
    , decltype(_impl_.stacked_bar_callout_line_type_){nullptr}
    , decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_){nullptr}
    , decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_){nullptr}
    , decltype(_impl_.default_data_set_name_location_){nullptr}
    , decltype(_impl_.default_donut_place_title_at_center_){nullptr}
    , decltype(_impl_.default_inner_radius_){nullptr}
    , decltype(_impl_.default_multi_data_control_type_){nullptr}
    , decltype(_impl_.default_pie_start_angle_){nullptr}
    , decltype(_impl_.default_radar_start_angle_){nullptr}
    , decltype(_impl_.default_show_legend_){nullptr}
    , decltype(_impl_.default_show_title_){nullptr}
    , decltype(_impl_.default_skip_hidden_data_){nullptr}
    , decltype(_impl_.default_title_){nullptr}
    , decltype(_impl_.default3d_bar_shape_undefined_){false}
    , decltype(_impl_.default3d_bevel_edges_undefined_){false}
    , decltype(_impl_.default3d_inter_set_depth_gap_undefined_){false}
    , decltype(_impl_.default3d_rotation_undefined_){false}
    , decltype(_impl_.area3d_scale_undefined_){false}
    , decltype(_impl_.bar3d_scale_undefined_){false}
    , decltype(_impl_.column3d_scale_undefined_){false}
    , decltype(_impl_.default3d_scale_undefined_){false}
    , decltype(_impl_.line3d_scale_undefined_){false}
    , decltype(_impl_.pie3d_scale_undefined_){false}
    , decltype(_impl_.default3d_viewport_undefined_){false}
    , decltype(_impl_.area_callout_line_type_undefined_){false}
    , decltype(_impl_.bar_callout_line_type_undefined_){false}
    , decltype(_impl_.bubble_callout_line_type_undefined_){false}
    , decltype(_impl_.default_callout_line_type_undefined_){false}
    , decltype(_impl_.line_callout_line_type_undefined_){false}
    , decltype(_impl_.pie_callout_line_type_undefined_){false}
    , decltype(_impl_.scatter_callout_line_type_undefined_){false}
    , decltype(_impl_.stacked_area_callout_line_type_undefined_){false}
    , decltype(_impl_.stacked_bar_callout_line_type_undefined_){false}
    , decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_){false}
    , decltype(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_){false}
    , decltype(_impl_.default_data_set_name_location_undefined_){false}
    , decltype(_impl_.default_donut_place_title_at_center_undefined_){false}
    , decltype(_impl_.default_inner_radius_undefined_){false}
    , decltype(_impl_.default_multi_data_control_type_undefined_){false}
    , decltype(_impl_.default_pie_start_angle_undefined_){false}
    , decltype(_impl_.default_radar_start_angle_undefined_){false}
    , decltype(_impl_.default_show_legend_undefined_){false}
    , decltype(_impl_.default_show_title_undefined_){false}
    , decltype(_impl_.default_skip_hidden_data_undefined_){false}
    , decltype(_impl_.default_title_undefined_){false}
  };
}

ChartNonStylePropertyChangeSetArchive::~ChartNonStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChartNonStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.default3d_bar_shape_;
  if (this != internal_default_instance()) delete _impl_.default3d_bevel_edges_;
  if (this != internal_default_instance()) delete _impl_.default3d_inter_set_depth_gap_;
  if (this != internal_default_instance()) delete _impl_.default3d_rotation_;
  if (this != internal_default_instance()) delete _impl_.area3d_scale_;
  if (this != internal_default_instance()) delete _impl_.bar3d_scale_;
  if (this != internal_default_instance()) delete _impl_.column3d_scale_;
  if (this != internal_default_instance()) delete _impl_.default3d_scale_;
  if (this != internal_default_instance()) delete _impl_.line3d_scale_;
  if (this != internal_default_instance()) delete _impl_.pie3d_scale_;
  if (this != internal_default_instance()) delete _impl_.default3d_viewport_;
  if (this != internal_default_instance()) delete _impl_.area_callout_line_type_;
  if (this != internal_default_instance()) delete _impl_.bar_callout_line_type_;
  if (this != internal_default_instance()) delete _impl_.bubble_callout_line_type_;
  if (this != internal_default_instance()) delete _impl_.default_callout_line_type_;
  if (this != internal_default_instance()) delete _impl_.line_callout_line_type_;
  if (this != internal_default_instance()) delete _impl_.pie_callout_line_type_;
  if (this != internal_default_instance()) delete _impl_.scatter_callout_line_type_;
  if (this != internal_default_instance()) delete _impl_.stacked_area_callout_line_type_;
  if (this != internal_default_instance()) delete _impl_.stacked_bar_callout_line_type_;
  if (this != internal_default_instance()) delete _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_;
  if (this != internal_default_instance()) delete _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_;
  if (this != internal_default_instance()) delete _impl_.default_data_set_name_location_;
  if (this != internal_default_instance()) delete _impl_.default_donut_place_title_at_center_;
  if (this != internal_default_instance()) delete _impl_.default_inner_radius_;
  if (this != internal_default_instance()) delete _impl_.default_multi_data_control_type_;
  if (this != internal_default_instance()) delete _impl_.default_pie_start_angle_;
  if (this != internal_default_instance()) delete _impl_.default_radar_start_angle_;
  if (this != internal_default_instance()) delete _impl_.default_show_legend_;
  if (this != internal_default_instance()) delete _impl_.default_show_title_;
  if (this != internal_default_instance()) delete _impl_.default_skip_hidden_data_;
  if (this != internal_default_instance()) delete _impl_.default_title_;
}

void ChartNonStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChartNonStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.default3d_bar_shape_ != nullptr);
      _impl_.default3d_bar_shape_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.default3d_bevel_edges_ != nullptr);
      _impl_.default3d_bevel_edges_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.default3d_inter_set_depth_gap_ != nullptr);
      _impl_.default3d_inter_set_depth_gap_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.default3d_rotation_ != nullptr);
      _impl_.default3d_rotation_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.area3d_scale_ != nullptr);
      _impl_.area3d_scale_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.bar3d_scale_ != nullptr);
      _impl_.bar3d_scale_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.column3d_scale_ != nullptr);
      _impl_.column3d_scale_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.default3d_scale_ != nullptr);
      _impl_.default3d_scale_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.line3d_scale_ != nullptr);
      _impl_.line3d_scale_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.pie3d_scale_ != nullptr);
      _impl_.pie3d_scale_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.default3d_viewport_ != nullptr);
      _impl_.default3d_viewport_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.area_callout_line_type_ != nullptr);
      _impl_.area_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.bar_callout_line_type_ != nullptr);
      _impl_.bar_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.bubble_callout_line_type_ != nullptr);
      _impl_.bubble_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.default_callout_line_type_ != nullptr);
      _impl_.default_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.line_callout_line_type_ != nullptr);
      _impl_.line_callout_line_type_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.pie_callout_line_type_ != nullptr);
      _impl_.pie_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.scatter_callout_line_type_ != nullptr);
      _impl_.scatter_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.stacked_area_callout_line_type_ != nullptr);
      _impl_.stacked_area_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.stacked_bar_callout_line_type_ != nullptr);
      _impl_.stacked_bar_callout_line_type_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_ != nullptr);
      _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_ != nullptr);
      _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.default_data_set_name_location_ != nullptr);
      _impl_.default_data_set_name_location_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.default_donut_place_title_at_center_ != nullptr);
      _impl_.default_donut_place_title_at_center_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(_impl_.default_inner_radius_ != nullptr);
      _impl_.default_inner_radius_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(_impl_.default_multi_data_control_type_ != nullptr);
      _impl_.default_multi_data_control_type_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(_impl_.default_pie_start_angle_ != nullptr);
      _impl_.default_pie_start_angle_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(_impl_.default_radar_start_angle_ != nullptr);
      _impl_.default_radar_start_angle_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(_impl_.default_show_legend_ != nullptr);
      _impl_.default_show_legend_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(_impl_.default_show_title_ != nullptr);
      _impl_.default_show_title_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(_impl_.default_skip_hidden_data_ != nullptr);
      _impl_.default_skip_hidden_data_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(_impl_.default_title_ != nullptr);
      _impl_.default_title_->Clear();
    }
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.default3d_bar_shape_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default3d_scale_undefined_) -
        reinterpret_cast<char*>(&_impl_.default3d_bar_shape_undefined_)) + sizeof(_impl_.default3d_scale_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.line3d_scale_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.line_callout_line_type_undefined_) -
        reinterpret_cast<char*>(&_impl_.line3d_scale_undefined_)) + sizeof(_impl_.line_callout_line_type_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.pie_callout_line_type_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_donut_place_title_at_center_undefined_) -
        reinterpret_cast<char*>(&_impl_.pie_callout_line_type_undefined_)) + sizeof(_impl_.default_donut_place_title_at_center_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.default_inner_radius_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_title_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_inner_radius_undefined_)) + sizeof(_impl_.default_title_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartNonStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSSSOS.SpecIntegerArchive default3d_bar_shape = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_bar_shape(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default3d_bar_shape_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_default3d_bar_shape_undefined(&_impl_._has_bits_);
          _impl_.default3d_bar_shape_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default3d_bevel_edges = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_bevel_edges(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default3d_bevel_edges_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default3d_bevel_edges_undefined(&_impl_._has_bits_);
          _impl_.default3d_bevel_edges_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default3d_inter_set_depth_gap = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_inter_set_depth_gap(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default3d_inter_set_depth_gap_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_default3d_inter_set_depth_gap_undefined(&_impl_._has_bits_);
          _impl_.default3d_inter_set_depth_gap_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive default3d_rotation = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default3d_rotation_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_default3d_rotation_undefined(&_impl_._has_bits_);
          _impl_.default3d_rotation_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive area3d_scale = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_area3d_scale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area3d_scale_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_area3d_scale_undefined(&_impl_._has_bits_);
          _impl_.area3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive bar3d_scale = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar3d_scale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar3d_scale_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_bar3d_scale_undefined(&_impl_._has_bits_);
          _impl_.bar3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive column3d_scale = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_column3d_scale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool column3d_scale_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_column3d_scale_undefined(&_impl_._has_bits_);
          _impl_.column3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive default3d_scale = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_scale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default3d_scale_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default3d_scale_undefined(&_impl_._has_bits_);
          _impl_.default3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive line3d_scale = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_line3d_scale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line3d_scale_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_line3d_scale_undefined(&_impl_._has_bits_);
          _impl_.line3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive pie3d_scale = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie3d_scale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie3d_scale_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_pie3d_scale_undefined(&_impl_._has_bits_);
          _impl_.pie3d_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dVectorArchive default3d_viewport = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_viewport(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default3d_viewport_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_default3d_viewport_undefined(&_impl_._has_bits_);
          _impl_.default3d_viewport_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_callout_line_type = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_callout_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_callout_line_type_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_area_callout_line_type_undefined(&_impl_._has_bits_);
          _impl_.area_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bar_callout_line_type = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_callout_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar_callout_line_type_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_bar_callout_line_type_undefined(&_impl_._has_bits_);
          _impl_.bar_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_callout_line_type = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_callout_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_callout_line_type_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_bubble_callout_line_type_undefined(&_impl_._has_bits_);
          _impl_.bubble_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_callout_line_type = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_callout_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_callout_line_type_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_default_callout_line_type_undefined(&_impl_._has_bits_);
          _impl_.default_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_callout_line_type = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_callout_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_callout_line_type_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_line_callout_line_type_undefined(&_impl_._has_bits_);
          _impl_.line_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive pie_callout_line_type = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_callout_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_callout_line_type_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_pie_callout_line_type_undefined(&_impl_._has_bits_);
          _impl_.pie_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_callout_line_type = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_callout_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_callout_line_type_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_scatter_callout_line_type_undefined(&_impl_._has_bits_);
          _impl_.scatter_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_area_callout_line_type = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_area_callout_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool stacked_area_callout_line_type_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_stacked_area_callout_line_type_undefined(&_impl_._has_bits_);
          _impl_.stacked_area_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_bar_callout_line_type = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_bar_callout_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool stacked_bar_callout_line_type_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_stacked_bar_callout_line_type_undefined(&_impl_._has_bits_);
          _impl_.stacked_bar_callout_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined(&_impl_._has_bits_);
          _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined(&_impl_._has_bits_);
          _impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_data_set_name_location = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_data_set_name_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_data_set_name_location_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_default_data_set_name_location_undefined(&_impl_._has_bits_);
          _impl_.default_data_set_name_location_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_donut_place_title_at_center = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_donut_place_title_at_center(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_donut_place_title_at_center_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default_donut_place_title_at_center_undefined(&_impl_._has_bits_);
          _impl_.default_donut_place_title_at_center_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_inner_radius = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_inner_radius(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_inner_radius_undefined = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_default_inner_radius_undefined(&_impl_._has_bits_);
          _impl_.default_inner_radius_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_multi_data_control_type = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_multi_data_control_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_multi_data_control_type_undefined = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_default_multi_data_control_type_undefined(&_impl_._has_bits_);
          _impl_.default_multi_data_control_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_pie_start_angle = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_pie_start_angle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_pie_start_angle_undefined = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_default_pie_start_angle_undefined(&_impl_._has_bits_);
          _impl_.default_pie_start_angle_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_radar_start_angle = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_radar_start_angle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_radar_start_angle_undefined = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_default_radar_start_angle_undefined(&_impl_._has_bits_);
          _impl_.default_radar_start_angle_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_legend = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_legend(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_legend_undefined = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_default_show_legend_undefined(&_impl_._has_bits_);
          _impl_.default_show_legend_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_title = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_title(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_title_undefined = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_default_show_title_undefined(&_impl_._has_bits_);
          _impl_.default_show_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_skip_hidden_data = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_skip_hidden_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_skip_hidden_data_undefined = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_default_skip_hidden_data_undefined(&_impl_._has_bits_);
          _impl_.default_skip_hidden_data_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive default_title = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_title(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_title_undefined = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_default_title_undefined(&_impl_._has_bits_);
          _impl_.default_title_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChartNonStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default3d_bar_shape = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::default3d_bar_shape(this),
        _Internal::default3d_bar_shape(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default3d_bar_shape_undefined = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_default3d_bar_shape_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default3d_bevel_edges = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::default3d_bevel_edges(this),
        _Internal::default3d_bevel_edges(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default3d_bevel_edges_undefined = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_default3d_bevel_edges_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default3d_inter_set_depth_gap = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::default3d_inter_set_depth_gap(this),
        _Internal::default3d_inter_set_depth_gap(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default3d_inter_set_depth_gap_undefined = 6;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_default3d_inter_set_depth_gap_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive default3d_rotation = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::default3d_rotation(this),
        _Internal::default3d_rotation(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default3d_rotation_undefined = 8;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_default3d_rotation_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive area3d_scale = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::area3d_scale(this),
        _Internal::area3d_scale(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool area3d_scale_undefined = 10;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_area3d_scale_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive bar3d_scale = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::bar3d_scale(this),
        _Internal::bar3d_scale(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool bar3d_scale_undefined = 12;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_bar3d_scale_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive column3d_scale = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::column3d_scale(this),
        _Internal::column3d_scale(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool column3d_scale_undefined = 14;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_column3d_scale_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive default3d_scale = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::default3d_scale(this),
        _Internal::default3d_scale(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default3d_scale_undefined = 16;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_default3d_scale_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive line3d_scale = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::line3d_scale(this),
        _Internal::line3d_scale(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool line3d_scale_undefined = 18;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_line3d_scale_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive pie3d_scale = 19;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::pie3d_scale(this),
        _Internal::pie3d_scale(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool pie3d_scale_undefined = 20;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(20, this->_internal_pie3d_scale_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChart3dVectorArchive default3d_viewport = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::default3d_viewport(this),
        _Internal::default3d_viewport(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default3d_viewport_undefined = 22;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(22, this->_internal_default3d_viewport_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive area_callout_line_type = 23;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::area_callout_line_type(this),
        _Internal::area_callout_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool area_callout_line_type_undefined = 24;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(24, this->_internal_area_callout_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bar_callout_line_type = 25;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::bar_callout_line_type(this),
        _Internal::bar_callout_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool bar_callout_line_type_undefined = 26;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(26, this->_internal_bar_callout_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bubble_callout_line_type = 27;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(27, _Internal::bubble_callout_line_type(this),
        _Internal::bubble_callout_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool bubble_callout_line_type_undefined = 28;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(28, this->_internal_bubble_callout_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_callout_line_type = 29;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(29, _Internal::default_callout_line_type(this),
        _Internal::default_callout_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_callout_line_type_undefined = 30;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(30, this->_internal_default_callout_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive line_callout_line_type = 31;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, _Internal::line_callout_line_type(this),
        _Internal::line_callout_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool line_callout_line_type_undefined = 32;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(32, this->_internal_line_callout_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive pie_callout_line_type = 33;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(33, _Internal::pie_callout_line_type(this),
        _Internal::pie_callout_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool pie_callout_line_type_undefined = 34;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(34, this->_internal_pie_callout_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive scatter_callout_line_type = 35;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, _Internal::scatter_callout_line_type(this),
        _Internal::scatter_callout_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool scatter_callout_line_type_undefined = 36;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(36, this->_internal_scatter_callout_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive stacked_area_callout_line_type = 37;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(37, _Internal::stacked_area_callout_line_type(this),
        _Internal::stacked_area_callout_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool stacked_area_callout_line_type_undefined = 38;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(38, this->_internal_stacked_area_callout_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive stacked_bar_callout_line_type = 39;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(39, _Internal::stacked_bar_callout_line_type(this),
        _Internal::stacked_bar_callout_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool stacked_bar_callout_line_type_undefined = 40;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(40, this->_internal_stacked_bar_callout_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only = 41;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(41, _Internal::default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only(this),
        _Internal::default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined = 42;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(42, this->_internal_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius = 43;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(43, _Internal::default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius(this),
        _Internal::default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined = 44;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(44, this->_internal_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_data_set_name_location = 45;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(45, _Internal::default_data_set_name_location(this),
        _Internal::default_data_set_name_location(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_data_set_name_location_undefined = 46;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(46, this->_internal_default_data_set_name_location_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_donut_place_title_at_center = 47;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(47, _Internal::default_donut_place_title_at_center(this),
        _Internal::default_donut_place_title_at_center(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_donut_place_title_at_center_undefined = 48;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(48, this->_internal_default_donut_place_title_at_center_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_inner_radius = 49;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(49, _Internal::default_inner_radius(this),
        _Internal::default_inner_radius(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_inner_radius_undefined = 50;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(50, this->_internal_default_inner_radius_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_multi_data_control_type = 51;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(51, _Internal::default_multi_data_control_type(this),
        _Internal::default_multi_data_control_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_multi_data_control_type_undefined = 52;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(52, this->_internal_default_multi_data_control_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_pie_start_angle = 53;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(53, _Internal::default_pie_start_angle(this),
        _Internal::default_pie_start_angle(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_pie_start_angle_undefined = 54;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(54, this->_internal_default_pie_start_angle_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_radar_start_angle = 55;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(55, _Internal::default_radar_start_angle(this),
        _Internal::default_radar_start_angle(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_radar_start_angle_undefined = 56;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(56, this->_internal_default_radar_start_angle_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_show_legend = 57;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(57, _Internal::default_show_legend(this),
        _Internal::default_show_legend(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_show_legend_undefined = 58;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(58, this->_internal_default_show_legend_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_show_title = 59;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(59, _Internal::default_show_title(this),
        _Internal::default_show_title(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_show_title_undefined = 60;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(60, this->_internal_default_show_title_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_skip_hidden_data = 61;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(61, _Internal::default_skip_hidden_data(this),
        _Internal::default_skip_hidden_data(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_skip_hidden_data_undefined = 62;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(62, this->_internal_default_skip_hidden_data_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecStringArchive default_title = 63;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(63, _Internal::default_title(this),
        _Internal::default_title(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_title_undefined = 64;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(64, this->_internal_default_title_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  return target;
}

size_t ChartNonStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecIntegerArchive default3d_bar_shape = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default3d_bar_shape_);
    }

    // optional .TSSSOS.SpecBoolArchive default3d_bevel_edges = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default3d_bevel_edges_);
    }

    // optional .TSSSOS.SpecDoubleArchive default3d_inter_set_depth_gap = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default3d_inter_set_depth_gap_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive default3d_rotation = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default3d_rotation_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive area3d_scale = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area3d_scale_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive bar3d_scale = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar3d_scale_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive column3d_scale = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.column3d_scale_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive default3d_scale = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default3d_scale_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSCHSOS.SpecChart3dVectorArchive line3d_scale = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line3d_scale_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive pie3d_scale = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie3d_scale_);
    }

    // optional .TSCHSOS.SpecChart3dVectorArchive default3d_viewport = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default3d_viewport_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_callout_line_type = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive bar_callout_line_type = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive bubble_callout_line_type = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_callout_line_type = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive line_callout_line_type = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_callout_line_type_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecIntegerArchive pie_callout_line_type = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_callout_line_type = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_area_callout_line_type = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stacked_area_callout_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_bar_callout_line_type = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stacked_bar_callout_line_type_);
    }

    // optional .TSSSOS.SpecBoolArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_data_set_name_location = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_data_set_name_location_);
    }

    // optional .TSSSOS.SpecBoolArchive default_donut_place_title_at_center = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_donut_place_title_at_center_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecDoubleArchive default_inner_radius = 49;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_inner_radius_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_multi_data_control_type = 51;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_multi_data_control_type_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_pie_start_angle = 53;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_pie_start_angle_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_radar_start_angle = 55;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_radar_start_angle_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_legend = 57;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_legend_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_title = 59;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_title_);
    }

    // optional .TSSSOS.SpecBoolArchive default_skip_hidden_data = 61;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_skip_hidden_data_);
    }

    // optional .TSSSOS.SpecStringArchive default_title = 63;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_title_);
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool default3d_bar_shape_undefined = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool default3d_bevel_edges_undefined = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool default3d_inter_set_depth_gap_undefined = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool default3d_rotation_undefined = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool area3d_scale_undefined = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool bar3d_scale_undefined = 12;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool column3d_scale_undefined = 14;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool default3d_scale_undefined = 16;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool line3d_scale_undefined = 18;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool pie3d_scale_undefined = 20;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool default3d_viewport_undefined = 22;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool area_callout_line_type_undefined = 24;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool bar_callout_line_type_undefined = 26;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_callout_line_type_undefined = 28;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool default_callout_line_type_undefined = 30;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool line_callout_line_type_undefined = 32;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool pie_callout_line_type_undefined = 34;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_callout_line_type_undefined = 36;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_area_callout_line_type_undefined = 38;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_bar_callout_line_type_undefined = 40;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined = 42;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined = 44;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool default_data_set_name_location_undefined = 46;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool default_donut_place_title_at_center_undefined = 48;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool default_inner_radius_undefined = 50;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_multi_data_control_type_undefined = 52;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_pie_start_angle_undefined = 54;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_radar_start_angle_undefined = 56;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_legend_undefined = 58;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_title_undefined = 60;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_skip_hidden_data_undefined = 62;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_title_undefined = 64;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChartNonStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChartNonStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChartNonStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ChartNonStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChartNonStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ChartNonStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_default3d_bar_shape()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default3d_bar_shape());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_default3d_bevel_edges()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default3d_bevel_edges());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_default3d_inter_set_depth_gap()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default3d_inter_set_depth_gap());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_default3d_rotation()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(
          from._internal_default3d_rotation());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_area3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(
          from._internal_area3d_scale());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_bar3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(
          from._internal_bar3d_scale());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_column3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(
          from._internal_column3d_scale());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_default3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(
          from._internal_default3d_scale());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_line3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(
          from._internal_line3d_scale());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_pie3d_scale()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(
          from._internal_pie3d_scale());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_default3d_viewport()->::TSCHSOS::SpecChart3dVectorArchive::MergeFrom(
          from._internal_default3d_viewport());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_area_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_area_callout_line_type());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_bar_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_bar_callout_line_type());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_bubble_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_bubble_callout_line_type());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_default_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_callout_line_type());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_line_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_line_callout_line_type());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_pie_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_pie_callout_line_type());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_scatter_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_scatter_callout_line_type());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_stacked_area_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_stacked_area_callout_line_type());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_stacked_bar_callout_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_stacked_bar_callout_line_type());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_default_data_set_name_location()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_data_set_name_location());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_default_donut_place_title_at_center()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_donut_place_title_at_center());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_default_inner_radius()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_inner_radius());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_default_multi_data_control_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_multi_data_control_type());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_mutable_default_pie_start_angle()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_pie_start_angle());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_mutable_default_radar_start_angle()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_radar_start_angle());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_mutable_default_show_legend()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_legend());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_mutable_default_show_title()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_title());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_mutable_default_skip_hidden_data()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_skip_hidden_data());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_internal_mutable_default_title()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_default_title());
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.default3d_bar_shape_undefined_ = from._impl_.default3d_bar_shape_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.default3d_bevel_edges_undefined_ = from._impl_.default3d_bevel_edges_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.default3d_inter_set_depth_gap_undefined_ = from._impl_.default3d_inter_set_depth_gap_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.default3d_rotation_undefined_ = from._impl_.default3d_rotation_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.area3d_scale_undefined_ = from._impl_.area3d_scale_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.bar3d_scale_undefined_ = from._impl_.bar3d_scale_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.column3d_scale_undefined_ = from._impl_.column3d_scale_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.default3d_scale_undefined_ = from._impl_.default3d_scale_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.line3d_scale_undefined_ = from._impl_.line3d_scale_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.pie3d_scale_undefined_ = from._impl_.pie3d_scale_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.default3d_viewport_undefined_ = from._impl_.default3d_viewport_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.area_callout_line_type_undefined_ = from._impl_.area_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.bar_callout_line_type_undefined_ = from._impl_.bar_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.bubble_callout_line_type_undefined_ = from._impl_.bubble_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.default_callout_line_type_undefined_ = from._impl_.default_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.line_callout_line_type_undefined_ = from._impl_.line_callout_line_type_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.pie_callout_line_type_undefined_ = from._impl_.pie_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.scatter_callout_line_type_undefined_ = from._impl_.scatter_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.stacked_area_callout_line_type_undefined_ = from._impl_.stacked_area_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.stacked_bar_callout_line_type_undefined_ = from._impl_.stacked_bar_callout_line_type_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_ = from._impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_ = from._impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.default_data_set_name_location_undefined_ = from._impl_.default_data_set_name_location_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.default_donut_place_title_at_center_undefined_ = from._impl_.default_donut_place_title_at_center_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.default_inner_radius_undefined_ = from._impl_.default_inner_radius_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.default_multi_data_control_type_undefined_ = from._impl_.default_multi_data_control_type_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.default_pie_start_angle_undefined_ = from._impl_.default_pie_start_angle_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.default_radar_start_angle_undefined_ = from._impl_.default_radar_start_angle_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.default_show_legend_undefined_ = from._impl_.default_show_legend_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.default_show_title_undefined_ = from._impl_.default_show_title_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.default_skip_hidden_data_undefined_ = from._impl_.default_skip_hidden_data_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.default_title_undefined_ = from._impl_.default_title_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChartNonStylePropertyChangeSetArchive::CopyFrom(const ChartNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartNonStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default3d_bar_shape()) {
    if (!_impl_.default3d_bar_shape_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_bevel_edges()) {
    if (!_impl_.default3d_bevel_edges_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_inter_set_depth_gap()) {
    if (!_impl_.default3d_inter_set_depth_gap_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_rotation()) {
    if (!_impl_.default3d_rotation_->IsInitialized()) return false;
  }
  if (_internal_has_area3d_scale()) {
    if (!_impl_.area3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_bar3d_scale()) {
    if (!_impl_.bar3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_column3d_scale()) {
    if (!_impl_.column3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_scale()) {
    if (!_impl_.default3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_line3d_scale()) {
    if (!_impl_.line3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_pie3d_scale()) {
    if (!_impl_.pie3d_scale_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_viewport()) {
    if (!_impl_.default3d_viewport_->IsInitialized()) return false;
  }
  if (_internal_has_area_callout_line_type()) {
    if (!_impl_.area_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_bar_callout_line_type()) {
    if (!_impl_.bar_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_callout_line_type()) {
    if (!_impl_.bubble_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_callout_line_type()) {
    if (!_impl_.default_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_line_callout_line_type()) {
    if (!_impl_.line_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_pie_callout_line_type()) {
    if (!_impl_.pie_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_callout_line_type()) {
    if (!_impl_.scatter_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_area_callout_line_type()) {
    if (!_impl_.stacked_area_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_bar_callout_line_type()) {
    if (!_impl_.stacked_bar_callout_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only()) {
    if (!_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_->IsInitialized()) return false;
  }
  if (_internal_has_default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius()) {
    if (!_impl_.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_->IsInitialized()) return false;
  }
  if (_internal_has_default_data_set_name_location()) {
    if (!_impl_.default_data_set_name_location_->IsInitialized()) return false;
  }
  if (_internal_has_default_donut_place_title_at_center()) {
    if (!_impl_.default_donut_place_title_at_center_->IsInitialized()) return false;
  }
  if (_internal_has_default_inner_radius()) {
    if (!_impl_.default_inner_radius_->IsInitialized()) return false;
  }
  if (_internal_has_default_multi_data_control_type()) {
    if (!_impl_.default_multi_data_control_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_pie_start_angle()) {
    if (!_impl_.default_pie_start_angle_->IsInitialized()) return false;
  }
  if (_internal_has_default_radar_start_angle()) {
    if (!_impl_.default_radar_start_angle_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_legend()) {
    if (!_impl_.default_show_legend_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_title()) {
    if (!_impl_.default_show_title_->IsInitialized()) return false;
  }
  if (_internal_has_default_skip_hidden_data()) {
    if (!_impl_.default_skip_hidden_data_->IsInitialized()) return false;
  }
  if (_internal_has_default_title()) {
    if (!_impl_.default_title_->IsInitialized()) return false;
  }
  return true;
}

void ChartNonStylePropertyChangeSetArchive::InternalSwap(ChartNonStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartNonStylePropertyChangeSetArchive, _impl_.default_title_undefined_)
      + sizeof(ChartNonStylePropertyChangeSetArchive::_impl_.default_title_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartNonStylePropertyChangeSetArchive, _impl_.default3d_bar_shape_)>(
          reinterpret_cast<char*>(&_impl_.default3d_bar_shape_),
          reinterpret_cast<char*>(&other->_impl_.default3d_bar_shape_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartNonStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[16]);
}

// ===================================================================

class ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartReferenceLineNonStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive& default_custom_value(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_custom_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default_custom_value_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TSSSOS::SpecStringArchive& default_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_label(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default_label_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_label(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_show_label_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_line(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_line(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default_show_line_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_value_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_value_label(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default_show_value_label_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_type(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_type(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_default_type_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
};

const ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_custom_value(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_custom_value_;
}
const ::TSSSOS::SpecStringArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_label_;
}
const ::TSSSOS::SpecBoolArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_show_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_label_;
}
const ::TSSSOS::SpecBoolArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_show_line(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_line_;
}
const ::TSSSOS::SpecBoolArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_show_value_label(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_value_label_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartReferenceLineNonStylePropertyChangeSetArchive::_Internal::default_type(const ChartReferenceLineNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_type_;
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::clear_default_label() {
  if (_impl_.default_label_ != nullptr) _impl_.default_label_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::clear_default_show_label() {
  if (_impl_.default_show_label_ != nullptr) _impl_.default_show_label_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::clear_default_show_line() {
  if (_impl_.default_show_line_ != nullptr) _impl_.default_show_line_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::clear_default_show_value_label() {
  if (_impl_.default_show_value_label_ != nullptr) _impl_.default_show_value_label_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void ChartReferenceLineNonStylePropertyChangeSetArchive::clear_default_type() {
  if (_impl_.default_type_ != nullptr) _impl_.default_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
ChartReferenceLineNonStylePropertyChangeSetArchive::ChartReferenceLineNonStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
}
ChartReferenceLineNonStylePropertyChangeSetArchive::ChartReferenceLineNonStylePropertyChangeSetArchive(const ChartReferenceLineNonStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChartReferenceLineNonStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default_custom_value_){nullptr}
    , decltype(_impl_.default_label_){nullptr}
    , decltype(_impl_.default_show_label_){nullptr}
    , decltype(_impl_.default_show_line_){nullptr}
    , decltype(_impl_.default_show_value_label_){nullptr}
    , decltype(_impl_.default_type_){nullptr}
    , decltype(_impl_.default_custom_value_undefined_){}
    , decltype(_impl_.default_label_undefined_){}
    , decltype(_impl_.default_show_label_undefined_){}
    , decltype(_impl_.default_show_line_undefined_){}
    , decltype(_impl_.default_show_value_label_undefined_){}
    , decltype(_impl_.default_type_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default_custom_value()) {
    _this->_impl_.default_custom_value_ = new ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive(*from._impl_.default_custom_value_);
  }
  if (from._internal_has_default_label()) {
    _this->_impl_.default_label_ = new ::TSSSOS::SpecStringArchive(*from._impl_.default_label_);
  }
  if (from._internal_has_default_show_label()) {
    _this->_impl_.default_show_label_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_label_);
  }
  if (from._internal_has_default_show_line()) {
    _this->_impl_.default_show_line_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_line_);
  }
  if (from._internal_has_default_show_value_label()) {
    _this->_impl_.default_show_value_label_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_value_label_);
  }
  if (from._internal_has_default_type()) {
    _this->_impl_.default_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_type_);
  }
  ::memcpy(&_impl_.default_custom_value_undefined_, &from._impl_.default_custom_value_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.default_type_undefined_) -
    reinterpret_cast<char*>(&_impl_.default_custom_value_undefined_)) + sizeof(_impl_.default_type_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
}

inline void ChartReferenceLineNonStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default_custom_value_){nullptr}
    , decltype(_impl_.default_label_){nullptr}
    , decltype(_impl_.default_show_label_){nullptr}
    , decltype(_impl_.default_show_line_){nullptr}
    , decltype(_impl_.default_show_value_label_){nullptr}
    , decltype(_impl_.default_type_){nullptr}
    , decltype(_impl_.default_custom_value_undefined_){false}
    , decltype(_impl_.default_label_undefined_){false}
    , decltype(_impl_.default_show_label_undefined_){false}
    , decltype(_impl_.default_show_line_undefined_){false}
    , decltype(_impl_.default_show_value_label_undefined_){false}
    , decltype(_impl_.default_type_undefined_){false}
  };
}

ChartReferenceLineNonStylePropertyChangeSetArchive::~ChartReferenceLineNonStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChartReferenceLineNonStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.default_custom_value_;
  if (this != internal_default_instance()) delete _impl_.default_label_;
  if (this != internal_default_instance()) delete _impl_.default_show_label_;
  if (this != internal_default_instance()) delete _impl_.default_show_line_;
  if (this != internal_default_instance()) delete _impl_.default_show_value_label_;
  if (this != internal_default_instance()) delete _impl_.default_type_;
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.default_custom_value_ != nullptr);
      _impl_.default_custom_value_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.default_label_ != nullptr);
      _impl_.default_label_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.default_show_label_ != nullptr);
      _impl_.default_show_label_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.default_show_line_ != nullptr);
      _impl_.default_show_line_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.default_show_value_label_ != nullptr);
      _impl_.default_show_value_label_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.default_type_ != nullptr);
      _impl_.default_type_->Clear();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&_impl_.default_custom_value_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_label_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_custom_value_undefined_)) + sizeof(_impl_.default_label_undefined_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&_impl_.default_show_label_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_type_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_show_label_undefined_)) + sizeof(_impl_.default_type_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartReferenceLineNonStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_custom_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_custom_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_custom_value_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_default_custom_value_undefined(&has_bits);
          _impl_.default_custom_value_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive default_label = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_label_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default_label_undefined(&has_bits);
          _impl_.default_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_label = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_label(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_label_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_default_show_label_undefined(&has_bits);
          _impl_.default_show_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_line = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_line_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_default_show_line_undefined(&has_bits);
          _impl_.default_show_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_value_label = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_value_label(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_value_label_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default_show_value_label_undefined(&has_bits);
          _impl_.default_show_value_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_type = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_type_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_default_type_undefined(&has_bits);
          _impl_.default_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChartReferenceLineNonStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_custom_value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::default_custom_value(this),
        _Internal::default_custom_value(this).GetCachedSize(), target, stream);
  }

  // optional bool default_custom_value_undefined = 2;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_default_custom_value_undefined(), target);
  }

  // optional .TSSSOS.SpecStringArchive default_label = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::default_label(this),
        _Internal::default_label(this).GetCachedSize(), target, stream);
  }

  // optional bool default_label_undefined = 4;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_default_label_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive default_show_label = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::default_show_label(this),
        _Internal::default_show_label(this).GetCachedSize(), target, stream);
  }

  // optional bool default_show_label_undefined = 6;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_default_show_label_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive default_show_line = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::default_show_line(this),
        _Internal::default_show_line(this).GetCachedSize(), target, stream);
  }

  // optional bool default_show_line_undefined = 8;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_default_show_line_undefined(), target);
  }

  // optional .TSSSOS.SpecBoolArchive default_show_value_label = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::default_show_value_label(this),
        _Internal::default_show_value_label(this).GetCachedSize(), target, stream);
  }

  // optional bool default_show_value_label_undefined = 10;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_default_show_value_label_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive default_type = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::default_type(this),
        _Internal::default_type(this).GetCachedSize(), target, stream);
  }

  // optional bool default_type_undefined = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_default_type_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  return target;
}

size_t ChartReferenceLineNonStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSCHSOS.SpecChartsOptionalDoubleArchiveArchive default_custom_value = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_custom_value_);
    }

    // optional .TSSSOS.SpecStringArchive default_label = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_label_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_label = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_label_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_line = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_line_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_value_label = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_value_label_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_type = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_type_);
    }

    // optional bool default_custom_value_undefined = 2;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool default_label_undefined = 4;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional bool default_show_label_undefined = 6;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional bool default_show_line_undefined = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

    // optional bool default_show_value_label_undefined = 10;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool default_type_undefined = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChartReferenceLineNonStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChartReferenceLineNonStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChartReferenceLineNonStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ChartReferenceLineNonStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChartReferenceLineNonStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ChartReferenceLineNonStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_default_custom_value()->::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive::MergeFrom(
          from._internal_default_custom_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_default_label()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_default_label());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_default_show_label()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_label());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_default_show_line()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_line());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_default_show_value_label()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_value_label());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_default_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_type());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.default_custom_value_undefined_ = from._impl_.default_custom_value_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.default_label_undefined_ = from._impl_.default_label_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.default_show_label_undefined_ = from._impl_.default_show_label_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.default_show_line_undefined_ = from._impl_.default_show_line_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.default_show_value_label_undefined_ = from._impl_.default_show_value_label_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.default_type_undefined_ = from._impl_.default_type_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::CopyFrom(const ChartReferenceLineNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartReferenceLineNonStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default_custom_value()) {
    if (!_impl_.default_custom_value_->IsInitialized()) return false;
  }
  if (_internal_has_default_label()) {
    if (!_impl_.default_label_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_label()) {
    if (!_impl_.default_show_label_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_line()) {
    if (!_impl_.default_show_line_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_value_label()) {
    if (!_impl_.default_show_value_label_->IsInitialized()) return false;
  }
  if (_internal_has_default_type()) {
    if (!_impl_.default_type_->IsInitialized()) return false;
  }
  return true;
}

void ChartReferenceLineNonStylePropertyChangeSetArchive::InternalSwap(ChartReferenceLineNonStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_type_undefined_)
      + sizeof(ChartReferenceLineNonStylePropertyChangeSetArchive::_impl_.default_type_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartReferenceLineNonStylePropertyChangeSetArchive, _impl_.default_custom_value_)>(
          reinterpret_cast<char*>(&_impl_.default_custom_value_),
          reinterpret_cast<char*>(&other->_impl_.default_custom_value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartReferenceLineNonStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[17]);
}

// ===================================================================

class ChartReferenceLineStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartReferenceLineStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSSSOS::SpecIntegerArchive& default_label_paragraph_style_index(const ChartReferenceLineStylePropertyChangeSetArchive* msg);
  static void set_has_default_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_shadow(const ChartReferenceLineStylePropertyChangeSetArchive* msg);
  static void set_has_default_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_stroke(const ChartReferenceLineStylePropertyChangeSetArchive* msg);
  static void set_has_default_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_value_label_paragraph_style_index(const ChartReferenceLineStylePropertyChangeSetArchive* msg);
  static void set_has_default_value_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default_value_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::TSSSOS::SpecIntegerArchive&
ChartReferenceLineStylePropertyChangeSetArchive::_Internal::default_label_paragraph_style_index(const ChartReferenceLineStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_label_paragraph_style_index_;
}
const ::TSDSOS::SpecShadowArchive&
ChartReferenceLineStylePropertyChangeSetArchive::_Internal::default_shadow(const ChartReferenceLineStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartReferenceLineStylePropertyChangeSetArchive::_Internal::default_stroke(const ChartReferenceLineStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_stroke_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartReferenceLineStylePropertyChangeSetArchive::_Internal::default_value_label_paragraph_style_index(const ChartReferenceLineStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_value_label_paragraph_style_index_;
}
void ChartReferenceLineStylePropertyChangeSetArchive::clear_default_label_paragraph_style_index() {
  if (_impl_.default_label_paragraph_style_index_ != nullptr) _impl_.default_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ChartReferenceLineStylePropertyChangeSetArchive::clear_default_shadow() {
  if (_impl_.default_shadow_ != nullptr) _impl_.default_shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ChartReferenceLineStylePropertyChangeSetArchive::clear_default_stroke() {
  if (_impl_.default_stroke_ != nullptr) _impl_.default_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ChartReferenceLineStylePropertyChangeSetArchive::clear_default_value_label_paragraph_style_index() {
  if (_impl_.default_value_label_paragraph_style_index_ != nullptr) _impl_.default_value_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
ChartReferenceLineStylePropertyChangeSetArchive::ChartReferenceLineStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
}
ChartReferenceLineStylePropertyChangeSetArchive::ChartReferenceLineStylePropertyChangeSetArchive(const ChartReferenceLineStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChartReferenceLineStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_shadow_){nullptr}
    , decltype(_impl_.default_stroke_){nullptr}
    , decltype(_impl_.default_value_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.default_shadow_undefined_){}
    , decltype(_impl_.default_stroke_undefined_){}
    , decltype(_impl_.default_value_label_paragraph_style_index_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default_label_paragraph_style_index()) {
    _this->_impl_.default_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_label_paragraph_style_index_);
  }
  if (from._internal_has_default_shadow()) {
    _this->_impl_.default_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.default_shadow_);
  }
  if (from._internal_has_default_stroke()) {
    _this->_impl_.default_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.default_stroke_);
  }
  if (from._internal_has_default_value_label_paragraph_style_index()) {
    _this->_impl_.default_value_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_value_label_paragraph_style_index_);
  }
  ::memcpy(&_impl_.default_label_paragraph_style_index_undefined_, &from._impl_.default_label_paragraph_style_index_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.default_value_label_paragraph_style_index_undefined_) -
    reinterpret_cast<char*>(&_impl_.default_label_paragraph_style_index_undefined_)) + sizeof(_impl_.default_value_label_paragraph_style_index_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
}

inline void ChartReferenceLineStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_shadow_){nullptr}
    , decltype(_impl_.default_stroke_){nullptr}
    , decltype(_impl_.default_value_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.default_shadow_undefined_){false}
    , decltype(_impl_.default_stroke_undefined_){false}
    , decltype(_impl_.default_value_label_paragraph_style_index_undefined_){false}
  };
}

ChartReferenceLineStylePropertyChangeSetArchive::~ChartReferenceLineStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChartReferenceLineStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.default_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.default_shadow_;
  if (this != internal_default_instance()) delete _impl_.default_stroke_;
  if (this != internal_default_instance()) delete _impl_.default_value_label_paragraph_style_index_;
}

void ChartReferenceLineStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChartReferenceLineStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.default_label_paragraph_style_index_ != nullptr);
      _impl_.default_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.default_shadow_ != nullptr);
      _impl_.default_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.default_stroke_ != nullptr);
      _impl_.default_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.default_value_label_paragraph_style_index_ != nullptr);
      _impl_.default_value_label_paragraph_style_index_->Clear();
    }
  }
  ::memset(&_impl_.default_label_paragraph_style_index_undefined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.default_value_label_paragraph_style_index_undefined_) -
      reinterpret_cast<char*>(&_impl_.default_label_paragraph_style_index_undefined_)) + sizeof(_impl_.default_value_label_paragraph_style_index_undefined_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartReferenceLineStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_label_paragraph_style_index_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_default_label_paragraph_style_index_undefined(&has_bits);
          _impl_.default_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_shadow = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_shadow_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default_shadow_undefined(&has_bits);
          _impl_.default_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_stroke = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_stroke_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_default_stroke_undefined(&has_bits);
          _impl_.default_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_value_label_paragraph_style_index = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_value_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_value_label_paragraph_style_index_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_default_value_label_paragraph_style_index_undefined(&has_bits);
          _impl_.default_value_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChartReferenceLineStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::default_label_paragraph_style_index(this),
        _Internal::default_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  // optional bool default_label_paragraph_style_index_undefined = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_default_label_paragraph_style_index_undefined(), target);
  }

  // optional .TSDSOS.SpecShadowArchive default_shadow = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::default_shadow(this),
        _Internal::default_shadow(this).GetCachedSize(), target, stream);
  }

  // optional bool default_shadow_undefined = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_default_shadow_undefined(), target);
  }

  // optional .TSDSOS.SpecStrokeArchive default_stroke = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::default_stroke(this),
        _Internal::default_stroke(this).GetCachedSize(), target, stream);
  }

  // optional bool default_stroke_undefined = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_default_stroke_undefined(), target);
  }

  // optional .TSSSOS.SpecIntegerArchive default_value_label_paragraph_style_index = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::default_value_label_paragraph_style_index(this),
        _Internal::default_value_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  // optional bool default_value_label_paragraph_style_index_undefined = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_default_value_label_paragraph_style_index_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  return target;
}

size_t ChartReferenceLineStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_label_paragraph_style_index_);
    }

    // optional .TSDSOS.SpecShadowArchive default_shadow = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive default_stroke = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_stroke_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_value_label_paragraph_style_index = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_value_label_paragraph_style_index_);
    }

    // optional bool default_label_paragraph_style_index_undefined = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool default_shadow_undefined = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool default_stroke_undefined = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool default_value_label_paragraph_style_index_undefined = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChartReferenceLineStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChartReferenceLineStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChartReferenceLineStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ChartReferenceLineStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChartReferenceLineStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ChartReferenceLineStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_default_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_default_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_default_shadow());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_default_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_default_stroke());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_default_value_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_value_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.default_label_paragraph_style_index_undefined_ = from._impl_.default_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.default_shadow_undefined_ = from._impl_.default_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.default_stroke_undefined_ = from._impl_.default_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.default_value_label_paragraph_style_index_undefined_ = from._impl_.default_value_label_paragraph_style_index_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChartReferenceLineStylePropertyChangeSetArchive::CopyFrom(const ChartReferenceLineStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartReferenceLineStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default_label_paragraph_style_index()) {
    if (!_impl_.default_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_shadow()) {
    if (!_impl_.default_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_stroke()) {
    if (!_impl_.default_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_value_label_paragraph_style_index()) {
    if (!_impl_.default_value_label_paragraph_style_index_->IsInitialized()) return false;
  }
  return true;
}

void ChartReferenceLineStylePropertyChangeSetArchive::InternalSwap(ChartReferenceLineStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartReferenceLineStylePropertyChangeSetArchive, _impl_.default_value_label_paragraph_style_index_undefined_)
      + sizeof(ChartReferenceLineStylePropertyChangeSetArchive::_impl_.default_value_label_paragraph_style_index_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartReferenceLineStylePropertyChangeSetArchive, _impl_.default_label_paragraph_style_index_)>(
          reinterpret_cast<char*>(&_impl_.default_label_paragraph_style_index_),
          reinterpret_cast<char*>(&other->_impl_.default_label_paragraph_style_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartReferenceLineStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[18]);
}

// ===================================================================

class ChartSeriesNonStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartSeriesNonStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSCHSOS::SpecFormatObjectArchive& default10_date_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default10_date_format(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default10_date_format_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 4u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& default10_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default10_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default10_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 8u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& pie10_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie10_number_format(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_pie10_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 16u;
  }
  static const ::TSSSOS::SpecDoubleArchive& pie23_label_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie23_label_explosion(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_pie23_label_explosion_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 32u;
  }
  static const ::TSSSOS::SpecDoubleArchive& bubble_adjustment_scale(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_adjustment_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_bubble_adjustment_scale_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 64u;
  }
  static const ::TSCHSOS::SpecFormatObjectArchive& default_date_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_date_format(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_default_date_format_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 128u;
  }
  static const ::TSCHSOS::SpecFormatObjectArchive& default_duration_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_duration_format(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_default_duration_format_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 256u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_area_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 512u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bar_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bar_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_bar_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_bubble_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 2048u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_default_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 4096u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_line_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 8192u;
  }
  static const ::TSSSOS::SpecIntegerArchive& pie_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_pie_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 16384u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_scatter_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 32768u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_area_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_area_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_stacked_area_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 65536u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_bar_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_bar_enable_callout_line(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_stacked_bar_enable_callout_line_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 131072u;
  }
  static const ::TSCHSOS::SpecChartErrorBarCustomDataArchive& default_error_bar_custom_negative_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_custom_negative_data(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_default_error_bar_custom_negative_data_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 262144u;
  }
  static const ::TSCHSOS::SpecChartErrorBarCustomDataArchive& default_error_bar_custom_negative_data_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_custom_negative_data_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_default_error_bar_custom_negative_data_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 524288u;
  }
  static const ::TSCHSOS::SpecChartErrorBarCustomDataArchive& default_error_bar_custom_positive_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_custom_positive_data(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_default_error_bar_custom_positive_data_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 1048576u;
  }
  static const ::TSCHSOS::SpecChartErrorBarCustomDataArchive& default_error_bar_custom_positive_data_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_custom_positive_data_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_default_error_bar_custom_positive_data_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 2097152u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_fixed_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_fixed_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_default_error_bar_fixed_value_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 4194304u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_fixed_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_fixed_value_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_default_error_bar_fixed_value_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 8388608u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_percent_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_percent_value(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_default_error_bar_percent_value_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 16777216u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_percent_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_percent_value_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_default_error_bar_percent_value_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 33554432u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_setting(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_setting(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_default_error_bar_setting_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 67108864u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_setting_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_setting_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_default_error_bar_setting_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 134217728u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_std_dev_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_std_dev_value(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_default_error_bar_std_dev_value_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 268435456u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_error_bar_std_dev_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_std_dev_value_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_default_error_bar_std_dev_value_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 536870912u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_type(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_default_error_bar_type_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 1073741824u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_type_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_type_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_default_error_bar_type_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 2147483648u;
  }
  static const ::TSSSOS::SpecDoubleArchive& pie_label_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_label_explosion(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_pie_label_explosion_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_line_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_bubble_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_line_type(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_line_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_line_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_line_type(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_mixed_line_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8u;
  }
  static const ::TSSSOS::SpecIntegerArchive& radar_area_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_line_type(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_radar_area_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_line_type(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_scatter_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 32u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& default_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_number_format(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static void set_has_default_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 64u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& pie_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_number_format(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static void set_has_pie_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 128u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_number_format_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_number_format_type(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static void set_has_default_number_format_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 256u;
  }
  static const ::TSSSOS::SpecIntegerArchive& pie_number_format_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_number_format_type(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static void set_has_pie_number_format_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 512u;
  }
  static const ::TSCHSOS::SpecNumberFormatArchive& stacked_percent_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_percent_number_format(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static void set_has_stacked_percent_number_format_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_series_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_series_type(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static void set_has_default_series_type_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2048u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_error_bar(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_error_bar(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static void set_has_default_show_error_bar_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4096u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_error_bar_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_error_bar_scatter_x(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static void set_has_default_show_error_bar_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8192u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_show_labels_in_front(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_show_labels_in_front(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static void set_has_bubble_show_labels_in_front_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16384u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_labels_in_front(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_labels_in_front(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static void set_has_default_show_labels_in_front_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 32768u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_show_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_show_line(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static void set_has_scatter_show_line_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 65536u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_show_negative_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_show_negative_data(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static void set_has_bubble_show_negative_data_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 131072u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_show_series_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static void set_has_bubble_show_series_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 262144u;
  }
  static const ::TSSSOS::SpecBoolArchive& pie_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_show_series_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static void set_has_pie_show_series_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 524288u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_show_series_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static void set_has_scatter_show_series_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1048576u;
  }
  static const ::TSSSOS::SpecBoolArchive& area_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_show_symbol(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static void set_has_area_show_symbol_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2097152u;
  }
  static const ::TSSSOS::SpecBoolArchive& line_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_show_symbol(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static void set_has_line_show_symbol_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4194304u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_area_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_show_symbol(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static void set_has_mixed_area_show_symbol_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8388608u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_line_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_show_symbol(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static void set_has_mixed_line_show_symbol_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16777216u;
  }
  static const ::TSSSOS::SpecBoolArchive& radar_area_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_show_symbol(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
  static void set_has_radar_area_show_symbol_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 33554432u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_show_symbol(HasBits* has_bits) {
    (*has_bits)[1] |= 16777216u;
  }
  static void set_has_scatter_show_symbol_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 67108864u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_trend_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_trend_line(HasBits* has_bits) {
    (*has_bits)[1] |= 33554432u;
  }
  static void set_has_default_show_trend_line_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 134217728u;
  }
  static const ::TSSSOS::SpecBoolArchive& area_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 67108864u;
  }
  static void set_has_area_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 268435456u;
  }
  static const ::TSSSOS::SpecBoolArchive& bar_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bar_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 134217728u;
  }
  static void set_has_bar_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 536870912u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 268435456u;
  }
  static void set_has_bubble_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1073741824u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 536870912u;
  }
  static void set_has_default_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2147483648u;
  }
  static const ::TSSSOS::SpecBoolArchive& line_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 1073741824u;
  }
  static void set_has_line_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_show_value_labels(HasBits* has_bits) {
    (*has_bits)[1] |= 2147483648u;
  }
  static void set_has_mixed_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2u;
  }
  static const ::TSSSOS::SpecBoolArchive& pie_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_show_value_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 1u;
  }
  static void set_has_pie_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4u;
  }
  static const ::TSSSOS::SpecBoolArchive& radar_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_radar_show_value_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 2u;
  }
  static void set_has_radar_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_show_value_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 4u;
  }
  static void set_has_scatter_show_value_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_size_dimension(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_size_dimension(HasBits* has_bits) {
    (*has_bits)[2] |= 8u;
  }
  static void set_has_bubble_size_dimension_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 32u;
  }
  static const ::TSSSOS::SpecBoolArchive& area_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 16u;
  }
  static void set_has_area_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 64u;
  }
  static const ::TSSSOS::SpecBoolArchive& bar_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bar_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 32u;
  }
  static void set_has_bar_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 128u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 64u;
  }
  static void set_has_bubble_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 128u;
  }
  static void set_has_default_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 512u;
  }
  static const ::TSSSOS::SpecBoolArchive& line_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 256u;
  }
  static void set_has_line_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1024u;
  }
  static const ::TSSSOS::SpecBoolArchive& pie_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 512u;
  }
  static void set_has_pie_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2048u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 1024u;
  }
  static void set_has_scatter_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4096u;
  }
  static const ::TSSSOS::SpecBoolArchive& stacked_area_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_area_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 2048u;
  }
  static void set_has_stacked_area_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8192u;
  }
  static const ::TSSSOS::SpecBoolArchive& stacked_bar_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_bar_stack_labels(HasBits* has_bits) {
    (*has_bits)[2] |= 4096u;
  }
  static void set_has_stacked_bar_stack_labels_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16384u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_type(HasBits* has_bits) {
    (*has_bits)[2] |= 8192u;
  }
  static void set_has_area_symbol_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 32768u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_type(HasBits* has_bits) {
    (*has_bits)[2] |= 16384u;
  }
  static void set_has_line_symbol_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 65536u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_area_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_type(HasBits* has_bits) {
    (*has_bits)[2] |= 32768u;
  }
  static void set_has_mixed_area_symbol_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 131072u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_line_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_type(HasBits* has_bits) {
    (*has_bits)[2] |= 65536u;
  }
  static void set_has_mixed_line_symbol_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 262144u;
  }
  static const ::TSSSOS::SpecIntegerArchive& radar_area_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_symbol_type(HasBits* has_bits) {
    (*has_bits)[2] |= 131072u;
  }
  static void set_has_radar_area_symbol_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 524288u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_symbol_type(HasBits* has_bits) {
    (*has_bits)[2] |= 262144u;
  }
  static void set_has_scatter_symbol_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1048576u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trend_line_equation_offset_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_equation_offset_x(HasBits* has_bits) {
    (*has_bits)[2] |= 524288u;
  }
  static void set_has_default_trend_line_equation_offset_x_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2097152u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trend_line_equation_offset_y(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_equation_offset_y(HasBits* has_bits) {
    (*has_bits)[2] |= 1048576u;
  }
  static void set_has_default_trend_line_equation_offset_y_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4194304u;
  }
  static const ::TSSSOS::SpecStringArchive& default_trend_line_label_string(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_label_string(HasBits* has_bits) {
    (*has_bits)[2] |= 2097152u;
  }
  static void set_has_default_trend_line_label_string_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8388608u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_trend_line_order(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_order(HasBits* has_bits) {
    (*has_bits)[2] |= 4194304u;
  }
  static void set_has_default_trend_line_order_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16777216u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_trend_line_period(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_period(HasBits* has_bits) {
    (*has_bits)[2] |= 8388608u;
  }
  static void set_has_default_trend_line_period_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 33554432u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trend_line_r_squared_offset_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_r_squared_offset_x(HasBits* has_bits) {
    (*has_bits)[2] |= 16777216u;
  }
  static void set_has_default_trend_line_r_squared_offset_x_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 67108864u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trend_line_r_squared_offset_y(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_r_squared_offset_y(HasBits* has_bits) {
    (*has_bits)[2] |= 33554432u;
  }
  static void set_has_default_trend_line_r_squared_offset_y_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 134217728u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_trend_line_show_equation(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_show_equation(HasBits* has_bits) {
    (*has_bits)[2] |= 67108864u;
  }
  static void set_has_default_trend_line_show_equation_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 268435456u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_trend_line_show_label(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_show_label(HasBits* has_bits) {
    (*has_bits)[2] |= 134217728u;
  }
  static void set_has_default_trend_line_show_label_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 536870912u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_trend_line_show_r2_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_show_r2_value(HasBits* has_bits) {
    (*has_bits)[2] |= 268435456u;
  }
  static void set_has_default_trend_line_show_r2_value_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1073741824u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_trend_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_type(HasBits* has_bits) {
    (*has_bits)[2] |= 536870912u;
  }
  static void set_has_default_trend_line_type_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2147483648u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_value_labels_axis(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_value_labels_axis(HasBits* has_bits) {
    (*has_bits)[2] |= 1073741824u;
  }
  static void set_has_bubble_value_labels_axis_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 1u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_value_labels_axis(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_value_labels_axis(HasBits* has_bits) {
    (*has_bits)[2] |= 2147483648u;
  }
  static void set_has_scatter_value_labels_axis_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 2u;
  }
  static const ::TSSSOS::SpecDoubleArchive& pie_wedge_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_pie_wedge_explosion(HasBits* has_bits) {
    (*has_bits)[3] |= 1u;
  }
  static void set_has_pie_wedge_explosion_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 4u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_y_axis_ordinal(const ChartSeriesNonStylePropertyChangeSetArchive* msg);
  static void set_has_default_y_axis_ordinal(HasBits* has_bits) {
    (*has_bits)[3] |= 2u;
  }
  static void set_has_default_y_axis_ordinal_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 8u;
  }
};

const ::TSCHSOS::SpecFormatObjectArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default10_date_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default10_date_format_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default10_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default10_number_format_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie10_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie10_number_format_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie23_label_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie23_label_explosion_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_adjustment_scale(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_adjustment_scale_;
}
const ::TSCHSOS::SpecFormatObjectArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_date_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_date_format_;
}
const ::TSCHSOS::SpecFormatObjectArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_duration_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_duration_format_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::area_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bar_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::stacked_area_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.stacked_area_enable_callout_line_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::stacked_bar_enable_callout_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.stacked_bar_enable_callout_line_;
}
const ::TSCHSOS::SpecChartErrorBarCustomDataArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_custom_negative_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_custom_negative_data_;
}
const ::TSCHSOS::SpecChartErrorBarCustomDataArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_custom_negative_data_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_custom_negative_data_scatter_x_;
}
const ::TSCHSOS::SpecChartErrorBarCustomDataArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_custom_positive_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_custom_positive_data_;
}
const ::TSCHSOS::SpecChartErrorBarCustomDataArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_custom_positive_data_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_custom_positive_data_scatter_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_fixed_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_fixed_value_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_fixed_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_fixed_value_scatter_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_percent_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_percent_value_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_percent_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_percent_value_scatter_x_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_setting(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_setting_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_setting_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_setting_scatter_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_std_dev_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_std_dev_value_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_std_dev_value_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_std_dev_value_scatter_x_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_error_bar_type_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_type_scatter_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_label_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_label_explosion_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_line_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_line_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::radar_area_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_line_type_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_number_format_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_number_format_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_number_format_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_number_format_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_number_format_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_number_format_type_;
}
const ::TSCHSOS::SpecNumberFormatArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::stacked_percent_number_format(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.stacked_percent_number_format_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_series_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_series_type_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_show_error_bar(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_error_bar_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_show_error_bar_scatter_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_error_bar_scatter_x_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_show_labels_in_front(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_show_labels_in_front_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_show_labels_in_front(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_labels_in_front_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_show_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_show_line_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_show_negative_data(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_show_negative_data_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_show_series_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_show_series_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_show_series_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_show_series_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::area_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_show_symbol_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_show_symbol_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_area_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_area_show_symbol_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_line_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_line_show_symbol_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::radar_area_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_show_symbol_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_show_symbol(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_show_symbol_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_show_trend_line(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_trend_line_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::area_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bar_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::radar_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_show_value_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_show_value_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_show_value_labels_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_size_dimension(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_size_dimension_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::area_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bar_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::stacked_area_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.stacked_area_stack_labels_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::stacked_bar_stack_labels(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.stacked_bar_stack_labels_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::area_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_symbol_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::line_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_symbol_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_area_symbol_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_line_symbol_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::radar_area_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_symbol_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_symbol_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_symbol_type_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_equation_offset_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_equation_offset_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_equation_offset_y(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_equation_offset_y_;
}
const ::TSSSOS::SpecStringArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_label_string(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_label_string_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_order(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_order_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_period(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_period_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_r_squared_offset_x(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_r_squared_offset_x_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_r_squared_offset_y(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_r_squared_offset_y_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_show_equation(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_show_equation_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_show_label(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_show_label_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_show_r2_value(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_show_r2_value_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_trend_line_type(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_type_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::bubble_value_labels_axis(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_value_labels_axis_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::scatter_value_labels_axis(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_value_labels_axis_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::pie_wedge_explosion(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_wedge_explosion_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesNonStylePropertyChangeSetArchive::_Internal::default_y_axis_ordinal(const ChartSeriesNonStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_y_axis_ordinal_;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie23_label_explosion() {
  if (_impl_.pie23_label_explosion_ != nullptr) _impl_.pie23_label_explosion_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_adjustment_scale() {
  if (_impl_.bubble_adjustment_scale_ != nullptr) _impl_.bubble_adjustment_scale_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_area_enable_callout_line() {
  if (_impl_.area_enable_callout_line_ != nullptr) _impl_.area_enable_callout_line_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bar_enable_callout_line() {
  if (_impl_.bar_enable_callout_line_ != nullptr) _impl_.bar_enable_callout_line_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_enable_callout_line() {
  if (_impl_.bubble_enable_callout_line_ != nullptr) _impl_.bubble_enable_callout_line_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_enable_callout_line() {
  if (_impl_.default_enable_callout_line_ != nullptr) _impl_.default_enable_callout_line_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_enable_callout_line() {
  if (_impl_.line_enable_callout_line_ != nullptr) _impl_.line_enable_callout_line_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_enable_callout_line() {
  if (_impl_.pie_enable_callout_line_ != nullptr) _impl_.pie_enable_callout_line_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_enable_callout_line() {
  if (_impl_.scatter_enable_callout_line_ != nullptr) _impl_.scatter_enable_callout_line_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_stacked_area_enable_callout_line() {
  if (_impl_.stacked_area_enable_callout_line_ != nullptr) _impl_.stacked_area_enable_callout_line_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_stacked_bar_enable_callout_line() {
  if (_impl_.stacked_bar_enable_callout_line_ != nullptr) _impl_.stacked_bar_enable_callout_line_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_fixed_value() {
  if (_impl_.default_error_bar_fixed_value_ != nullptr) _impl_.default_error_bar_fixed_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_fixed_value_scatter_x() {
  if (_impl_.default_error_bar_fixed_value_scatter_x_ != nullptr) _impl_.default_error_bar_fixed_value_scatter_x_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_percent_value() {
  if (_impl_.default_error_bar_percent_value_ != nullptr) _impl_.default_error_bar_percent_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_percent_value_scatter_x() {
  if (_impl_.default_error_bar_percent_value_scatter_x_ != nullptr) _impl_.default_error_bar_percent_value_scatter_x_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_setting() {
  if (_impl_.default_error_bar_setting_ != nullptr) _impl_.default_error_bar_setting_->Clear();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_setting_scatter_x() {
  if (_impl_.default_error_bar_setting_scatter_x_ != nullptr) _impl_.default_error_bar_setting_scatter_x_->Clear();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_std_dev_value() {
  if (_impl_.default_error_bar_std_dev_value_ != nullptr) _impl_.default_error_bar_std_dev_value_->Clear();
  _impl_._has_bits_[0] &= ~0x04000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_std_dev_value_scatter_x() {
  if (_impl_.default_error_bar_std_dev_value_scatter_x_ != nullptr) _impl_.default_error_bar_std_dev_value_scatter_x_->Clear();
  _impl_._has_bits_[0] &= ~0x08000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_type() {
  if (_impl_.default_error_bar_type_ != nullptr) _impl_.default_error_bar_type_->Clear();
  _impl_._has_bits_[0] &= ~0x10000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_error_bar_type_scatter_x() {
  if (_impl_.default_error_bar_type_scatter_x_ != nullptr) _impl_.default_error_bar_type_scatter_x_->Clear();
  _impl_._has_bits_[0] &= ~0x20000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_label_explosion() {
  if (_impl_.pie_label_explosion_ != nullptr) _impl_.pie_label_explosion_->Clear();
  _impl_._has_bits_[0] &= ~0x40000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_line_type() {
  if (_impl_.bubble_line_type_ != nullptr) _impl_.bubble_line_type_->Clear();
  _impl_._has_bits_[0] &= ~0x80000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_line_type() {
  if (_impl_.line_line_type_ != nullptr) _impl_.line_line_type_->Clear();
  _impl_._has_bits_[1] &= ~0x00000001u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_line_line_type() {
  if (_impl_.mixed_line_line_type_ != nullptr) _impl_.mixed_line_line_type_->Clear();
  _impl_._has_bits_[1] &= ~0x00000002u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_radar_area_line_type() {
  if (_impl_.radar_area_line_type_ != nullptr) _impl_.radar_area_line_type_->Clear();
  _impl_._has_bits_[1] &= ~0x00000004u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_line_type() {
  if (_impl_.scatter_line_type_ != nullptr) _impl_.scatter_line_type_->Clear();
  _impl_._has_bits_[1] &= ~0x00000008u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_number_format_type() {
  if (_impl_.default_number_format_type_ != nullptr) _impl_.default_number_format_type_->Clear();
  _impl_._has_bits_[1] &= ~0x00000040u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_number_format_type() {
  if (_impl_.pie_number_format_type_ != nullptr) _impl_.pie_number_format_type_->Clear();
  _impl_._has_bits_[1] &= ~0x00000080u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_series_type() {
  if (_impl_.default_series_type_ != nullptr) _impl_.default_series_type_->Clear();
  _impl_._has_bits_[1] &= ~0x00000200u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_show_error_bar() {
  if (_impl_.default_show_error_bar_ != nullptr) _impl_.default_show_error_bar_->Clear();
  _impl_._has_bits_[1] &= ~0x00000400u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_show_error_bar_scatter_x() {
  if (_impl_.default_show_error_bar_scatter_x_ != nullptr) _impl_.default_show_error_bar_scatter_x_->Clear();
  _impl_._has_bits_[1] &= ~0x00000800u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_show_labels_in_front() {
  if (_impl_.bubble_show_labels_in_front_ != nullptr) _impl_.bubble_show_labels_in_front_->Clear();
  _impl_._has_bits_[1] &= ~0x00001000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_show_labels_in_front() {
  if (_impl_.default_show_labels_in_front_ != nullptr) _impl_.default_show_labels_in_front_->Clear();
  _impl_._has_bits_[1] &= ~0x00002000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_show_line() {
  if (_impl_.scatter_show_line_ != nullptr) _impl_.scatter_show_line_->Clear();
  _impl_._has_bits_[1] &= ~0x00004000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_show_negative_data() {
  if (_impl_.bubble_show_negative_data_ != nullptr) _impl_.bubble_show_negative_data_->Clear();
  _impl_._has_bits_[1] &= ~0x00008000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_show_series_labels() {
  if (_impl_.bubble_show_series_labels_ != nullptr) _impl_.bubble_show_series_labels_->Clear();
  _impl_._has_bits_[1] &= ~0x00010000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_show_series_labels() {
  if (_impl_.pie_show_series_labels_ != nullptr) _impl_.pie_show_series_labels_->Clear();
  _impl_._has_bits_[1] &= ~0x00020000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_show_series_labels() {
  if (_impl_.scatter_show_series_labels_ != nullptr) _impl_.scatter_show_series_labels_->Clear();
  _impl_._has_bits_[1] &= ~0x00040000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_area_show_symbol() {
  if (_impl_.area_show_symbol_ != nullptr) _impl_.area_show_symbol_->Clear();
  _impl_._has_bits_[1] &= ~0x00080000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_show_symbol() {
  if (_impl_.line_show_symbol_ != nullptr) _impl_.line_show_symbol_->Clear();
  _impl_._has_bits_[1] &= ~0x00100000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_area_show_symbol() {
  if (_impl_.mixed_area_show_symbol_ != nullptr) _impl_.mixed_area_show_symbol_->Clear();
  _impl_._has_bits_[1] &= ~0x00200000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_line_show_symbol() {
  if (_impl_.mixed_line_show_symbol_ != nullptr) _impl_.mixed_line_show_symbol_->Clear();
  _impl_._has_bits_[1] &= ~0x00400000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_radar_area_show_symbol() {
  if (_impl_.radar_area_show_symbol_ != nullptr) _impl_.radar_area_show_symbol_->Clear();
  _impl_._has_bits_[1] &= ~0x00800000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_show_symbol() {
  if (_impl_.scatter_show_symbol_ != nullptr) _impl_.scatter_show_symbol_->Clear();
  _impl_._has_bits_[1] &= ~0x01000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_show_trend_line() {
  if (_impl_.default_show_trend_line_ != nullptr) _impl_.default_show_trend_line_->Clear();
  _impl_._has_bits_[1] &= ~0x02000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_area_show_value_labels() {
  if (_impl_.area_show_value_labels_ != nullptr) _impl_.area_show_value_labels_->Clear();
  _impl_._has_bits_[1] &= ~0x04000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bar_show_value_labels() {
  if (_impl_.bar_show_value_labels_ != nullptr) _impl_.bar_show_value_labels_->Clear();
  _impl_._has_bits_[1] &= ~0x08000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_show_value_labels() {
  if (_impl_.bubble_show_value_labels_ != nullptr) _impl_.bubble_show_value_labels_->Clear();
  _impl_._has_bits_[1] &= ~0x10000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_show_value_labels() {
  if (_impl_.default_show_value_labels_ != nullptr) _impl_.default_show_value_labels_->Clear();
  _impl_._has_bits_[1] &= ~0x20000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_show_value_labels() {
  if (_impl_.line_show_value_labels_ != nullptr) _impl_.line_show_value_labels_->Clear();
  _impl_._has_bits_[1] &= ~0x40000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_show_value_labels() {
  if (_impl_.mixed_show_value_labels_ != nullptr) _impl_.mixed_show_value_labels_->Clear();
  _impl_._has_bits_[1] &= ~0x80000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_show_value_labels() {
  if (_impl_.pie_show_value_labels_ != nullptr) _impl_.pie_show_value_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00000001u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_radar_show_value_labels() {
  if (_impl_.radar_show_value_labels_ != nullptr) _impl_.radar_show_value_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00000002u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_show_value_labels() {
  if (_impl_.scatter_show_value_labels_ != nullptr) _impl_.scatter_show_value_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00000004u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_size_dimension() {
  if (_impl_.bubble_size_dimension_ != nullptr) _impl_.bubble_size_dimension_->Clear();
  _impl_._has_bits_[2] &= ~0x00000008u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_area_stack_labels() {
  if (_impl_.area_stack_labels_ != nullptr) _impl_.area_stack_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00000010u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bar_stack_labels() {
  if (_impl_.bar_stack_labels_ != nullptr) _impl_.bar_stack_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00000020u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_stack_labels() {
  if (_impl_.bubble_stack_labels_ != nullptr) _impl_.bubble_stack_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00000040u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_stack_labels() {
  if (_impl_.default_stack_labels_ != nullptr) _impl_.default_stack_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00000080u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_stack_labels() {
  if (_impl_.line_stack_labels_ != nullptr) _impl_.line_stack_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00000100u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_stack_labels() {
  if (_impl_.pie_stack_labels_ != nullptr) _impl_.pie_stack_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00000200u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_stack_labels() {
  if (_impl_.scatter_stack_labels_ != nullptr) _impl_.scatter_stack_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00000400u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_stacked_area_stack_labels() {
  if (_impl_.stacked_area_stack_labels_ != nullptr) _impl_.stacked_area_stack_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00000800u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_stacked_bar_stack_labels() {
  if (_impl_.stacked_bar_stack_labels_ != nullptr) _impl_.stacked_bar_stack_labels_->Clear();
  _impl_._has_bits_[2] &= ~0x00001000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_area_symbol_type() {
  if (_impl_.area_symbol_type_ != nullptr) _impl_.area_symbol_type_->Clear();
  _impl_._has_bits_[2] &= ~0x00002000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_line_symbol_type() {
  if (_impl_.line_symbol_type_ != nullptr) _impl_.line_symbol_type_->Clear();
  _impl_._has_bits_[2] &= ~0x00004000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_area_symbol_type() {
  if (_impl_.mixed_area_symbol_type_ != nullptr) _impl_.mixed_area_symbol_type_->Clear();
  _impl_._has_bits_[2] &= ~0x00008000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_mixed_line_symbol_type() {
  if (_impl_.mixed_line_symbol_type_ != nullptr) _impl_.mixed_line_symbol_type_->Clear();
  _impl_._has_bits_[2] &= ~0x00010000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_radar_area_symbol_type() {
  if (_impl_.radar_area_symbol_type_ != nullptr) _impl_.radar_area_symbol_type_->Clear();
  _impl_._has_bits_[2] &= ~0x00020000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_symbol_type() {
  if (_impl_.scatter_symbol_type_ != nullptr) _impl_.scatter_symbol_type_->Clear();
  _impl_._has_bits_[2] &= ~0x00040000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_equation_offset_x() {
  if (_impl_.default_trend_line_equation_offset_x_ != nullptr) _impl_.default_trend_line_equation_offset_x_->Clear();
  _impl_._has_bits_[2] &= ~0x00080000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_equation_offset_y() {
  if (_impl_.default_trend_line_equation_offset_y_ != nullptr) _impl_.default_trend_line_equation_offset_y_->Clear();
  _impl_._has_bits_[2] &= ~0x00100000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_label_string() {
  if (_impl_.default_trend_line_label_string_ != nullptr) _impl_.default_trend_line_label_string_->Clear();
  _impl_._has_bits_[2] &= ~0x00200000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_order() {
  if (_impl_.default_trend_line_order_ != nullptr) _impl_.default_trend_line_order_->Clear();
  _impl_._has_bits_[2] &= ~0x00400000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_period() {
  if (_impl_.default_trend_line_period_ != nullptr) _impl_.default_trend_line_period_->Clear();
  _impl_._has_bits_[2] &= ~0x00800000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_r_squared_offset_x() {
  if (_impl_.default_trend_line_r_squared_offset_x_ != nullptr) _impl_.default_trend_line_r_squared_offset_x_->Clear();
  _impl_._has_bits_[2] &= ~0x01000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_r_squared_offset_y() {
  if (_impl_.default_trend_line_r_squared_offset_y_ != nullptr) _impl_.default_trend_line_r_squared_offset_y_->Clear();
  _impl_._has_bits_[2] &= ~0x02000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_show_equation() {
  if (_impl_.default_trend_line_show_equation_ != nullptr) _impl_.default_trend_line_show_equation_->Clear();
  _impl_._has_bits_[2] &= ~0x04000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_show_label() {
  if (_impl_.default_trend_line_show_label_ != nullptr) _impl_.default_trend_line_show_label_->Clear();
  _impl_._has_bits_[2] &= ~0x08000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_show_r2_value() {
  if (_impl_.default_trend_line_show_r2_value_ != nullptr) _impl_.default_trend_line_show_r2_value_->Clear();
  _impl_._has_bits_[2] &= ~0x10000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_trend_line_type() {
  if (_impl_.default_trend_line_type_ != nullptr) _impl_.default_trend_line_type_->Clear();
  _impl_._has_bits_[2] &= ~0x20000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_bubble_value_labels_axis() {
  if (_impl_.bubble_value_labels_axis_ != nullptr) _impl_.bubble_value_labels_axis_->Clear();
  _impl_._has_bits_[2] &= ~0x40000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_scatter_value_labels_axis() {
  if (_impl_.scatter_value_labels_axis_ != nullptr) _impl_.scatter_value_labels_axis_->Clear();
  _impl_._has_bits_[2] &= ~0x80000000u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_pie_wedge_explosion() {
  if (_impl_.pie_wedge_explosion_ != nullptr) _impl_.pie_wedge_explosion_->Clear();
  _impl_._has_bits_[3] &= ~0x00000001u;
}
void ChartSeriesNonStylePropertyChangeSetArchive::clear_default_y_axis_ordinal() {
  if (_impl_.default_y_axis_ordinal_ != nullptr) _impl_.default_y_axis_ordinal_->Clear();
  _impl_._has_bits_[3] &= ~0x00000002u;
}
ChartSeriesNonStylePropertyChangeSetArchive::ChartSeriesNonStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
}
ChartSeriesNonStylePropertyChangeSetArchive::ChartSeriesNonStylePropertyChangeSetArchive(const ChartSeriesNonStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChartSeriesNonStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default10_date_format_){nullptr}
    , decltype(_impl_.default10_number_format_){nullptr}
    , decltype(_impl_.pie10_number_format_){nullptr}
    , decltype(_impl_.pie23_label_explosion_){nullptr}
    , decltype(_impl_.bubble_adjustment_scale_){nullptr}
    , decltype(_impl_.default_date_format_){nullptr}
    , decltype(_impl_.default_duration_format_){nullptr}
    , decltype(_impl_.area_enable_callout_line_){nullptr}
    , decltype(_impl_.bar_enable_callout_line_){nullptr}
    , decltype(_impl_.bubble_enable_callout_line_){nullptr}
    , decltype(_impl_.default_enable_callout_line_){nullptr}
    , decltype(_impl_.line_enable_callout_line_){nullptr}
    , decltype(_impl_.pie_enable_callout_line_){nullptr}
    , decltype(_impl_.scatter_enable_callout_line_){nullptr}
    , decltype(_impl_.stacked_area_enable_callout_line_){nullptr}
    , decltype(_impl_.stacked_bar_enable_callout_line_){nullptr}
    , decltype(_impl_.default_error_bar_custom_negative_data_){nullptr}
    , decltype(_impl_.default_error_bar_custom_negative_data_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_custom_positive_data_){nullptr}
    , decltype(_impl_.default_error_bar_custom_positive_data_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_fixed_value_){nullptr}
    , decltype(_impl_.default_error_bar_fixed_value_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_percent_value_){nullptr}
    , decltype(_impl_.default_error_bar_percent_value_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_setting_){nullptr}
    , decltype(_impl_.default_error_bar_setting_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_std_dev_value_){nullptr}
    , decltype(_impl_.default_error_bar_std_dev_value_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_type_){nullptr}
    , decltype(_impl_.default_error_bar_type_scatter_x_){nullptr}
    , decltype(_impl_.pie_label_explosion_){nullptr}
    , decltype(_impl_.bubble_line_type_){nullptr}
    , decltype(_impl_.line_line_type_){nullptr}
    , decltype(_impl_.mixed_line_line_type_){nullptr}
    , decltype(_impl_.radar_area_line_type_){nullptr}
    , decltype(_impl_.scatter_line_type_){nullptr}
    , decltype(_impl_.default_number_format_){nullptr}
    , decltype(_impl_.pie_number_format_){nullptr}
    , decltype(_impl_.default_number_format_type_){nullptr}
    , decltype(_impl_.pie_number_format_type_){nullptr}
    , decltype(_impl_.stacked_percent_number_format_){nullptr}
    , decltype(_impl_.default_series_type_){nullptr}
    , decltype(_impl_.default_show_error_bar_){nullptr}
    , decltype(_impl_.default_show_error_bar_scatter_x_){nullptr}
    , decltype(_impl_.bubble_show_labels_in_front_){nullptr}
    , decltype(_impl_.default_show_labels_in_front_){nullptr}
    , decltype(_impl_.scatter_show_line_){nullptr}
    , decltype(_impl_.bubble_show_negative_data_){nullptr}
    , decltype(_impl_.bubble_show_series_labels_){nullptr}
    , decltype(_impl_.pie_show_series_labels_){nullptr}
    , decltype(_impl_.scatter_show_series_labels_){nullptr}
    , decltype(_impl_.area_show_symbol_){nullptr}
    , decltype(_impl_.line_show_symbol_){nullptr}
    , decltype(_impl_.mixed_area_show_symbol_){nullptr}
    , decltype(_impl_.mixed_line_show_symbol_){nullptr}
    , decltype(_impl_.radar_area_show_symbol_){nullptr}
    , decltype(_impl_.scatter_show_symbol_){nullptr}
    , decltype(_impl_.default_show_trend_line_){nullptr}
    , decltype(_impl_.area_show_value_labels_){nullptr}
    , decltype(_impl_.bar_show_value_labels_){nullptr}
    , decltype(_impl_.bubble_show_value_labels_){nullptr}
    , decltype(_impl_.default_show_value_labels_){nullptr}
    , decltype(_impl_.line_show_value_labels_){nullptr}
    , decltype(_impl_.mixed_show_value_labels_){nullptr}
    , decltype(_impl_.pie_show_value_labels_){nullptr}
    , decltype(_impl_.radar_show_value_labels_){nullptr}
    , decltype(_impl_.scatter_show_value_labels_){nullptr}
    , decltype(_impl_.bubble_size_dimension_){nullptr}
    , decltype(_impl_.area_stack_labels_){nullptr}
    , decltype(_impl_.bar_stack_labels_){nullptr}
    , decltype(_impl_.bubble_stack_labels_){nullptr}
    , decltype(_impl_.default_stack_labels_){nullptr}
    , decltype(_impl_.line_stack_labels_){nullptr}
    , decltype(_impl_.pie_stack_labels_){nullptr}
    , decltype(_impl_.scatter_stack_labels_){nullptr}
    , decltype(_impl_.stacked_area_stack_labels_){nullptr}
    , decltype(_impl_.stacked_bar_stack_labels_){nullptr}
    , decltype(_impl_.area_symbol_type_){nullptr}
    , decltype(_impl_.line_symbol_type_){nullptr}
    , decltype(_impl_.mixed_area_symbol_type_){nullptr}
    , decltype(_impl_.mixed_line_symbol_type_){nullptr}
    , decltype(_impl_.radar_area_symbol_type_){nullptr}
    , decltype(_impl_.scatter_symbol_type_){nullptr}
    , decltype(_impl_.default_trend_line_equation_offset_x_){nullptr}
    , decltype(_impl_.default_trend_line_equation_offset_y_){nullptr}
    , decltype(_impl_.default_trend_line_label_string_){nullptr}
    , decltype(_impl_.default_trend_line_order_){nullptr}
    , decltype(_impl_.default_trend_line_period_){nullptr}
    , decltype(_impl_.default_trend_line_r_squared_offset_x_){nullptr}
    , decltype(_impl_.default_trend_line_r_squared_offset_y_){nullptr}
    , decltype(_impl_.default_trend_line_show_equation_){nullptr}
    , decltype(_impl_.default_trend_line_show_label_){nullptr}
    , decltype(_impl_.default_trend_line_show_r2_value_){nullptr}
    , decltype(_impl_.default_trend_line_type_){nullptr}
    , decltype(_impl_.bubble_value_labels_axis_){nullptr}
    , decltype(_impl_.scatter_value_labels_axis_){nullptr}
    , decltype(_impl_.pie_wedge_explosion_){nullptr}
    , decltype(_impl_.default_y_axis_ordinal_){nullptr}
    , decltype(_impl_.default10_date_format_undefined_){}
    , decltype(_impl_.default10_number_format_undefined_){}
    , decltype(_impl_.pie10_number_format_undefined_){}
    , decltype(_impl_.pie23_label_explosion_undefined_){}
    , decltype(_impl_.bubble_adjustment_scale_undefined_){}
    , decltype(_impl_.default_date_format_undefined_){}
    , decltype(_impl_.default_duration_format_undefined_){}
    , decltype(_impl_.area_enable_callout_line_undefined_){}
    , decltype(_impl_.bar_enable_callout_line_undefined_){}
    , decltype(_impl_.bubble_enable_callout_line_undefined_){}
    , decltype(_impl_.default_enable_callout_line_undefined_){}
    , decltype(_impl_.line_enable_callout_line_undefined_){}
    , decltype(_impl_.pie_enable_callout_line_undefined_){}
    , decltype(_impl_.scatter_enable_callout_line_undefined_){}
    , decltype(_impl_.stacked_area_enable_callout_line_undefined_){}
    , decltype(_impl_.stacked_bar_enable_callout_line_undefined_){}
    , decltype(_impl_.default_error_bar_custom_negative_data_undefined_){}
    , decltype(_impl_.default_error_bar_custom_negative_data_scatter_x_undefined_){}
    , decltype(_impl_.default_error_bar_custom_positive_data_undefined_){}
    , decltype(_impl_.default_error_bar_custom_positive_data_scatter_x_undefined_){}
    , decltype(_impl_.default_error_bar_fixed_value_undefined_){}
    , decltype(_impl_.default_error_bar_fixed_value_scatter_x_undefined_){}
    , decltype(_impl_.default_error_bar_percent_value_undefined_){}
    , decltype(_impl_.default_error_bar_percent_value_scatter_x_undefined_){}
    , decltype(_impl_.default_error_bar_setting_undefined_){}
    , decltype(_impl_.default_error_bar_setting_scatter_x_undefined_){}
    , decltype(_impl_.default_error_bar_std_dev_value_undefined_){}
    , decltype(_impl_.default_error_bar_std_dev_value_scatter_x_undefined_){}
    , decltype(_impl_.default_error_bar_type_undefined_){}
    , decltype(_impl_.default_error_bar_type_scatter_x_undefined_){}
    , decltype(_impl_.pie_label_explosion_undefined_){}
    , decltype(_impl_.bubble_line_type_undefined_){}
    , decltype(_impl_.line_line_type_undefined_){}
    , decltype(_impl_.mixed_line_line_type_undefined_){}
    , decltype(_impl_.radar_area_line_type_undefined_){}
    , decltype(_impl_.scatter_line_type_undefined_){}
    , decltype(_impl_.default_number_format_undefined_){}
    , decltype(_impl_.pie_number_format_undefined_){}
    , decltype(_impl_.default_number_format_type_undefined_){}
    , decltype(_impl_.pie_number_format_type_undefined_){}
    , decltype(_impl_.stacked_percent_number_format_undefined_){}
    , decltype(_impl_.default_series_type_undefined_){}
    , decltype(_impl_.default_show_error_bar_undefined_){}
    , decltype(_impl_.default_show_error_bar_scatter_x_undefined_){}
    , decltype(_impl_.bubble_show_labels_in_front_undefined_){}
    , decltype(_impl_.default_show_labels_in_front_undefined_){}
    , decltype(_impl_.scatter_show_line_undefined_){}
    , decltype(_impl_.bubble_show_negative_data_undefined_){}
    , decltype(_impl_.bubble_show_series_labels_undefined_){}
    , decltype(_impl_.pie_show_series_labels_undefined_){}
    , decltype(_impl_.scatter_show_series_labels_undefined_){}
    , decltype(_impl_.area_show_symbol_undefined_){}
    , decltype(_impl_.line_show_symbol_undefined_){}
    , decltype(_impl_.mixed_area_show_symbol_undefined_){}
    , decltype(_impl_.mixed_line_show_symbol_undefined_){}
    , decltype(_impl_.radar_area_show_symbol_undefined_){}
    , decltype(_impl_.scatter_show_symbol_undefined_){}
    , decltype(_impl_.default_show_trend_line_undefined_){}
    , decltype(_impl_.area_show_value_labels_undefined_){}
    , decltype(_impl_.bar_show_value_labels_undefined_){}
    , decltype(_impl_.bubble_show_value_labels_undefined_){}
    , decltype(_impl_.default_show_value_labels_undefined_){}
    , decltype(_impl_.line_show_value_labels_undefined_){}
    , decltype(_impl_.mixed_show_value_labels_undefined_){}
    , decltype(_impl_.pie_show_value_labels_undefined_){}
    , decltype(_impl_.radar_show_value_labels_undefined_){}
    , decltype(_impl_.scatter_show_value_labels_undefined_){}
    , decltype(_impl_.bubble_size_dimension_undefined_){}
    , decltype(_impl_.area_stack_labels_undefined_){}
    , decltype(_impl_.bar_stack_labels_undefined_){}
    , decltype(_impl_.bubble_stack_labels_undefined_){}
    , decltype(_impl_.default_stack_labels_undefined_){}
    , decltype(_impl_.line_stack_labels_undefined_){}
    , decltype(_impl_.pie_stack_labels_undefined_){}
    , decltype(_impl_.scatter_stack_labels_undefined_){}
    , decltype(_impl_.stacked_area_stack_labels_undefined_){}
    , decltype(_impl_.stacked_bar_stack_labels_undefined_){}
    , decltype(_impl_.area_symbol_type_undefined_){}
    , decltype(_impl_.line_symbol_type_undefined_){}
    , decltype(_impl_.mixed_area_symbol_type_undefined_){}
    , decltype(_impl_.mixed_line_symbol_type_undefined_){}
    , decltype(_impl_.radar_area_symbol_type_undefined_){}
    , decltype(_impl_.scatter_symbol_type_undefined_){}
    , decltype(_impl_.default_trend_line_equation_offset_x_undefined_){}
    , decltype(_impl_.default_trend_line_equation_offset_y_undefined_){}
    , decltype(_impl_.default_trend_line_label_string_undefined_){}
    , decltype(_impl_.default_trend_line_order_undefined_){}
    , decltype(_impl_.default_trend_line_period_undefined_){}
    , decltype(_impl_.default_trend_line_r_squared_offset_x_undefined_){}
    , decltype(_impl_.default_trend_line_r_squared_offset_y_undefined_){}
    , decltype(_impl_.default_trend_line_show_equation_undefined_){}
    , decltype(_impl_.default_trend_line_show_label_undefined_){}
    , decltype(_impl_.default_trend_line_show_r2_value_undefined_){}
    , decltype(_impl_.default_trend_line_type_undefined_){}
    , decltype(_impl_.bubble_value_labels_axis_undefined_){}
    , decltype(_impl_.scatter_value_labels_axis_undefined_){}
    , decltype(_impl_.pie_wedge_explosion_undefined_){}
    , decltype(_impl_.default_y_axis_ordinal_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default10_date_format()) {
    _this->_impl_.default10_date_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from._impl_.default10_date_format_);
  }
  if (from._internal_has_default10_number_format()) {
    _this->_impl_.default10_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from._impl_.default10_number_format_);
  }
  if (from._internal_has_pie10_number_format()) {
    _this->_impl_.pie10_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from._impl_.pie10_number_format_);
  }
  if (from._internal_has_pie23_label_explosion()) {
    _this->_impl_.pie23_label_explosion_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.pie23_label_explosion_);
  }
  if (from._internal_has_bubble_adjustment_scale()) {
    _this->_impl_.bubble_adjustment_scale_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.bubble_adjustment_scale_);
  }
  if (from._internal_has_default_date_format()) {
    _this->_impl_.default_date_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from._impl_.default_date_format_);
  }
  if (from._internal_has_default_duration_format()) {
    _this->_impl_.default_duration_format_ = new ::TSCHSOS::SpecFormatObjectArchive(*from._impl_.default_duration_format_);
  }
  if (from._internal_has_area_enable_callout_line()) {
    _this->_impl_.area_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.area_enable_callout_line_);
  }
  if (from._internal_has_bar_enable_callout_line()) {
    _this->_impl_.bar_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.bar_enable_callout_line_);
  }
  if (from._internal_has_bubble_enable_callout_line()) {
    _this->_impl_.bubble_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.bubble_enable_callout_line_);
  }
  if (from._internal_has_default_enable_callout_line()) {
    _this->_impl_.default_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_enable_callout_line_);
  }
  if (from._internal_has_line_enable_callout_line()) {
    _this->_impl_.line_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.line_enable_callout_line_);
  }
  if (from._internal_has_pie_enable_callout_line()) {
    _this->_impl_.pie_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.pie_enable_callout_line_);
  }
  if (from._internal_has_scatter_enable_callout_line()) {
    _this->_impl_.scatter_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.scatter_enable_callout_line_);
  }
  if (from._internal_has_stacked_area_enable_callout_line()) {
    _this->_impl_.stacked_area_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.stacked_area_enable_callout_line_);
  }
  if (from._internal_has_stacked_bar_enable_callout_line()) {
    _this->_impl_.stacked_bar_enable_callout_line_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.stacked_bar_enable_callout_line_);
  }
  if (from._internal_has_default_error_bar_custom_negative_data()) {
    _this->_impl_.default_error_bar_custom_negative_data_ = new ::TSCHSOS::SpecChartErrorBarCustomDataArchive(*from._impl_.default_error_bar_custom_negative_data_);
  }
  if (from._internal_has_default_error_bar_custom_negative_data_scatter_x()) {
    _this->_impl_.default_error_bar_custom_negative_data_scatter_x_ = new ::TSCHSOS::SpecChartErrorBarCustomDataArchive(*from._impl_.default_error_bar_custom_negative_data_scatter_x_);
  }
  if (from._internal_has_default_error_bar_custom_positive_data()) {
    _this->_impl_.default_error_bar_custom_positive_data_ = new ::TSCHSOS::SpecChartErrorBarCustomDataArchive(*from._impl_.default_error_bar_custom_positive_data_);
  }
  if (from._internal_has_default_error_bar_custom_positive_data_scatter_x()) {
    _this->_impl_.default_error_bar_custom_positive_data_scatter_x_ = new ::TSCHSOS::SpecChartErrorBarCustomDataArchive(*from._impl_.default_error_bar_custom_positive_data_scatter_x_);
  }
  if (from._internal_has_default_error_bar_fixed_value()) {
    _this->_impl_.default_error_bar_fixed_value_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_error_bar_fixed_value_);
  }
  if (from._internal_has_default_error_bar_fixed_value_scatter_x()) {
    _this->_impl_.default_error_bar_fixed_value_scatter_x_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_error_bar_fixed_value_scatter_x_);
  }
  if (from._internal_has_default_error_bar_percent_value()) {
    _this->_impl_.default_error_bar_percent_value_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_error_bar_percent_value_);
  }
  if (from._internal_has_default_error_bar_percent_value_scatter_x()) {
    _this->_impl_.default_error_bar_percent_value_scatter_x_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_error_bar_percent_value_scatter_x_);
  }
  if (from._internal_has_default_error_bar_setting()) {
    _this->_impl_.default_error_bar_setting_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_error_bar_setting_);
  }
  if (from._internal_has_default_error_bar_setting_scatter_x()) {
    _this->_impl_.default_error_bar_setting_scatter_x_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_error_bar_setting_scatter_x_);
  }
  if (from._internal_has_default_error_bar_std_dev_value()) {
    _this->_impl_.default_error_bar_std_dev_value_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_error_bar_std_dev_value_);
  }
  if (from._internal_has_default_error_bar_std_dev_value_scatter_x()) {
    _this->_impl_.default_error_bar_std_dev_value_scatter_x_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_error_bar_std_dev_value_scatter_x_);
  }
  if (from._internal_has_default_error_bar_type()) {
    _this->_impl_.default_error_bar_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_error_bar_type_);
  }
  if (from._internal_has_default_error_bar_type_scatter_x()) {
    _this->_impl_.default_error_bar_type_scatter_x_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_error_bar_type_scatter_x_);
  }
  if (from._internal_has_pie_label_explosion()) {
    _this->_impl_.pie_label_explosion_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.pie_label_explosion_);
  }
  if (from._internal_has_bubble_line_type()) {
    _this->_impl_.bubble_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.bubble_line_type_);
  }
  if (from._internal_has_line_line_type()) {
    _this->_impl_.line_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.line_line_type_);
  }
  if (from._internal_has_mixed_line_line_type()) {
    _this->_impl_.mixed_line_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.mixed_line_line_type_);
  }
  if (from._internal_has_radar_area_line_type()) {
    _this->_impl_.radar_area_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.radar_area_line_type_);
  }
  if (from._internal_has_scatter_line_type()) {
    _this->_impl_.scatter_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.scatter_line_type_);
  }
  if (from._internal_has_default_number_format()) {
    _this->_impl_.default_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from._impl_.default_number_format_);
  }
  if (from._internal_has_pie_number_format()) {
    _this->_impl_.pie_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from._impl_.pie_number_format_);
  }
  if (from._internal_has_default_number_format_type()) {
    _this->_impl_.default_number_format_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_number_format_type_);
  }
  if (from._internal_has_pie_number_format_type()) {
    _this->_impl_.pie_number_format_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.pie_number_format_type_);
  }
  if (from._internal_has_stacked_percent_number_format()) {
    _this->_impl_.stacked_percent_number_format_ = new ::TSCHSOS::SpecNumberFormatArchive(*from._impl_.stacked_percent_number_format_);
  }
  if (from._internal_has_default_series_type()) {
    _this->_impl_.default_series_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_series_type_);
  }
  if (from._internal_has_default_show_error_bar()) {
    _this->_impl_.default_show_error_bar_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_error_bar_);
  }
  if (from._internal_has_default_show_error_bar_scatter_x()) {
    _this->_impl_.default_show_error_bar_scatter_x_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_error_bar_scatter_x_);
  }
  if (from._internal_has_bubble_show_labels_in_front()) {
    _this->_impl_.bubble_show_labels_in_front_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.bubble_show_labels_in_front_);
  }
  if (from._internal_has_default_show_labels_in_front()) {
    _this->_impl_.default_show_labels_in_front_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_labels_in_front_);
  }
  if (from._internal_has_scatter_show_line()) {
    _this->_impl_.scatter_show_line_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.scatter_show_line_);
  }
  if (from._internal_has_bubble_show_negative_data()) {
    _this->_impl_.bubble_show_negative_data_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.bubble_show_negative_data_);
  }
  if (from._internal_has_bubble_show_series_labels()) {
    _this->_impl_.bubble_show_series_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.bubble_show_series_labels_);
  }
  if (from._internal_has_pie_show_series_labels()) {
    _this->_impl_.pie_show_series_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.pie_show_series_labels_);
  }
  if (from._internal_has_scatter_show_series_labels()) {
    _this->_impl_.scatter_show_series_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.scatter_show_series_labels_);
  }
  if (from._internal_has_area_show_symbol()) {
    _this->_impl_.area_show_symbol_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.area_show_symbol_);
  }
  if (from._internal_has_line_show_symbol()) {
    _this->_impl_.line_show_symbol_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.line_show_symbol_);
  }
  if (from._internal_has_mixed_area_show_symbol()) {
    _this->_impl_.mixed_area_show_symbol_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.mixed_area_show_symbol_);
  }
  if (from._internal_has_mixed_line_show_symbol()) {
    _this->_impl_.mixed_line_show_symbol_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.mixed_line_show_symbol_);
  }
  if (from._internal_has_radar_area_show_symbol()) {
    _this->_impl_.radar_area_show_symbol_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.radar_area_show_symbol_);
  }
  if (from._internal_has_scatter_show_symbol()) {
    _this->_impl_.scatter_show_symbol_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.scatter_show_symbol_);
  }
  if (from._internal_has_default_show_trend_line()) {
    _this->_impl_.default_show_trend_line_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_trend_line_);
  }
  if (from._internal_has_area_show_value_labels()) {
    _this->_impl_.area_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.area_show_value_labels_);
  }
  if (from._internal_has_bar_show_value_labels()) {
    _this->_impl_.bar_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.bar_show_value_labels_);
  }
  if (from._internal_has_bubble_show_value_labels()) {
    _this->_impl_.bubble_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.bubble_show_value_labels_);
  }
  if (from._internal_has_default_show_value_labels()) {
    _this->_impl_.default_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_value_labels_);
  }
  if (from._internal_has_line_show_value_labels()) {
    _this->_impl_.line_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.line_show_value_labels_);
  }
  if (from._internal_has_mixed_show_value_labels()) {
    _this->_impl_.mixed_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.mixed_show_value_labels_);
  }
  if (from._internal_has_pie_show_value_labels()) {
    _this->_impl_.pie_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.pie_show_value_labels_);
  }
  if (from._internal_has_radar_show_value_labels()) {
    _this->_impl_.radar_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.radar_show_value_labels_);
  }
  if (from._internal_has_scatter_show_value_labels()) {
    _this->_impl_.scatter_show_value_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.scatter_show_value_labels_);
  }
  if (from._internal_has_bubble_size_dimension()) {
    _this->_impl_.bubble_size_dimension_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.bubble_size_dimension_);
  }
  if (from._internal_has_area_stack_labels()) {
    _this->_impl_.area_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.area_stack_labels_);
  }
  if (from._internal_has_bar_stack_labels()) {
    _this->_impl_.bar_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.bar_stack_labels_);
  }
  if (from._internal_has_bubble_stack_labels()) {
    _this->_impl_.bubble_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.bubble_stack_labels_);
  }
  if (from._internal_has_default_stack_labels()) {
    _this->_impl_.default_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_stack_labels_);
  }
  if (from._internal_has_line_stack_labels()) {
    _this->_impl_.line_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.line_stack_labels_);
  }
  if (from._internal_has_pie_stack_labels()) {
    _this->_impl_.pie_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.pie_stack_labels_);
  }
  if (from._internal_has_scatter_stack_labels()) {
    _this->_impl_.scatter_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.scatter_stack_labels_);
  }
  if (from._internal_has_stacked_area_stack_labels()) {
    _this->_impl_.stacked_area_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.stacked_area_stack_labels_);
  }
  if (from._internal_has_stacked_bar_stack_labels()) {
    _this->_impl_.stacked_bar_stack_labels_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.stacked_bar_stack_labels_);
  }
  if (from._internal_has_area_symbol_type()) {
    _this->_impl_.area_symbol_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.area_symbol_type_);
  }
  if (from._internal_has_line_symbol_type()) {
    _this->_impl_.line_symbol_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.line_symbol_type_);
  }
  if (from._internal_has_mixed_area_symbol_type()) {
    _this->_impl_.mixed_area_symbol_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.mixed_area_symbol_type_);
  }
  if (from._internal_has_mixed_line_symbol_type()) {
    _this->_impl_.mixed_line_symbol_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.mixed_line_symbol_type_);
  }
  if (from._internal_has_radar_area_symbol_type()) {
    _this->_impl_.radar_area_symbol_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.radar_area_symbol_type_);
  }
  if (from._internal_has_scatter_symbol_type()) {
    _this->_impl_.scatter_symbol_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.scatter_symbol_type_);
  }
  if (from._internal_has_default_trend_line_equation_offset_x()) {
    _this->_impl_.default_trend_line_equation_offset_x_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_trend_line_equation_offset_x_);
  }
  if (from._internal_has_default_trend_line_equation_offset_y()) {
    _this->_impl_.default_trend_line_equation_offset_y_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_trend_line_equation_offset_y_);
  }
  if (from._internal_has_default_trend_line_label_string()) {
    _this->_impl_.default_trend_line_label_string_ = new ::TSSSOS::SpecStringArchive(*from._impl_.default_trend_line_label_string_);
  }
  if (from._internal_has_default_trend_line_order()) {
    _this->_impl_.default_trend_line_order_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_trend_line_order_);
  }
  if (from._internal_has_default_trend_line_period()) {
    _this->_impl_.default_trend_line_period_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_trend_line_period_);
  }
  if (from._internal_has_default_trend_line_r_squared_offset_x()) {
    _this->_impl_.default_trend_line_r_squared_offset_x_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_trend_line_r_squared_offset_x_);
  }
  if (from._internal_has_default_trend_line_r_squared_offset_y()) {
    _this->_impl_.default_trend_line_r_squared_offset_y_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_trend_line_r_squared_offset_y_);
  }
  if (from._internal_has_default_trend_line_show_equation()) {
    _this->_impl_.default_trend_line_show_equation_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_trend_line_show_equation_);
  }
  if (from._internal_has_default_trend_line_show_label()) {
    _this->_impl_.default_trend_line_show_label_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_trend_line_show_label_);
  }
  if (from._internal_has_default_trend_line_show_r2_value()) {
    _this->_impl_.default_trend_line_show_r2_value_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_trend_line_show_r2_value_);
  }
  if (from._internal_has_default_trend_line_type()) {
    _this->_impl_.default_trend_line_type_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_trend_line_type_);
  }
  if (from._internal_has_bubble_value_labels_axis()) {
    _this->_impl_.bubble_value_labels_axis_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.bubble_value_labels_axis_);
  }
  if (from._internal_has_scatter_value_labels_axis()) {
    _this->_impl_.scatter_value_labels_axis_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.scatter_value_labels_axis_);
  }
  if (from._internal_has_pie_wedge_explosion()) {
    _this->_impl_.pie_wedge_explosion_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.pie_wedge_explosion_);
  }
  if (from._internal_has_default_y_axis_ordinal()) {
    _this->_impl_.default_y_axis_ordinal_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_y_axis_ordinal_);
  }
  ::memcpy(&_impl_.default10_date_format_undefined_, &from._impl_.default10_date_format_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.default_y_axis_ordinal_undefined_) -
    reinterpret_cast<char*>(&_impl_.default10_date_format_undefined_)) + sizeof(_impl_.default_y_axis_ordinal_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
}

inline void ChartSeriesNonStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default10_date_format_){nullptr}
    , decltype(_impl_.default10_number_format_){nullptr}
    , decltype(_impl_.pie10_number_format_){nullptr}
    , decltype(_impl_.pie23_label_explosion_){nullptr}
    , decltype(_impl_.bubble_adjustment_scale_){nullptr}
    , decltype(_impl_.default_date_format_){nullptr}
    , decltype(_impl_.default_duration_format_){nullptr}
    , decltype(_impl_.area_enable_callout_line_){nullptr}
    , decltype(_impl_.bar_enable_callout_line_){nullptr}
    , decltype(_impl_.bubble_enable_callout_line_){nullptr}
    , decltype(_impl_.default_enable_callout_line_){nullptr}
    , decltype(_impl_.line_enable_callout_line_){nullptr}
    , decltype(_impl_.pie_enable_callout_line_){nullptr}
    , decltype(_impl_.scatter_enable_callout_line_){nullptr}
    , decltype(_impl_.stacked_area_enable_callout_line_){nullptr}
    , decltype(_impl_.stacked_bar_enable_callout_line_){nullptr}
    , decltype(_impl_.default_error_bar_custom_negative_data_){nullptr}
    , decltype(_impl_.default_error_bar_custom_negative_data_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_custom_positive_data_){nullptr}
    , decltype(_impl_.default_error_bar_custom_positive_data_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_fixed_value_){nullptr}
    , decltype(_impl_.default_error_bar_fixed_value_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_percent_value_){nullptr}
    , decltype(_impl_.default_error_bar_percent_value_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_setting_){nullptr}
    , decltype(_impl_.default_error_bar_setting_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_std_dev_value_){nullptr}
    , decltype(_impl_.default_error_bar_std_dev_value_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_type_){nullptr}
    , decltype(_impl_.default_error_bar_type_scatter_x_){nullptr}
    , decltype(_impl_.pie_label_explosion_){nullptr}
    , decltype(_impl_.bubble_line_type_){nullptr}
    , decltype(_impl_.line_line_type_){nullptr}
    , decltype(_impl_.mixed_line_line_type_){nullptr}
    , decltype(_impl_.radar_area_line_type_){nullptr}
    , decltype(_impl_.scatter_line_type_){nullptr}
    , decltype(_impl_.default_number_format_){nullptr}
    , decltype(_impl_.pie_number_format_){nullptr}
    , decltype(_impl_.default_number_format_type_){nullptr}
    , decltype(_impl_.pie_number_format_type_){nullptr}
    , decltype(_impl_.stacked_percent_number_format_){nullptr}
    , decltype(_impl_.default_series_type_){nullptr}
    , decltype(_impl_.default_show_error_bar_){nullptr}
    , decltype(_impl_.default_show_error_bar_scatter_x_){nullptr}
    , decltype(_impl_.bubble_show_labels_in_front_){nullptr}
    , decltype(_impl_.default_show_labels_in_front_){nullptr}
    , decltype(_impl_.scatter_show_line_){nullptr}
    , decltype(_impl_.bubble_show_negative_data_){nullptr}
    , decltype(_impl_.bubble_show_series_labels_){nullptr}
    , decltype(_impl_.pie_show_series_labels_){nullptr}
    , decltype(_impl_.scatter_show_series_labels_){nullptr}
    , decltype(_impl_.area_show_symbol_){nullptr}
    , decltype(_impl_.line_show_symbol_){nullptr}
    , decltype(_impl_.mixed_area_show_symbol_){nullptr}
    , decltype(_impl_.mixed_line_show_symbol_){nullptr}
    , decltype(_impl_.radar_area_show_symbol_){nullptr}
    , decltype(_impl_.scatter_show_symbol_){nullptr}
    , decltype(_impl_.default_show_trend_line_){nullptr}
    , decltype(_impl_.area_show_value_labels_){nullptr}
    , decltype(_impl_.bar_show_value_labels_){nullptr}
    , decltype(_impl_.bubble_show_value_labels_){nullptr}
    , decltype(_impl_.default_show_value_labels_){nullptr}
    , decltype(_impl_.line_show_value_labels_){nullptr}
    , decltype(_impl_.mixed_show_value_labels_){nullptr}
    , decltype(_impl_.pie_show_value_labels_){nullptr}
    , decltype(_impl_.radar_show_value_labels_){nullptr}
    , decltype(_impl_.scatter_show_value_labels_){nullptr}
    , decltype(_impl_.bubble_size_dimension_){nullptr}
    , decltype(_impl_.area_stack_labels_){nullptr}
    , decltype(_impl_.bar_stack_labels_){nullptr}
    , decltype(_impl_.bubble_stack_labels_){nullptr}
    , decltype(_impl_.default_stack_labels_){nullptr}
    , decltype(_impl_.line_stack_labels_){nullptr}
    , decltype(_impl_.pie_stack_labels_){nullptr}
    , decltype(_impl_.scatter_stack_labels_){nullptr}
    , decltype(_impl_.stacked_area_stack_labels_){nullptr}
    , decltype(_impl_.stacked_bar_stack_labels_){nullptr}
    , decltype(_impl_.area_symbol_type_){nullptr}
    , decltype(_impl_.line_symbol_type_){nullptr}
    , decltype(_impl_.mixed_area_symbol_type_){nullptr}
    , decltype(_impl_.mixed_line_symbol_type_){nullptr}
    , decltype(_impl_.radar_area_symbol_type_){nullptr}
    , decltype(_impl_.scatter_symbol_type_){nullptr}
    , decltype(_impl_.default_trend_line_equation_offset_x_){nullptr}
    , decltype(_impl_.default_trend_line_equation_offset_y_){nullptr}
    , decltype(_impl_.default_trend_line_label_string_){nullptr}
    , decltype(_impl_.default_trend_line_order_){nullptr}
    , decltype(_impl_.default_trend_line_period_){nullptr}
    , decltype(_impl_.default_trend_line_r_squared_offset_x_){nullptr}
    , decltype(_impl_.default_trend_line_r_squared_offset_y_){nullptr}
    , decltype(_impl_.default_trend_line_show_equation_){nullptr}
    , decltype(_impl_.default_trend_line_show_label_){nullptr}
    , decltype(_impl_.default_trend_line_show_r2_value_){nullptr}
    , decltype(_impl_.default_trend_line_type_){nullptr}
    , decltype(_impl_.bubble_value_labels_axis_){nullptr}
    , decltype(_impl_.scatter_value_labels_axis_){nullptr}
    , decltype(_impl_.pie_wedge_explosion_){nullptr}
    , decltype(_impl_.default_y_axis_ordinal_){nullptr}
    , decltype(_impl_.default10_date_format_undefined_){false}
    , decltype(_impl_.default10_number_format_undefined_){false}
    , decltype(_impl_.pie10_number_format_undefined_){false}
    , decltype(_impl_.pie23_label_explosion_undefined_){false}
    , decltype(_impl_.bubble_adjustment_scale_undefined_){false}
    , decltype(_impl_.default_date_format_undefined_){false}
    , decltype(_impl_.default_duration_format_undefined_){false}
    , decltype(_impl_.area_enable_callout_line_undefined_){false}
    , decltype(_impl_.bar_enable_callout_line_undefined_){false}
    , decltype(_impl_.bubble_enable_callout_line_undefined_){false}
    , decltype(_impl_.default_enable_callout_line_undefined_){false}
    , decltype(_impl_.line_enable_callout_line_undefined_){false}
    , decltype(_impl_.pie_enable_callout_line_undefined_){false}
    , decltype(_impl_.scatter_enable_callout_line_undefined_){false}
    , decltype(_impl_.stacked_area_enable_callout_line_undefined_){false}
    , decltype(_impl_.stacked_bar_enable_callout_line_undefined_){false}
    , decltype(_impl_.default_error_bar_custom_negative_data_undefined_){false}
    , decltype(_impl_.default_error_bar_custom_negative_data_scatter_x_undefined_){false}
    , decltype(_impl_.default_error_bar_custom_positive_data_undefined_){false}
    , decltype(_impl_.default_error_bar_custom_positive_data_scatter_x_undefined_){false}
    , decltype(_impl_.default_error_bar_fixed_value_undefined_){false}
    , decltype(_impl_.default_error_bar_fixed_value_scatter_x_undefined_){false}
    , decltype(_impl_.default_error_bar_percent_value_undefined_){false}
    , decltype(_impl_.default_error_bar_percent_value_scatter_x_undefined_){false}
    , decltype(_impl_.default_error_bar_setting_undefined_){false}
    , decltype(_impl_.default_error_bar_setting_scatter_x_undefined_){false}
    , decltype(_impl_.default_error_bar_std_dev_value_undefined_){false}
    , decltype(_impl_.default_error_bar_std_dev_value_scatter_x_undefined_){false}
    , decltype(_impl_.default_error_bar_type_undefined_){false}
    , decltype(_impl_.default_error_bar_type_scatter_x_undefined_){false}
    , decltype(_impl_.pie_label_explosion_undefined_){false}
    , decltype(_impl_.bubble_line_type_undefined_){false}
    , decltype(_impl_.line_line_type_undefined_){false}
    , decltype(_impl_.mixed_line_line_type_undefined_){false}
    , decltype(_impl_.radar_area_line_type_undefined_){false}
    , decltype(_impl_.scatter_line_type_undefined_){false}
    , decltype(_impl_.default_number_format_undefined_){false}
    , decltype(_impl_.pie_number_format_undefined_){false}
    , decltype(_impl_.default_number_format_type_undefined_){false}
    , decltype(_impl_.pie_number_format_type_undefined_){false}
    , decltype(_impl_.stacked_percent_number_format_undefined_){false}
    , decltype(_impl_.default_series_type_undefined_){false}
    , decltype(_impl_.default_show_error_bar_undefined_){false}
    , decltype(_impl_.default_show_error_bar_scatter_x_undefined_){false}
    , decltype(_impl_.bubble_show_labels_in_front_undefined_){false}
    , decltype(_impl_.default_show_labels_in_front_undefined_){false}
    , decltype(_impl_.scatter_show_line_undefined_){false}
    , decltype(_impl_.bubble_show_negative_data_undefined_){false}
    , decltype(_impl_.bubble_show_series_labels_undefined_){false}
    , decltype(_impl_.pie_show_series_labels_undefined_){false}
    , decltype(_impl_.scatter_show_series_labels_undefined_){false}
    , decltype(_impl_.area_show_symbol_undefined_){false}
    , decltype(_impl_.line_show_symbol_undefined_){false}
    , decltype(_impl_.mixed_area_show_symbol_undefined_){false}
    , decltype(_impl_.mixed_line_show_symbol_undefined_){false}
    , decltype(_impl_.radar_area_show_symbol_undefined_){false}
    , decltype(_impl_.scatter_show_symbol_undefined_){false}
    , decltype(_impl_.default_show_trend_line_undefined_){false}
    , decltype(_impl_.area_show_value_labels_undefined_){false}
    , decltype(_impl_.bar_show_value_labels_undefined_){false}
    , decltype(_impl_.bubble_show_value_labels_undefined_){false}
    , decltype(_impl_.default_show_value_labels_undefined_){false}
    , decltype(_impl_.line_show_value_labels_undefined_){false}
    , decltype(_impl_.mixed_show_value_labels_undefined_){false}
    , decltype(_impl_.pie_show_value_labels_undefined_){false}
    , decltype(_impl_.radar_show_value_labels_undefined_){false}
    , decltype(_impl_.scatter_show_value_labels_undefined_){false}
    , decltype(_impl_.bubble_size_dimension_undefined_){false}
    , decltype(_impl_.area_stack_labels_undefined_){false}
    , decltype(_impl_.bar_stack_labels_undefined_){false}
    , decltype(_impl_.bubble_stack_labels_undefined_){false}
    , decltype(_impl_.default_stack_labels_undefined_){false}
    , decltype(_impl_.line_stack_labels_undefined_){false}
    , decltype(_impl_.pie_stack_labels_undefined_){false}
    , decltype(_impl_.scatter_stack_labels_undefined_){false}
    , decltype(_impl_.stacked_area_stack_labels_undefined_){false}
    , decltype(_impl_.stacked_bar_stack_labels_undefined_){false}
    , decltype(_impl_.area_symbol_type_undefined_){false}
    , decltype(_impl_.line_symbol_type_undefined_){false}
    , decltype(_impl_.mixed_area_symbol_type_undefined_){false}
    , decltype(_impl_.mixed_line_symbol_type_undefined_){false}
    , decltype(_impl_.radar_area_symbol_type_undefined_){false}
    , decltype(_impl_.scatter_symbol_type_undefined_){false}
    , decltype(_impl_.default_trend_line_equation_offset_x_undefined_){false}
    , decltype(_impl_.default_trend_line_equation_offset_y_undefined_){false}
    , decltype(_impl_.default_trend_line_label_string_undefined_){false}
    , decltype(_impl_.default_trend_line_order_undefined_){false}
    , decltype(_impl_.default_trend_line_period_undefined_){false}
    , decltype(_impl_.default_trend_line_r_squared_offset_x_undefined_){false}
    , decltype(_impl_.default_trend_line_r_squared_offset_y_undefined_){false}
    , decltype(_impl_.default_trend_line_show_equation_undefined_){false}
    , decltype(_impl_.default_trend_line_show_label_undefined_){false}
    , decltype(_impl_.default_trend_line_show_r2_value_undefined_){false}
    , decltype(_impl_.default_trend_line_type_undefined_){false}
    , decltype(_impl_.bubble_value_labels_axis_undefined_){false}
    , decltype(_impl_.scatter_value_labels_axis_undefined_){false}
    , decltype(_impl_.pie_wedge_explosion_undefined_){false}
    , decltype(_impl_.default_y_axis_ordinal_undefined_){false}
  };
}

ChartSeriesNonStylePropertyChangeSetArchive::~ChartSeriesNonStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChartSeriesNonStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.default10_date_format_;
  if (this != internal_default_instance()) delete _impl_.default10_number_format_;
  if (this != internal_default_instance()) delete _impl_.pie10_number_format_;
  if (this != internal_default_instance()) delete _impl_.pie23_label_explosion_;
  if (this != internal_default_instance()) delete _impl_.bubble_adjustment_scale_;
  if (this != internal_default_instance()) delete _impl_.default_date_format_;
  if (this != internal_default_instance()) delete _impl_.default_duration_format_;
  if (this != internal_default_instance()) delete _impl_.area_enable_callout_line_;
  if (this != internal_default_instance()) delete _impl_.bar_enable_callout_line_;
  if (this != internal_default_instance()) delete _impl_.bubble_enable_callout_line_;
  if (this != internal_default_instance()) delete _impl_.default_enable_callout_line_;
  if (this != internal_default_instance()) delete _impl_.line_enable_callout_line_;
  if (this != internal_default_instance()) delete _impl_.pie_enable_callout_line_;
  if (this != internal_default_instance()) delete _impl_.scatter_enable_callout_line_;
  if (this != internal_default_instance()) delete _impl_.stacked_area_enable_callout_line_;
  if (this != internal_default_instance()) delete _impl_.stacked_bar_enable_callout_line_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_custom_negative_data_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_custom_negative_data_scatter_x_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_custom_positive_data_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_custom_positive_data_scatter_x_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_fixed_value_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_fixed_value_scatter_x_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_percent_value_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_percent_value_scatter_x_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_setting_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_setting_scatter_x_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_std_dev_value_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_std_dev_value_scatter_x_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_type_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_type_scatter_x_;
  if (this != internal_default_instance()) delete _impl_.pie_label_explosion_;
  if (this != internal_default_instance()) delete _impl_.bubble_line_type_;
  if (this != internal_default_instance()) delete _impl_.line_line_type_;
  if (this != internal_default_instance()) delete _impl_.mixed_line_line_type_;
  if (this != internal_default_instance()) delete _impl_.radar_area_line_type_;
  if (this != internal_default_instance()) delete _impl_.scatter_line_type_;
  if (this != internal_default_instance()) delete _impl_.default_number_format_;
  if (this != internal_default_instance()) delete _impl_.pie_number_format_;
  if (this != internal_default_instance()) delete _impl_.default_number_format_type_;
  if (this != internal_default_instance()) delete _impl_.pie_number_format_type_;
  if (this != internal_default_instance()) delete _impl_.stacked_percent_number_format_;
  if (this != internal_default_instance()) delete _impl_.default_series_type_;
  if (this != internal_default_instance()) delete _impl_.default_show_error_bar_;
  if (this != internal_default_instance()) delete _impl_.default_show_error_bar_scatter_x_;
  if (this != internal_default_instance()) delete _impl_.bubble_show_labels_in_front_;
  if (this != internal_default_instance()) delete _impl_.default_show_labels_in_front_;
  if (this != internal_default_instance()) delete _impl_.scatter_show_line_;
  if (this != internal_default_instance()) delete _impl_.bubble_show_negative_data_;
  if (this != internal_default_instance()) delete _impl_.bubble_show_series_labels_;
  if (this != internal_default_instance()) delete _impl_.pie_show_series_labels_;
  if (this != internal_default_instance()) delete _impl_.scatter_show_series_labels_;
  if (this != internal_default_instance()) delete _impl_.area_show_symbol_;
  if (this != internal_default_instance()) delete _impl_.line_show_symbol_;
  if (this != internal_default_instance()) delete _impl_.mixed_area_show_symbol_;
  if (this != internal_default_instance()) delete _impl_.mixed_line_show_symbol_;
  if (this != internal_default_instance()) delete _impl_.radar_area_show_symbol_;
  if (this != internal_default_instance()) delete _impl_.scatter_show_symbol_;
  if (this != internal_default_instance()) delete _impl_.default_show_trend_line_;
  if (this != internal_default_instance()) delete _impl_.area_show_value_labels_;
  if (this != internal_default_instance()) delete _impl_.bar_show_value_labels_;
  if (this != internal_default_instance()) delete _impl_.bubble_show_value_labels_;
  if (this != internal_default_instance()) delete _impl_.default_show_value_labels_;
  if (this != internal_default_instance()) delete _impl_.line_show_value_labels_;
  if (this != internal_default_instance()) delete _impl_.mixed_show_value_labels_;
  if (this != internal_default_instance()) delete _impl_.pie_show_value_labels_;
  if (this != internal_default_instance()) delete _impl_.radar_show_value_labels_;
  if (this != internal_default_instance()) delete _impl_.scatter_show_value_labels_;
  if (this != internal_default_instance()) delete _impl_.bubble_size_dimension_;
  if (this != internal_default_instance()) delete _impl_.area_stack_labels_;
  if (this != internal_default_instance()) delete _impl_.bar_stack_labels_;
  if (this != internal_default_instance()) delete _impl_.bubble_stack_labels_;
  if (this != internal_default_instance()) delete _impl_.default_stack_labels_;
  if (this != internal_default_instance()) delete _impl_.line_stack_labels_;
  if (this != internal_default_instance()) delete _impl_.pie_stack_labels_;
  if (this != internal_default_instance()) delete _impl_.scatter_stack_labels_;
  if (this != internal_default_instance()) delete _impl_.stacked_area_stack_labels_;
  if (this != internal_default_instance()) delete _impl_.stacked_bar_stack_labels_;
  if (this != internal_default_instance()) delete _impl_.area_symbol_type_;
  if (this != internal_default_instance()) delete _impl_.line_symbol_type_;
  if (this != internal_default_instance()) delete _impl_.mixed_area_symbol_type_;
  if (this != internal_default_instance()) delete _impl_.mixed_line_symbol_type_;
  if (this != internal_default_instance()) delete _impl_.radar_area_symbol_type_;
  if (this != internal_default_instance()) delete _impl_.scatter_symbol_type_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_equation_offset_x_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_equation_offset_y_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_label_string_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_order_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_period_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_r_squared_offset_x_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_r_squared_offset_y_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_show_equation_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_show_label_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_show_r2_value_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_type_;
  if (this != internal_default_instance()) delete _impl_.bubble_value_labels_axis_;
  if (this != internal_default_instance()) delete _impl_.scatter_value_labels_axis_;
  if (this != internal_default_instance()) delete _impl_.pie_wedge_explosion_;
  if (this != internal_default_instance()) delete _impl_.default_y_axis_ordinal_;
}

void ChartSeriesNonStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChartSeriesNonStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.default10_date_format_ != nullptr);
      _impl_.default10_date_format_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.default10_number_format_ != nullptr);
      _impl_.default10_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.pie10_number_format_ != nullptr);
      _impl_.pie10_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.pie23_label_explosion_ != nullptr);
      _impl_.pie23_label_explosion_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.bubble_adjustment_scale_ != nullptr);
      _impl_.bubble_adjustment_scale_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.default_date_format_ != nullptr);
      _impl_.default_date_format_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.default_duration_format_ != nullptr);
      _impl_.default_duration_format_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.area_enable_callout_line_ != nullptr);
      _impl_.area_enable_callout_line_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.bar_enable_callout_line_ != nullptr);
      _impl_.bar_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.bubble_enable_callout_line_ != nullptr);
      _impl_.bubble_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.default_enable_callout_line_ != nullptr);
      _impl_.default_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.line_enable_callout_line_ != nullptr);
      _impl_.line_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.pie_enable_callout_line_ != nullptr);
      _impl_.pie_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.scatter_enable_callout_line_ != nullptr);
      _impl_.scatter_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.stacked_area_enable_callout_line_ != nullptr);
      _impl_.stacked_area_enable_callout_line_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.stacked_bar_enable_callout_line_ != nullptr);
      _impl_.stacked_bar_enable_callout_line_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_custom_negative_data_ != nullptr);
      _impl_.default_error_bar_custom_negative_data_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_custom_negative_data_scatter_x_ != nullptr);
      _impl_.default_error_bar_custom_negative_data_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_custom_positive_data_ != nullptr);
      _impl_.default_error_bar_custom_positive_data_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_custom_positive_data_scatter_x_ != nullptr);
      _impl_.default_error_bar_custom_positive_data_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_fixed_value_ != nullptr);
      _impl_.default_error_bar_fixed_value_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_fixed_value_scatter_x_ != nullptr);
      _impl_.default_error_bar_fixed_value_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_percent_value_ != nullptr);
      _impl_.default_error_bar_percent_value_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_percent_value_scatter_x_ != nullptr);
      _impl_.default_error_bar_percent_value_scatter_x_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_setting_ != nullptr);
      _impl_.default_error_bar_setting_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_setting_scatter_x_ != nullptr);
      _impl_.default_error_bar_setting_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_std_dev_value_ != nullptr);
      _impl_.default_error_bar_std_dev_value_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_std_dev_value_scatter_x_ != nullptr);
      _impl_.default_error_bar_std_dev_value_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_type_ != nullptr);
      _impl_.default_error_bar_type_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_type_scatter_x_ != nullptr);
      _impl_.default_error_bar_type_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(_impl_.pie_label_explosion_ != nullptr);
      _impl_.pie_label_explosion_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(_impl_.bubble_line_type_ != nullptr);
      _impl_.bubble_line_type_->Clear();
    }
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.line_line_type_ != nullptr);
      _impl_.line_line_type_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.mixed_line_line_type_ != nullptr);
      _impl_.mixed_line_line_type_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.radar_area_line_type_ != nullptr);
      _impl_.radar_area_line_type_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.scatter_line_type_ != nullptr);
      _impl_.scatter_line_type_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.default_number_format_ != nullptr);
      _impl_.default_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.pie_number_format_ != nullptr);
      _impl_.pie_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.default_number_format_type_ != nullptr);
      _impl_.default_number_format_type_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.pie_number_format_type_ != nullptr);
      _impl_.pie_number_format_type_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.stacked_percent_number_format_ != nullptr);
      _impl_.stacked_percent_number_format_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.default_series_type_ != nullptr);
      _impl_.default_series_type_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.default_show_error_bar_ != nullptr);
      _impl_.default_show_error_bar_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.default_show_error_bar_scatter_x_ != nullptr);
      _impl_.default_show_error_bar_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.bubble_show_labels_in_front_ != nullptr);
      _impl_.bubble_show_labels_in_front_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.default_show_labels_in_front_ != nullptr);
      _impl_.default_show_labels_in_front_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.scatter_show_line_ != nullptr);
      _impl_.scatter_show_line_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.bubble_show_negative_data_ != nullptr);
      _impl_.bubble_show_negative_data_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.bubble_show_series_labels_ != nullptr);
      _impl_.bubble_show_series_labels_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.pie_show_series_labels_ != nullptr);
      _impl_.pie_show_series_labels_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.scatter_show_series_labels_ != nullptr);
      _impl_.scatter_show_series_labels_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.area_show_symbol_ != nullptr);
      _impl_.area_show_symbol_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.line_show_symbol_ != nullptr);
      _impl_.line_show_symbol_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.mixed_area_show_symbol_ != nullptr);
      _impl_.mixed_area_show_symbol_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.mixed_line_show_symbol_ != nullptr);
      _impl_.mixed_line_show_symbol_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.radar_area_show_symbol_ != nullptr);
      _impl_.radar_area_show_symbol_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(_impl_.scatter_show_symbol_ != nullptr);
      _impl_.scatter_show_symbol_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(_impl_.default_show_trend_line_ != nullptr);
      _impl_.default_show_trend_line_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(_impl_.area_show_value_labels_ != nullptr);
      _impl_.area_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(_impl_.bar_show_value_labels_ != nullptr);
      _impl_.bar_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(_impl_.bubble_show_value_labels_ != nullptr);
      _impl_.bubble_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(_impl_.default_show_value_labels_ != nullptr);
      _impl_.default_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(_impl_.line_show_value_labels_ != nullptr);
      _impl_.line_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(_impl_.mixed_show_value_labels_ != nullptr);
      _impl_.mixed_show_value_labels_->Clear();
    }
  }
  cached_has_bits = _impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.pie_show_value_labels_ != nullptr);
      _impl_.pie_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.radar_show_value_labels_ != nullptr);
      _impl_.radar_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.scatter_show_value_labels_ != nullptr);
      _impl_.scatter_show_value_labels_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.bubble_size_dimension_ != nullptr);
      _impl_.bubble_size_dimension_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.area_stack_labels_ != nullptr);
      _impl_.area_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.bar_stack_labels_ != nullptr);
      _impl_.bar_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.bubble_stack_labels_ != nullptr);
      _impl_.bubble_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.default_stack_labels_ != nullptr);
      _impl_.default_stack_labels_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.line_stack_labels_ != nullptr);
      _impl_.line_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.pie_stack_labels_ != nullptr);
      _impl_.pie_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.scatter_stack_labels_ != nullptr);
      _impl_.scatter_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.stacked_area_stack_labels_ != nullptr);
      _impl_.stacked_area_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.stacked_bar_stack_labels_ != nullptr);
      _impl_.stacked_bar_stack_labels_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.area_symbol_type_ != nullptr);
      _impl_.area_symbol_type_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.line_symbol_type_ != nullptr);
      _impl_.line_symbol_type_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.mixed_area_symbol_type_ != nullptr);
      _impl_.mixed_area_symbol_type_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.mixed_line_symbol_type_ != nullptr);
      _impl_.mixed_line_symbol_type_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.radar_area_symbol_type_ != nullptr);
      _impl_.radar_area_symbol_type_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.scatter_symbol_type_ != nullptr);
      _impl_.scatter_symbol_type_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_equation_offset_x_ != nullptr);
      _impl_.default_trend_line_equation_offset_x_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_equation_offset_y_ != nullptr);
      _impl_.default_trend_line_equation_offset_y_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_label_string_ != nullptr);
      _impl_.default_trend_line_label_string_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_order_ != nullptr);
      _impl_.default_trend_line_order_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_period_ != nullptr);
      _impl_.default_trend_line_period_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_r_squared_offset_x_ != nullptr);
      _impl_.default_trend_line_r_squared_offset_x_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_r_squared_offset_y_ != nullptr);
      _impl_.default_trend_line_r_squared_offset_y_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_show_equation_ != nullptr);
      _impl_.default_trend_line_show_equation_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_show_label_ != nullptr);
      _impl_.default_trend_line_show_label_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_show_r2_value_ != nullptr);
      _impl_.default_trend_line_show_r2_value_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_type_ != nullptr);
      _impl_.default_trend_line_type_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(_impl_.bubble_value_labels_axis_ != nullptr);
      _impl_.bubble_value_labels_axis_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(_impl_.scatter_value_labels_axis_ != nullptr);
      _impl_.scatter_value_labels_axis_->Clear();
    }
  }
  cached_has_bits = _impl_._has_bits_[3];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.pie_wedge_explosion_ != nullptr);
      _impl_.pie_wedge_explosion_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.default_y_axis_ordinal_ != nullptr);
      _impl_.default_y_axis_ordinal_->Clear();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.default10_date_format_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_date_format_undefined_) -
        reinterpret_cast<char*>(&_impl_.default10_date_format_undefined_)) + sizeof(_impl_.default_date_format_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.default_duration_format_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.scatter_enable_callout_line_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_duration_format_undefined_)) + sizeof(_impl_.scatter_enable_callout_line_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.stacked_area_enable_callout_line_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_error_bar_fixed_value_scatter_x_undefined_) -
        reinterpret_cast<char*>(&_impl_.stacked_area_enable_callout_line_undefined_)) + sizeof(_impl_.default_error_bar_fixed_value_scatter_x_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.default_error_bar_percent_value_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_error_bar_type_scatter_x_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_error_bar_percent_value_undefined_)) + sizeof(_impl_.default_error_bar_type_scatter_x_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.pie_label_explosion_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.pie_number_format_undefined_) -
        reinterpret_cast<char*>(&_impl_.pie_label_explosion_undefined_)) + sizeof(_impl_.pie_number_format_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.default_number_format_type_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_show_labels_in_front_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_number_format_type_undefined_)) + sizeof(_impl_.default_show_labels_in_front_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.scatter_show_line_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.mixed_area_show_symbol_undefined_) -
        reinterpret_cast<char*>(&_impl_.scatter_show_line_undefined_)) + sizeof(_impl_.mixed_area_show_symbol_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.mixed_line_show_symbol_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_show_value_labels_undefined_) -
        reinterpret_cast<char*>(&_impl_.mixed_line_show_symbol_undefined_)) + sizeof(_impl_.default_show_value_labels_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.line_show_value_labels_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.bar_stack_labels_undefined_) -
        reinterpret_cast<char*>(&_impl_.line_show_value_labels_undefined_)) + sizeof(_impl_.bar_stack_labels_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.bubble_stack_labels_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.area_symbol_type_undefined_) -
        reinterpret_cast<char*>(&_impl_.bubble_stack_labels_undefined_)) + sizeof(_impl_.area_symbol_type_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.line_symbol_type_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_trend_line_label_string_undefined_) -
        reinterpret_cast<char*>(&_impl_.line_symbol_type_undefined_)) + sizeof(_impl_.default_trend_line_label_string_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.default_trend_line_order_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_trend_line_type_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_trend_line_order_undefined_)) + sizeof(_impl_.default_trend_line_type_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[6];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.bubble_value_labels_axis_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_y_axis_ordinal_undefined_) -
        reinterpret_cast<char*>(&_impl_.bubble_value_labels_axis_undefined_)) + sizeof(_impl_.default_y_axis_ordinal_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartSeriesNonStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default10_date_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default10_date_format_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_default10_date_format_undefined(&_impl_._has_bits_);
          _impl_.default10_date_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default10_number_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default10_number_format_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default10_number_format_undefined(&_impl_._has_bits_);
          _impl_.default10_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive pie10_number_format = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie10_number_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie10_number_format_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_pie10_number_format_undefined(&_impl_._has_bits_);
          _impl_.pie10_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive pie23_label_explosion = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie23_label_explosion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie23_label_explosion_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_pie23_label_explosion_undefined(&_impl_._has_bits_);
          _impl_.pie23_label_explosion_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive bubble_adjustment_scale = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_adjustment_scale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_adjustment_scale_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_bubble_adjustment_scale_undefined(&_impl_._has_bits_);
          _impl_.bubble_adjustment_scale_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_date_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_date_format_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_default_date_format_undefined(&_impl_._has_bits_);
          _impl_.default_date_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_duration_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_duration_format_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_default_duration_format_undefined(&_impl_._has_bits_);
          _impl_.default_duration_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_enable_callout_line = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_enable_callout_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_enable_callout_line_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_area_enable_callout_line_undefined(&_impl_._has_bits_);
          _impl_.area_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bar_enable_callout_line = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_enable_callout_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar_enable_callout_line_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_bar_enable_callout_line_undefined(&_impl_._has_bits_);
          _impl_.bar_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_enable_callout_line = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_enable_callout_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_enable_callout_line_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_bubble_enable_callout_line_undefined(&_impl_._has_bits_);
          _impl_.bubble_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_enable_callout_line = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_enable_callout_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_enable_callout_line_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_default_enable_callout_line_undefined(&_impl_._has_bits_);
          _impl_.default_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_enable_callout_line = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_enable_callout_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_enable_callout_line_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_line_enable_callout_line_undefined(&_impl_._has_bits_);
          _impl_.line_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive pie_enable_callout_line = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_enable_callout_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_enable_callout_line_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_pie_enable_callout_line_undefined(&_impl_._has_bits_);
          _impl_.pie_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_enable_callout_line = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_enable_callout_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_enable_callout_line_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_scatter_enable_callout_line_undefined(&_impl_._has_bits_);
          _impl_.scatter_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_area_enable_callout_line = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_area_enable_callout_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool stacked_area_enable_callout_line_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_stacked_area_enable_callout_line_undefined(&_impl_._has_bits_);
          _impl_.stacked_area_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_bar_enable_callout_line = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_bar_enable_callout_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool stacked_bar_enable_callout_line_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_stacked_bar_enable_callout_line_undefined(&_impl_._has_bits_);
          _impl_.stacked_bar_enable_callout_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_custom_negative_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_custom_negative_data_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_default_error_bar_custom_negative_data_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_custom_negative_data_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data_scatter_x = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_custom_negative_data_scatter_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_custom_negative_data_scatter_x_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default_error_bar_custom_negative_data_scatter_x_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_custom_negative_data_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_custom_positive_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_custom_positive_data_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_default_error_bar_custom_positive_data_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_custom_positive_data_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data_scatter_x = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_custom_positive_data_scatter_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_custom_positive_data_scatter_x_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_default_error_bar_custom_positive_data_scatter_x_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_custom_positive_data_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_fixed_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_fixed_value_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default_error_bar_fixed_value_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_fixed_value_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value_scatter_x = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_fixed_value_scatter_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_fixed_value_scatter_x_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_default_error_bar_fixed_value_scatter_x_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_fixed_value_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_percent_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_percent_value_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_default_error_bar_percent_value_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_percent_value_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value_scatter_x = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_percent_value_scatter_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_percent_value_scatter_x_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default_error_bar_percent_value_scatter_x_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_percent_value_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_setting(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_setting_undefined = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_default_error_bar_setting_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_setting_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting_scatter_x = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_setting_scatter_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_setting_scatter_x_undefined = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_default_error_bar_setting_scatter_x_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_setting_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_std_dev_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_std_dev_value_undefined = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_default_error_bar_std_dev_value_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_std_dev_value_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value_scatter_x = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_std_dev_value_scatter_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_std_dev_value_scatter_x_undefined = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_default_error_bar_std_dev_value_scatter_x_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_std_dev_value_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_type = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_type_undefined = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_default_error_bar_type_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_type_scatter_x = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_type_scatter_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_type_scatter_x_undefined = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_default_error_bar_type_scatter_x_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_type_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive pie_label_explosion = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_label_explosion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_label_explosion_undefined = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_pie_label_explosion_undefined(&_impl_._has_bits_);
          _impl_.pie_label_explosion_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_line_type = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_line_type_undefined = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_bubble_line_type_undefined(&_impl_._has_bits_);
          _impl_.bubble_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_line_type = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_line_type_undefined = 66;
      case 66:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_line_line_type_undefined(&_impl_._has_bits_);
          _impl_.line_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_line_line_type = 67;
      case 67:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_line_line_type_undefined = 68;
      case 68:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_mixed_line_line_type_undefined(&_impl_._has_bits_);
          _impl_.mixed_line_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive radar_area_line_type = 69;
      case 69:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_line_type_undefined = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_radar_area_line_type_undefined(&_impl_._has_bits_);
          _impl_.radar_area_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_line_type = 71;
      case 71:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_line_type_undefined = 72;
      case 72:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_scatter_line_type_undefined(&_impl_._has_bits_);
          _impl_.scatter_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 73;
      case 73:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_number_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_number_format_undefined = 74;
      case 74:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default_number_format_undefined(&_impl_._has_bits_);
          _impl_.default_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive pie_number_format = 75;
      case 75:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_number_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_number_format_undefined = 76;
      case 76:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_pie_number_format_undefined(&_impl_._has_bits_);
          _impl_.pie_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 77;
      case 77:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_number_format_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_number_format_type_undefined = 78;
      case 78:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_default_number_format_type_undefined(&_impl_._has_bits_);
          _impl_.default_number_format_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive pie_number_format_type = 79;
      case 79:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_number_format_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_number_format_type_undefined = 80;
      case 80:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_pie_number_format_type_undefined(&_impl_._has_bits_);
          _impl_.pie_number_format_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecNumberFormatArchive stacked_percent_number_format = 81;
      case 81:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_percent_number_format(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool stacked_percent_number_format_undefined = 82;
      case 82:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_stacked_percent_number_format_undefined(&_impl_._has_bits_);
          _impl_.stacked_percent_number_format_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_series_type = 83;
      case 83:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_series_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_series_type_undefined = 84;
      case 84:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_default_series_type_undefined(&_impl_._has_bits_);
          _impl_.default_series_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_error_bar = 85;
      case 85:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_error_bar(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_error_bar_undefined = 86;
      case 86:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_default_show_error_bar_undefined(&_impl_._has_bits_);
          _impl_.default_show_error_bar_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_error_bar_scatter_x = 87;
      case 87:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_error_bar_scatter_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_error_bar_scatter_x_undefined = 88;
      case 88:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_default_show_error_bar_scatter_x_undefined(&_impl_._has_bits_);
          _impl_.default_show_error_bar_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_show_labels_in_front = 89;
      case 89:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_show_labels_in_front(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_show_labels_in_front_undefined = 90;
      case 90:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_bubble_show_labels_in_front_undefined(&_impl_._has_bits_);
          _impl_.bubble_show_labels_in_front_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_labels_in_front = 91;
      case 91:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_labels_in_front(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_labels_in_front_undefined = 92;
      case 92:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_default_show_labels_in_front_undefined(&_impl_._has_bits_);
          _impl_.default_show_labels_in_front_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_show_line = 93;
      case 93:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_show_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_show_line_undefined = 94;
      case 94:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_scatter_show_line_undefined(&_impl_._has_bits_);
          _impl_.scatter_show_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_show_negative_data = 95;
      case 95:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_show_negative_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_show_negative_data_undefined = 96;
      case 96:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_bubble_show_negative_data_undefined(&_impl_._has_bits_);
          _impl_.bubble_show_negative_data_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_show_series_labels = 97;
      case 97:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_show_series_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_show_series_labels_undefined = 98;
      case 98:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_bubble_show_series_labels_undefined(&_impl_._has_bits_);
          _impl_.bubble_show_series_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive pie_show_series_labels = 99;
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_show_series_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_show_series_labels_undefined = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_pie_show_series_labels_undefined(&_impl_._has_bits_);
          _impl_.pie_show_series_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_show_series_labels = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_show_series_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_show_series_labels_undefined = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_scatter_show_series_labels_undefined(&_impl_._has_bits_);
          _impl_.scatter_show_series_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive area_show_symbol = 103;
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_show_symbol(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_show_symbol_undefined = 104;
      case 104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_area_show_symbol_undefined(&_impl_._has_bits_);
          _impl_.area_show_symbol_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive line_show_symbol = 105;
      case 105:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_show_symbol(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_show_symbol_undefined = 106;
      case 106:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_line_show_symbol_undefined(&_impl_._has_bits_);
          _impl_.line_show_symbol_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_area_show_symbol = 107;
      case 107:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_show_symbol(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_area_show_symbol_undefined = 108;
      case 108:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_mixed_area_show_symbol_undefined(&_impl_._has_bits_);
          _impl_.mixed_area_show_symbol_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_line_show_symbol = 109;
      case 109:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_show_symbol(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_line_show_symbol_undefined = 110;
      case 110:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_mixed_line_show_symbol_undefined(&_impl_._has_bits_);
          _impl_.mixed_line_show_symbol_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive radar_area_show_symbol = 111;
      case 111:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_show_symbol(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_show_symbol_undefined = 112;
      case 112:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_radar_area_show_symbol_undefined(&_impl_._has_bits_);
          _impl_.radar_area_show_symbol_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_show_symbol = 113;
      case 113:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_show_symbol(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_show_symbol_undefined = 114;
      case 114:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_scatter_show_symbol_undefined(&_impl_._has_bits_);
          _impl_.scatter_show_symbol_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_trend_line = 115;
      case 115:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_trend_line(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_trend_line_undefined = 116;
      case 116:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_default_show_trend_line_undefined(&_impl_._has_bits_);
          _impl_.default_show_trend_line_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive area_show_value_labels = 117;
      case 117:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_show_value_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_show_value_labels_undefined = 118;
      case 118:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_area_show_value_labels_undefined(&_impl_._has_bits_);
          _impl_.area_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bar_show_value_labels = 119;
      case 119:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_show_value_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar_show_value_labels_undefined = 120;
      case 120:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_bar_show_value_labels_undefined(&_impl_._has_bits_);
          _impl_.bar_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_show_value_labels = 121;
      case 121:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_show_value_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_show_value_labels_undefined = 122;
      case 122:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_bubble_show_value_labels_undefined(&_impl_._has_bits_);
          _impl_.bubble_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_value_labels = 123;
      case 123:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_value_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_value_labels_undefined = 124;
      case 124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_default_show_value_labels_undefined(&_impl_._has_bits_);
          _impl_.default_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive line_show_value_labels = 125;
      case 125:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_show_value_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_show_value_labels_undefined = 126;
      case 126:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_line_show_value_labels_undefined(&_impl_._has_bits_);
          _impl_.line_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_show_value_labels = 127;
      case 127:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_show_value_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_show_value_labels_undefined = 128;
      case 128:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_mixed_show_value_labels_undefined(&_impl_._has_bits_);
          _impl_.mixed_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive pie_show_value_labels = 129;
      case 129:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_show_value_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_show_value_labels_undefined = 130;
      case 130:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_pie_show_value_labels_undefined(&_impl_._has_bits_);
          _impl_.pie_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive radar_show_value_labels = 131;
      case 131:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_show_value_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_show_value_labels_undefined = 132;
      case 132:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_radar_show_value_labels_undefined(&_impl_._has_bits_);
          _impl_.radar_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_show_value_labels = 133;
      case 133:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_show_value_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_show_value_labels_undefined = 134;
      case 134:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_scatter_show_value_labels_undefined(&_impl_._has_bits_);
          _impl_.scatter_show_value_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_size_dimension = 135;
      case 135:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_size_dimension(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_size_dimension_undefined = 136;
      case 136:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_bubble_size_dimension_undefined(&_impl_._has_bits_);
          _impl_.bubble_size_dimension_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive area_stack_labels = 137;
      case 137:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_stack_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_stack_labels_undefined = 138;
      case 138:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_area_stack_labels_undefined(&_impl_._has_bits_);
          _impl_.area_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bar_stack_labels = 139;
      case 139:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_stack_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar_stack_labels_undefined = 140;
      case 140:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_bar_stack_labels_undefined(&_impl_._has_bits_);
          _impl_.bar_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_stack_labels = 141;
      case 141:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_stack_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_stack_labels_undefined = 142;
      case 142:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_bubble_stack_labels_undefined(&_impl_._has_bits_);
          _impl_.bubble_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_stack_labels = 143;
      case 143:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_stack_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_stack_labels_undefined = 144;
      case 144:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default_stack_labels_undefined(&_impl_._has_bits_);
          _impl_.default_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive line_stack_labels = 145;
      case 145:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_stack_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_stack_labels_undefined = 146;
      case 146:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_line_stack_labels_undefined(&_impl_._has_bits_);
          _impl_.line_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive pie_stack_labels = 147;
      case 147:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_stack_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_stack_labels_undefined = 148;
      case 148:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_pie_stack_labels_undefined(&_impl_._has_bits_);
          _impl_.pie_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_stack_labels = 149;
      case 149:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_stack_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_stack_labels_undefined = 150;
      case 150:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_scatter_stack_labels_undefined(&_impl_._has_bits_);
          _impl_.scatter_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive stacked_area_stack_labels = 151;
      case 151:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_area_stack_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool stacked_area_stack_labels_undefined = 152;
      case 152:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_stacked_area_stack_labels_undefined(&_impl_._has_bits_);
          _impl_.stacked_area_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive stacked_bar_stack_labels = 153;
      case 153:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_bar_stack_labels(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool stacked_bar_stack_labels_undefined = 154;
      case 154:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_stacked_bar_stack_labels_undefined(&_impl_._has_bits_);
          _impl_.stacked_bar_stack_labels_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_symbol_type = 155;
      case 155:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_symbol_type_undefined = 156;
      case 156:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_area_symbol_type_undefined(&_impl_._has_bits_);
          _impl_.area_symbol_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_symbol_type = 157;
      case 157:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_symbol_type_undefined = 158;
      case 158:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_line_symbol_type_undefined(&_impl_._has_bits_);
          _impl_.line_symbol_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_area_symbol_type = 159;
      case 159:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_type_undefined = 160;
      case 160:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_mixed_area_symbol_type_undefined(&_impl_._has_bits_);
          _impl_.mixed_area_symbol_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_line_symbol_type = 161;
      case 161:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_type_undefined = 162;
      case 162:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_mixed_line_symbol_type_undefined(&_impl_._has_bits_);
          _impl_.mixed_line_symbol_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive radar_area_symbol_type = 163;
      case 163:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_symbol_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_symbol_type_undefined = 164;
      case 164:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_radar_area_symbol_type_undefined(&_impl_._has_bits_);
          _impl_.radar_area_symbol_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_symbol_type = 165;
      case 165:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_symbol_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_symbol_type_undefined = 166;
      case 166:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_scatter_symbol_type_undefined(&_impl_._has_bits_);
          _impl_.scatter_symbol_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_x = 167;
      case 167:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_equation_offset_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_equation_offset_x_undefined = 168;
      case 168:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_default_trend_line_equation_offset_x_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_equation_offset_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_y = 169;
      case 169:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_equation_offset_y(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_equation_offset_y_undefined = 170;
      case 170:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default_trend_line_equation_offset_y_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_equation_offset_y_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecStringArchive default_trend_line_label_string = 171;
      case 171:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_label_string(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_label_string_undefined = 172;
      case 172:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_default_trend_line_label_string_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_label_string_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_trend_line_order = 173;
      case 173:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_order(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_order_undefined = 174;
      case 174:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_default_trend_line_order_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_order_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_trend_line_period = 175;
      case 175:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_period(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_period_undefined = 176;
      case 176:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default_trend_line_period_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_period_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_x = 177;
      case 177:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_r_squared_offset_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_r_squared_offset_x_undefined = 178;
      case 178:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_default_trend_line_r_squared_offset_x_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_r_squared_offset_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_y = 179;
      case 179:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_r_squared_offset_y(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_r_squared_offset_y_undefined = 180;
      case 180:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_default_trend_line_r_squared_offset_y_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_r_squared_offset_y_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_trend_line_show_equation = 181;
      case 181:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_show_equation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_show_equation_undefined = 182;
      case 182:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_default_trend_line_show_equation_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_show_equation_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_trend_line_show_label = 183;
      case 183:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_show_label(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_show_label_undefined = 184;
      case 184:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_default_trend_line_show_label_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_show_label_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_trend_line_show_r2_value = 185;
      case 185:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_show_r2_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_show_r2_value_undefined = 186;
      case 186:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_default_trend_line_show_r2_value_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_show_r2_value_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_trend_line_type = 187;
      case 187:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_type_undefined = 188;
      case 188:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_default_trend_line_type_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_type_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_value_labels_axis = 189;
      case 189:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_value_labels_axis(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_value_labels_axis_undefined = 190;
      case 190:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_bubble_value_labels_axis_undefined(&_impl_._has_bits_);
          _impl_.bubble_value_labels_axis_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_value_labels_axis = 191;
      case 191:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_value_labels_axis(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_value_labels_axis_undefined = 192;
      case 192:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_scatter_value_labels_axis_undefined(&_impl_._has_bits_);
          _impl_.scatter_value_labels_axis_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive pie_wedge_explosion = 193;
      case 193:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_wedge_explosion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_wedge_explosion_undefined = 194;
      case 194:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_pie_wedge_explosion_undefined(&_impl_._has_bits_);
          _impl_.pie_wedge_explosion_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_y_axis_ordinal = 195;
      case 195:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_y_axis_ordinal(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_y_axis_ordinal_undefined = 196;
      case 196:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default_y_axis_ordinal_undefined(&_impl_._has_bits_);
          _impl_.default_y_axis_ordinal_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChartSeriesNonStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::default10_date_format(this),
        _Internal::default10_date_format(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default10_date_format_undefined = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_default10_date_format_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::default10_number_format(this),
        _Internal::default10_number_format(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default10_number_format_undefined = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_default10_number_format_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecNumberFormatArchive pie10_number_format = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::pie10_number_format(this),
        _Internal::pie10_number_format(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool pie10_number_format_undefined = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_pie10_number_format_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive pie23_label_explosion = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::pie23_label_explosion(this),
        _Internal::pie23_label_explosion(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool pie23_label_explosion_undefined = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_pie23_label_explosion_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive bubble_adjustment_scale = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::bubble_adjustment_scale(this),
        _Internal::bubble_adjustment_scale(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool bubble_adjustment_scale_undefined = 10;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_bubble_adjustment_scale_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::default_date_format(this),
        _Internal::default_date_format(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_date_format_undefined = 12;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_default_date_format_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::default_duration_format(this),
        _Internal::default_duration_format(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_duration_format_undefined = 14;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_default_duration_format_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive area_enable_callout_line = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::area_enable_callout_line(this),
        _Internal::area_enable_callout_line(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool area_enable_callout_line_undefined = 16;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_area_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bar_enable_callout_line = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::bar_enable_callout_line(this),
        _Internal::bar_enable_callout_line(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool bar_enable_callout_line_undefined = 18;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_bar_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bubble_enable_callout_line = 19;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::bubble_enable_callout_line(this),
        _Internal::bubble_enable_callout_line(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool bubble_enable_callout_line_undefined = 20;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(20, this->_internal_bubble_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_enable_callout_line = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::default_enable_callout_line(this),
        _Internal::default_enable_callout_line(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_enable_callout_line_undefined = 22;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(22, this->_internal_default_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive line_enable_callout_line = 23;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::line_enable_callout_line(this),
        _Internal::line_enable_callout_line(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool line_enable_callout_line_undefined = 24;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(24, this->_internal_line_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive pie_enable_callout_line = 25;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::pie_enable_callout_line(this),
        _Internal::pie_enable_callout_line(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool pie_enable_callout_line_undefined = 26;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(26, this->_internal_pie_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive scatter_enable_callout_line = 27;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(27, _Internal::scatter_enable_callout_line(this),
        _Internal::scatter_enable_callout_line(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool scatter_enable_callout_line_undefined = 28;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(28, this->_internal_scatter_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive stacked_area_enable_callout_line = 29;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(29, _Internal::stacked_area_enable_callout_line(this),
        _Internal::stacked_area_enable_callout_line(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool stacked_area_enable_callout_line_undefined = 30;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(30, this->_internal_stacked_area_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive stacked_bar_enable_callout_line = 31;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, _Internal::stacked_bar_enable_callout_line(this),
        _Internal::stacked_bar_enable_callout_line(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool stacked_bar_enable_callout_line_undefined = 32;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(32, this->_internal_stacked_bar_enable_callout_line_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data = 33;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(33, _Internal::default_error_bar_custom_negative_data(this),
        _Internal::default_error_bar_custom_negative_data(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_custom_negative_data_undefined = 34;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(34, this->_internal_default_error_bar_custom_negative_data_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data_scatter_x = 35;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, _Internal::default_error_bar_custom_negative_data_scatter_x(this),
        _Internal::default_error_bar_custom_negative_data_scatter_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_custom_negative_data_scatter_x_undefined = 36;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(36, this->_internal_default_error_bar_custom_negative_data_scatter_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data = 37;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(37, _Internal::default_error_bar_custom_positive_data(this),
        _Internal::default_error_bar_custom_positive_data(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_custom_positive_data_undefined = 38;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(38, this->_internal_default_error_bar_custom_positive_data_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data_scatter_x = 39;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(39, _Internal::default_error_bar_custom_positive_data_scatter_x(this),
        _Internal::default_error_bar_custom_positive_data_scatter_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_custom_positive_data_scatter_x_undefined = 40;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(40, this->_internal_default_error_bar_custom_positive_data_scatter_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value = 41;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(41, _Internal::default_error_bar_fixed_value(this),
        _Internal::default_error_bar_fixed_value(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_fixed_value_undefined = 42;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(42, this->_internal_default_error_bar_fixed_value_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value_scatter_x = 43;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(43, _Internal::default_error_bar_fixed_value_scatter_x(this),
        _Internal::default_error_bar_fixed_value_scatter_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_fixed_value_scatter_x_undefined = 44;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(44, this->_internal_default_error_bar_fixed_value_scatter_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value = 45;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(45, _Internal::default_error_bar_percent_value(this),
        _Internal::default_error_bar_percent_value(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_percent_value_undefined = 46;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(46, this->_internal_default_error_bar_percent_value_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value_scatter_x = 47;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(47, _Internal::default_error_bar_percent_value_scatter_x(this),
        _Internal::default_error_bar_percent_value_scatter_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_percent_value_scatter_x_undefined = 48;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(48, this->_internal_default_error_bar_percent_value_scatter_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting = 49;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(49, _Internal::default_error_bar_setting(this),
        _Internal::default_error_bar_setting(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_setting_undefined = 50;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(50, this->_internal_default_error_bar_setting_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting_scatter_x = 51;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(51, _Internal::default_error_bar_setting_scatter_x(this),
        _Internal::default_error_bar_setting_scatter_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_setting_scatter_x_undefined = 52;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(52, this->_internal_default_error_bar_setting_scatter_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value = 53;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(53, _Internal::default_error_bar_std_dev_value(this),
        _Internal::default_error_bar_std_dev_value(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_std_dev_value_undefined = 54;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(54, this->_internal_default_error_bar_std_dev_value_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value_scatter_x = 55;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(55, _Internal::default_error_bar_std_dev_value_scatter_x(this),
        _Internal::default_error_bar_std_dev_value_scatter_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_std_dev_value_scatter_x_undefined = 56;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(56, this->_internal_default_error_bar_std_dev_value_scatter_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_type = 57;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(57, _Internal::default_error_bar_type(this),
        _Internal::default_error_bar_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_type_undefined = 58;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(58, this->_internal_default_error_bar_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_type_scatter_x = 59;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(59, _Internal::default_error_bar_type_scatter_x(this),
        _Internal::default_error_bar_type_scatter_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_type_scatter_x_undefined = 60;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(60, this->_internal_default_error_bar_type_scatter_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive pie_label_explosion = 61;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(61, _Internal::pie_label_explosion(this),
        _Internal::pie_label_explosion(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool pie_label_explosion_undefined = 62;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(62, this->_internal_pie_label_explosion_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bubble_line_type = 63;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(63, _Internal::bubble_line_type(this),
        _Internal::bubble_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool bubble_line_type_undefined = 64;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(64, this->_internal_bubble_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive line_line_type = 65;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(65, _Internal::line_line_type(this),
        _Internal::line_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool line_line_type_undefined = 66;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(66, this->_internal_line_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive mixed_line_line_type = 67;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(67, _Internal::mixed_line_line_type(this),
        _Internal::mixed_line_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool mixed_line_line_type_undefined = 68;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(68, this->_internal_mixed_line_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive radar_area_line_type = 69;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(69, _Internal::radar_area_line_type(this),
        _Internal::radar_area_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool radar_area_line_type_undefined = 70;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(70, this->_internal_radar_area_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive scatter_line_type = 71;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(71, _Internal::scatter_line_type(this),
        _Internal::scatter_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool scatter_line_type_undefined = 72;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(72, this->_internal_scatter_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 73;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(73, _Internal::default_number_format(this),
        _Internal::default_number_format(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_number_format_undefined = 74;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(74, this->_internal_default_number_format_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSCHSOS.SpecNumberFormatArchive pie_number_format = 75;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(75, _Internal::pie_number_format(this),
        _Internal::pie_number_format(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool pie_number_format_undefined = 76;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(76, this->_internal_pie_number_format_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 77;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(77, _Internal::default_number_format_type(this),
        _Internal::default_number_format_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_number_format_type_undefined = 78;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(78, this->_internal_default_number_format_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive pie_number_format_type = 79;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(79, _Internal::pie_number_format_type(this),
        _Internal::pie_number_format_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool pie_number_format_type_undefined = 80;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(80, this->_internal_pie_number_format_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSCHSOS.SpecNumberFormatArchive stacked_percent_number_format = 81;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(81, _Internal::stacked_percent_number_format(this),
        _Internal::stacked_percent_number_format(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool stacked_percent_number_format_undefined = 82;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(82, this->_internal_stacked_percent_number_format_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive default_series_type = 83;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(83, _Internal::default_series_type(this),
        _Internal::default_series_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_series_type_undefined = 84;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(84, this->_internal_default_series_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive default_show_error_bar = 85;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(85, _Internal::default_show_error_bar(this),
        _Internal::default_show_error_bar(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_show_error_bar_undefined = 86;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(86, this->_internal_default_show_error_bar_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive default_show_error_bar_scatter_x = 87;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(87, _Internal::default_show_error_bar_scatter_x(this),
        _Internal::default_show_error_bar_scatter_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_show_error_bar_scatter_x_undefined = 88;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(88, this->_internal_default_show_error_bar_scatter_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive bubble_show_labels_in_front = 89;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(89, _Internal::bubble_show_labels_in_front(this),
        _Internal::bubble_show_labels_in_front(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool bubble_show_labels_in_front_undefined = 90;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(90, this->_internal_bubble_show_labels_in_front_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive default_show_labels_in_front = 91;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(91, _Internal::default_show_labels_in_front(this),
        _Internal::default_show_labels_in_front(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_show_labels_in_front_undefined = 92;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(92, this->_internal_default_show_labels_in_front_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive scatter_show_line = 93;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(93, _Internal::scatter_show_line(this),
        _Internal::scatter_show_line(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool scatter_show_line_undefined = 94;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(94, this->_internal_scatter_show_line_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive bubble_show_negative_data = 95;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(95, _Internal::bubble_show_negative_data(this),
        _Internal::bubble_show_negative_data(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool bubble_show_negative_data_undefined = 96;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(96, this->_internal_bubble_show_negative_data_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive bubble_show_series_labels = 97;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(97, _Internal::bubble_show_series_labels(this),
        _Internal::bubble_show_series_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool bubble_show_series_labels_undefined = 98;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(98, this->_internal_bubble_show_series_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive pie_show_series_labels = 99;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::pie_show_series_labels(this),
        _Internal::pie_show_series_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool pie_show_series_labels_undefined = 100;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(100, this->_internal_pie_show_series_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive scatter_show_series_labels = 101;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(101, _Internal::scatter_show_series_labels(this),
        _Internal::scatter_show_series_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool scatter_show_series_labels_undefined = 102;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(102, this->_internal_scatter_show_series_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive area_show_symbol = 103;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(103, _Internal::area_show_symbol(this),
        _Internal::area_show_symbol(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool area_show_symbol_undefined = 104;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(104, this->_internal_area_show_symbol_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive line_show_symbol = 105;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(105, _Internal::line_show_symbol(this),
        _Internal::line_show_symbol(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool line_show_symbol_undefined = 106;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(106, this->_internal_line_show_symbol_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive mixed_area_show_symbol = 107;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(107, _Internal::mixed_area_show_symbol(this),
        _Internal::mixed_area_show_symbol(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool mixed_area_show_symbol_undefined = 108;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(108, this->_internal_mixed_area_show_symbol_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive mixed_line_show_symbol = 109;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(109, _Internal::mixed_line_show_symbol(this),
        _Internal::mixed_line_show_symbol(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool mixed_line_show_symbol_undefined = 110;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(110, this->_internal_mixed_line_show_symbol_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive radar_area_show_symbol = 111;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(111, _Internal::radar_area_show_symbol(this),
        _Internal::radar_area_show_symbol(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool radar_area_show_symbol_undefined = 112;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(112, this->_internal_radar_area_show_symbol_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive scatter_show_symbol = 113;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(113, _Internal::scatter_show_symbol(this),
        _Internal::scatter_show_symbol(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool scatter_show_symbol_undefined = 114;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(114, this->_internal_scatter_show_symbol_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive default_show_trend_line = 115;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(115, _Internal::default_show_trend_line(this),
        _Internal::default_show_trend_line(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_show_trend_line_undefined = 116;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(116, this->_internal_default_show_trend_line_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive area_show_value_labels = 117;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(117, _Internal::area_show_value_labels(this),
        _Internal::area_show_value_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool area_show_value_labels_undefined = 118;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(118, this->_internal_area_show_value_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive bar_show_value_labels = 119;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(119, _Internal::bar_show_value_labels(this),
        _Internal::bar_show_value_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool bar_show_value_labels_undefined = 120;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(120, this->_internal_bar_show_value_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive bubble_show_value_labels = 121;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(121, _Internal::bubble_show_value_labels(this),
        _Internal::bubble_show_value_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool bubble_show_value_labels_undefined = 122;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(122, this->_internal_bubble_show_value_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive default_show_value_labels = 123;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(123, _Internal::default_show_value_labels(this),
        _Internal::default_show_value_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_show_value_labels_undefined = 124;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(124, this->_internal_default_show_value_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive line_show_value_labels = 125;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(125, _Internal::line_show_value_labels(this),
        _Internal::line_show_value_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool line_show_value_labels_undefined = 126;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(126, this->_internal_line_show_value_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecBoolArchive mixed_show_value_labels = 127;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(127, _Internal::mixed_show_value_labels(this),
        _Internal::mixed_show_value_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool mixed_show_value_labels_undefined = 128;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(128, this->_internal_mixed_show_value_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive pie_show_value_labels = 129;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(129, _Internal::pie_show_value_labels(this),
        _Internal::pie_show_value_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool pie_show_value_labels_undefined = 130;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(130, this->_internal_pie_show_value_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive radar_show_value_labels = 131;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(131, _Internal::radar_show_value_labels(this),
        _Internal::radar_show_value_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool radar_show_value_labels_undefined = 132;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(132, this->_internal_radar_show_value_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive scatter_show_value_labels = 133;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(133, _Internal::scatter_show_value_labels(this),
        _Internal::scatter_show_value_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool scatter_show_value_labels_undefined = 134;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(134, this->_internal_scatter_show_value_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive bubble_size_dimension = 135;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(135, _Internal::bubble_size_dimension(this),
        _Internal::bubble_size_dimension(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool bubble_size_dimension_undefined = 136;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(136, this->_internal_bubble_size_dimension_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive area_stack_labels = 137;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(137, _Internal::area_stack_labels(this),
        _Internal::area_stack_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool area_stack_labels_undefined = 138;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(138, this->_internal_area_stack_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive bar_stack_labels = 139;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(139, _Internal::bar_stack_labels(this),
        _Internal::bar_stack_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool bar_stack_labels_undefined = 140;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(140, this->_internal_bar_stack_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive bubble_stack_labels = 141;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(141, _Internal::bubble_stack_labels(this),
        _Internal::bubble_stack_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool bubble_stack_labels_undefined = 142;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(142, this->_internal_bubble_stack_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive default_stack_labels = 143;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(143, _Internal::default_stack_labels(this),
        _Internal::default_stack_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_stack_labels_undefined = 144;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(144, this->_internal_default_stack_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive line_stack_labels = 145;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(145, _Internal::line_stack_labels(this),
        _Internal::line_stack_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool line_stack_labels_undefined = 146;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(146, this->_internal_line_stack_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive pie_stack_labels = 147;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(147, _Internal::pie_stack_labels(this),
        _Internal::pie_stack_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool pie_stack_labels_undefined = 148;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(148, this->_internal_pie_stack_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive scatter_stack_labels = 149;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(149, _Internal::scatter_stack_labels(this),
        _Internal::scatter_stack_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool scatter_stack_labels_undefined = 150;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(150, this->_internal_scatter_stack_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive stacked_area_stack_labels = 151;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(151, _Internal::stacked_area_stack_labels(this),
        _Internal::stacked_area_stack_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool stacked_area_stack_labels_undefined = 152;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(152, this->_internal_stacked_area_stack_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive stacked_bar_stack_labels = 153;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(153, _Internal::stacked_bar_stack_labels(this),
        _Internal::stacked_bar_stack_labels(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool stacked_bar_stack_labels_undefined = 154;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(154, this->_internal_stacked_bar_stack_labels_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive area_symbol_type = 155;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(155, _Internal::area_symbol_type(this),
        _Internal::area_symbol_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool area_symbol_type_undefined = 156;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(156, this->_internal_area_symbol_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive line_symbol_type = 157;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(157, _Internal::line_symbol_type(this),
        _Internal::line_symbol_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool line_symbol_type_undefined = 158;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(158, this->_internal_line_symbol_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive mixed_area_symbol_type = 159;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(159, _Internal::mixed_area_symbol_type(this),
        _Internal::mixed_area_symbol_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool mixed_area_symbol_type_undefined = 160;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(160, this->_internal_mixed_area_symbol_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive mixed_line_symbol_type = 161;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(161, _Internal::mixed_line_symbol_type(this),
        _Internal::mixed_line_symbol_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool mixed_line_symbol_type_undefined = 162;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(162, this->_internal_mixed_line_symbol_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive radar_area_symbol_type = 163;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(163, _Internal::radar_area_symbol_type(this),
        _Internal::radar_area_symbol_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool radar_area_symbol_type_undefined = 164;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(164, this->_internal_radar_area_symbol_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive scatter_symbol_type = 165;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(165, _Internal::scatter_symbol_type(this),
        _Internal::scatter_symbol_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool scatter_symbol_type_undefined = 166;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(166, this->_internal_scatter_symbol_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_x = 167;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(167, _Internal::default_trend_line_equation_offset_x(this),
        _Internal::default_trend_line_equation_offset_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_trend_line_equation_offset_x_undefined = 168;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(168, this->_internal_default_trend_line_equation_offset_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_y = 169;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(169, _Internal::default_trend_line_equation_offset_y(this),
        _Internal::default_trend_line_equation_offset_y(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_trend_line_equation_offset_y_undefined = 170;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(170, this->_internal_default_trend_line_equation_offset_y_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecStringArchive default_trend_line_label_string = 171;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(171, _Internal::default_trend_line_label_string(this),
        _Internal::default_trend_line_label_string(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_trend_line_label_string_undefined = 172;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(172, this->_internal_default_trend_line_label_string_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive default_trend_line_order = 173;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(173, _Internal::default_trend_line_order(this),
        _Internal::default_trend_line_order(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_trend_line_order_undefined = 174;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(174, this->_internal_default_trend_line_order_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive default_trend_line_period = 175;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(175, _Internal::default_trend_line_period(this),
        _Internal::default_trend_line_period(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_trend_line_period_undefined = 176;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(176, this->_internal_default_trend_line_period_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_x = 177;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(177, _Internal::default_trend_line_r_squared_offset_x(this),
        _Internal::default_trend_line_r_squared_offset_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_trend_line_r_squared_offset_x_undefined = 178;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(178, this->_internal_default_trend_line_r_squared_offset_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_y = 179;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(179, _Internal::default_trend_line_r_squared_offset_y(this),
        _Internal::default_trend_line_r_squared_offset_y(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_trend_line_r_squared_offset_y_undefined = 180;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(180, this->_internal_default_trend_line_r_squared_offset_y_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive default_trend_line_show_equation = 181;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(181, _Internal::default_trend_line_show_equation(this),
        _Internal::default_trend_line_show_equation(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_trend_line_show_equation_undefined = 182;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(182, this->_internal_default_trend_line_show_equation_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive default_trend_line_show_label = 183;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(183, _Internal::default_trend_line_show_label(this),
        _Internal::default_trend_line_show_label(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_trend_line_show_label_undefined = 184;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(184, this->_internal_default_trend_line_show_label_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive default_trend_line_show_r2_value = 185;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(185, _Internal::default_trend_line_show_r2_value(this),
        _Internal::default_trend_line_show_r2_value(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_trend_line_show_r2_value_undefined = 186;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(186, this->_internal_default_trend_line_show_r2_value_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive default_trend_line_type = 187;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(187, _Internal::default_trend_line_type(this),
        _Internal::default_trend_line_type(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_trend_line_type_undefined = 188;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(188, this->_internal_default_trend_line_type_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive bubble_value_labels_axis = 189;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(189, _Internal::bubble_value_labels_axis(this),
        _Internal::bubble_value_labels_axis(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool bubble_value_labels_axis_undefined = 190;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(190, this->_internal_bubble_value_labels_axis_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecIntegerArchive scatter_value_labels_axis = 191;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(191, _Internal::scatter_value_labels_axis(this),
        _Internal::scatter_value_labels_axis(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool scatter_value_labels_axis_undefined = 192;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(192, this->_internal_scatter_value_labels_axis_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecDoubleArchive pie_wedge_explosion = 193;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(193, _Internal::pie_wedge_explosion(this),
        _Internal::pie_wedge_explosion(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool pie_wedge_explosion_undefined = 194;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(194, this->_internal_pie_wedge_explosion_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive default_y_axis_ordinal = 195;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(195, _Internal::default_y_axis_ordinal(this),
        _Internal::default_y_axis_ordinal(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool default_y_axis_ordinal_undefined = 196;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(196, this->_internal_default_y_axis_ordinal_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  return target;
}

size_t ChartSeriesNonStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSCHSOS.SpecFormatObjectArchive default10_date_format = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default10_date_format_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive default10_number_format = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default10_number_format_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive pie10_number_format = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie10_number_format_);
    }

    // optional .TSSSOS.SpecDoubleArchive pie23_label_explosion = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie23_label_explosion_);
    }

    // optional .TSSSOS.SpecDoubleArchive bubble_adjustment_scale = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_adjustment_scale_);
    }

    // optional .TSCHSOS.SpecFormatObjectArchive default_date_format = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_date_format_);
    }

    // optional .TSCHSOS.SpecFormatObjectArchive default_duration_format = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_duration_format_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_enable_callout_line = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_enable_callout_line_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive bar_enable_callout_line = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive bubble_enable_callout_line = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_enable_callout_line = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive line_enable_callout_line = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive pie_enable_callout_line = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_enable_callout_line = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_area_enable_callout_line = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stacked_area_enable_callout_line_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_bar_enable_callout_line = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stacked_bar_enable_callout_line_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_custom_negative_data_);
    }

    // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_negative_data_scatter_x = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_custom_negative_data_scatter_x_);
    }

    // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_custom_positive_data_);
    }

    // optional .TSCHSOS.SpecChartErrorBarCustomDataArchive default_error_bar_custom_positive_data_scatter_x = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_custom_positive_data_scatter_x_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_fixed_value_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_fixed_value_scatter_x = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_fixed_value_scatter_x_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_percent_value_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_percent_value_scatter_x = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_percent_value_scatter_x_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting = 49;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_setting_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_error_bar_setting_scatter_x = 51;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_setting_scatter_x_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value = 53;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_std_dev_value_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_error_bar_std_dev_value_scatter_x = 55;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_std_dev_value_scatter_x_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_error_bar_type = 57;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_error_bar_type_scatter_x = 59;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_type_scatter_x_);
    }

    // optional .TSSSOS.SpecDoubleArchive pie_label_explosion = 61;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_label_explosion_);
    }

    // optional .TSSSOS.SpecIntegerArchive bubble_line_type = 63;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_line_type_);
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecIntegerArchive line_line_type = 65;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_line_line_type = 67;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_line_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive radar_area_line_type = 69;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_line_type = 71;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_line_type_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive default_number_format = 73;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_number_format_);
    }

    // optional .TSCHSOS.SpecNumberFormatArchive pie_number_format = 75;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_number_format_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_number_format_type = 77;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_number_format_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive pie_number_format_type = 79;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_number_format_type_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSCHSOS.SpecNumberFormatArchive stacked_percent_number_format = 81;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stacked_percent_number_format_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_series_type = 83;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_series_type_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_error_bar = 85;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_error_bar_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_error_bar_scatter_x = 87;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_error_bar_scatter_x_);
    }

    // optional .TSSSOS.SpecBoolArchive bubble_show_labels_in_front = 89;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_show_labels_in_front_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_labels_in_front = 91;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_labels_in_front_);
    }

    // optional .TSSSOS.SpecBoolArchive scatter_show_line = 93;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_show_line_);
    }

    // optional .TSSSOS.SpecBoolArchive bubble_show_negative_data = 95;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_show_negative_data_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecBoolArchive bubble_show_series_labels = 97;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_show_series_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive pie_show_series_labels = 99;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_show_series_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive scatter_show_series_labels = 101;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_show_series_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive area_show_symbol = 103;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_show_symbol_);
    }

    // optional .TSSSOS.SpecBoolArchive line_show_symbol = 105;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_show_symbol_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_area_show_symbol = 107;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_area_show_symbol_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_line_show_symbol = 109;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_line_show_symbol_);
    }

    // optional .TSSSOS.SpecBoolArchive radar_area_show_symbol = 111;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_show_symbol_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecBoolArchive scatter_show_symbol = 113;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_show_symbol_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_trend_line = 115;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_trend_line_);
    }

    // optional .TSSSOS.SpecBoolArchive area_show_value_labels = 117;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive bar_show_value_labels = 119;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive bubble_show_value_labels = 121;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_value_labels = 123;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive line_show_value_labels = 125;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_show_value_labels = 127;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_show_value_labels_);
    }

  }
  cached_has_bits = _impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecBoolArchive pie_show_value_labels = 129;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive radar_show_value_labels = 131;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_show_value_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive scatter_show_value_labels = 133;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_show_value_labels_);
    }

    // optional .TSSSOS.SpecIntegerArchive bubble_size_dimension = 135;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_size_dimension_);
    }

    // optional .TSSSOS.SpecBoolArchive area_stack_labels = 137;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive bar_stack_labels = 139;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive bubble_stack_labels = 141;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive default_stack_labels = 143;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_stack_labels_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecBoolArchive line_stack_labels = 145;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive pie_stack_labels = 147;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive scatter_stack_labels = 149;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive stacked_area_stack_labels = 151;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stacked_area_stack_labels_);
    }

    // optional .TSSSOS.SpecBoolArchive stacked_bar_stack_labels = 153;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stacked_bar_stack_labels_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_symbol_type = 155;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_symbol_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive line_symbol_type = 157;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_symbol_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_area_symbol_type = 159;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_area_symbol_type_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecIntegerArchive mixed_line_symbol_type = 161;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_line_symbol_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive radar_area_symbol_type = 163;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_symbol_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_symbol_type = 165;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_symbol_type_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_x = 167;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_equation_offset_x_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_trend_line_equation_offset_y = 169;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_equation_offset_y_);
    }

    // optional .TSSSOS.SpecStringArchive default_trend_line_label_string = 171;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_label_string_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_trend_line_order = 173;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_order_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_trend_line_period = 175;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_period_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_x = 177;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_r_squared_offset_x_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_trend_line_r_squared_offset_y = 179;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_r_squared_offset_y_);
    }

    // optional .TSSSOS.SpecBoolArchive default_trend_line_show_equation = 181;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_show_equation_);
    }

    // optional .TSSSOS.SpecBoolArchive default_trend_line_show_label = 183;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_show_label_);
    }

    // optional .TSSSOS.SpecBoolArchive default_trend_line_show_r2_value = 185;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_show_r2_value_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_trend_line_type = 187;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_type_);
    }

    // optional .TSSSOS.SpecIntegerArchive bubble_value_labels_axis = 189;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_value_labels_axis_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_value_labels_axis = 191;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_value_labels_axis_);
    }

  }
  cached_has_bits = _impl_._has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecDoubleArchive pie_wedge_explosion = 193;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_wedge_explosion_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_y_axis_ordinal = 195;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_y_axis_ordinal_);
    }

    // optional bool default10_date_format_undefined = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool default10_number_format_undefined = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool pie10_number_format_undefined = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool pie23_label_explosion_undefined = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool bubble_adjustment_scale_undefined = 10;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool default_date_format_undefined = 12;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool default_duration_format_undefined = 14;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional bool area_enable_callout_line_undefined = 16;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool bar_enable_callout_line_undefined = 18;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_enable_callout_line_undefined = 20;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool default_enable_callout_line_undefined = 22;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool line_enable_callout_line_undefined = 24;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_enable_callout_line_undefined = 26;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_enable_callout_line_undefined = 28;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool stacked_area_enable_callout_line_undefined = 30;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_bar_enable_callout_line_undefined = 32;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_custom_negative_data_undefined = 34;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_custom_negative_data_scatter_x_undefined = 36;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_custom_positive_data_undefined = 38;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_custom_positive_data_scatter_x_undefined = 40;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_fixed_value_undefined = 42;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_fixed_value_scatter_x_undefined = 44;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool default_error_bar_percent_value_undefined = 46;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_percent_value_scatter_x_undefined = 48;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_setting_undefined = 50;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_setting_scatter_x_undefined = 52;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_std_dev_value_undefined = 54;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_std_dev_value_scatter_x_undefined = 56;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_type_undefined = 58;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_type_scatter_x_undefined = 60;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool pie_label_explosion_undefined = 62;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_line_type_undefined = 64;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool line_line_type_undefined = 66;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_line_type_undefined = 68;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_line_type_undefined = 70;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_line_type_undefined = 72;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool default_number_format_undefined = 74;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool pie_number_format_undefined = 76;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool default_number_format_type_undefined = 78;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool pie_number_format_type_undefined = 80;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_percent_number_format_undefined = 82;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool default_series_type_undefined = 84;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_error_bar_undefined = 86;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_error_bar_scatter_x_undefined = 88;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_show_labels_in_front_undefined = 90;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_labels_in_front_undefined = 92;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool scatter_show_line_undefined = 94;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_show_negative_data_undefined = 96;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_show_series_labels_undefined = 98;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_show_series_labels_undefined = 100;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_show_series_labels_undefined = 102;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool area_show_symbol_undefined = 104;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool line_show_symbol_undefined = 106;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_show_symbol_undefined = 108;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool mixed_line_show_symbol_undefined = 110;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_show_symbol_undefined = 112;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_show_symbol_undefined = 114;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_trend_line_undefined = 116;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool area_show_value_labels_undefined = 118;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool bar_show_value_labels_undefined = 120;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_show_value_labels_undefined = 122;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_value_labels_undefined = 124;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool line_show_value_labels_undefined = 126;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_show_value_labels_undefined = 128;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool pie_show_value_labels_undefined = 130;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool radar_show_value_labels_undefined = 132;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_show_value_labels_undefined = 134;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_size_dimension_undefined = 136;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool area_stack_labels_undefined = 138;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool bar_stack_labels_undefined = 140;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool bubble_stack_labels_undefined = 142;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool default_stack_labels_undefined = 144;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool line_stack_labels_undefined = 146;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool pie_stack_labels_undefined = 148;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_stack_labels_undefined = 150;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_area_stack_labels_undefined = 152;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_bar_stack_labels_undefined = 154;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool area_symbol_type_undefined = 156;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool line_symbol_type_undefined = 158;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_symbol_type_undefined = 160;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_symbol_type_undefined = 162;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_symbol_type_undefined = 164;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_symbol_type_undefined = 166;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_equation_offset_x_undefined = 168;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_equation_offset_y_undefined = 170;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_label_string_undefined = 172;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool default_trend_line_order_undefined = 174;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_period_undefined = 176;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_r_squared_offset_x_undefined = 178;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_r_squared_offset_y_undefined = 180;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_show_equation_undefined = 182;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_show_label_undefined = 184;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_show_r2_value_undefined = 186;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_type_undefined = 188;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[6];
  if (cached_has_bits & 0x0000000fu) {
    // optional bool bubble_value_labels_axis_undefined = 190;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_value_labels_axis_undefined = 192;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool pie_wedge_explosion_undefined = 194;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool default_y_axis_ordinal_undefined = 196;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChartSeriesNonStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChartSeriesNonStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChartSeriesNonStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ChartSeriesNonStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChartSeriesNonStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ChartSeriesNonStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_default10_date_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(
          from._internal_default10_date_format());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_default10_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(
          from._internal_default10_number_format());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_pie10_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(
          from._internal_pie10_number_format());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_pie23_label_explosion()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_pie23_label_explosion());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_bubble_adjustment_scale()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_bubble_adjustment_scale());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_default_date_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(
          from._internal_default_date_format());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_default_duration_format()->::TSCHSOS::SpecFormatObjectArchive::MergeFrom(
          from._internal_default_duration_format());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_area_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_area_enable_callout_line());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_bar_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_bar_enable_callout_line());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_bubble_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_bubble_enable_callout_line());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_default_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_enable_callout_line());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_line_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_line_enable_callout_line());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_pie_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_pie_enable_callout_line());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_scatter_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_scatter_enable_callout_line());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_stacked_area_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_stacked_area_enable_callout_line());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_stacked_bar_enable_callout_line()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_stacked_bar_enable_callout_line());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_default_error_bar_custom_negative_data()->::TSCHSOS::SpecChartErrorBarCustomDataArchive::MergeFrom(
          from._internal_default_error_bar_custom_negative_data());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_default_error_bar_custom_negative_data_scatter_x()->::TSCHSOS::SpecChartErrorBarCustomDataArchive::MergeFrom(
          from._internal_default_error_bar_custom_negative_data_scatter_x());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_default_error_bar_custom_positive_data()->::TSCHSOS::SpecChartErrorBarCustomDataArchive::MergeFrom(
          from._internal_default_error_bar_custom_positive_data());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_default_error_bar_custom_positive_data_scatter_x()->::TSCHSOS::SpecChartErrorBarCustomDataArchive::MergeFrom(
          from._internal_default_error_bar_custom_positive_data_scatter_x());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_default_error_bar_fixed_value()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_error_bar_fixed_value());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_default_error_bar_fixed_value_scatter_x()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_error_bar_fixed_value_scatter_x());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_default_error_bar_percent_value()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_error_bar_percent_value());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_default_error_bar_percent_value_scatter_x()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_error_bar_percent_value_scatter_x());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_default_error_bar_setting()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_error_bar_setting());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_default_error_bar_setting_scatter_x()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_error_bar_setting_scatter_x());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_mutable_default_error_bar_std_dev_value()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_error_bar_std_dev_value());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_mutable_default_error_bar_std_dev_value_scatter_x()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_error_bar_std_dev_value_scatter_x());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_mutable_default_error_bar_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_error_bar_type());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_mutable_default_error_bar_type_scatter_x()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_error_bar_type_scatter_x());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_mutable_pie_label_explosion()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_pie_label_explosion());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_internal_mutable_bubble_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_bubble_line_type());
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_line_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_line_line_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_mixed_line_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_mixed_line_line_type());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_radar_area_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_radar_area_line_type());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_scatter_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_scatter_line_type());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_default_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(
          from._internal_default_number_format());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_pie_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(
          from._internal_pie_number_format());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_default_number_format_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_number_format_type());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_pie_number_format_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_pie_number_format_type());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_stacked_percent_number_format()->::TSCHSOS::SpecNumberFormatArchive::MergeFrom(
          from._internal_stacked_percent_number_format());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_default_series_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_series_type());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_default_show_error_bar()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_error_bar());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_default_show_error_bar_scatter_x()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_error_bar_scatter_x());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_bubble_show_labels_in_front()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_bubble_show_labels_in_front());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_default_show_labels_in_front()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_labels_in_front());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_scatter_show_line()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_scatter_show_line());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_bubble_show_negative_data()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_bubble_show_negative_data());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_bubble_show_series_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_bubble_show_series_labels());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_pie_show_series_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_pie_show_series_labels());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_scatter_show_series_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_scatter_show_series_labels());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_area_show_symbol()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_area_show_symbol());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_line_show_symbol()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_line_show_symbol());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_mixed_area_show_symbol()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_mixed_area_show_symbol());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_mixed_line_show_symbol()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_mixed_line_show_symbol());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_radar_area_show_symbol()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_radar_area_show_symbol());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_scatter_show_symbol()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_scatter_show_symbol());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_default_show_trend_line()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_trend_line());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_mutable_area_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_area_show_value_labels());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_mutable_bar_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_bar_show_value_labels());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_mutable_bubble_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_bubble_show_value_labels());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_mutable_default_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_value_labels());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_mutable_line_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_line_show_value_labels());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_internal_mutable_mixed_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_mixed_show_value_labels());
    }
  }
  cached_has_bits = from._impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_pie_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_pie_show_value_labels());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_radar_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_radar_show_value_labels());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_scatter_show_value_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_scatter_show_value_labels());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_bubble_size_dimension()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_bubble_size_dimension());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_area_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_area_stack_labels());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_bar_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_bar_stack_labels());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_bubble_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_bubble_stack_labels());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_default_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_stack_labels());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_line_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_line_stack_labels());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_pie_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_pie_stack_labels());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_scatter_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_scatter_stack_labels());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_stacked_area_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_stacked_area_stack_labels());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_stacked_bar_stack_labels()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_stacked_bar_stack_labels());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_area_symbol_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_area_symbol_type());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_line_symbol_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_line_symbol_type());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_mixed_area_symbol_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_mixed_area_symbol_type());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_mixed_line_symbol_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_mixed_line_symbol_type());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_radar_area_symbol_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_radar_area_symbol_type());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_scatter_symbol_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_scatter_symbol_type());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_default_trend_line_equation_offset_x()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_trend_line_equation_offset_x());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_default_trend_line_equation_offset_y()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_trend_line_equation_offset_y());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_default_trend_line_label_string()->::TSSSOS::SpecStringArchive::MergeFrom(
          from._internal_default_trend_line_label_string());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_default_trend_line_order()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_trend_line_order());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_default_trend_line_period()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_trend_line_period());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_default_trend_line_r_squared_offset_x()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_trend_line_r_squared_offset_x());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_default_trend_line_r_squared_offset_y()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_trend_line_r_squared_offset_y());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_mutable_default_trend_line_show_equation()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_trend_line_show_equation());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_mutable_default_trend_line_show_label()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_trend_line_show_label());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_mutable_default_trend_line_show_r2_value()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_trend_line_show_r2_value());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_mutable_default_trend_line_type()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_trend_line_type());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_mutable_bubble_value_labels_axis()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_bubble_value_labels_axis());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_internal_mutable_scatter_value_labels_axis()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_scatter_value_labels_axis());
    }
  }
  cached_has_bits = from._impl_._has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_pie_wedge_explosion()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_pie_wedge_explosion());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_default_y_axis_ordinal()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_y_axis_ordinal());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.default10_date_format_undefined_ = from._impl_.default10_date_format_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.default10_number_format_undefined_ = from._impl_.default10_number_format_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.pie10_number_format_undefined_ = from._impl_.pie10_number_format_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.pie23_label_explosion_undefined_ = from._impl_.pie23_label_explosion_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.bubble_adjustment_scale_undefined_ = from._impl_.bubble_adjustment_scale_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.default_date_format_undefined_ = from._impl_.default_date_format_undefined_;
    }
    _this->_impl_._has_bits_[3] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.default_duration_format_undefined_ = from._impl_.default_duration_format_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.area_enable_callout_line_undefined_ = from._impl_.area_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.bar_enable_callout_line_undefined_ = from._impl_.bar_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.bubble_enable_callout_line_undefined_ = from._impl_.bubble_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.default_enable_callout_line_undefined_ = from._impl_.default_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.line_enable_callout_line_undefined_ = from._impl_.line_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.pie_enable_callout_line_undefined_ = from._impl_.pie_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.scatter_enable_callout_line_undefined_ = from._impl_.scatter_enable_callout_line_undefined_;
    }
    _this->_impl_._has_bits_[3] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.stacked_area_enable_callout_line_undefined_ = from._impl_.stacked_area_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.stacked_bar_enable_callout_line_undefined_ = from._impl_.stacked_bar_enable_callout_line_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.default_error_bar_custom_negative_data_undefined_ = from._impl_.default_error_bar_custom_negative_data_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.default_error_bar_custom_negative_data_scatter_x_undefined_ = from._impl_.default_error_bar_custom_negative_data_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.default_error_bar_custom_positive_data_undefined_ = from._impl_.default_error_bar_custom_positive_data_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.default_error_bar_custom_positive_data_scatter_x_undefined_ = from._impl_.default_error_bar_custom_positive_data_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.default_error_bar_fixed_value_undefined_ = from._impl_.default_error_bar_fixed_value_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.default_error_bar_fixed_value_scatter_x_undefined_ = from._impl_.default_error_bar_fixed_value_scatter_x_undefined_;
    }
    _this->_impl_._has_bits_[3] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.default_error_bar_percent_value_undefined_ = from._impl_.default_error_bar_percent_value_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.default_error_bar_percent_value_scatter_x_undefined_ = from._impl_.default_error_bar_percent_value_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.default_error_bar_setting_undefined_ = from._impl_.default_error_bar_setting_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.default_error_bar_setting_scatter_x_undefined_ = from._impl_.default_error_bar_setting_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.default_error_bar_std_dev_value_undefined_ = from._impl_.default_error_bar_std_dev_value_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.default_error_bar_std_dev_value_scatter_x_undefined_ = from._impl_.default_error_bar_std_dev_value_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.default_error_bar_type_undefined_ = from._impl_.default_error_bar_type_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.default_error_bar_type_scatter_x_undefined_ = from._impl_.default_error_bar_type_scatter_x_undefined_;
    }
    _this->_impl_._has_bits_[3] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.pie_label_explosion_undefined_ = from._impl_.pie_label_explosion_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.bubble_line_type_undefined_ = from._impl_.bubble_line_type_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.line_line_type_undefined_ = from._impl_.line_line_type_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.mixed_line_line_type_undefined_ = from._impl_.mixed_line_line_type_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.radar_area_line_type_undefined_ = from._impl_.radar_area_line_type_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.scatter_line_type_undefined_ = from._impl_.scatter_line_type_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.default_number_format_undefined_ = from._impl_.default_number_format_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.pie_number_format_undefined_ = from._impl_.pie_number_format_undefined_;
    }
    _this->_impl_._has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.default_number_format_type_undefined_ = from._impl_.default_number_format_type_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.pie_number_format_type_undefined_ = from._impl_.pie_number_format_type_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.stacked_percent_number_format_undefined_ = from._impl_.stacked_percent_number_format_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.default_series_type_undefined_ = from._impl_.default_series_type_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.default_show_error_bar_undefined_ = from._impl_.default_show_error_bar_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.default_show_error_bar_scatter_x_undefined_ = from._impl_.default_show_error_bar_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.bubble_show_labels_in_front_undefined_ = from._impl_.bubble_show_labels_in_front_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.default_show_labels_in_front_undefined_ = from._impl_.default_show_labels_in_front_undefined_;
    }
    _this->_impl_._has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.scatter_show_line_undefined_ = from._impl_.scatter_show_line_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.bubble_show_negative_data_undefined_ = from._impl_.bubble_show_negative_data_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.bubble_show_series_labels_undefined_ = from._impl_.bubble_show_series_labels_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.pie_show_series_labels_undefined_ = from._impl_.pie_show_series_labels_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.scatter_show_series_labels_undefined_ = from._impl_.scatter_show_series_labels_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.area_show_symbol_undefined_ = from._impl_.area_show_symbol_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.line_show_symbol_undefined_ = from._impl_.line_show_symbol_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.mixed_area_show_symbol_undefined_ = from._impl_.mixed_area_show_symbol_undefined_;
    }
    _this->_impl_._has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.mixed_line_show_symbol_undefined_ = from._impl_.mixed_line_show_symbol_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.radar_area_show_symbol_undefined_ = from._impl_.radar_area_show_symbol_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.scatter_show_symbol_undefined_ = from._impl_.scatter_show_symbol_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.default_show_trend_line_undefined_ = from._impl_.default_show_trend_line_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.area_show_value_labels_undefined_ = from._impl_.area_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.bar_show_value_labels_undefined_ = from._impl_.bar_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.bubble_show_value_labels_undefined_ = from._impl_.bubble_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.default_show_value_labels_undefined_ = from._impl_.default_show_value_labels_undefined_;
    }
    _this->_impl_._has_bits_[4] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.line_show_value_labels_undefined_ = from._impl_.line_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mixed_show_value_labels_undefined_ = from._impl_.mixed_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.pie_show_value_labels_undefined_ = from._impl_.pie_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.radar_show_value_labels_undefined_ = from._impl_.radar_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.scatter_show_value_labels_undefined_ = from._impl_.scatter_show_value_labels_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.bubble_size_dimension_undefined_ = from._impl_.bubble_size_dimension_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.area_stack_labels_undefined_ = from._impl_.area_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.bar_stack_labels_undefined_ = from._impl_.bar_stack_labels_undefined_;
    }
    _this->_impl_._has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.bubble_stack_labels_undefined_ = from._impl_.bubble_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.default_stack_labels_undefined_ = from._impl_.default_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.line_stack_labels_undefined_ = from._impl_.line_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.pie_stack_labels_undefined_ = from._impl_.pie_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.scatter_stack_labels_undefined_ = from._impl_.scatter_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.stacked_area_stack_labels_undefined_ = from._impl_.stacked_area_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.stacked_bar_stack_labels_undefined_ = from._impl_.stacked_bar_stack_labels_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.area_symbol_type_undefined_ = from._impl_.area_symbol_type_undefined_;
    }
    _this->_impl_._has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.line_symbol_type_undefined_ = from._impl_.line_symbol_type_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.mixed_area_symbol_type_undefined_ = from._impl_.mixed_area_symbol_type_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.mixed_line_symbol_type_undefined_ = from._impl_.mixed_line_symbol_type_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.radar_area_symbol_type_undefined_ = from._impl_.radar_area_symbol_type_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.scatter_symbol_type_undefined_ = from._impl_.scatter_symbol_type_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.default_trend_line_equation_offset_x_undefined_ = from._impl_.default_trend_line_equation_offset_x_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.default_trend_line_equation_offset_y_undefined_ = from._impl_.default_trend_line_equation_offset_y_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.default_trend_line_label_string_undefined_ = from._impl_.default_trend_line_label_string_undefined_;
    }
    _this->_impl_._has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.default_trend_line_order_undefined_ = from._impl_.default_trend_line_order_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.default_trend_line_period_undefined_ = from._impl_.default_trend_line_period_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.default_trend_line_r_squared_offset_x_undefined_ = from._impl_.default_trend_line_r_squared_offset_x_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.default_trend_line_r_squared_offset_y_undefined_ = from._impl_.default_trend_line_r_squared_offset_y_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.default_trend_line_show_equation_undefined_ = from._impl_.default_trend_line_show_equation_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.default_trend_line_show_label_undefined_ = from._impl_.default_trend_line_show_label_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.default_trend_line_show_r2_value_undefined_ = from._impl_.default_trend_line_show_r2_value_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.default_trend_line_type_undefined_ = from._impl_.default_trend_line_type_undefined_;
    }
    _this->_impl_._has_bits_[5] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[6];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.bubble_value_labels_axis_undefined_ = from._impl_.bubble_value_labels_axis_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.scatter_value_labels_axis_undefined_ = from._impl_.scatter_value_labels_axis_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.pie_wedge_explosion_undefined_ = from._impl_.pie_wedge_explosion_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.default_y_axis_ordinal_undefined_ = from._impl_.default_y_axis_ordinal_undefined_;
    }
    _this->_impl_._has_bits_[6] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChartSeriesNonStylePropertyChangeSetArchive::CopyFrom(const ChartSeriesNonStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartSeriesNonStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default10_date_format()) {
    if (!_impl_.default10_date_format_->IsInitialized()) return false;
  }
  if (_internal_has_default10_number_format()) {
    if (!_impl_.default10_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_pie10_number_format()) {
    if (!_impl_.pie10_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_pie23_label_explosion()) {
    if (!_impl_.pie23_label_explosion_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_adjustment_scale()) {
    if (!_impl_.bubble_adjustment_scale_->IsInitialized()) return false;
  }
  if (_internal_has_default_date_format()) {
    if (!_impl_.default_date_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_duration_format()) {
    if (!_impl_.default_duration_format_->IsInitialized()) return false;
  }
  if (_internal_has_area_enable_callout_line()) {
    if (!_impl_.area_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_bar_enable_callout_line()) {
    if (!_impl_.bar_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_enable_callout_line()) {
    if (!_impl_.bubble_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_default_enable_callout_line()) {
    if (!_impl_.default_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_line_enable_callout_line()) {
    if (!_impl_.line_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_pie_enable_callout_line()) {
    if (!_impl_.pie_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_enable_callout_line()) {
    if (!_impl_.scatter_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_area_enable_callout_line()) {
    if (!_impl_.stacked_area_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_bar_enable_callout_line()) {
    if (!_impl_.stacked_bar_enable_callout_line_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_custom_negative_data()) {
    if (!_impl_.default_error_bar_custom_negative_data_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_custom_negative_data_scatter_x()) {
    if (!_impl_.default_error_bar_custom_negative_data_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_custom_positive_data()) {
    if (!_impl_.default_error_bar_custom_positive_data_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_custom_positive_data_scatter_x()) {
    if (!_impl_.default_error_bar_custom_positive_data_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_fixed_value()) {
    if (!_impl_.default_error_bar_fixed_value_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_fixed_value_scatter_x()) {
    if (!_impl_.default_error_bar_fixed_value_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_percent_value()) {
    if (!_impl_.default_error_bar_percent_value_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_percent_value_scatter_x()) {
    if (!_impl_.default_error_bar_percent_value_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_setting()) {
    if (!_impl_.default_error_bar_setting_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_setting_scatter_x()) {
    if (!_impl_.default_error_bar_setting_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_std_dev_value()) {
    if (!_impl_.default_error_bar_std_dev_value_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_std_dev_value_scatter_x()) {
    if (!_impl_.default_error_bar_std_dev_value_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_type()) {
    if (!_impl_.default_error_bar_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_type_scatter_x()) {
    if (!_impl_.default_error_bar_type_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_pie_label_explosion()) {
    if (!_impl_.pie_label_explosion_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_line_type()) {
    if (!_impl_.bubble_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_line_line_type()) {
    if (!_impl_.line_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_line_type()) {
    if (!_impl_.mixed_line_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_line_type()) {
    if (!_impl_.radar_area_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_line_type()) {
    if (!_impl_.scatter_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_number_format()) {
    if (!_impl_.default_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_pie_number_format()) {
    if (!_impl_.pie_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_number_format_type()) {
    if (!_impl_.default_number_format_type_->IsInitialized()) return false;
  }
  if (_internal_has_pie_number_format_type()) {
    if (!_impl_.pie_number_format_type_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_percent_number_format()) {
    if (!_impl_.stacked_percent_number_format_->IsInitialized()) return false;
  }
  if (_internal_has_default_series_type()) {
    if (!_impl_.default_series_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_error_bar()) {
    if (!_impl_.default_show_error_bar_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_error_bar_scatter_x()) {
    if (!_impl_.default_show_error_bar_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_show_labels_in_front()) {
    if (!_impl_.bubble_show_labels_in_front_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_labels_in_front()) {
    if (!_impl_.default_show_labels_in_front_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_show_line()) {
    if (!_impl_.scatter_show_line_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_show_negative_data()) {
    if (!_impl_.bubble_show_negative_data_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_show_series_labels()) {
    if (!_impl_.bubble_show_series_labels_->IsInitialized()) return false;
  }
  if (_internal_has_pie_show_series_labels()) {
    if (!_impl_.pie_show_series_labels_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_show_series_labels()) {
    if (!_impl_.scatter_show_series_labels_->IsInitialized()) return false;
  }
  if (_internal_has_area_show_symbol()) {
    if (!_impl_.area_show_symbol_->IsInitialized()) return false;
  }
  if (_internal_has_line_show_symbol()) {
    if (!_impl_.line_show_symbol_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_show_symbol()) {
    if (!_impl_.mixed_area_show_symbol_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_show_symbol()) {
    if (!_impl_.mixed_line_show_symbol_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_show_symbol()) {
    if (!_impl_.radar_area_show_symbol_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_show_symbol()) {
    if (!_impl_.scatter_show_symbol_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_trend_line()) {
    if (!_impl_.default_show_trend_line_->IsInitialized()) return false;
  }
  if (_internal_has_area_show_value_labels()) {
    if (!_impl_.area_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_bar_show_value_labels()) {
    if (!_impl_.bar_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_show_value_labels()) {
    if (!_impl_.bubble_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_value_labels()) {
    if (!_impl_.default_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_line_show_value_labels()) {
    if (!_impl_.line_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_show_value_labels()) {
    if (!_impl_.mixed_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_pie_show_value_labels()) {
    if (!_impl_.pie_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_radar_show_value_labels()) {
    if (!_impl_.radar_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_show_value_labels()) {
    if (!_impl_.scatter_show_value_labels_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_size_dimension()) {
    if (!_impl_.bubble_size_dimension_->IsInitialized()) return false;
  }
  if (_internal_has_area_stack_labels()) {
    if (!_impl_.area_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_bar_stack_labels()) {
    if (!_impl_.bar_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_stack_labels()) {
    if (!_impl_.bubble_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_default_stack_labels()) {
    if (!_impl_.default_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_line_stack_labels()) {
    if (!_impl_.line_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_pie_stack_labels()) {
    if (!_impl_.pie_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_stack_labels()) {
    if (!_impl_.scatter_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_area_stack_labels()) {
    if (!_impl_.stacked_area_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_bar_stack_labels()) {
    if (!_impl_.stacked_bar_stack_labels_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_type()) {
    if (!_impl_.area_symbol_type_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_type()) {
    if (!_impl_.line_symbol_type_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_type()) {
    if (!_impl_.mixed_area_symbol_type_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_type()) {
    if (!_impl_.mixed_line_symbol_type_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_symbol_type()) {
    if (!_impl_.radar_area_symbol_type_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_symbol_type()) {
    if (!_impl_.scatter_symbol_type_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_equation_offset_x()) {
    if (!_impl_.default_trend_line_equation_offset_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_equation_offset_y()) {
    if (!_impl_.default_trend_line_equation_offset_y_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_label_string()) {
    if (!_impl_.default_trend_line_label_string_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_order()) {
    if (!_impl_.default_trend_line_order_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_period()) {
    if (!_impl_.default_trend_line_period_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_r_squared_offset_x()) {
    if (!_impl_.default_trend_line_r_squared_offset_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_r_squared_offset_y()) {
    if (!_impl_.default_trend_line_r_squared_offset_y_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_show_equation()) {
    if (!_impl_.default_trend_line_show_equation_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_show_label()) {
    if (!_impl_.default_trend_line_show_label_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_show_r2_value()) {
    if (!_impl_.default_trend_line_show_r2_value_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_type()) {
    if (!_impl_.default_trend_line_type_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_value_labels_axis()) {
    if (!_impl_.bubble_value_labels_axis_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_value_labels_axis()) {
    if (!_impl_.scatter_value_labels_axis_->IsInitialized()) return false;
  }
  if (_internal_has_pie_wedge_explosion()) {
    if (!_impl_.pie_wedge_explosion_->IsInitialized()) return false;
  }
  if (_internal_has_default_y_axis_ordinal()) {
    if (!_impl_.default_y_axis_ordinal_->IsInitialized()) return false;
  }
  return true;
}

void ChartSeriesNonStylePropertyChangeSetArchive::InternalSwap(ChartSeriesNonStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  swap(_impl_._has_bits_[2], other->_impl_._has_bits_[2]);
  swap(_impl_._has_bits_[3], other->_impl_._has_bits_[3]);
  swap(_impl_._has_bits_[4], other->_impl_._has_bits_[4]);
  swap(_impl_._has_bits_[5], other->_impl_._has_bits_[5]);
  swap(_impl_._has_bits_[6], other->_impl_._has_bits_[6]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default_y_axis_ordinal_undefined_)
      + sizeof(ChartSeriesNonStylePropertyChangeSetArchive::_impl_.default_y_axis_ordinal_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartSeriesNonStylePropertyChangeSetArchive, _impl_.default10_date_format_)>(
          reinterpret_cast<char*>(&_impl_.default10_date_format_),
          reinterpret_cast<char*>(&other->_impl_.default10_date_format_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartSeriesNonStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[19]);
}

// ===================================================================

class ChartSeriesStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartSeriesStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSDSOS::SpecLineEndArchive& default_callout_line_end_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_callout_line_end_line_end(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default_callout_line_end_line_end_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 4194304u;
  }
  static const ::TSDSOS::SpecLineEndArchive& default_callout_line_start_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_callout_line_start_line_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_default_callout_line_start_line_end_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 8388608u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_callout_line_stroke_style(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_callout_line_stroke_style(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_callout_line_stroke_style_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 16777216u;
  }
  static const ::TSDSOS::SpecLineEndArchive& default_error_bar_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_line_end(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_default_error_bar_line_end_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 33554432u;
  }
  static const ::TSDSOS::SpecLineEndArchive& default_error_bar_line_end_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_line_end_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default_error_bar_line_end_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 67108864u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_error_bar_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_default_error_bar_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 134217728u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_spacing(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_default_error_bar_spacing_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 268435456u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_error_bar_spacing_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_spacing_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_default_error_bar_spacing_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 536870912u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_error_bar_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_default_error_bar_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 1073741824u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_error_bar_stroke_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_error_bar_stroke_scatter_x(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_default_error_bar_stroke_scatter_x_undefined(HasBits* has_bits) {
    (*has_bits)[3] |= 2147483648u;
  }
  static const ::TSDSOS::SpecFillArchive& area3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area3d_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_area3d_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1u;
  }
  static const ::TSDSOS::SpecFillArchive& bar3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar3d_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_bar3d_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2u;
  }
  static const ::TSDSOS::SpecFillArchive& column3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_column3d_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_column3d_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4u;
  }
  static const ::TSDSOS::SpecFillArchive& line3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line3d_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_line3d_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8u;
  }
  static const ::TSDSOS::SpecFillArchive& pie3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie3d_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_pie3d_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16u;
  }
  static const ::TSDSOS::SpecFillArchive& area_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_area_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 32u;
  }
  static const ::TSDSOS::SpecFillArchive& bar_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_bar_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 64u;
  }
  static const ::TSDSOS::SpecFillArchive& column_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_column_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_column_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 128u;
  }
  static const ::TSDSOS::SpecFillArchive& default_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_default_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 256u;
  }
  static const ::TSDSOS::SpecFillArchive& mixed_area_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_mixed_area_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 512u;
  }
  static const ::TSDSOS::SpecFillArchive& mixed_column_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_column_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_mixed_column_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1024u;
  }
  static const ::TSDSOS::SpecFillArchive& pie_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_pie_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2048u;
  }
  static const ::TSDSOS::SpecFillArchive& radar_area_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_radar_area_fill_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4096u;
  }
  static const ::TSSSOS::SpecDoubleArchive& radar_area_fill_use_series_stroke_alpha_multiplier(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_fill_use_series_stroke_alpha_multiplier(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_radar_area_fill_use_series_stroke_alpha_multiplier_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8192u;
  }
  static const ::TSSSOS::SpecBoolArchive& radar_area_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_radar_area_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16384u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_area_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 32768u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bar_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_bar_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 65536u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_default_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 131072u;
  }
  static const ::TSSSOS::SpecIntegerArchive& donut_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_donut_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_donut_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 262144u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_line_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 524288u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_mixed_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1048576u;
  }
  static const ::TSSSOS::SpecIntegerArchive& pie_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_pie_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2097152u;
  }
  static const ::TSSSOS::SpecIntegerArchive& radar_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_radar_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 4194304u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_opacity(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_default_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 8388608u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_area_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 16777216u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bar_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_bar_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 33554432u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static void set_has_default_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 67108864u;
  }
  static const ::TSSSOS::SpecIntegerArchive& donut_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_donut_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static void set_has_donut_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 134217728u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static void set_has_mixed_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 268435456u;
  }
  static const ::TSSSOS::SpecIntegerArchive& pie_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static void set_has_pie_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 536870912u;
  }
  static const ::TSSSOS::SpecIntegerArchive& radar_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_outside_label_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static void set_has_radar_outside_label_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 1073741824u;
  }
  static const ::TSDSOS::SpecShadowArchive& area3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area3d_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static void set_has_area3d_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[4] |= 2147483648u;
  }
  static const ::TSDSOS::SpecShadowArchive& bar3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar3d_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static void set_has_bar3d_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1u;
  }
  static const ::TSDSOS::SpecShadowArchive& column3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_column3d_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static void set_has_column3d_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2u;
  }
  static const ::TSDSOS::SpecShadowArchive& line3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line3d_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static void set_has_line3d_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4u;
  }
  static const ::TSDSOS::SpecShadowArchive& pie3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie3d_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static void set_has_pie3d_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8u;
  }
  static const ::TSDSOS::SpecShadowArchive& area_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static void set_has_area_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16u;
  }
  static const ::TSDSOS::SpecShadowArchive& bar_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static void set_has_bar_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 32u;
  }
  static const ::TSDSOS::SpecShadowArchive& bubble_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static void set_has_bubble_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 64u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static void set_has_default_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 128u;
  }
  static const ::TSDSOS::SpecShadowArchive& line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static void set_has_line_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 256u;
  }
  static const ::TSDSOS::SpecShadowArchive& mixed_area_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static void set_has_mixed_area_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 512u;
  }
  static const ::TSDSOS::SpecShadowArchive& mixed_column_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_column_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static void set_has_mixed_column_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1024u;
  }
  static const ::TSDSOS::SpecShadowArchive& mixed_line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static void set_has_mixed_line_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2048u;
  }
  static const ::TSDSOS::SpecShadowArchive& pie_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static void set_has_pie_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4096u;
  }
  static const ::TSDSOS::SpecShadowArchive& radar_area_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
  static void set_has_radar_area_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8192u;
  }
  static const ::TSDSOS::SpecShadowArchive& scatter_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_shadow(HasBits* has_bits) {
    (*has_bits)[1] |= 16777216u;
  }
  static void set_has_scatter_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16384u;
  }
  static const ::TSDSOS::SpecStrokeArchive& area_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 33554432u;
  }
  static void set_has_area_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 32768u;
  }
  static const ::TSDSOS::SpecStrokeArchive& bar_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 67108864u;
  }
  static void set_has_bar_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 65536u;
  }
  static const ::TSDSOS::SpecStrokeArchive& bubble_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 134217728u;
  }
  static void set_has_bubble_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 131072u;
  }
  static const ::TSDSOS::SpecStrokeArchive& line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 268435456u;
  }
  static void set_has_line_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 262144u;
  }
  static const ::TSDSOS::SpecStrokeArchive& mixed_area_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 536870912u;
  }
  static void set_has_mixed_area_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 524288u;
  }
  static const ::TSDSOS::SpecStrokeArchive& mixed_column_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_column_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 1073741824u;
  }
  static void set_has_mixed_column_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1048576u;
  }
  static const ::TSDSOS::SpecStrokeArchive& mixed_line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_stroke(HasBits* has_bits) {
    (*has_bits)[1] |= 2147483648u;
  }
  static void set_has_mixed_line_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2097152u;
  }
  static const ::TSDSOS::SpecStrokeArchive& pie_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_pie_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 1u;
  }
  static void set_has_pie_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 4194304u;
  }
  static const ::TSDSOS::SpecStrokeArchive& radar_area_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 2u;
  }
  static void set_has_radar_area_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 8388608u;
  }
  static const ::TSDSOS::SpecStrokeArchive& scatter_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 4u;
  }
  static void set_has_scatter_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 16777216u;
  }
  static const ::TSDSOS::SpecFillArchive& area_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 8u;
  }
  static void set_has_area_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 33554432u;
  }
  static const ::TSDSOS::SpecFillArchive& bubble_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_symbol_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 16u;
  }
  static void set_has_bubble_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 67108864u;
  }
  static const ::TSDSOS::SpecFillArchive& line_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 32u;
  }
  static void set_has_line_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 134217728u;
  }
  static const ::TSDSOS::SpecFillArchive& mixed_area_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 64u;
  }
  static void set_has_mixed_area_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 268435456u;
  }
  static const ::TSDSOS::SpecFillArchive& mixed_line_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 128u;
  }
  static void set_has_mixed_line_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 536870912u;
  }
  static const ::TSDSOS::SpecFillArchive& radar_area_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_symbol_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 256u;
  }
  static void set_has_radar_area_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 1073741824u;
  }
  static const ::TSDSOS::SpecFillArchive& scatter_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_symbol_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 512u;
  }
  static void set_has_scatter_symbol_fill_undefined(HasBits* has_bits) {
    (*has_bits)[5] |= 2147483648u;
  }
  static const ::TSSSOS::SpecBoolArchive& area_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_fill_use_series_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 1024u;
  }
  static void set_has_area_symbol_fill_use_series_fill_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 1u;
  }
  static const ::TSSSOS::SpecBoolArchive& line_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_fill_use_series_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 2048u;
  }
  static void set_has_line_symbol_fill_use_series_fill_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 2u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_area_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_fill_use_series_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 4096u;
  }
  static void set_has_mixed_area_symbol_fill_use_series_fill_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 4u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_line_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_fill_use_series_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 8192u;
  }
  static void set_has_mixed_line_symbol_fill_use_series_fill_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 8u;
  }
  static const ::TSSSOS::SpecBoolArchive& radar_area_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_symbol_fill_use_series_fill(HasBits* has_bits) {
    (*has_bits)[2] |= 16384u;
  }
  static void set_has_radar_area_symbol_fill_use_series_fill_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 16u;
  }
  static const ::TSSSOS::SpecBoolArchive& area_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 32768u;
  }
  static void set_has_area_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 32u;
  }
  static const ::TSSSOS::SpecBoolArchive& bubble_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 65536u;
  }
  static void set_has_bubble_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 64u;
  }
  static const ::TSSSOS::SpecBoolArchive& line_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 131072u;
  }
  static void set_has_line_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 128u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_area_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 262144u;
  }
  static void set_has_mixed_area_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 256u;
  }
  static const ::TSSSOS::SpecBoolArchive& mixed_line_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 524288u;
  }
  static void set_has_mixed_line_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 512u;
  }
  static const ::TSSSOS::SpecBoolArchive& radar_area_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 1048576u;
  }
  static void set_has_radar_area_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 1024u;
  }
  static const ::TSSSOS::SpecBoolArchive& scatter_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_symbol_fill_use_series_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 2097152u;
  }
  static void set_has_scatter_symbol_fill_use_series_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 2048u;
  }
  static const ::TSSSOS::SpecDoubleArchive& area_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_size(HasBits* has_bits) {
    (*has_bits)[2] |= 4194304u;
  }
  static void set_has_area_symbol_size_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 4096u;
  }
  static const ::TSSSOS::SpecDoubleArchive& line_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_size(HasBits* has_bits) {
    (*has_bits)[2] |= 8388608u;
  }
  static void set_has_line_symbol_size_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 8192u;
  }
  static const ::TSSSOS::SpecDoubleArchive& mixed_area_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_size(HasBits* has_bits) {
    (*has_bits)[2] |= 16777216u;
  }
  static void set_has_mixed_area_symbol_size_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 16384u;
  }
  static const ::TSSSOS::SpecDoubleArchive& mixed_line_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_size(HasBits* has_bits) {
    (*has_bits)[2] |= 33554432u;
  }
  static void set_has_mixed_line_symbol_size_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 32768u;
  }
  static const ::TSSSOS::SpecDoubleArchive& radar_area_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_symbol_size(HasBits* has_bits) {
    (*has_bits)[2] |= 67108864u;
  }
  static void set_has_radar_area_symbol_size_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 65536u;
  }
  static const ::TSSSOS::SpecDoubleArchive& scatter_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_symbol_size(HasBits* has_bits) {
    (*has_bits)[2] |= 134217728u;
  }
  static void set_has_scatter_symbol_size_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 131072u;
  }
  static const ::TSDSOS::SpecStrokeArchive& area_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 268435456u;
  }
  static void set_has_area_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 262144u;
  }
  static const ::TSDSOS::SpecStrokeArchive& bubble_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 536870912u;
  }
  static void set_has_bubble_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 524288u;
  }
  static const ::TSDSOS::SpecStrokeArchive& line_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 1073741824u;
  }
  static void set_has_line_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 1048576u;
  }
  static const ::TSDSOS::SpecStrokeArchive& mixed_area_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[2] |= 2147483648u;
  }
  static void set_has_mixed_area_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 2097152u;
  }
  static const ::TSDSOS::SpecStrokeArchive& mixed_line_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[3] |= 1u;
  }
  static void set_has_mixed_line_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 4194304u;
  }
  static const ::TSDSOS::SpecStrokeArchive& radar_area_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[3] |= 2u;
  }
  static void set_has_radar_area_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 8388608u;
  }
  static const ::TSDSOS::SpecStrokeArchive& scatter_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_symbol_stroke(HasBits* has_bits) {
    (*has_bits)[3] |= 4u;
  }
  static void set_has_scatter_symbol_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 16777216u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_trend_line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_shadow(HasBits* has_bits) {
    (*has_bits)[3] |= 8u;
  }
  static void set_has_default_trend_line_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 33554432u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_trend_line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trend_line_stroke(HasBits* has_bits) {
    (*has_bits)[3] |= 16u;
  }
  static void set_has_default_trend_line_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 67108864u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trendline_equation_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trendline_equation_opacity(HasBits* has_bits) {
    (*has_bits)[3] |= 32u;
  }
  static void set_has_default_trendline_equation_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 134217728u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_trendline_equation_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trendline_equation_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[3] |= 64u;
  }
  static void set_has_default_trendline_equation_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 268435456u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_trendline_r_squared_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trendline_r_squared_opacity(HasBits* has_bits) {
    (*has_bits)[3] |= 128u;
  }
  static void set_has_default_trendline_r_squared_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 536870912u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_trendline_r_squared_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_trendline_r_squared_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[3] |= 256u;
  }
  static void set_has_default_trendline_r_squared_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 1073741824u;
  }
  static const ::TSSSOS::SpecIntegerArchive& area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_area_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 512u;
  }
  static void set_has_area_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[6] |= 2147483648u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bar_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bar_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 1024u;
  }
  static void set_has_bar_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 1u;
  }
  static const ::TSSSOS::SpecIntegerArchive& bubble_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_bubble_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 2048u;
  }
  static void set_has_bubble_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 2u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 4096u;
  }
  static void set_has_default_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 4u;
  }
  static const ::TSSSOS::SpecIntegerArchive& line_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_line_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 8192u;
  }
  static void set_has_line_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 8u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_area_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 16384u;
  }
  static void set_has_mixed_area_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 16u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_column_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_column_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 32768u;
  }
  static void set_has_mixed_column_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 32u;
  }
  static const ::TSSSOS::SpecIntegerArchive& mixed_line_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_mixed_line_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 65536u;
  }
  static void set_has_mixed_line_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 64u;
  }
  static const ::TSSSOS::SpecIntegerArchive& radar_area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_radar_area_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 131072u;
  }
  static void set_has_radar_area_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 128u;
  }
  static const ::TSSSOS::SpecIntegerArchive& scatter_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_scatter_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 262144u;
  }
  static void set_has_scatter_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 256u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_area_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 524288u;
  }
  static void set_has_stacked_area_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 512u;
  }
  static const ::TSSSOS::SpecIntegerArchive& stacked_bar_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_stacked_bar_value_label_position(HasBits* has_bits) {
    (*has_bits)[3] |= 1048576u;
  }
  static void set_has_stacked_bar_value_label_position_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 1024u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_value_label_spacing(const ChartSeriesStylePropertyChangeSetArchive* msg);
  static void set_has_default_value_label_spacing(HasBits* has_bits) {
    (*has_bits)[3] |= 2097152u;
  }
  static void set_has_default_value_label_spacing_undefined(HasBits* has_bits) {
    (*has_bits)[7] |= 2048u;
  }
};

const ::TSDSOS::SpecLineEndArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_callout_line_end_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_callout_line_end_line_end_;
}
const ::TSDSOS::SpecLineEndArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_callout_line_start_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_callout_line_start_line_end_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_callout_line_stroke_style(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_callout_line_stroke_style_;
}
const ::TSDSOS::SpecLineEndArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_line_end(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_line_end_;
}
const ::TSDSOS::SpecLineEndArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_line_end_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_line_end_scatter_x_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_shadow_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_spacing(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_spacing_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_spacing_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_spacing_scatter_x_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_error_bar_stroke_scatter_x(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_error_bar_stroke_scatter_x_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area3d_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar3d_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::column3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.column3d_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line3d_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie3d_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie3d_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::column_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.column_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_area_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_column_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_column_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_area_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_fill_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_area_fill_use_series_stroke_alpha_multiplier(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_area_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_fill_use_series_stroke_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::donut_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.donut_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_label_paragraph_style_index_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_opacity_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_outside_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar_outside_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_outside_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::donut_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.donut_outside_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_outside_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_outside_label_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_outside_label_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_outside_label_paragraph_style_index_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area3d_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar3d_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::column3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.column3d_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line3d_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie3d_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie3d_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_area_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_column_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_column_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_line_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_area_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_shadow_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_area_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_column_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_column_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_line_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::pie_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_area_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_stroke_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_symbol_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_symbol_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_symbol_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_area_symbol_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_line_symbol_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_area_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_symbol_fill_;
}
const ::TSDSOS::SpecFillArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_symbol_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_symbol_fill_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_symbol_fill_use_series_fill_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_symbol_fill_use_series_fill_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_area_symbol_fill_use_series_fill_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_line_symbol_fill_use_series_fill_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_area_symbol_fill_use_series_fill(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_symbol_fill_use_series_fill_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_area_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_line_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_area_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_symbol_fill_use_series_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_symbol_fill_use_series_stroke_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_symbol_size_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_symbol_size_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_area_symbol_size_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_line_symbol_size_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_area_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_symbol_size_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_symbol_size(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_symbol_size_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_symbol_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_symbol_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_symbol_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_area_symbol_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_line_symbol_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_area_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_symbol_stroke_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_symbol_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_symbol_stroke_;
}
const ::TSDSOS::SpecShadowArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trend_line_shadow(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trend_line_stroke(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trend_line_stroke_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trendline_equation_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trendline_equation_opacity_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trendline_equation_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trendline_equation_paragraph_style_index_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trendline_r_squared_opacity(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trendline_r_squared_opacity_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_trendline_r_squared_paragraph_style_index(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_trendline_r_squared_paragraph_style_index_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bar_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::bubble_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bubble_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::line_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_area_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_column_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_column_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::mixed_line_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.mixed_line_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::radar_area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.radar_area_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::scatter_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.scatter_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::stacked_area_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.stacked_area_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::stacked_bar_value_label_position(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.stacked_bar_value_label_position_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartSeriesStylePropertyChangeSetArchive::_Internal::default_value_label_spacing(const ChartSeriesStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_value_label_spacing_;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_callout_line_end_line_end() {
  if (_impl_.default_callout_line_end_line_end_ != nullptr) _impl_.default_callout_line_end_line_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_callout_line_start_line_end() {
  if (_impl_.default_callout_line_start_line_end_ != nullptr) _impl_.default_callout_line_start_line_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_callout_line_stroke_style() {
  if (_impl_.default_callout_line_stroke_style_ != nullptr) _impl_.default_callout_line_stroke_style_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_line_end() {
  if (_impl_.default_error_bar_line_end_ != nullptr) _impl_.default_error_bar_line_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_line_end_scatter_x() {
  if (_impl_.default_error_bar_line_end_scatter_x_ != nullptr) _impl_.default_error_bar_line_end_scatter_x_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_shadow() {
  if (_impl_.default_error_bar_shadow_ != nullptr) _impl_.default_error_bar_shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_spacing() {
  if (_impl_.default_error_bar_spacing_ != nullptr) _impl_.default_error_bar_spacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_spacing_scatter_x() {
  if (_impl_.default_error_bar_spacing_scatter_x_ != nullptr) _impl_.default_error_bar_spacing_scatter_x_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_stroke() {
  if (_impl_.default_error_bar_stroke_ != nullptr) _impl_.default_error_bar_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_error_bar_stroke_scatter_x() {
  if (_impl_.default_error_bar_stroke_scatter_x_ != nullptr) _impl_.default_error_bar_stroke_scatter_x_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area3d_fill() {
  if (_impl_.area3d_fill_ != nullptr) _impl_.area3d_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar3d_fill() {
  if (_impl_.bar3d_fill_ != nullptr) _impl_.bar3d_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_column3d_fill() {
  if (_impl_.column3d_fill_ != nullptr) _impl_.column3d_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line3d_fill() {
  if (_impl_.line3d_fill_ != nullptr) _impl_.line3d_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie3d_fill() {
  if (_impl_.pie3d_fill_ != nullptr) _impl_.pie3d_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_fill() {
  if (_impl_.area_fill_ != nullptr) _impl_.area_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_fill() {
  if (_impl_.bar_fill_ != nullptr) _impl_.bar_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_column_fill() {
  if (_impl_.column_fill_ != nullptr) _impl_.column_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_fill() {
  if (_impl_.default_fill_ != nullptr) _impl_.default_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_fill() {
  if (_impl_.mixed_area_fill_ != nullptr) _impl_.mixed_area_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_column_fill() {
  if (_impl_.mixed_column_fill_ != nullptr) _impl_.mixed_column_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie_fill() {
  if (_impl_.pie_fill_ != nullptr) _impl_.pie_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_area_fill() {
  if (_impl_.radar_area_fill_ != nullptr) _impl_.radar_area_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_area_fill_use_series_stroke_alpha_multiplier() {
  if (_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_ != nullptr) _impl_.radar_area_fill_use_series_stroke_alpha_multiplier_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_area_fill_use_series_stroke() {
  if (_impl_.radar_area_fill_use_series_stroke_ != nullptr) _impl_.radar_area_fill_use_series_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_label_paragraph_style_index() {
  if (_impl_.area_label_paragraph_style_index_ != nullptr) _impl_.area_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_label_paragraph_style_index() {
  if (_impl_.bar_label_paragraph_style_index_ != nullptr) _impl_.bar_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x04000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_label_paragraph_style_index() {
  if (_impl_.default_label_paragraph_style_index_ != nullptr) _impl_.default_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x08000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_donut_label_paragraph_style_index() {
  if (_impl_.donut_label_paragraph_style_index_ != nullptr) _impl_.donut_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x10000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_label_paragraph_style_index() {
  if (_impl_.line_label_paragraph_style_index_ != nullptr) _impl_.line_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x20000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_label_paragraph_style_index() {
  if (_impl_.mixed_label_paragraph_style_index_ != nullptr) _impl_.mixed_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x40000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie_label_paragraph_style_index() {
  if (_impl_.pie_label_paragraph_style_index_ != nullptr) _impl_.pie_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x80000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_label_paragraph_style_index() {
  if (_impl_.radar_label_paragraph_style_index_ != nullptr) _impl_.radar_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[1] &= ~0x00000001u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_opacity() {
  if (_impl_.default_opacity_ != nullptr) _impl_.default_opacity_->Clear();
  _impl_._has_bits_[1] &= ~0x00000002u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_outside_label_paragraph_style_index() {
  if (_impl_.area_outside_label_paragraph_style_index_ != nullptr) _impl_.area_outside_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[1] &= ~0x00000004u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_outside_label_paragraph_style_index() {
  if (_impl_.bar_outside_label_paragraph_style_index_ != nullptr) _impl_.bar_outside_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[1] &= ~0x00000008u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_outside_label_paragraph_style_index() {
  if (_impl_.default_outside_label_paragraph_style_index_ != nullptr) _impl_.default_outside_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[1] &= ~0x00000010u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_donut_outside_label_paragraph_style_index() {
  if (_impl_.donut_outside_label_paragraph_style_index_ != nullptr) _impl_.donut_outside_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[1] &= ~0x00000020u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_outside_label_paragraph_style_index() {
  if (_impl_.mixed_outside_label_paragraph_style_index_ != nullptr) _impl_.mixed_outside_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[1] &= ~0x00000040u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie_outside_label_paragraph_style_index() {
  if (_impl_.pie_outside_label_paragraph_style_index_ != nullptr) _impl_.pie_outside_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[1] &= ~0x00000080u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_outside_label_paragraph_style_index() {
  if (_impl_.radar_outside_label_paragraph_style_index_ != nullptr) _impl_.radar_outside_label_paragraph_style_index_->Clear();
  _impl_._has_bits_[1] &= ~0x00000100u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area3d_shadow() {
  if (_impl_.area3d_shadow_ != nullptr) _impl_.area3d_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00000200u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar3d_shadow() {
  if (_impl_.bar3d_shadow_ != nullptr) _impl_.bar3d_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00000400u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_column3d_shadow() {
  if (_impl_.column3d_shadow_ != nullptr) _impl_.column3d_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00000800u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line3d_shadow() {
  if (_impl_.line3d_shadow_ != nullptr) _impl_.line3d_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00001000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie3d_shadow() {
  if (_impl_.pie3d_shadow_ != nullptr) _impl_.pie3d_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00002000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_shadow() {
  if (_impl_.area_shadow_ != nullptr) _impl_.area_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00004000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_shadow() {
  if (_impl_.bar_shadow_ != nullptr) _impl_.bar_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00008000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_shadow() {
  if (_impl_.bubble_shadow_ != nullptr) _impl_.bubble_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00010000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_shadow() {
  if (_impl_.default_shadow_ != nullptr) _impl_.default_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00020000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_shadow() {
  if (_impl_.line_shadow_ != nullptr) _impl_.line_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00040000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_shadow() {
  if (_impl_.mixed_area_shadow_ != nullptr) _impl_.mixed_area_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00080000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_column_shadow() {
  if (_impl_.mixed_column_shadow_ != nullptr) _impl_.mixed_column_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00100000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_shadow() {
  if (_impl_.mixed_line_shadow_ != nullptr) _impl_.mixed_line_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00200000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie_shadow() {
  if (_impl_.pie_shadow_ != nullptr) _impl_.pie_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00400000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_area_shadow() {
  if (_impl_.radar_area_shadow_ != nullptr) _impl_.radar_area_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x00800000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_shadow() {
  if (_impl_.scatter_shadow_ != nullptr) _impl_.scatter_shadow_->Clear();
  _impl_._has_bits_[1] &= ~0x01000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_stroke() {
  if (_impl_.area_stroke_ != nullptr) _impl_.area_stroke_->Clear();
  _impl_._has_bits_[1] &= ~0x02000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_stroke() {
  if (_impl_.bar_stroke_ != nullptr) _impl_.bar_stroke_->Clear();
  _impl_._has_bits_[1] &= ~0x04000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_stroke() {
  if (_impl_.bubble_stroke_ != nullptr) _impl_.bubble_stroke_->Clear();
  _impl_._has_bits_[1] &= ~0x08000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_stroke() {
  if (_impl_.line_stroke_ != nullptr) _impl_.line_stroke_->Clear();
  _impl_._has_bits_[1] &= ~0x10000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_stroke() {
  if (_impl_.mixed_area_stroke_ != nullptr) _impl_.mixed_area_stroke_->Clear();
  _impl_._has_bits_[1] &= ~0x20000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_column_stroke() {
  if (_impl_.mixed_column_stroke_ != nullptr) _impl_.mixed_column_stroke_->Clear();
  _impl_._has_bits_[1] &= ~0x40000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_stroke() {
  if (_impl_.mixed_line_stroke_ != nullptr) _impl_.mixed_line_stroke_->Clear();
  _impl_._has_bits_[1] &= ~0x80000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_pie_stroke() {
  if (_impl_.pie_stroke_ != nullptr) _impl_.pie_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x00000001u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_area_stroke() {
  if (_impl_.radar_area_stroke_ != nullptr) _impl_.radar_area_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x00000002u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_stroke() {
  if (_impl_.scatter_stroke_ != nullptr) _impl_.scatter_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x00000004u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_symbol_fill() {
  if (_impl_.area_symbol_fill_ != nullptr) _impl_.area_symbol_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00000008u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_symbol_fill() {
  if (_impl_.bubble_symbol_fill_ != nullptr) _impl_.bubble_symbol_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00000010u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_symbol_fill() {
  if (_impl_.line_symbol_fill_ != nullptr) _impl_.line_symbol_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00000020u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_symbol_fill() {
  if (_impl_.mixed_area_symbol_fill_ != nullptr) _impl_.mixed_area_symbol_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00000040u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_symbol_fill() {
  if (_impl_.mixed_line_symbol_fill_ != nullptr) _impl_.mixed_line_symbol_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00000080u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_area_symbol_fill() {
  if (_impl_.radar_area_symbol_fill_ != nullptr) _impl_.radar_area_symbol_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00000100u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_symbol_fill() {
  if (_impl_.scatter_symbol_fill_ != nullptr) _impl_.scatter_symbol_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00000200u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_symbol_fill_use_series_fill() {
  if (_impl_.area_symbol_fill_use_series_fill_ != nullptr) _impl_.area_symbol_fill_use_series_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00000400u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_symbol_fill_use_series_fill() {
  if (_impl_.line_symbol_fill_use_series_fill_ != nullptr) _impl_.line_symbol_fill_use_series_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00000800u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_symbol_fill_use_series_fill() {
  if (_impl_.mixed_area_symbol_fill_use_series_fill_ != nullptr) _impl_.mixed_area_symbol_fill_use_series_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00001000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_symbol_fill_use_series_fill() {
  if (_impl_.mixed_line_symbol_fill_use_series_fill_ != nullptr) _impl_.mixed_line_symbol_fill_use_series_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00002000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_area_symbol_fill_use_series_fill() {
  if (_impl_.radar_area_symbol_fill_use_series_fill_ != nullptr) _impl_.radar_area_symbol_fill_use_series_fill_->Clear();
  _impl_._has_bits_[2] &= ~0x00004000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_symbol_fill_use_series_stroke() {
  if (_impl_.area_symbol_fill_use_series_stroke_ != nullptr) _impl_.area_symbol_fill_use_series_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x00008000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_symbol_fill_use_series_stroke() {
  if (_impl_.bubble_symbol_fill_use_series_stroke_ != nullptr) _impl_.bubble_symbol_fill_use_series_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x00010000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_symbol_fill_use_series_stroke() {
  if (_impl_.line_symbol_fill_use_series_stroke_ != nullptr) _impl_.line_symbol_fill_use_series_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x00020000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_symbol_fill_use_series_stroke() {
  if (_impl_.mixed_area_symbol_fill_use_series_stroke_ != nullptr) _impl_.mixed_area_symbol_fill_use_series_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x00040000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_symbol_fill_use_series_stroke() {
  if (_impl_.mixed_line_symbol_fill_use_series_stroke_ != nullptr) _impl_.mixed_line_symbol_fill_use_series_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x00080000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_area_symbol_fill_use_series_stroke() {
  if (_impl_.radar_area_symbol_fill_use_series_stroke_ != nullptr) _impl_.radar_area_symbol_fill_use_series_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x00100000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_symbol_fill_use_series_stroke() {
  if (_impl_.scatter_symbol_fill_use_series_stroke_ != nullptr) _impl_.scatter_symbol_fill_use_series_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x00200000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_symbol_size() {
  if (_impl_.area_symbol_size_ != nullptr) _impl_.area_symbol_size_->Clear();
  _impl_._has_bits_[2] &= ~0x00400000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_symbol_size() {
  if (_impl_.line_symbol_size_ != nullptr) _impl_.line_symbol_size_->Clear();
  _impl_._has_bits_[2] &= ~0x00800000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_symbol_size() {
  if (_impl_.mixed_area_symbol_size_ != nullptr) _impl_.mixed_area_symbol_size_->Clear();
  _impl_._has_bits_[2] &= ~0x01000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_symbol_size() {
  if (_impl_.mixed_line_symbol_size_ != nullptr) _impl_.mixed_line_symbol_size_->Clear();
  _impl_._has_bits_[2] &= ~0x02000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_area_symbol_size() {
  if (_impl_.radar_area_symbol_size_ != nullptr) _impl_.radar_area_symbol_size_->Clear();
  _impl_._has_bits_[2] &= ~0x04000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_symbol_size() {
  if (_impl_.scatter_symbol_size_ != nullptr) _impl_.scatter_symbol_size_->Clear();
  _impl_._has_bits_[2] &= ~0x08000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_symbol_stroke() {
  if (_impl_.area_symbol_stroke_ != nullptr) _impl_.area_symbol_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x10000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_symbol_stroke() {
  if (_impl_.bubble_symbol_stroke_ != nullptr) _impl_.bubble_symbol_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x20000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_symbol_stroke() {
  if (_impl_.line_symbol_stroke_ != nullptr) _impl_.line_symbol_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x40000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_symbol_stroke() {
  if (_impl_.mixed_area_symbol_stroke_ != nullptr) _impl_.mixed_area_symbol_stroke_->Clear();
  _impl_._has_bits_[2] &= ~0x80000000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_symbol_stroke() {
  if (_impl_.mixed_line_symbol_stroke_ != nullptr) _impl_.mixed_line_symbol_stroke_->Clear();
  _impl_._has_bits_[3] &= ~0x00000001u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_area_symbol_stroke() {
  if (_impl_.radar_area_symbol_stroke_ != nullptr) _impl_.radar_area_symbol_stroke_->Clear();
  _impl_._has_bits_[3] &= ~0x00000002u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_symbol_stroke() {
  if (_impl_.scatter_symbol_stroke_ != nullptr) _impl_.scatter_symbol_stroke_->Clear();
  _impl_._has_bits_[3] &= ~0x00000004u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trend_line_shadow() {
  if (_impl_.default_trend_line_shadow_ != nullptr) _impl_.default_trend_line_shadow_->Clear();
  _impl_._has_bits_[3] &= ~0x00000008u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trend_line_stroke() {
  if (_impl_.default_trend_line_stroke_ != nullptr) _impl_.default_trend_line_stroke_->Clear();
  _impl_._has_bits_[3] &= ~0x00000010u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trendline_equation_opacity() {
  if (_impl_.default_trendline_equation_opacity_ != nullptr) _impl_.default_trendline_equation_opacity_->Clear();
  _impl_._has_bits_[3] &= ~0x00000020u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trendline_equation_paragraph_style_index() {
  if (_impl_.default_trendline_equation_paragraph_style_index_ != nullptr) _impl_.default_trendline_equation_paragraph_style_index_->Clear();
  _impl_._has_bits_[3] &= ~0x00000040u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trendline_r_squared_opacity() {
  if (_impl_.default_trendline_r_squared_opacity_ != nullptr) _impl_.default_trendline_r_squared_opacity_->Clear();
  _impl_._has_bits_[3] &= ~0x00000080u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_trendline_r_squared_paragraph_style_index() {
  if (_impl_.default_trendline_r_squared_paragraph_style_index_ != nullptr) _impl_.default_trendline_r_squared_paragraph_style_index_->Clear();
  _impl_._has_bits_[3] &= ~0x00000100u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_area_value_label_position() {
  if (_impl_.area_value_label_position_ != nullptr) _impl_.area_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00000200u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bar_value_label_position() {
  if (_impl_.bar_value_label_position_ != nullptr) _impl_.bar_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00000400u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_bubble_value_label_position() {
  if (_impl_.bubble_value_label_position_ != nullptr) _impl_.bubble_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00000800u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_value_label_position() {
  if (_impl_.default_value_label_position_ != nullptr) _impl_.default_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00001000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_line_value_label_position() {
  if (_impl_.line_value_label_position_ != nullptr) _impl_.line_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00002000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_area_value_label_position() {
  if (_impl_.mixed_area_value_label_position_ != nullptr) _impl_.mixed_area_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00004000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_column_value_label_position() {
  if (_impl_.mixed_column_value_label_position_ != nullptr) _impl_.mixed_column_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00008000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_mixed_line_value_label_position() {
  if (_impl_.mixed_line_value_label_position_ != nullptr) _impl_.mixed_line_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00010000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_radar_area_value_label_position() {
  if (_impl_.radar_area_value_label_position_ != nullptr) _impl_.radar_area_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00020000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_scatter_value_label_position() {
  if (_impl_.scatter_value_label_position_ != nullptr) _impl_.scatter_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00040000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_stacked_area_value_label_position() {
  if (_impl_.stacked_area_value_label_position_ != nullptr) _impl_.stacked_area_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00080000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_stacked_bar_value_label_position() {
  if (_impl_.stacked_bar_value_label_position_ != nullptr) _impl_.stacked_bar_value_label_position_->Clear();
  _impl_._has_bits_[3] &= ~0x00100000u;
}
void ChartSeriesStylePropertyChangeSetArchive::clear_default_value_label_spacing() {
  if (_impl_.default_value_label_spacing_ != nullptr) _impl_.default_value_label_spacing_->Clear();
  _impl_._has_bits_[3] &= ~0x00200000u;
}
ChartSeriesStylePropertyChangeSetArchive::ChartSeriesStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
}
ChartSeriesStylePropertyChangeSetArchive::ChartSeriesStylePropertyChangeSetArchive(const ChartSeriesStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChartSeriesStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default_callout_line_end_line_end_){nullptr}
    , decltype(_impl_.default_callout_line_start_line_end_){nullptr}
    , decltype(_impl_.default_callout_line_stroke_style_){nullptr}
    , decltype(_impl_.default_error_bar_line_end_){nullptr}
    , decltype(_impl_.default_error_bar_line_end_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_shadow_){nullptr}
    , decltype(_impl_.default_error_bar_spacing_){nullptr}
    , decltype(_impl_.default_error_bar_spacing_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_stroke_){nullptr}
    , decltype(_impl_.default_error_bar_stroke_scatter_x_){nullptr}
    , decltype(_impl_.area3d_fill_){nullptr}
    , decltype(_impl_.bar3d_fill_){nullptr}
    , decltype(_impl_.column3d_fill_){nullptr}
    , decltype(_impl_.line3d_fill_){nullptr}
    , decltype(_impl_.pie3d_fill_){nullptr}
    , decltype(_impl_.area_fill_){nullptr}
    , decltype(_impl_.bar_fill_){nullptr}
    , decltype(_impl_.column_fill_){nullptr}
    , decltype(_impl_.default_fill_){nullptr}
    , decltype(_impl_.mixed_area_fill_){nullptr}
    , decltype(_impl_.mixed_column_fill_){nullptr}
    , decltype(_impl_.pie_fill_){nullptr}
    , decltype(_impl_.radar_area_fill_){nullptr}
    , decltype(_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_){nullptr}
    , decltype(_impl_.radar_area_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.area_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.bar_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.donut_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.line_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.mixed_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.pie_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.radar_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_opacity_){nullptr}
    , decltype(_impl_.area_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.bar_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.donut_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.mixed_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.pie_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.radar_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.area3d_shadow_){nullptr}
    , decltype(_impl_.bar3d_shadow_){nullptr}
    , decltype(_impl_.column3d_shadow_){nullptr}
    , decltype(_impl_.line3d_shadow_){nullptr}
    , decltype(_impl_.pie3d_shadow_){nullptr}
    , decltype(_impl_.area_shadow_){nullptr}
    , decltype(_impl_.bar_shadow_){nullptr}
    , decltype(_impl_.bubble_shadow_){nullptr}
    , decltype(_impl_.default_shadow_){nullptr}
    , decltype(_impl_.line_shadow_){nullptr}
    , decltype(_impl_.mixed_area_shadow_){nullptr}
    , decltype(_impl_.mixed_column_shadow_){nullptr}
    , decltype(_impl_.mixed_line_shadow_){nullptr}
    , decltype(_impl_.pie_shadow_){nullptr}
    , decltype(_impl_.radar_area_shadow_){nullptr}
    , decltype(_impl_.scatter_shadow_){nullptr}
    , decltype(_impl_.area_stroke_){nullptr}
    , decltype(_impl_.bar_stroke_){nullptr}
    , decltype(_impl_.bubble_stroke_){nullptr}
    , decltype(_impl_.line_stroke_){nullptr}
    , decltype(_impl_.mixed_area_stroke_){nullptr}
    , decltype(_impl_.mixed_column_stroke_){nullptr}
    , decltype(_impl_.mixed_line_stroke_){nullptr}
    , decltype(_impl_.pie_stroke_){nullptr}
    , decltype(_impl_.radar_area_stroke_){nullptr}
    , decltype(_impl_.scatter_stroke_){nullptr}
    , decltype(_impl_.area_symbol_fill_){nullptr}
    , decltype(_impl_.bubble_symbol_fill_){nullptr}
    , decltype(_impl_.line_symbol_fill_){nullptr}
    , decltype(_impl_.mixed_area_symbol_fill_){nullptr}
    , decltype(_impl_.mixed_line_symbol_fill_){nullptr}
    , decltype(_impl_.radar_area_symbol_fill_){nullptr}
    , decltype(_impl_.scatter_symbol_fill_){nullptr}
    , decltype(_impl_.area_symbol_fill_use_series_fill_){nullptr}
    , decltype(_impl_.line_symbol_fill_use_series_fill_){nullptr}
    , decltype(_impl_.mixed_area_symbol_fill_use_series_fill_){nullptr}
    , decltype(_impl_.mixed_line_symbol_fill_use_series_fill_){nullptr}
    , decltype(_impl_.radar_area_symbol_fill_use_series_fill_){nullptr}
    , decltype(_impl_.area_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.bubble_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.line_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.mixed_area_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.mixed_line_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.radar_area_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.scatter_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.area_symbol_size_){nullptr}
    , decltype(_impl_.line_symbol_size_){nullptr}
    , decltype(_impl_.mixed_area_symbol_size_){nullptr}
    , decltype(_impl_.mixed_line_symbol_size_){nullptr}
    , decltype(_impl_.radar_area_symbol_size_){nullptr}
    , decltype(_impl_.scatter_symbol_size_){nullptr}
    , decltype(_impl_.area_symbol_stroke_){nullptr}
    , decltype(_impl_.bubble_symbol_stroke_){nullptr}
    , decltype(_impl_.line_symbol_stroke_){nullptr}
    , decltype(_impl_.mixed_area_symbol_stroke_){nullptr}
    , decltype(_impl_.mixed_line_symbol_stroke_){nullptr}
    , decltype(_impl_.radar_area_symbol_stroke_){nullptr}
    , decltype(_impl_.scatter_symbol_stroke_){nullptr}
    , decltype(_impl_.default_trend_line_shadow_){nullptr}
    , decltype(_impl_.default_trend_line_stroke_){nullptr}
    , decltype(_impl_.default_trendline_equation_opacity_){nullptr}
    , decltype(_impl_.default_trendline_equation_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_trendline_r_squared_opacity_){nullptr}
    , decltype(_impl_.default_trendline_r_squared_paragraph_style_index_){nullptr}
    , decltype(_impl_.area_value_label_position_){nullptr}
    , decltype(_impl_.bar_value_label_position_){nullptr}
    , decltype(_impl_.bubble_value_label_position_){nullptr}
    , decltype(_impl_.default_value_label_position_){nullptr}
    , decltype(_impl_.line_value_label_position_){nullptr}
    , decltype(_impl_.mixed_area_value_label_position_){nullptr}
    , decltype(_impl_.mixed_column_value_label_position_){nullptr}
    , decltype(_impl_.mixed_line_value_label_position_){nullptr}
    , decltype(_impl_.radar_area_value_label_position_){nullptr}
    , decltype(_impl_.scatter_value_label_position_){nullptr}
    , decltype(_impl_.stacked_area_value_label_position_){nullptr}
    , decltype(_impl_.stacked_bar_value_label_position_){nullptr}
    , decltype(_impl_.default_value_label_spacing_){nullptr}
    , decltype(_impl_.default_callout_line_end_line_end_undefined_){}
    , decltype(_impl_.default_callout_line_start_line_end_undefined_){}
    , decltype(_impl_.default_callout_line_stroke_style_undefined_){}
    , decltype(_impl_.default_error_bar_line_end_undefined_){}
    , decltype(_impl_.default_error_bar_line_end_scatter_x_undefined_){}
    , decltype(_impl_.default_error_bar_shadow_undefined_){}
    , decltype(_impl_.default_error_bar_spacing_undefined_){}
    , decltype(_impl_.default_error_bar_spacing_scatter_x_undefined_){}
    , decltype(_impl_.default_error_bar_stroke_undefined_){}
    , decltype(_impl_.default_error_bar_stroke_scatter_x_undefined_){}
    , decltype(_impl_.area3d_fill_undefined_){}
    , decltype(_impl_.bar3d_fill_undefined_){}
    , decltype(_impl_.column3d_fill_undefined_){}
    , decltype(_impl_.line3d_fill_undefined_){}
    , decltype(_impl_.pie3d_fill_undefined_){}
    , decltype(_impl_.area_fill_undefined_){}
    , decltype(_impl_.bar_fill_undefined_){}
    , decltype(_impl_.column_fill_undefined_){}
    , decltype(_impl_.default_fill_undefined_){}
    , decltype(_impl_.mixed_area_fill_undefined_){}
    , decltype(_impl_.mixed_column_fill_undefined_){}
    , decltype(_impl_.pie_fill_undefined_){}
    , decltype(_impl_.radar_area_fill_undefined_){}
    , decltype(_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_undefined_){}
    , decltype(_impl_.radar_area_fill_use_series_stroke_undefined_){}
    , decltype(_impl_.area_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.bar_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.default_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.donut_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.line_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.mixed_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.pie_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.radar_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.default_opacity_undefined_){}
    , decltype(_impl_.area_outside_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.bar_outside_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.default_outside_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.donut_outside_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.mixed_outside_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.pie_outside_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.radar_outside_label_paragraph_style_index_undefined_){}
    , decltype(_impl_.area3d_shadow_undefined_){}
    , decltype(_impl_.bar3d_shadow_undefined_){}
    , decltype(_impl_.column3d_shadow_undefined_){}
    , decltype(_impl_.line3d_shadow_undefined_){}
    , decltype(_impl_.pie3d_shadow_undefined_){}
    , decltype(_impl_.area_shadow_undefined_){}
    , decltype(_impl_.bar_shadow_undefined_){}
    , decltype(_impl_.bubble_shadow_undefined_){}
    , decltype(_impl_.default_shadow_undefined_){}
    , decltype(_impl_.line_shadow_undefined_){}
    , decltype(_impl_.mixed_area_shadow_undefined_){}
    , decltype(_impl_.mixed_column_shadow_undefined_){}
    , decltype(_impl_.mixed_line_shadow_undefined_){}
    , decltype(_impl_.pie_shadow_undefined_){}
    , decltype(_impl_.radar_area_shadow_undefined_){}
    , decltype(_impl_.scatter_shadow_undefined_){}
    , decltype(_impl_.area_stroke_undefined_){}
    , decltype(_impl_.bar_stroke_undefined_){}
    , decltype(_impl_.bubble_stroke_undefined_){}
    , decltype(_impl_.line_stroke_undefined_){}
    , decltype(_impl_.mixed_area_stroke_undefined_){}
    , decltype(_impl_.mixed_column_stroke_undefined_){}
    , decltype(_impl_.mixed_line_stroke_undefined_){}
    , decltype(_impl_.pie_stroke_undefined_){}
    , decltype(_impl_.radar_area_stroke_undefined_){}
    , decltype(_impl_.scatter_stroke_undefined_){}
    , decltype(_impl_.area_symbol_fill_undefined_){}
    , decltype(_impl_.bubble_symbol_fill_undefined_){}
    , decltype(_impl_.line_symbol_fill_undefined_){}
    , decltype(_impl_.mixed_area_symbol_fill_undefined_){}
    , decltype(_impl_.mixed_line_symbol_fill_undefined_){}
    , decltype(_impl_.radar_area_symbol_fill_undefined_){}
    , decltype(_impl_.scatter_symbol_fill_undefined_){}
    , decltype(_impl_.area_symbol_fill_use_series_fill_undefined_){}
    , decltype(_impl_.line_symbol_fill_use_series_fill_undefined_){}
    , decltype(_impl_.mixed_area_symbol_fill_use_series_fill_undefined_){}
    , decltype(_impl_.mixed_line_symbol_fill_use_series_fill_undefined_){}
    , decltype(_impl_.radar_area_symbol_fill_use_series_fill_undefined_){}
    , decltype(_impl_.area_symbol_fill_use_series_stroke_undefined_){}
    , decltype(_impl_.bubble_symbol_fill_use_series_stroke_undefined_){}
    , decltype(_impl_.line_symbol_fill_use_series_stroke_undefined_){}
    , decltype(_impl_.mixed_area_symbol_fill_use_series_stroke_undefined_){}
    , decltype(_impl_.mixed_line_symbol_fill_use_series_stroke_undefined_){}
    , decltype(_impl_.radar_area_symbol_fill_use_series_stroke_undefined_){}
    , decltype(_impl_.scatter_symbol_fill_use_series_stroke_undefined_){}
    , decltype(_impl_.area_symbol_size_undefined_){}
    , decltype(_impl_.line_symbol_size_undefined_){}
    , decltype(_impl_.mixed_area_symbol_size_undefined_){}
    , decltype(_impl_.mixed_line_symbol_size_undefined_){}
    , decltype(_impl_.radar_area_symbol_size_undefined_){}
    , decltype(_impl_.scatter_symbol_size_undefined_){}
    , decltype(_impl_.area_symbol_stroke_undefined_){}
    , decltype(_impl_.bubble_symbol_stroke_undefined_){}
    , decltype(_impl_.line_symbol_stroke_undefined_){}
    , decltype(_impl_.mixed_area_symbol_stroke_undefined_){}
    , decltype(_impl_.mixed_line_symbol_stroke_undefined_){}
    , decltype(_impl_.radar_area_symbol_stroke_undefined_){}
    , decltype(_impl_.scatter_symbol_stroke_undefined_){}
    , decltype(_impl_.default_trend_line_shadow_undefined_){}
    , decltype(_impl_.default_trend_line_stroke_undefined_){}
    , decltype(_impl_.default_trendline_equation_opacity_undefined_){}
    , decltype(_impl_.default_trendline_equation_paragraph_style_index_undefined_){}
    , decltype(_impl_.default_trendline_r_squared_opacity_undefined_){}
    , decltype(_impl_.default_trendline_r_squared_paragraph_style_index_undefined_){}
    , decltype(_impl_.area_value_label_position_undefined_){}
    , decltype(_impl_.bar_value_label_position_undefined_){}
    , decltype(_impl_.bubble_value_label_position_undefined_){}
    , decltype(_impl_.default_value_label_position_undefined_){}
    , decltype(_impl_.line_value_label_position_undefined_){}
    , decltype(_impl_.mixed_area_value_label_position_undefined_){}
    , decltype(_impl_.mixed_column_value_label_position_undefined_){}
    , decltype(_impl_.mixed_line_value_label_position_undefined_){}
    , decltype(_impl_.radar_area_value_label_position_undefined_){}
    , decltype(_impl_.scatter_value_label_position_undefined_){}
    , decltype(_impl_.stacked_area_value_label_position_undefined_){}
    , decltype(_impl_.stacked_bar_value_label_position_undefined_){}
    , decltype(_impl_.default_value_label_spacing_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default_callout_line_end_line_end()) {
    _this->_impl_.default_callout_line_end_line_end_ = new ::TSDSOS::SpecLineEndArchive(*from._impl_.default_callout_line_end_line_end_);
  }
  if (from._internal_has_default_callout_line_start_line_end()) {
    _this->_impl_.default_callout_line_start_line_end_ = new ::TSDSOS::SpecLineEndArchive(*from._impl_.default_callout_line_start_line_end_);
  }
  if (from._internal_has_default_callout_line_stroke_style()) {
    _this->_impl_.default_callout_line_stroke_style_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.default_callout_line_stroke_style_);
  }
  if (from._internal_has_default_error_bar_line_end()) {
    _this->_impl_.default_error_bar_line_end_ = new ::TSDSOS::SpecLineEndArchive(*from._impl_.default_error_bar_line_end_);
  }
  if (from._internal_has_default_error_bar_line_end_scatter_x()) {
    _this->_impl_.default_error_bar_line_end_scatter_x_ = new ::TSDSOS::SpecLineEndArchive(*from._impl_.default_error_bar_line_end_scatter_x_);
  }
  if (from._internal_has_default_error_bar_shadow()) {
    _this->_impl_.default_error_bar_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.default_error_bar_shadow_);
  }
  if (from._internal_has_default_error_bar_spacing()) {
    _this->_impl_.default_error_bar_spacing_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_error_bar_spacing_);
  }
  if (from._internal_has_default_error_bar_spacing_scatter_x()) {
    _this->_impl_.default_error_bar_spacing_scatter_x_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_error_bar_spacing_scatter_x_);
  }
  if (from._internal_has_default_error_bar_stroke()) {
    _this->_impl_.default_error_bar_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.default_error_bar_stroke_);
  }
  if (from._internal_has_default_error_bar_stroke_scatter_x()) {
    _this->_impl_.default_error_bar_stroke_scatter_x_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.default_error_bar_stroke_scatter_x_);
  }
  if (from._internal_has_area3d_fill()) {
    _this->_impl_.area3d_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.area3d_fill_);
  }
  if (from._internal_has_bar3d_fill()) {
    _this->_impl_.bar3d_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.bar3d_fill_);
  }
  if (from._internal_has_column3d_fill()) {
    _this->_impl_.column3d_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.column3d_fill_);
  }
  if (from._internal_has_line3d_fill()) {
    _this->_impl_.line3d_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.line3d_fill_);
  }
  if (from._internal_has_pie3d_fill()) {
    _this->_impl_.pie3d_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.pie3d_fill_);
  }
  if (from._internal_has_area_fill()) {
    _this->_impl_.area_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.area_fill_);
  }
  if (from._internal_has_bar_fill()) {
    _this->_impl_.bar_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.bar_fill_);
  }
  if (from._internal_has_column_fill()) {
    _this->_impl_.column_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.column_fill_);
  }
  if (from._internal_has_default_fill()) {
    _this->_impl_.default_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.default_fill_);
  }
  if (from._internal_has_mixed_area_fill()) {
    _this->_impl_.mixed_area_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.mixed_area_fill_);
  }
  if (from._internal_has_mixed_column_fill()) {
    _this->_impl_.mixed_column_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.mixed_column_fill_);
  }
  if (from._internal_has_pie_fill()) {
    _this->_impl_.pie_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.pie_fill_);
  }
  if (from._internal_has_radar_area_fill()) {
    _this->_impl_.radar_area_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.radar_area_fill_);
  }
  if (from._internal_has_radar_area_fill_use_series_stroke_alpha_multiplier()) {
    _this->_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.radar_area_fill_use_series_stroke_alpha_multiplier_);
  }
  if (from._internal_has_radar_area_fill_use_series_stroke()) {
    _this->_impl_.radar_area_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.radar_area_fill_use_series_stroke_);
  }
  if (from._internal_has_area_label_paragraph_style_index()) {
    _this->_impl_.area_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.area_label_paragraph_style_index_);
  }
  if (from._internal_has_bar_label_paragraph_style_index()) {
    _this->_impl_.bar_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.bar_label_paragraph_style_index_);
  }
  if (from._internal_has_default_label_paragraph_style_index()) {
    _this->_impl_.default_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_label_paragraph_style_index_);
  }
  if (from._internal_has_donut_label_paragraph_style_index()) {
    _this->_impl_.donut_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.donut_label_paragraph_style_index_);
  }
  if (from._internal_has_line_label_paragraph_style_index()) {
    _this->_impl_.line_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.line_label_paragraph_style_index_);
  }
  if (from._internal_has_mixed_label_paragraph_style_index()) {
    _this->_impl_.mixed_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.mixed_label_paragraph_style_index_);
  }
  if (from._internal_has_pie_label_paragraph_style_index()) {
    _this->_impl_.pie_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.pie_label_paragraph_style_index_);
  }
  if (from._internal_has_radar_label_paragraph_style_index()) {
    _this->_impl_.radar_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.radar_label_paragraph_style_index_);
  }
  if (from._internal_has_default_opacity()) {
    _this->_impl_.default_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_opacity_);
  }
  if (from._internal_has_area_outside_label_paragraph_style_index()) {
    _this->_impl_.area_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.area_outside_label_paragraph_style_index_);
  }
  if (from._internal_has_bar_outside_label_paragraph_style_index()) {
    _this->_impl_.bar_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.bar_outside_label_paragraph_style_index_);
  }
  if (from._internal_has_default_outside_label_paragraph_style_index()) {
    _this->_impl_.default_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_outside_label_paragraph_style_index_);
  }
  if (from._internal_has_donut_outside_label_paragraph_style_index()) {
    _this->_impl_.donut_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.donut_outside_label_paragraph_style_index_);
  }
  if (from._internal_has_mixed_outside_label_paragraph_style_index()) {
    _this->_impl_.mixed_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.mixed_outside_label_paragraph_style_index_);
  }
  if (from._internal_has_pie_outside_label_paragraph_style_index()) {
    _this->_impl_.pie_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.pie_outside_label_paragraph_style_index_);
  }
  if (from._internal_has_radar_outside_label_paragraph_style_index()) {
    _this->_impl_.radar_outside_label_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.radar_outside_label_paragraph_style_index_);
  }
  if (from._internal_has_area3d_shadow()) {
    _this->_impl_.area3d_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.area3d_shadow_);
  }
  if (from._internal_has_bar3d_shadow()) {
    _this->_impl_.bar3d_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.bar3d_shadow_);
  }
  if (from._internal_has_column3d_shadow()) {
    _this->_impl_.column3d_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.column3d_shadow_);
  }
  if (from._internal_has_line3d_shadow()) {
    _this->_impl_.line3d_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.line3d_shadow_);
  }
  if (from._internal_has_pie3d_shadow()) {
    _this->_impl_.pie3d_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.pie3d_shadow_);
  }
  if (from._internal_has_area_shadow()) {
    _this->_impl_.area_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.area_shadow_);
  }
  if (from._internal_has_bar_shadow()) {
    _this->_impl_.bar_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.bar_shadow_);
  }
  if (from._internal_has_bubble_shadow()) {
    _this->_impl_.bubble_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.bubble_shadow_);
  }
  if (from._internal_has_default_shadow()) {
    _this->_impl_.default_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.default_shadow_);
  }
  if (from._internal_has_line_shadow()) {
    _this->_impl_.line_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.line_shadow_);
  }
  if (from._internal_has_mixed_area_shadow()) {
    _this->_impl_.mixed_area_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.mixed_area_shadow_);
  }
  if (from._internal_has_mixed_column_shadow()) {
    _this->_impl_.mixed_column_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.mixed_column_shadow_);
  }
  if (from._internal_has_mixed_line_shadow()) {
    _this->_impl_.mixed_line_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.mixed_line_shadow_);
  }
  if (from._internal_has_pie_shadow()) {
    _this->_impl_.pie_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.pie_shadow_);
  }
  if (from._internal_has_radar_area_shadow()) {
    _this->_impl_.radar_area_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.radar_area_shadow_);
  }
  if (from._internal_has_scatter_shadow()) {
    _this->_impl_.scatter_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.scatter_shadow_);
  }
  if (from._internal_has_area_stroke()) {
    _this->_impl_.area_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.area_stroke_);
  }
  if (from._internal_has_bar_stroke()) {
    _this->_impl_.bar_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.bar_stroke_);
  }
  if (from._internal_has_bubble_stroke()) {
    _this->_impl_.bubble_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.bubble_stroke_);
  }
  if (from._internal_has_line_stroke()) {
    _this->_impl_.line_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.line_stroke_);
  }
  if (from._internal_has_mixed_area_stroke()) {
    _this->_impl_.mixed_area_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.mixed_area_stroke_);
  }
  if (from._internal_has_mixed_column_stroke()) {
    _this->_impl_.mixed_column_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.mixed_column_stroke_);
  }
  if (from._internal_has_mixed_line_stroke()) {
    _this->_impl_.mixed_line_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.mixed_line_stroke_);
  }
  if (from._internal_has_pie_stroke()) {
    _this->_impl_.pie_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.pie_stroke_);
  }
  if (from._internal_has_radar_area_stroke()) {
    _this->_impl_.radar_area_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.radar_area_stroke_);
  }
  if (from._internal_has_scatter_stroke()) {
    _this->_impl_.scatter_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.scatter_stroke_);
  }
  if (from._internal_has_area_symbol_fill()) {
    _this->_impl_.area_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.area_symbol_fill_);
  }
  if (from._internal_has_bubble_symbol_fill()) {
    _this->_impl_.bubble_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.bubble_symbol_fill_);
  }
  if (from._internal_has_line_symbol_fill()) {
    _this->_impl_.line_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.line_symbol_fill_);
  }
  if (from._internal_has_mixed_area_symbol_fill()) {
    _this->_impl_.mixed_area_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.mixed_area_symbol_fill_);
  }
  if (from._internal_has_mixed_line_symbol_fill()) {
    _this->_impl_.mixed_line_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.mixed_line_symbol_fill_);
  }
  if (from._internal_has_radar_area_symbol_fill()) {
    _this->_impl_.radar_area_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.radar_area_symbol_fill_);
  }
  if (from._internal_has_scatter_symbol_fill()) {
    _this->_impl_.scatter_symbol_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.scatter_symbol_fill_);
  }
  if (from._internal_has_area_symbol_fill_use_series_fill()) {
    _this->_impl_.area_symbol_fill_use_series_fill_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.area_symbol_fill_use_series_fill_);
  }
  if (from._internal_has_line_symbol_fill_use_series_fill()) {
    _this->_impl_.line_symbol_fill_use_series_fill_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.line_symbol_fill_use_series_fill_);
  }
  if (from._internal_has_mixed_area_symbol_fill_use_series_fill()) {
    _this->_impl_.mixed_area_symbol_fill_use_series_fill_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.mixed_area_symbol_fill_use_series_fill_);
  }
  if (from._internal_has_mixed_line_symbol_fill_use_series_fill()) {
    _this->_impl_.mixed_line_symbol_fill_use_series_fill_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.mixed_line_symbol_fill_use_series_fill_);
  }
  if (from._internal_has_radar_area_symbol_fill_use_series_fill()) {
    _this->_impl_.radar_area_symbol_fill_use_series_fill_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.radar_area_symbol_fill_use_series_fill_);
  }
  if (from._internal_has_area_symbol_fill_use_series_stroke()) {
    _this->_impl_.area_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.area_symbol_fill_use_series_stroke_);
  }
  if (from._internal_has_bubble_symbol_fill_use_series_stroke()) {
    _this->_impl_.bubble_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.bubble_symbol_fill_use_series_stroke_);
  }
  if (from._internal_has_line_symbol_fill_use_series_stroke()) {
    _this->_impl_.line_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.line_symbol_fill_use_series_stroke_);
  }
  if (from._internal_has_mixed_area_symbol_fill_use_series_stroke()) {
    _this->_impl_.mixed_area_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.mixed_area_symbol_fill_use_series_stroke_);
  }
  if (from._internal_has_mixed_line_symbol_fill_use_series_stroke()) {
    _this->_impl_.mixed_line_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.mixed_line_symbol_fill_use_series_stroke_);
  }
  if (from._internal_has_radar_area_symbol_fill_use_series_stroke()) {
    _this->_impl_.radar_area_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.radar_area_symbol_fill_use_series_stroke_);
  }
  if (from._internal_has_scatter_symbol_fill_use_series_stroke()) {
    _this->_impl_.scatter_symbol_fill_use_series_stroke_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.scatter_symbol_fill_use_series_stroke_);
  }
  if (from._internal_has_area_symbol_size()) {
    _this->_impl_.area_symbol_size_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.area_symbol_size_);
  }
  if (from._internal_has_line_symbol_size()) {
    _this->_impl_.line_symbol_size_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.line_symbol_size_);
  }
  if (from._internal_has_mixed_area_symbol_size()) {
    _this->_impl_.mixed_area_symbol_size_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.mixed_area_symbol_size_);
  }
  if (from._internal_has_mixed_line_symbol_size()) {
    _this->_impl_.mixed_line_symbol_size_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.mixed_line_symbol_size_);
  }
  if (from._internal_has_radar_area_symbol_size()) {
    _this->_impl_.radar_area_symbol_size_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.radar_area_symbol_size_);
  }
  if (from._internal_has_scatter_symbol_size()) {
    _this->_impl_.scatter_symbol_size_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.scatter_symbol_size_);
  }
  if (from._internal_has_area_symbol_stroke()) {
    _this->_impl_.area_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.area_symbol_stroke_);
  }
  if (from._internal_has_bubble_symbol_stroke()) {
    _this->_impl_.bubble_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.bubble_symbol_stroke_);
  }
  if (from._internal_has_line_symbol_stroke()) {
    _this->_impl_.line_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.line_symbol_stroke_);
  }
  if (from._internal_has_mixed_area_symbol_stroke()) {
    _this->_impl_.mixed_area_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.mixed_area_symbol_stroke_);
  }
  if (from._internal_has_mixed_line_symbol_stroke()) {
    _this->_impl_.mixed_line_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.mixed_line_symbol_stroke_);
  }
  if (from._internal_has_radar_area_symbol_stroke()) {
    _this->_impl_.radar_area_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.radar_area_symbol_stroke_);
  }
  if (from._internal_has_scatter_symbol_stroke()) {
    _this->_impl_.scatter_symbol_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.scatter_symbol_stroke_);
  }
  if (from._internal_has_default_trend_line_shadow()) {
    _this->_impl_.default_trend_line_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.default_trend_line_shadow_);
  }
  if (from._internal_has_default_trend_line_stroke()) {
    _this->_impl_.default_trend_line_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.default_trend_line_stroke_);
  }
  if (from._internal_has_default_trendline_equation_opacity()) {
    _this->_impl_.default_trendline_equation_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_trendline_equation_opacity_);
  }
  if (from._internal_has_default_trendline_equation_paragraph_style_index()) {
    _this->_impl_.default_trendline_equation_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_trendline_equation_paragraph_style_index_);
  }
  if (from._internal_has_default_trendline_r_squared_opacity()) {
    _this->_impl_.default_trendline_r_squared_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_trendline_r_squared_opacity_);
  }
  if (from._internal_has_default_trendline_r_squared_paragraph_style_index()) {
    _this->_impl_.default_trendline_r_squared_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_trendline_r_squared_paragraph_style_index_);
  }
  if (from._internal_has_area_value_label_position()) {
    _this->_impl_.area_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.area_value_label_position_);
  }
  if (from._internal_has_bar_value_label_position()) {
    _this->_impl_.bar_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.bar_value_label_position_);
  }
  if (from._internal_has_bubble_value_label_position()) {
    _this->_impl_.bubble_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.bubble_value_label_position_);
  }
  if (from._internal_has_default_value_label_position()) {
    _this->_impl_.default_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_value_label_position_);
  }
  if (from._internal_has_line_value_label_position()) {
    _this->_impl_.line_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.line_value_label_position_);
  }
  if (from._internal_has_mixed_area_value_label_position()) {
    _this->_impl_.mixed_area_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.mixed_area_value_label_position_);
  }
  if (from._internal_has_mixed_column_value_label_position()) {
    _this->_impl_.mixed_column_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.mixed_column_value_label_position_);
  }
  if (from._internal_has_mixed_line_value_label_position()) {
    _this->_impl_.mixed_line_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.mixed_line_value_label_position_);
  }
  if (from._internal_has_radar_area_value_label_position()) {
    _this->_impl_.radar_area_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.radar_area_value_label_position_);
  }
  if (from._internal_has_scatter_value_label_position()) {
    _this->_impl_.scatter_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.scatter_value_label_position_);
  }
  if (from._internal_has_stacked_area_value_label_position()) {
    _this->_impl_.stacked_area_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.stacked_area_value_label_position_);
  }
  if (from._internal_has_stacked_bar_value_label_position()) {
    _this->_impl_.stacked_bar_value_label_position_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.stacked_bar_value_label_position_);
  }
  if (from._internal_has_default_value_label_spacing()) {
    _this->_impl_.default_value_label_spacing_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_value_label_spacing_);
  }
  ::memcpy(&_impl_.default_callout_line_end_line_end_undefined_, &from._impl_.default_callout_line_end_line_end_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.default_value_label_spacing_undefined_) -
    reinterpret_cast<char*>(&_impl_.default_callout_line_end_line_end_undefined_)) + sizeof(_impl_.default_value_label_spacing_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
}

inline void ChartSeriesStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default_callout_line_end_line_end_){nullptr}
    , decltype(_impl_.default_callout_line_start_line_end_){nullptr}
    , decltype(_impl_.default_callout_line_stroke_style_){nullptr}
    , decltype(_impl_.default_error_bar_line_end_){nullptr}
    , decltype(_impl_.default_error_bar_line_end_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_shadow_){nullptr}
    , decltype(_impl_.default_error_bar_spacing_){nullptr}
    , decltype(_impl_.default_error_bar_spacing_scatter_x_){nullptr}
    , decltype(_impl_.default_error_bar_stroke_){nullptr}
    , decltype(_impl_.default_error_bar_stroke_scatter_x_){nullptr}
    , decltype(_impl_.area3d_fill_){nullptr}
    , decltype(_impl_.bar3d_fill_){nullptr}
    , decltype(_impl_.column3d_fill_){nullptr}
    , decltype(_impl_.line3d_fill_){nullptr}
    , decltype(_impl_.pie3d_fill_){nullptr}
    , decltype(_impl_.area_fill_){nullptr}
    , decltype(_impl_.bar_fill_){nullptr}
    , decltype(_impl_.column_fill_){nullptr}
    , decltype(_impl_.default_fill_){nullptr}
    , decltype(_impl_.mixed_area_fill_){nullptr}
    , decltype(_impl_.mixed_column_fill_){nullptr}
    , decltype(_impl_.pie_fill_){nullptr}
    , decltype(_impl_.radar_area_fill_){nullptr}
    , decltype(_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_){nullptr}
    , decltype(_impl_.radar_area_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.area_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.bar_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.donut_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.line_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.mixed_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.pie_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.radar_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_opacity_){nullptr}
    , decltype(_impl_.area_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.bar_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.donut_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.mixed_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.pie_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.radar_outside_label_paragraph_style_index_){nullptr}
    , decltype(_impl_.area3d_shadow_){nullptr}
    , decltype(_impl_.bar3d_shadow_){nullptr}
    , decltype(_impl_.column3d_shadow_){nullptr}
    , decltype(_impl_.line3d_shadow_){nullptr}
    , decltype(_impl_.pie3d_shadow_){nullptr}
    , decltype(_impl_.area_shadow_){nullptr}
    , decltype(_impl_.bar_shadow_){nullptr}
    , decltype(_impl_.bubble_shadow_){nullptr}
    , decltype(_impl_.default_shadow_){nullptr}
    , decltype(_impl_.line_shadow_){nullptr}
    , decltype(_impl_.mixed_area_shadow_){nullptr}
    , decltype(_impl_.mixed_column_shadow_){nullptr}
    , decltype(_impl_.mixed_line_shadow_){nullptr}
    , decltype(_impl_.pie_shadow_){nullptr}
    , decltype(_impl_.radar_area_shadow_){nullptr}
    , decltype(_impl_.scatter_shadow_){nullptr}
    , decltype(_impl_.area_stroke_){nullptr}
    , decltype(_impl_.bar_stroke_){nullptr}
    , decltype(_impl_.bubble_stroke_){nullptr}
    , decltype(_impl_.line_stroke_){nullptr}
    , decltype(_impl_.mixed_area_stroke_){nullptr}
    , decltype(_impl_.mixed_column_stroke_){nullptr}
    , decltype(_impl_.mixed_line_stroke_){nullptr}
    , decltype(_impl_.pie_stroke_){nullptr}
    , decltype(_impl_.radar_area_stroke_){nullptr}
    , decltype(_impl_.scatter_stroke_){nullptr}
    , decltype(_impl_.area_symbol_fill_){nullptr}
    , decltype(_impl_.bubble_symbol_fill_){nullptr}
    , decltype(_impl_.line_symbol_fill_){nullptr}
    , decltype(_impl_.mixed_area_symbol_fill_){nullptr}
    , decltype(_impl_.mixed_line_symbol_fill_){nullptr}
    , decltype(_impl_.radar_area_symbol_fill_){nullptr}
    , decltype(_impl_.scatter_symbol_fill_){nullptr}
    , decltype(_impl_.area_symbol_fill_use_series_fill_){nullptr}
    , decltype(_impl_.line_symbol_fill_use_series_fill_){nullptr}
    , decltype(_impl_.mixed_area_symbol_fill_use_series_fill_){nullptr}
    , decltype(_impl_.mixed_line_symbol_fill_use_series_fill_){nullptr}
    , decltype(_impl_.radar_area_symbol_fill_use_series_fill_){nullptr}
    , decltype(_impl_.area_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.bubble_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.line_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.mixed_area_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.mixed_line_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.radar_area_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.scatter_symbol_fill_use_series_stroke_){nullptr}
    , decltype(_impl_.area_symbol_size_){nullptr}
    , decltype(_impl_.line_symbol_size_){nullptr}
    , decltype(_impl_.mixed_area_symbol_size_){nullptr}
    , decltype(_impl_.mixed_line_symbol_size_){nullptr}
    , decltype(_impl_.radar_area_symbol_size_){nullptr}
    , decltype(_impl_.scatter_symbol_size_){nullptr}
    , decltype(_impl_.area_symbol_stroke_){nullptr}
    , decltype(_impl_.bubble_symbol_stroke_){nullptr}
    , decltype(_impl_.line_symbol_stroke_){nullptr}
    , decltype(_impl_.mixed_area_symbol_stroke_){nullptr}
    , decltype(_impl_.mixed_line_symbol_stroke_){nullptr}
    , decltype(_impl_.radar_area_symbol_stroke_){nullptr}
    , decltype(_impl_.scatter_symbol_stroke_){nullptr}
    , decltype(_impl_.default_trend_line_shadow_){nullptr}
    , decltype(_impl_.default_trend_line_stroke_){nullptr}
    , decltype(_impl_.default_trendline_equation_opacity_){nullptr}
    , decltype(_impl_.default_trendline_equation_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_trendline_r_squared_opacity_){nullptr}
    , decltype(_impl_.default_trendline_r_squared_paragraph_style_index_){nullptr}
    , decltype(_impl_.area_value_label_position_){nullptr}
    , decltype(_impl_.bar_value_label_position_){nullptr}
    , decltype(_impl_.bubble_value_label_position_){nullptr}
    , decltype(_impl_.default_value_label_position_){nullptr}
    , decltype(_impl_.line_value_label_position_){nullptr}
    , decltype(_impl_.mixed_area_value_label_position_){nullptr}
    , decltype(_impl_.mixed_column_value_label_position_){nullptr}
    , decltype(_impl_.mixed_line_value_label_position_){nullptr}
    , decltype(_impl_.radar_area_value_label_position_){nullptr}
    , decltype(_impl_.scatter_value_label_position_){nullptr}
    , decltype(_impl_.stacked_area_value_label_position_){nullptr}
    , decltype(_impl_.stacked_bar_value_label_position_){nullptr}
    , decltype(_impl_.default_value_label_spacing_){nullptr}
    , decltype(_impl_.default_callout_line_end_line_end_undefined_){false}
    , decltype(_impl_.default_callout_line_start_line_end_undefined_){false}
    , decltype(_impl_.default_callout_line_stroke_style_undefined_){false}
    , decltype(_impl_.default_error_bar_line_end_undefined_){false}
    , decltype(_impl_.default_error_bar_line_end_scatter_x_undefined_){false}
    , decltype(_impl_.default_error_bar_shadow_undefined_){false}
    , decltype(_impl_.default_error_bar_spacing_undefined_){false}
    , decltype(_impl_.default_error_bar_spacing_scatter_x_undefined_){false}
    , decltype(_impl_.default_error_bar_stroke_undefined_){false}
    , decltype(_impl_.default_error_bar_stroke_scatter_x_undefined_){false}
    , decltype(_impl_.area3d_fill_undefined_){false}
    , decltype(_impl_.bar3d_fill_undefined_){false}
    , decltype(_impl_.column3d_fill_undefined_){false}
    , decltype(_impl_.line3d_fill_undefined_){false}
    , decltype(_impl_.pie3d_fill_undefined_){false}
    , decltype(_impl_.area_fill_undefined_){false}
    , decltype(_impl_.bar_fill_undefined_){false}
    , decltype(_impl_.column_fill_undefined_){false}
    , decltype(_impl_.default_fill_undefined_){false}
    , decltype(_impl_.mixed_area_fill_undefined_){false}
    , decltype(_impl_.mixed_column_fill_undefined_){false}
    , decltype(_impl_.pie_fill_undefined_){false}
    , decltype(_impl_.radar_area_fill_undefined_){false}
    , decltype(_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_undefined_){false}
    , decltype(_impl_.radar_area_fill_use_series_stroke_undefined_){false}
    , decltype(_impl_.area_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.bar_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.default_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.donut_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.line_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.mixed_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.pie_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.radar_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.default_opacity_undefined_){false}
    , decltype(_impl_.area_outside_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.bar_outside_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.default_outside_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.donut_outside_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.mixed_outside_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.pie_outside_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.radar_outside_label_paragraph_style_index_undefined_){false}
    , decltype(_impl_.area3d_shadow_undefined_){false}
    , decltype(_impl_.bar3d_shadow_undefined_){false}
    , decltype(_impl_.column3d_shadow_undefined_){false}
    , decltype(_impl_.line3d_shadow_undefined_){false}
    , decltype(_impl_.pie3d_shadow_undefined_){false}
    , decltype(_impl_.area_shadow_undefined_){false}
    , decltype(_impl_.bar_shadow_undefined_){false}
    , decltype(_impl_.bubble_shadow_undefined_){false}
    , decltype(_impl_.default_shadow_undefined_){false}
    , decltype(_impl_.line_shadow_undefined_){false}
    , decltype(_impl_.mixed_area_shadow_undefined_){false}
    , decltype(_impl_.mixed_column_shadow_undefined_){false}
    , decltype(_impl_.mixed_line_shadow_undefined_){false}
    , decltype(_impl_.pie_shadow_undefined_){false}
    , decltype(_impl_.radar_area_shadow_undefined_){false}
    , decltype(_impl_.scatter_shadow_undefined_){false}
    , decltype(_impl_.area_stroke_undefined_){false}
    , decltype(_impl_.bar_stroke_undefined_){false}
    , decltype(_impl_.bubble_stroke_undefined_){false}
    , decltype(_impl_.line_stroke_undefined_){false}
    , decltype(_impl_.mixed_area_stroke_undefined_){false}
    , decltype(_impl_.mixed_column_stroke_undefined_){false}
    , decltype(_impl_.mixed_line_stroke_undefined_){false}
    , decltype(_impl_.pie_stroke_undefined_){false}
    , decltype(_impl_.radar_area_stroke_undefined_){false}
    , decltype(_impl_.scatter_stroke_undefined_){false}
    , decltype(_impl_.area_symbol_fill_undefined_){false}
    , decltype(_impl_.bubble_symbol_fill_undefined_){false}
    , decltype(_impl_.line_symbol_fill_undefined_){false}
    , decltype(_impl_.mixed_area_symbol_fill_undefined_){false}
    , decltype(_impl_.mixed_line_symbol_fill_undefined_){false}
    , decltype(_impl_.radar_area_symbol_fill_undefined_){false}
    , decltype(_impl_.scatter_symbol_fill_undefined_){false}
    , decltype(_impl_.area_symbol_fill_use_series_fill_undefined_){false}
    , decltype(_impl_.line_symbol_fill_use_series_fill_undefined_){false}
    , decltype(_impl_.mixed_area_symbol_fill_use_series_fill_undefined_){false}
    , decltype(_impl_.mixed_line_symbol_fill_use_series_fill_undefined_){false}
    , decltype(_impl_.radar_area_symbol_fill_use_series_fill_undefined_){false}
    , decltype(_impl_.area_symbol_fill_use_series_stroke_undefined_){false}
    , decltype(_impl_.bubble_symbol_fill_use_series_stroke_undefined_){false}
    , decltype(_impl_.line_symbol_fill_use_series_stroke_undefined_){false}
    , decltype(_impl_.mixed_area_symbol_fill_use_series_stroke_undefined_){false}
    , decltype(_impl_.mixed_line_symbol_fill_use_series_stroke_undefined_){false}
    , decltype(_impl_.radar_area_symbol_fill_use_series_stroke_undefined_){false}
    , decltype(_impl_.scatter_symbol_fill_use_series_stroke_undefined_){false}
    , decltype(_impl_.area_symbol_size_undefined_){false}
    , decltype(_impl_.line_symbol_size_undefined_){false}
    , decltype(_impl_.mixed_area_symbol_size_undefined_){false}
    , decltype(_impl_.mixed_line_symbol_size_undefined_){false}
    , decltype(_impl_.radar_area_symbol_size_undefined_){false}
    , decltype(_impl_.scatter_symbol_size_undefined_){false}
    , decltype(_impl_.area_symbol_stroke_undefined_){false}
    , decltype(_impl_.bubble_symbol_stroke_undefined_){false}
    , decltype(_impl_.line_symbol_stroke_undefined_){false}
    , decltype(_impl_.mixed_area_symbol_stroke_undefined_){false}
    , decltype(_impl_.mixed_line_symbol_stroke_undefined_){false}
    , decltype(_impl_.radar_area_symbol_stroke_undefined_){false}
    , decltype(_impl_.scatter_symbol_stroke_undefined_){false}
    , decltype(_impl_.default_trend_line_shadow_undefined_){false}
    , decltype(_impl_.default_trend_line_stroke_undefined_){false}
    , decltype(_impl_.default_trendline_equation_opacity_undefined_){false}
    , decltype(_impl_.default_trendline_equation_paragraph_style_index_undefined_){false}
    , decltype(_impl_.default_trendline_r_squared_opacity_undefined_){false}
    , decltype(_impl_.default_trendline_r_squared_paragraph_style_index_undefined_){false}
    , decltype(_impl_.area_value_label_position_undefined_){false}
    , decltype(_impl_.bar_value_label_position_undefined_){false}
    , decltype(_impl_.bubble_value_label_position_undefined_){false}
    , decltype(_impl_.default_value_label_position_undefined_){false}
    , decltype(_impl_.line_value_label_position_undefined_){false}
    , decltype(_impl_.mixed_area_value_label_position_undefined_){false}
    , decltype(_impl_.mixed_column_value_label_position_undefined_){false}
    , decltype(_impl_.mixed_line_value_label_position_undefined_){false}
    , decltype(_impl_.radar_area_value_label_position_undefined_){false}
    , decltype(_impl_.scatter_value_label_position_undefined_){false}
    , decltype(_impl_.stacked_area_value_label_position_undefined_){false}
    , decltype(_impl_.stacked_bar_value_label_position_undefined_){false}
    , decltype(_impl_.default_value_label_spacing_undefined_){false}
  };
}

ChartSeriesStylePropertyChangeSetArchive::~ChartSeriesStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChartSeriesStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.default_callout_line_end_line_end_;
  if (this != internal_default_instance()) delete _impl_.default_callout_line_start_line_end_;
  if (this != internal_default_instance()) delete _impl_.default_callout_line_stroke_style_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_line_end_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_line_end_scatter_x_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_shadow_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_spacing_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_spacing_scatter_x_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_stroke_;
  if (this != internal_default_instance()) delete _impl_.default_error_bar_stroke_scatter_x_;
  if (this != internal_default_instance()) delete _impl_.area3d_fill_;
  if (this != internal_default_instance()) delete _impl_.bar3d_fill_;
  if (this != internal_default_instance()) delete _impl_.column3d_fill_;
  if (this != internal_default_instance()) delete _impl_.line3d_fill_;
  if (this != internal_default_instance()) delete _impl_.pie3d_fill_;
  if (this != internal_default_instance()) delete _impl_.area_fill_;
  if (this != internal_default_instance()) delete _impl_.bar_fill_;
  if (this != internal_default_instance()) delete _impl_.column_fill_;
  if (this != internal_default_instance()) delete _impl_.default_fill_;
  if (this != internal_default_instance()) delete _impl_.mixed_area_fill_;
  if (this != internal_default_instance()) delete _impl_.mixed_column_fill_;
  if (this != internal_default_instance()) delete _impl_.pie_fill_;
  if (this != internal_default_instance()) delete _impl_.radar_area_fill_;
  if (this != internal_default_instance()) delete _impl_.radar_area_fill_use_series_stroke_alpha_multiplier_;
  if (this != internal_default_instance()) delete _impl_.radar_area_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete _impl_.area_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.bar_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.default_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.donut_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.line_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.mixed_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.pie_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.radar_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.default_opacity_;
  if (this != internal_default_instance()) delete _impl_.area_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.bar_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.default_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.donut_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.mixed_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.pie_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.radar_outside_label_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.area3d_shadow_;
  if (this != internal_default_instance()) delete _impl_.bar3d_shadow_;
  if (this != internal_default_instance()) delete _impl_.column3d_shadow_;
  if (this != internal_default_instance()) delete _impl_.line3d_shadow_;
  if (this != internal_default_instance()) delete _impl_.pie3d_shadow_;
  if (this != internal_default_instance()) delete _impl_.area_shadow_;
  if (this != internal_default_instance()) delete _impl_.bar_shadow_;
  if (this != internal_default_instance()) delete _impl_.bubble_shadow_;
  if (this != internal_default_instance()) delete _impl_.default_shadow_;
  if (this != internal_default_instance()) delete _impl_.line_shadow_;
  if (this != internal_default_instance()) delete _impl_.mixed_area_shadow_;
  if (this != internal_default_instance()) delete _impl_.mixed_column_shadow_;
  if (this != internal_default_instance()) delete _impl_.mixed_line_shadow_;
  if (this != internal_default_instance()) delete _impl_.pie_shadow_;
  if (this != internal_default_instance()) delete _impl_.radar_area_shadow_;
  if (this != internal_default_instance()) delete _impl_.scatter_shadow_;
  if (this != internal_default_instance()) delete _impl_.area_stroke_;
  if (this != internal_default_instance()) delete _impl_.bar_stroke_;
  if (this != internal_default_instance()) delete _impl_.bubble_stroke_;
  if (this != internal_default_instance()) delete _impl_.line_stroke_;
  if (this != internal_default_instance()) delete _impl_.mixed_area_stroke_;
  if (this != internal_default_instance()) delete _impl_.mixed_column_stroke_;
  if (this != internal_default_instance()) delete _impl_.mixed_line_stroke_;
  if (this != internal_default_instance()) delete _impl_.pie_stroke_;
  if (this != internal_default_instance()) delete _impl_.radar_area_stroke_;
  if (this != internal_default_instance()) delete _impl_.scatter_stroke_;
  if (this != internal_default_instance()) delete _impl_.area_symbol_fill_;
  if (this != internal_default_instance()) delete _impl_.bubble_symbol_fill_;
  if (this != internal_default_instance()) delete _impl_.line_symbol_fill_;
  if (this != internal_default_instance()) delete _impl_.mixed_area_symbol_fill_;
  if (this != internal_default_instance()) delete _impl_.mixed_line_symbol_fill_;
  if (this != internal_default_instance()) delete _impl_.radar_area_symbol_fill_;
  if (this != internal_default_instance()) delete _impl_.scatter_symbol_fill_;
  if (this != internal_default_instance()) delete _impl_.area_symbol_fill_use_series_fill_;
  if (this != internal_default_instance()) delete _impl_.line_symbol_fill_use_series_fill_;
  if (this != internal_default_instance()) delete _impl_.mixed_area_symbol_fill_use_series_fill_;
  if (this != internal_default_instance()) delete _impl_.mixed_line_symbol_fill_use_series_fill_;
  if (this != internal_default_instance()) delete _impl_.radar_area_symbol_fill_use_series_fill_;
  if (this != internal_default_instance()) delete _impl_.area_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete _impl_.bubble_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete _impl_.line_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete _impl_.mixed_area_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete _impl_.mixed_line_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete _impl_.radar_area_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete _impl_.scatter_symbol_fill_use_series_stroke_;
  if (this != internal_default_instance()) delete _impl_.area_symbol_size_;
  if (this != internal_default_instance()) delete _impl_.line_symbol_size_;
  if (this != internal_default_instance()) delete _impl_.mixed_area_symbol_size_;
  if (this != internal_default_instance()) delete _impl_.mixed_line_symbol_size_;
  if (this != internal_default_instance()) delete _impl_.radar_area_symbol_size_;
  if (this != internal_default_instance()) delete _impl_.scatter_symbol_size_;
  if (this != internal_default_instance()) delete _impl_.area_symbol_stroke_;
  if (this != internal_default_instance()) delete _impl_.bubble_symbol_stroke_;
  if (this != internal_default_instance()) delete _impl_.line_symbol_stroke_;
  if (this != internal_default_instance()) delete _impl_.mixed_area_symbol_stroke_;
  if (this != internal_default_instance()) delete _impl_.mixed_line_symbol_stroke_;
  if (this != internal_default_instance()) delete _impl_.radar_area_symbol_stroke_;
  if (this != internal_default_instance()) delete _impl_.scatter_symbol_stroke_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_shadow_;
  if (this != internal_default_instance()) delete _impl_.default_trend_line_stroke_;
  if (this != internal_default_instance()) delete _impl_.default_trendline_equation_opacity_;
  if (this != internal_default_instance()) delete _impl_.default_trendline_equation_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.default_trendline_r_squared_opacity_;
  if (this != internal_default_instance()) delete _impl_.default_trendline_r_squared_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.area_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.bar_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.bubble_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.default_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.line_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.mixed_area_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.mixed_column_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.mixed_line_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.radar_area_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.scatter_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.stacked_area_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.stacked_bar_value_label_position_;
  if (this != internal_default_instance()) delete _impl_.default_value_label_spacing_;
}

void ChartSeriesStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChartSeriesStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.default_callout_line_end_line_end_ != nullptr);
      _impl_.default_callout_line_end_line_end_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.default_callout_line_start_line_end_ != nullptr);
      _impl_.default_callout_line_start_line_end_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.default_callout_line_stroke_style_ != nullptr);
      _impl_.default_callout_line_stroke_style_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_line_end_ != nullptr);
      _impl_.default_error_bar_line_end_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_line_end_scatter_x_ != nullptr);
      _impl_.default_error_bar_line_end_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_shadow_ != nullptr);
      _impl_.default_error_bar_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_spacing_ != nullptr);
      _impl_.default_error_bar_spacing_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_spacing_scatter_x_ != nullptr);
      _impl_.default_error_bar_spacing_scatter_x_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_stroke_ != nullptr);
      _impl_.default_error_bar_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.default_error_bar_stroke_scatter_x_ != nullptr);
      _impl_.default_error_bar_stroke_scatter_x_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.area3d_fill_ != nullptr);
      _impl_.area3d_fill_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.bar3d_fill_ != nullptr);
      _impl_.bar3d_fill_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.column3d_fill_ != nullptr);
      _impl_.column3d_fill_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.line3d_fill_ != nullptr);
      _impl_.line3d_fill_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.pie3d_fill_ != nullptr);
      _impl_.pie3d_fill_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.area_fill_ != nullptr);
      _impl_.area_fill_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.bar_fill_ != nullptr);
      _impl_.bar_fill_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.column_fill_ != nullptr);
      _impl_.column_fill_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.default_fill_ != nullptr);
      _impl_.default_fill_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.mixed_area_fill_ != nullptr);
      _impl_.mixed_area_fill_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.mixed_column_fill_ != nullptr);
      _impl_.mixed_column_fill_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.pie_fill_ != nullptr);
      _impl_.pie_fill_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.radar_area_fill_ != nullptr);
      _impl_.radar_area_fill_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_ != nullptr);
      _impl_.radar_area_fill_use_series_stroke_alpha_multiplier_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(_impl_.radar_area_fill_use_series_stroke_ != nullptr);
      _impl_.radar_area_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(_impl_.area_label_paragraph_style_index_ != nullptr);
      _impl_.area_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(_impl_.bar_label_paragraph_style_index_ != nullptr);
      _impl_.bar_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(_impl_.default_label_paragraph_style_index_ != nullptr);
      _impl_.default_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(_impl_.donut_label_paragraph_style_index_ != nullptr);
      _impl_.donut_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(_impl_.line_label_paragraph_style_index_ != nullptr);
      _impl_.line_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(_impl_.mixed_label_paragraph_style_index_ != nullptr);
      _impl_.mixed_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(_impl_.pie_label_paragraph_style_index_ != nullptr);
      _impl_.pie_label_paragraph_style_index_->Clear();
    }
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.radar_label_paragraph_style_index_ != nullptr);
      _impl_.radar_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.default_opacity_ != nullptr);
      _impl_.default_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.area_outside_label_paragraph_style_index_ != nullptr);
      _impl_.area_outside_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.bar_outside_label_paragraph_style_index_ != nullptr);
      _impl_.bar_outside_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.default_outside_label_paragraph_style_index_ != nullptr);
      _impl_.default_outside_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.donut_outside_label_paragraph_style_index_ != nullptr);
      _impl_.donut_outside_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.mixed_outside_label_paragraph_style_index_ != nullptr);
      _impl_.mixed_outside_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.pie_outside_label_paragraph_style_index_ != nullptr);
      _impl_.pie_outside_label_paragraph_style_index_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.radar_outside_label_paragraph_style_index_ != nullptr);
      _impl_.radar_outside_label_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.area3d_shadow_ != nullptr);
      _impl_.area3d_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.bar3d_shadow_ != nullptr);
      _impl_.bar3d_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.column3d_shadow_ != nullptr);
      _impl_.column3d_shadow_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.line3d_shadow_ != nullptr);
      _impl_.line3d_shadow_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.pie3d_shadow_ != nullptr);
      _impl_.pie3d_shadow_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.area_shadow_ != nullptr);
      _impl_.area_shadow_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.bar_shadow_ != nullptr);
      _impl_.bar_shadow_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.bubble_shadow_ != nullptr);
      _impl_.bubble_shadow_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.default_shadow_ != nullptr);
      _impl_.default_shadow_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.line_shadow_ != nullptr);
      _impl_.line_shadow_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.mixed_area_shadow_ != nullptr);
      _impl_.mixed_area_shadow_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.mixed_column_shadow_ != nullptr);
      _impl_.mixed_column_shadow_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.mixed_line_shadow_ != nullptr);
      _impl_.mixed_line_shadow_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.pie_shadow_ != nullptr);
      _impl_.pie_shadow_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.radar_area_shadow_ != nullptr);
      _impl_.radar_area_shadow_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(_impl_.scatter_shadow_ != nullptr);
      _impl_.scatter_shadow_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(_impl_.area_stroke_ != nullptr);
      _impl_.area_stroke_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(_impl_.bar_stroke_ != nullptr);
      _impl_.bar_stroke_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(_impl_.bubble_stroke_ != nullptr);
      _impl_.bubble_stroke_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(_impl_.line_stroke_ != nullptr);
      _impl_.line_stroke_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(_impl_.mixed_area_stroke_ != nullptr);
      _impl_.mixed_area_stroke_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(_impl_.mixed_column_stroke_ != nullptr);
      _impl_.mixed_column_stroke_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(_impl_.mixed_line_stroke_ != nullptr);
      _impl_.mixed_line_stroke_->Clear();
    }
  }
  cached_has_bits = _impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.pie_stroke_ != nullptr);
      _impl_.pie_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.radar_area_stroke_ != nullptr);
      _impl_.radar_area_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.scatter_stroke_ != nullptr);
      _impl_.scatter_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.area_symbol_fill_ != nullptr);
      _impl_.area_symbol_fill_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.bubble_symbol_fill_ != nullptr);
      _impl_.bubble_symbol_fill_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.line_symbol_fill_ != nullptr);
      _impl_.line_symbol_fill_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.mixed_area_symbol_fill_ != nullptr);
      _impl_.mixed_area_symbol_fill_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.mixed_line_symbol_fill_ != nullptr);
      _impl_.mixed_line_symbol_fill_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.radar_area_symbol_fill_ != nullptr);
      _impl_.radar_area_symbol_fill_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.scatter_symbol_fill_ != nullptr);
      _impl_.scatter_symbol_fill_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.area_symbol_fill_use_series_fill_ != nullptr);
      _impl_.area_symbol_fill_use_series_fill_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.line_symbol_fill_use_series_fill_ != nullptr);
      _impl_.line_symbol_fill_use_series_fill_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.mixed_area_symbol_fill_use_series_fill_ != nullptr);
      _impl_.mixed_area_symbol_fill_use_series_fill_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.mixed_line_symbol_fill_use_series_fill_ != nullptr);
      _impl_.mixed_line_symbol_fill_use_series_fill_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.radar_area_symbol_fill_use_series_fill_ != nullptr);
      _impl_.radar_area_symbol_fill_use_series_fill_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.area_symbol_fill_use_series_stroke_ != nullptr);
      _impl_.area_symbol_fill_use_series_stroke_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.bubble_symbol_fill_use_series_stroke_ != nullptr);
      _impl_.bubble_symbol_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.line_symbol_fill_use_series_stroke_ != nullptr);
      _impl_.line_symbol_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.mixed_area_symbol_fill_use_series_stroke_ != nullptr);
      _impl_.mixed_area_symbol_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.mixed_line_symbol_fill_use_series_stroke_ != nullptr);
      _impl_.mixed_line_symbol_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.radar_area_symbol_fill_use_series_stroke_ != nullptr);
      _impl_.radar_area_symbol_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.scatter_symbol_fill_use_series_stroke_ != nullptr);
      _impl_.scatter_symbol_fill_use_series_stroke_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.area_symbol_size_ != nullptr);
      _impl_.area_symbol_size_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.line_symbol_size_ != nullptr);
      _impl_.line_symbol_size_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      GOOGLE_DCHECK(_impl_.mixed_area_symbol_size_ != nullptr);
      _impl_.mixed_area_symbol_size_->Clear();
    }
    if (cached_has_bits & 0x02000000u) {
      GOOGLE_DCHECK(_impl_.mixed_line_symbol_size_ != nullptr);
      _impl_.mixed_line_symbol_size_->Clear();
    }
    if (cached_has_bits & 0x04000000u) {
      GOOGLE_DCHECK(_impl_.radar_area_symbol_size_ != nullptr);
      _impl_.radar_area_symbol_size_->Clear();
    }
    if (cached_has_bits & 0x08000000u) {
      GOOGLE_DCHECK(_impl_.scatter_symbol_size_ != nullptr);
      _impl_.scatter_symbol_size_->Clear();
    }
    if (cached_has_bits & 0x10000000u) {
      GOOGLE_DCHECK(_impl_.area_symbol_stroke_ != nullptr);
      _impl_.area_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x20000000u) {
      GOOGLE_DCHECK(_impl_.bubble_symbol_stroke_ != nullptr);
      _impl_.bubble_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x40000000u) {
      GOOGLE_DCHECK(_impl_.line_symbol_stroke_ != nullptr);
      _impl_.line_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x80000000u) {
      GOOGLE_DCHECK(_impl_.mixed_area_symbol_stroke_ != nullptr);
      _impl_.mixed_area_symbol_stroke_->Clear();
    }
  }
  cached_has_bits = _impl_._has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.mixed_line_symbol_stroke_ != nullptr);
      _impl_.mixed_line_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.radar_area_symbol_stroke_ != nullptr);
      _impl_.radar_area_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.scatter_symbol_stroke_ != nullptr);
      _impl_.scatter_symbol_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_shadow_ != nullptr);
      _impl_.default_trend_line_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.default_trend_line_stroke_ != nullptr);
      _impl_.default_trend_line_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.default_trendline_equation_opacity_ != nullptr);
      _impl_.default_trendline_equation_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.default_trendline_equation_paragraph_style_index_ != nullptr);
      _impl_.default_trendline_equation_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.default_trendline_r_squared_opacity_ != nullptr);
      _impl_.default_trendline_r_squared_opacity_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.default_trendline_r_squared_paragraph_style_index_ != nullptr);
      _impl_.default_trendline_r_squared_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.area_value_label_position_ != nullptr);
      _impl_.area_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.bar_value_label_position_ != nullptr);
      _impl_.bar_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.bubble_value_label_position_ != nullptr);
      _impl_.bubble_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.default_value_label_position_ != nullptr);
      _impl_.default_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.line_value_label_position_ != nullptr);
      _impl_.line_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.mixed_area_value_label_position_ != nullptr);
      _impl_.mixed_area_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.mixed_column_value_label_position_ != nullptr);
      _impl_.mixed_column_value_label_position_->Clear();
    }
  }
  if (cached_has_bits & 0x003f0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.mixed_line_value_label_position_ != nullptr);
      _impl_.mixed_line_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.radar_area_value_label_position_ != nullptr);
      _impl_.radar_area_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.scatter_value_label_position_ != nullptr);
      _impl_.scatter_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.stacked_area_value_label_position_ != nullptr);
      _impl_.stacked_area_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.stacked_bar_value_label_position_ != nullptr);
      _impl_.stacked_bar_value_label_position_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.default_value_label_spacing_ != nullptr);
      _impl_.default_value_label_spacing_->Clear();
    }
  }
  if (cached_has_bits & 0x00c00000u) {
    ::memset(&_impl_.default_callout_line_end_line_end_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_callout_line_start_line_end_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_callout_line_end_line_end_undefined_)) + sizeof(_impl_.default_callout_line_start_line_end_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.default_callout_line_stroke_style_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_error_bar_stroke_scatter_x_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_callout_line_stroke_style_undefined_)) + sizeof(_impl_.default_error_bar_stroke_scatter_x_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.area3d_fill_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.column_fill_undefined_) -
        reinterpret_cast<char*>(&_impl_.area3d_fill_undefined_)) + sizeof(_impl_.column_fill_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.default_fill_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.area_label_paragraph_style_index_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_fill_undefined_)) + sizeof(_impl_.area_label_paragraph_style_index_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.bar_label_paragraph_style_index_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_opacity_undefined_) -
        reinterpret_cast<char*>(&_impl_.bar_label_paragraph_style_index_undefined_)) + sizeof(_impl_.default_opacity_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.area_outside_label_paragraph_style_index_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.area3d_shadow_undefined_) -
        reinterpret_cast<char*>(&_impl_.area_outside_label_paragraph_style_index_undefined_)) + sizeof(_impl_.area3d_shadow_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.bar3d_shadow_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_shadow_undefined_) -
        reinterpret_cast<char*>(&_impl_.bar3d_shadow_undefined_)) + sizeof(_impl_.default_shadow_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.line_shadow_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.area_stroke_undefined_) -
        reinterpret_cast<char*>(&_impl_.line_shadow_undefined_)) + sizeof(_impl_.area_stroke_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.bar_stroke_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.radar_area_stroke_undefined_) -
        reinterpret_cast<char*>(&_impl_.bar_stroke_undefined_)) + sizeof(_impl_.radar_area_stroke_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.scatter_stroke_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.scatter_symbol_fill_undefined_) -
        reinterpret_cast<char*>(&_impl_.scatter_stroke_undefined_)) + sizeof(_impl_.scatter_symbol_fill_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[6];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.area_symbol_fill_use_series_fill_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.line_symbol_fill_use_series_stroke_undefined_) -
        reinterpret_cast<char*>(&_impl_.area_symbol_fill_use_series_fill_undefined_)) + sizeof(_impl_.line_symbol_fill_use_series_stroke_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.mixed_area_symbol_fill_use_series_stroke_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.mixed_line_symbol_size_undefined_) -
        reinterpret_cast<char*>(&_impl_.mixed_area_symbol_fill_use_series_stroke_undefined_)) + sizeof(_impl_.mixed_line_symbol_size_undefined_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.radar_area_symbol_size_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.radar_area_symbol_stroke_undefined_) -
        reinterpret_cast<char*>(&_impl_.radar_area_symbol_size_undefined_)) + sizeof(_impl_.radar_area_symbol_stroke_undefined_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.scatter_symbol_stroke_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.area_value_label_position_undefined_) -
        reinterpret_cast<char*>(&_impl_.scatter_symbol_stroke_undefined_)) + sizeof(_impl_.area_value_label_position_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[7];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.bar_value_label_position_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.radar_area_value_label_position_undefined_) -
        reinterpret_cast<char*>(&_impl_.bar_value_label_position_undefined_)) + sizeof(_impl_.radar_area_value_label_position_undefined_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&_impl_.scatter_value_label_position_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_value_label_spacing_undefined_) -
        reinterpret_cast<char*>(&_impl_.scatter_value_label_position_undefined_)) + sizeof(_impl_.default_value_label_spacing_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartSeriesStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSDSOS.SpecLineEndArchive default_callout_line_end_line_end = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_callout_line_end_line_end(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_callout_line_end_line_end_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_default_callout_line_end_line_end_undefined(&_impl_._has_bits_);
          _impl_.default_callout_line_end_line_end_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecLineEndArchive default_callout_line_start_line_end = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_callout_line_start_line_end(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_callout_line_start_line_end_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default_callout_line_start_line_end_undefined(&_impl_._has_bits_);
          _impl_.default_callout_line_start_line_end_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_callout_line_stroke_style = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_callout_line_stroke_style(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_callout_line_stroke_style_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_default_callout_line_stroke_style_undefined(&_impl_._has_bits_);
          _impl_.default_callout_line_stroke_style_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_line_end(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_line_end_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_default_error_bar_line_end_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_line_end_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end_scatter_x = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_line_end_scatter_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_line_end_scatter_x_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default_error_bar_line_end_scatter_x_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_line_end_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_error_bar_shadow = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_shadow_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_default_error_bar_shadow_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_spacing_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_default_error_bar_spacing_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_spacing_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing_scatter_x = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_spacing_scatter_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_spacing_scatter_x_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default_error_bar_spacing_scatter_x_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_spacing_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_stroke_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_default_error_bar_stroke_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke_scatter_x = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_error_bar_stroke_scatter_x(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_error_bar_stroke_scatter_x_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_default_error_bar_stroke_scatter_x_undefined(&_impl_._has_bits_);
          _impl_.default_error_bar_stroke_scatter_x_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive area3d_fill = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_area3d_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area3d_fill_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_area3d_fill_undefined(&_impl_._has_bits_);
          _impl_.area3d_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive bar3d_fill = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar3d_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar3d_fill_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_bar3d_fill_undefined(&_impl_._has_bits_);
          _impl_.bar3d_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive column3d_fill = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_column3d_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool column3d_fill_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_column3d_fill_undefined(&_impl_._has_bits_);
          _impl_.column3d_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive line3d_fill = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_line3d_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line3d_fill_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_line3d_fill_undefined(&_impl_._has_bits_);
          _impl_.line3d_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive pie3d_fill = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie3d_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie3d_fill_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_pie3d_fill_undefined(&_impl_._has_bits_);
          _impl_.pie3d_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive area_fill = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_fill_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_area_fill_undefined(&_impl_._has_bits_);
          _impl_.area_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive bar_fill = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar_fill_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_bar_fill_undefined(&_impl_._has_bits_);
          _impl_.bar_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive column_fill = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_column_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool column_fill_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_column_fill_undefined(&_impl_._has_bits_);
          _impl_.column_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive default_fill = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_fill_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_default_fill_undefined(&_impl_._has_bits_);
          _impl_.default_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive mixed_area_fill = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_area_fill_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_mixed_area_fill_undefined(&_impl_._has_bits_);
          _impl_.mixed_area_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive mixed_column_fill = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_column_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_column_fill_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_mixed_column_fill_undefined(&_impl_._has_bits_);
          _impl_.mixed_column_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive pie_fill = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_fill_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_pie_fill_undefined(&_impl_._has_bits_);
          _impl_.pie_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive radar_area_fill = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_fill_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_radar_area_fill_undefined(&_impl_._has_bits_);
          _impl_.radar_area_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive radar_area_fill_use_series_stroke_alpha_multiplier = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_fill_use_series_stroke_alpha_multiplier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_fill_use_series_stroke_alpha_multiplier_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_radar_area_fill_use_series_stroke_alpha_multiplier_undefined(&_impl_._has_bits_);
          _impl_.radar_area_fill_use_series_stroke_alpha_multiplier_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive radar_area_fill_use_series_stroke = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_fill_use_series_stroke_undefined = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_radar_area_fill_use_series_stroke_undefined(&_impl_._has_bits_);
          _impl_.radar_area_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_label_paragraph_style_index = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_label_paragraph_style_index_undefined = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_area_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.area_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bar_label_paragraph_style_index = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar_label_paragraph_style_index_undefined = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_bar_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.bar_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_label_paragraph_style_index_undefined = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_default_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.default_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive donut_label_paragraph_style_index = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_donut_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool donut_label_paragraph_style_index_undefined = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_donut_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.donut_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_label_paragraph_style_index = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_label_paragraph_style_index_undefined = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_line_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.line_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_label_paragraph_style_index = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_label_paragraph_style_index_undefined = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_mixed_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.mixed_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive pie_label_paragraph_style_index = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_label_paragraph_style_index_undefined = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_pie_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.pie_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive radar_label_paragraph_style_index = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_label_paragraph_style_index_undefined = 66;
      case 66:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_radar_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.radar_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_opacity = 67;
      case 67:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_opacity_undefined = 68;
      case 68:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default_opacity_undefined(&_impl_._has_bits_);
          _impl_.default_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_outside_label_paragraph_style_index = 69;
      case 69:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_outside_label_paragraph_style_index_undefined = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_area_outside_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.area_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bar_outside_label_paragraph_style_index = 71;
      case 71:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar_outside_label_paragraph_style_index_undefined = 72;
      case 72:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_bar_outside_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.bar_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_outside_label_paragraph_style_index = 73;
      case 73:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_outside_label_paragraph_style_index_undefined = 74;
      case 74:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default_outside_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.default_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive donut_outside_label_paragraph_style_index = 75;
      case 75:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_donut_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool donut_outside_label_paragraph_style_index_undefined = 76;
      case 76:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_donut_outside_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.donut_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_outside_label_paragraph_style_index = 77;
      case 77:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_outside_label_paragraph_style_index_undefined = 78;
      case 78:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_mixed_outside_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.mixed_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive pie_outside_label_paragraph_style_index = 79;
      case 79:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_outside_label_paragraph_style_index_undefined = 80;
      case 80:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_pie_outside_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.pie_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive radar_outside_label_paragraph_style_index = 81;
      case 81:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_outside_label_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_outside_label_paragraph_style_index_undefined = 82;
      case 82:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_radar_outside_label_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.radar_outside_label_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive area3d_shadow = 83;
      case 83:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_area3d_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area3d_shadow_undefined = 84;
      case 84:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_area3d_shadow_undefined(&_impl_._has_bits_);
          _impl_.area3d_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive bar3d_shadow = 85;
      case 85:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar3d_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar3d_shadow_undefined = 86;
      case 86:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_bar3d_shadow_undefined(&_impl_._has_bits_);
          _impl_.bar3d_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive column3d_shadow = 87;
      case 87:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_column3d_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool column3d_shadow_undefined = 88;
      case 88:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_column3d_shadow_undefined(&_impl_._has_bits_);
          _impl_.column3d_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive line3d_shadow = 89;
      case 89:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_line3d_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line3d_shadow_undefined = 90;
      case 90:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_line3d_shadow_undefined(&_impl_._has_bits_);
          _impl_.line3d_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive pie3d_shadow = 91;
      case 91:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie3d_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie3d_shadow_undefined = 92;
      case 92:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_pie3d_shadow_undefined(&_impl_._has_bits_);
          _impl_.pie3d_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive area_shadow = 93;
      case 93:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_shadow_undefined = 94;
      case 94:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_area_shadow_undefined(&_impl_._has_bits_);
          _impl_.area_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive bar_shadow = 95;
      case 95:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar_shadow_undefined = 96;
      case 96:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_bar_shadow_undefined(&_impl_._has_bits_);
          _impl_.bar_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive bubble_shadow = 97;
      case 97:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_shadow_undefined = 98;
      case 98:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_bubble_shadow_undefined(&_impl_._has_bits_);
          _impl_.bubble_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_shadow = 99;
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_shadow_undefined = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default_shadow_undefined(&_impl_._has_bits_);
          _impl_.default_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive line_shadow = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_shadow_undefined = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_line_shadow_undefined(&_impl_._has_bits_);
          _impl_.line_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive mixed_area_shadow = 103;
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_area_shadow_undefined = 104;
      case 104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_mixed_area_shadow_undefined(&_impl_._has_bits_);
          _impl_.mixed_area_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive mixed_column_shadow = 105;
      case 105:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_column_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_column_shadow_undefined = 106;
      case 106:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_mixed_column_shadow_undefined(&_impl_._has_bits_);
          _impl_.mixed_column_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive mixed_line_shadow = 107;
      case 107:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_line_shadow_undefined = 108;
      case 108:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_mixed_line_shadow_undefined(&_impl_._has_bits_);
          _impl_.mixed_line_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive pie_shadow = 109;
      case 109:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_shadow_undefined = 110;
      case 110:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_pie_shadow_undefined(&_impl_._has_bits_);
          _impl_.pie_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive radar_area_shadow = 111;
      case 111:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_shadow_undefined = 112;
      case 112:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_radar_area_shadow_undefined(&_impl_._has_bits_);
          _impl_.radar_area_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive scatter_shadow = 113;
      case 113:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_shadow_undefined = 114;
      case 114:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_scatter_shadow_undefined(&_impl_._has_bits_);
          _impl_.scatter_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive area_stroke = 115;
      case 115:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_stroke_undefined = 116;
      case 116:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_area_stroke_undefined(&_impl_._has_bits_);
          _impl_.area_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive bar_stroke = 117;
      case 117:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar_stroke_undefined = 118;
      case 118:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_bar_stroke_undefined(&_impl_._has_bits_);
          _impl_.bar_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive bubble_stroke = 119;
      case 119:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_stroke_undefined = 120;
      case 120:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_bubble_stroke_undefined(&_impl_._has_bits_);
          _impl_.bubble_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive line_stroke = 121;
      case 121:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_stroke_undefined = 122;
      case 122:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_line_stroke_undefined(&_impl_._has_bits_);
          _impl_.line_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive mixed_area_stroke = 123;
      case 123:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_area_stroke_undefined = 124;
      case 124:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_mixed_area_stroke_undefined(&_impl_._has_bits_);
          _impl_.mixed_area_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive mixed_column_stroke = 125;
      case 125:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_column_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_column_stroke_undefined = 126;
      case 126:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_mixed_column_stroke_undefined(&_impl_._has_bits_);
          _impl_.mixed_column_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive mixed_line_stroke = 127;
      case 127:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_line_stroke_undefined = 128;
      case 128:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_mixed_line_stroke_undefined(&_impl_._has_bits_);
          _impl_.mixed_line_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive pie_stroke = 129;
      case 129:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie_stroke_undefined = 130;
      case 130:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_pie_stroke_undefined(&_impl_._has_bits_);
          _impl_.pie_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive radar_area_stroke = 131;
      case 131:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_stroke_undefined = 132;
      case 132:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_radar_area_stroke_undefined(&_impl_._has_bits_);
          _impl_.radar_area_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive scatter_stroke = 133;
      case 133:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_stroke_undefined = 134;
      case 134:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_scatter_stroke_undefined(&_impl_._has_bits_);
          _impl_.scatter_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive area_symbol_fill = 135;
      case 135:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_symbol_fill_undefined = 136;
      case 136:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_area_symbol_fill_undefined(&_impl_._has_bits_);
          _impl_.area_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive bubble_symbol_fill = 137;
      case 137:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_symbol_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_symbol_fill_undefined = 138;
      case 138:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_bubble_symbol_fill_undefined(&_impl_._has_bits_);
          _impl_.bubble_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive line_symbol_fill = 139;
      case 139:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_symbol_fill_undefined = 140;
      case 140:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_line_symbol_fill_undefined(&_impl_._has_bits_);
          _impl_.line_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive mixed_area_symbol_fill = 141;
      case 141:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_fill_undefined = 142;
      case 142:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_mixed_area_symbol_fill_undefined(&_impl_._has_bits_);
          _impl_.mixed_area_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive mixed_line_symbol_fill = 143;
      case 143:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_fill_undefined = 144;
      case 144:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_mixed_line_symbol_fill_undefined(&_impl_._has_bits_);
          _impl_.mixed_line_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive radar_area_symbol_fill = 145;
      case 145:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_symbol_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_symbol_fill_undefined = 146;
      case 146:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_radar_area_symbol_fill_undefined(&_impl_._has_bits_);
          _impl_.radar_area_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive scatter_symbol_fill = 147;
      case 147:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_symbol_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_symbol_fill_undefined = 148;
      case 148:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_scatter_symbol_fill_undefined(&_impl_._has_bits_);
          _impl_.scatter_symbol_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_fill = 149;
      case 149:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_fill_use_series_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_symbol_fill_use_series_fill_undefined = 150;
      case 150:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_area_symbol_fill_use_series_fill_undefined(&_impl_._has_bits_);
          _impl_.area_symbol_fill_use_series_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_fill = 151;
      case 151:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_fill_use_series_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_symbol_fill_use_series_fill_undefined = 152;
      case 152:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_line_symbol_fill_use_series_fill_undefined(&_impl_._has_bits_);
          _impl_.line_symbol_fill_use_series_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_fill = 153;
      case 153:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_fill_use_series_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_fill_use_series_fill_undefined = 154;
      case 154:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_mixed_area_symbol_fill_use_series_fill_undefined(&_impl_._has_bits_);
          _impl_.mixed_area_symbol_fill_use_series_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_fill = 155;
      case 155:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_fill_use_series_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_fill_use_series_fill_undefined = 156;
      case 156:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_mixed_line_symbol_fill_use_series_fill_undefined(&_impl_._has_bits_);
          _impl_.mixed_line_symbol_fill_use_series_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive radar_area_symbol_fill_use_series_fill = 157;
      case 157:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_symbol_fill_use_series_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_symbol_fill_use_series_fill_undefined = 158;
      case 158:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_radar_area_symbol_fill_use_series_fill_undefined(&_impl_._has_bits_);
          _impl_.radar_area_symbol_fill_use_series_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_stroke = 159;
      case 159:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_symbol_fill_use_series_stroke_undefined = 160;
      case 160:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_area_symbol_fill_use_series_stroke_undefined(&_impl_._has_bits_);
          _impl_.area_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive bubble_symbol_fill_use_series_stroke = 161;
      case 161:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_symbol_fill_use_series_stroke_undefined = 162;
      case 162:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_bubble_symbol_fill_use_series_stroke_undefined(&_impl_._has_bits_);
          _impl_.bubble_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_stroke = 163;
      case 163:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_symbol_fill_use_series_stroke_undefined = 164;
      case 164:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_line_symbol_fill_use_series_stroke_undefined(&_impl_._has_bits_);
          _impl_.line_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_stroke = 165;
      case 165:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_fill_use_series_stroke_undefined = 166;
      case 166:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_mixed_area_symbol_fill_use_series_stroke_undefined(&_impl_._has_bits_);
          _impl_.mixed_area_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_stroke = 167;
      case 167:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_fill_use_series_stroke_undefined = 168;
      case 168:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_mixed_line_symbol_fill_use_series_stroke_undefined(&_impl_._has_bits_);
          _impl_.mixed_line_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive radar_area_symbol_fill_use_series_stroke = 169;
      case 169:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_symbol_fill_use_series_stroke_undefined = 170;
      case 170:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_radar_area_symbol_fill_use_series_stroke_undefined(&_impl_._has_bits_);
          _impl_.radar_area_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive scatter_symbol_fill_use_series_stroke = 171;
      case 171:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_symbol_fill_use_series_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_symbol_fill_use_series_stroke_undefined = 172;
      case 172:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_scatter_symbol_fill_use_series_stroke_undefined(&_impl_._has_bits_);
          _impl_.scatter_symbol_fill_use_series_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive area_symbol_size = 173;
      case 173:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_symbol_size_undefined = 174;
      case 174:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_area_symbol_size_undefined(&_impl_._has_bits_);
          _impl_.area_symbol_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive line_symbol_size = 175;
      case 175:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_symbol_size_undefined = 176;
      case 176:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_line_symbol_size_undefined(&_impl_._has_bits_);
          _impl_.line_symbol_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive mixed_area_symbol_size = 177;
      case 177:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_size_undefined = 178;
      case 178:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_mixed_area_symbol_size_undefined(&_impl_._has_bits_);
          _impl_.mixed_area_symbol_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive mixed_line_symbol_size = 179;
      case 179:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_size_undefined = 180;
      case 180:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_mixed_line_symbol_size_undefined(&_impl_._has_bits_);
          _impl_.mixed_line_symbol_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive radar_area_symbol_size = 181;
      case 181:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_symbol_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_symbol_size_undefined = 182;
      case 182:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_radar_area_symbol_size_undefined(&_impl_._has_bits_);
          _impl_.radar_area_symbol_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive scatter_symbol_size = 183;
      case 183:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_symbol_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_symbol_size_undefined = 184;
      case 184:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_scatter_symbol_size_undefined(&_impl_._has_bits_);
          _impl_.scatter_symbol_size_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive area_symbol_stroke = 185;
      case 185:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_symbol_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_symbol_stroke_undefined = 186;
      case 186:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_area_symbol_stroke_undefined(&_impl_._has_bits_);
          _impl_.area_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive bubble_symbol_stroke = 187;
      case 187:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_symbol_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_symbol_stroke_undefined = 188;
      case 188:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_bubble_symbol_stroke_undefined(&_impl_._has_bits_);
          _impl_.bubble_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive line_symbol_stroke = 189;
      case 189:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_symbol_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_symbol_stroke_undefined = 190;
      case 190:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_line_symbol_stroke_undefined(&_impl_._has_bits_);
          _impl_.line_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive mixed_area_symbol_stroke = 191;
      case 191:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_symbol_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_area_symbol_stroke_undefined = 192;
      case 192:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_mixed_area_symbol_stroke_undefined(&_impl_._has_bits_);
          _impl_.mixed_area_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive mixed_line_symbol_stroke = 193;
      case 193:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_symbol_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_line_symbol_stroke_undefined = 194;
      case 194:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_mixed_line_symbol_stroke_undefined(&_impl_._has_bits_);
          _impl_.mixed_line_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive radar_area_symbol_stroke = 195;
      case 195:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_symbol_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_symbol_stroke_undefined = 196;
      case 196:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_radar_area_symbol_stroke_undefined(&_impl_._has_bits_);
          _impl_.radar_area_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive scatter_symbol_stroke = 197;
      case 197:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_symbol_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_symbol_stroke_undefined = 198;
      case 198:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_scatter_symbol_stroke_undefined(&_impl_._has_bits_);
          _impl_.scatter_symbol_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_trend_line_shadow = 199;
      case 199:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_shadow_undefined = 200;
      case 200:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_default_trend_line_shadow_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_trend_line_stroke = 201;
      case 201:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trend_line_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trend_line_stroke_undefined = 202;
      case 202:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default_trend_line_stroke_undefined(&_impl_._has_bits_);
          _impl_.default_trend_line_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trendline_equation_opacity = 203;
      case 203:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trendline_equation_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trendline_equation_opacity_undefined = 204;
      case 204:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_default_trendline_equation_opacity_undefined(&_impl_._has_bits_);
          _impl_.default_trendline_equation_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_trendline_equation_paragraph_style_index = 205;
      case 205:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trendline_equation_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trendline_equation_paragraph_style_index_undefined = 206;
      case 206:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_default_trendline_equation_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.default_trendline_equation_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_trendline_r_squared_opacity = 207;
      case 207:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trendline_r_squared_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trendline_r_squared_opacity_undefined = 208;
      case 208:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default_trendline_r_squared_opacity_undefined(&_impl_._has_bits_);
          _impl_.default_trendline_r_squared_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_trendline_r_squared_paragraph_style_index = 209;
      case 209:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_trendline_r_squared_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_trendline_r_squared_paragraph_style_index_undefined = 210;
      case 210:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_default_trendline_r_squared_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.default_trendline_r_squared_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive area_value_label_position = 211;
      case 211:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_area_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area_value_label_position_undefined = 212;
      case 212:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_area_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.area_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bar_value_label_position = 213;
      case 213:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar_value_label_position_undefined = 214;
      case 214:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_bar_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.bar_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive bubble_value_label_position = 215;
      case 215:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_bubble_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bubble_value_label_position_undefined = 216;
      case 216:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_bubble_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.bubble_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_value_label_position = 217;
      case 217:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_value_label_position_undefined = 218;
      case 218:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_default_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.default_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive line_value_label_position = 219;
      case 219:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_line_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line_value_label_position_undefined = 220;
      case 220:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_line_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.line_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_area_value_label_position = 221;
      case 221:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_area_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_area_value_label_position_undefined = 222;
      case 222:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_mixed_area_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.mixed_area_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_column_value_label_position = 223;
      case 223:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_column_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_column_value_label_position_undefined = 224;
      case 224:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_mixed_column_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.mixed_column_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive mixed_line_value_label_position = 225;
      case 225:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mixed_line_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool mixed_line_value_label_position_undefined = 226;
      case 226:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_mixed_line_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.mixed_line_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive radar_area_value_label_position = 227;
      case 227:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_radar_area_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool radar_area_value_label_position_undefined = 228;
      case 228:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_radar_area_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.radar_area_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive scatter_value_label_position = 229;
      case 229:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_scatter_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool scatter_value_label_position_undefined = 230;
      case 230:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_scatter_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.scatter_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_area_value_label_position = 231;
      case 231:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_area_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool stacked_area_value_label_position_undefined = 232;
      case 232:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_stacked_area_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.stacked_area_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive stacked_bar_value_label_position = 233;
      case 233:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_stacked_bar_value_label_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool stacked_bar_value_label_position_undefined = 234;
      case 234:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_stacked_bar_value_label_position_undefined(&_impl_._has_bits_);
          _impl_.stacked_bar_value_label_position_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_value_label_spacing = 235;
      case 235:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_value_label_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_value_label_spacing_undefined = 236;
      case 236:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_default_value_label_spacing_undefined(&_impl_._has_bits_);
          _impl_.default_value_label_spacing_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChartSeriesStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecLineEndArchive default_callout_line_end_line_end = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::default_callout_line_end_line_end(this),
        _Internal::default_callout_line_end_line_end(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_callout_line_end_line_end_undefined = 2;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_default_callout_line_end_line_end_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecLineEndArchive default_callout_line_start_line_end = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::default_callout_line_start_line_end(this),
        _Internal::default_callout_line_start_line_end(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_callout_line_start_line_end_undefined = 4;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_default_callout_line_start_line_end_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive default_callout_line_stroke_style = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::default_callout_line_stroke_style(this),
        _Internal::default_callout_line_stroke_style(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_callout_line_stroke_style_undefined = 6;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_default_callout_line_stroke_style_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::default_error_bar_line_end(this),
        _Internal::default_error_bar_line_end(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_line_end_undefined = 8;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_default_error_bar_line_end_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end_scatter_x = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::default_error_bar_line_end_scatter_x(this),
        _Internal::default_error_bar_line_end_scatter_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_line_end_scatter_x_undefined = 10;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_default_error_bar_line_end_scatter_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive default_error_bar_shadow = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::default_error_bar_shadow(this),
        _Internal::default_error_bar_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_shadow_undefined = 12;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_default_error_bar_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::default_error_bar_spacing(this),
        _Internal::default_error_bar_spacing(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_spacing_undefined = 14;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_default_error_bar_spacing_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing_scatter_x = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::default_error_bar_spacing_scatter_x(this),
        _Internal::default_error_bar_spacing_scatter_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_spacing_scatter_x_undefined = 16;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_default_error_bar_spacing_scatter_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::default_error_bar_stroke(this),
        _Internal::default_error_bar_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_stroke_undefined = 18;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_default_error_bar_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke_scatter_x = 19;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::default_error_bar_stroke_scatter_x(this),
        _Internal::default_error_bar_stroke_scatter_x(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional bool default_error_bar_stroke_scatter_x_undefined = 20;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(20, this->_internal_default_error_bar_stroke_scatter_x_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive area3d_fill = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::area3d_fill(this),
        _Internal::area3d_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool area3d_fill_undefined = 22;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(22, this->_internal_area3d_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive bar3d_fill = 23;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::bar3d_fill(this),
        _Internal::bar3d_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool bar3d_fill_undefined = 24;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(24, this->_internal_bar3d_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive column3d_fill = 25;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::column3d_fill(this),
        _Internal::column3d_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool column3d_fill_undefined = 26;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(26, this->_internal_column3d_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive line3d_fill = 27;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(27, _Internal::line3d_fill(this),
        _Internal::line3d_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool line3d_fill_undefined = 28;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(28, this->_internal_line3d_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive pie3d_fill = 29;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(29, _Internal::pie3d_fill(this),
        _Internal::pie3d_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool pie3d_fill_undefined = 30;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(30, this->_internal_pie3d_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive area_fill = 31;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, _Internal::area_fill(this),
        _Internal::area_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool area_fill_undefined = 32;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(32, this->_internal_area_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive bar_fill = 33;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(33, _Internal::bar_fill(this),
        _Internal::bar_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool bar_fill_undefined = 34;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(34, this->_internal_bar_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive column_fill = 35;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, _Internal::column_fill(this),
        _Internal::column_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool column_fill_undefined = 36;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(36, this->_internal_column_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive default_fill = 37;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(37, _Internal::default_fill(this),
        _Internal::default_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_fill_undefined = 38;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(38, this->_internal_default_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive mixed_area_fill = 39;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(39, _Internal::mixed_area_fill(this),
        _Internal::mixed_area_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool mixed_area_fill_undefined = 40;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(40, this->_internal_mixed_area_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive mixed_column_fill = 41;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(41, _Internal::mixed_column_fill(this),
        _Internal::mixed_column_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool mixed_column_fill_undefined = 42;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(42, this->_internal_mixed_column_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive pie_fill = 43;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(43, _Internal::pie_fill(this),
        _Internal::pie_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool pie_fill_undefined = 44;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(44, this->_internal_pie_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive radar_area_fill = 45;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(45, _Internal::radar_area_fill(this),
        _Internal::radar_area_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool radar_area_fill_undefined = 46;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(46, this->_internal_radar_area_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive radar_area_fill_use_series_stroke_alpha_multiplier = 47;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(47, _Internal::radar_area_fill_use_series_stroke_alpha_multiplier(this),
        _Internal::radar_area_fill_use_series_stroke_alpha_multiplier(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool radar_area_fill_use_series_stroke_alpha_multiplier_undefined = 48;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(48, this->_internal_radar_area_fill_use_series_stroke_alpha_multiplier_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive radar_area_fill_use_series_stroke = 49;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(49, _Internal::radar_area_fill_use_series_stroke(this),
        _Internal::radar_area_fill_use_series_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool radar_area_fill_use_series_stroke_undefined = 50;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(50, this->_internal_radar_area_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive area_label_paragraph_style_index = 51;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(51, _Internal::area_label_paragraph_style_index(this),
        _Internal::area_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool area_label_paragraph_style_index_undefined = 52;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(52, this->_internal_area_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive bar_label_paragraph_style_index = 53;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(53, _Internal::bar_label_paragraph_style_index(this),
        _Internal::bar_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool bar_label_paragraph_style_index_undefined = 54;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(54, this->_internal_bar_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 55;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(55, _Internal::default_label_paragraph_style_index(this),
        _Internal::default_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_label_paragraph_style_index_undefined = 56;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(56, this->_internal_default_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive donut_label_paragraph_style_index = 57;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(57, _Internal::donut_label_paragraph_style_index(this),
        _Internal::donut_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool donut_label_paragraph_style_index_undefined = 58;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(58, this->_internal_donut_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive line_label_paragraph_style_index = 59;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(59, _Internal::line_label_paragraph_style_index(this),
        _Internal::line_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool line_label_paragraph_style_index_undefined = 60;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(60, this->_internal_line_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive mixed_label_paragraph_style_index = 61;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(61, _Internal::mixed_label_paragraph_style_index(this),
        _Internal::mixed_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool mixed_label_paragraph_style_index_undefined = 62;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(62, this->_internal_mixed_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive pie_label_paragraph_style_index = 63;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(63, _Internal::pie_label_paragraph_style_index(this),
        _Internal::pie_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool pie_label_paragraph_style_index_undefined = 64;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(64, this->_internal_pie_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive radar_label_paragraph_style_index = 65;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(65, _Internal::radar_label_paragraph_style_index(this),
        _Internal::radar_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool radar_label_paragraph_style_index_undefined = 66;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(66, this->_internal_radar_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecDoubleArchive default_opacity = 67;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(67, _Internal::default_opacity(this),
        _Internal::default_opacity(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_opacity_undefined = 68;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(68, this->_internal_default_opacity_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive area_outside_label_paragraph_style_index = 69;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(69, _Internal::area_outside_label_paragraph_style_index(this),
        _Internal::area_outside_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool area_outside_label_paragraph_style_index_undefined = 70;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(70, this->_internal_area_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive bar_outside_label_paragraph_style_index = 71;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(71, _Internal::bar_outside_label_paragraph_style_index(this),
        _Internal::bar_outside_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool bar_outside_label_paragraph_style_index_undefined = 72;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(72, this->_internal_bar_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive default_outside_label_paragraph_style_index = 73;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(73, _Internal::default_outside_label_paragraph_style_index(this),
        _Internal::default_outside_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool default_outside_label_paragraph_style_index_undefined = 74;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(74, this->_internal_default_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive donut_outside_label_paragraph_style_index = 75;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(75, _Internal::donut_outside_label_paragraph_style_index(this),
        _Internal::donut_outside_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool donut_outside_label_paragraph_style_index_undefined = 76;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(76, this->_internal_donut_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive mixed_outside_label_paragraph_style_index = 77;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(77, _Internal::mixed_outside_label_paragraph_style_index(this),
        _Internal::mixed_outside_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool mixed_outside_label_paragraph_style_index_undefined = 78;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(78, this->_internal_mixed_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive pie_outside_label_paragraph_style_index = 79;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(79, _Internal::pie_outside_label_paragraph_style_index(this),
        _Internal::pie_outside_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool pie_outside_label_paragraph_style_index_undefined = 80;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(80, this->_internal_pie_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSSSOS.SpecIntegerArchive radar_outside_label_paragraph_style_index = 81;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(81, _Internal::radar_outside_label_paragraph_style_index(this),
        _Internal::radar_outside_label_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool radar_outside_label_paragraph_style_index_undefined = 82;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(82, this->_internal_radar_outside_label_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive area3d_shadow = 83;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(83, _Internal::area3d_shadow(this),
        _Internal::area3d_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool area3d_shadow_undefined = 84;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(84, this->_internal_area3d_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive bar3d_shadow = 85;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(85, _Internal::bar3d_shadow(this),
        _Internal::bar3d_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool bar3d_shadow_undefined = 86;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(86, this->_internal_bar3d_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive column3d_shadow = 87;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(87, _Internal::column3d_shadow(this),
        _Internal::column3d_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool column3d_shadow_undefined = 88;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(88, this->_internal_column3d_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive line3d_shadow = 89;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(89, _Internal::line3d_shadow(this),
        _Internal::line3d_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool line3d_shadow_undefined = 90;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(90, this->_internal_line3d_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive pie3d_shadow = 91;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(91, _Internal::pie3d_shadow(this),
        _Internal::pie3d_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool pie3d_shadow_undefined = 92;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(92, this->_internal_pie3d_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive area_shadow = 93;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(93, _Internal::area_shadow(this),
        _Internal::area_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool area_shadow_undefined = 94;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(94, this->_internal_area_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive bar_shadow = 95;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(95, _Internal::bar_shadow(this),
        _Internal::bar_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool bar_shadow_undefined = 96;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(96, this->_internal_bar_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive bubble_shadow = 97;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(97, _Internal::bubble_shadow(this),
        _Internal::bubble_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool bubble_shadow_undefined = 98;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(98, this->_internal_bubble_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive default_shadow = 99;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::default_shadow(this),
        _Internal::default_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool default_shadow_undefined = 100;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(100, this->_internal_default_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive line_shadow = 101;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(101, _Internal::line_shadow(this),
        _Internal::line_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool line_shadow_undefined = 102;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(102, this->_internal_line_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive mixed_area_shadow = 103;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(103, _Internal::mixed_area_shadow(this),
        _Internal::mixed_area_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool mixed_area_shadow_undefined = 104;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(104, this->_internal_mixed_area_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive mixed_column_shadow = 105;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(105, _Internal::mixed_column_shadow(this),
        _Internal::mixed_column_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool mixed_column_shadow_undefined = 106;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(106, this->_internal_mixed_column_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive mixed_line_shadow = 107;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(107, _Internal::mixed_line_shadow(this),
        _Internal::mixed_line_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool mixed_line_shadow_undefined = 108;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(108, this->_internal_mixed_line_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive pie_shadow = 109;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(109, _Internal::pie_shadow(this),
        _Internal::pie_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool pie_shadow_undefined = 110;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(110, this->_internal_pie_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive radar_area_shadow = 111;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(111, _Internal::radar_area_shadow(this),
        _Internal::radar_area_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool radar_area_shadow_undefined = 112;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(112, this->_internal_radar_area_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecShadowArchive scatter_shadow = 113;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(113, _Internal::scatter_shadow(this),
        _Internal::scatter_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool scatter_shadow_undefined = 114;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(114, this->_internal_scatter_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive area_stroke = 115;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(115, _Internal::area_stroke(this),
        _Internal::area_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool area_stroke_undefined = 116;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(116, this->_internal_area_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive bar_stroke = 117;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(117, _Internal::bar_stroke(this),
        _Internal::bar_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool bar_stroke_undefined = 118;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(118, this->_internal_bar_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive bubble_stroke = 119;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(119, _Internal::bubble_stroke(this),
        _Internal::bubble_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool bubble_stroke_undefined = 120;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(120, this->_internal_bubble_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive line_stroke = 121;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(121, _Internal::line_stroke(this),
        _Internal::line_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool line_stroke_undefined = 122;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(122, this->_internal_line_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive mixed_area_stroke = 123;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(123, _Internal::mixed_area_stroke(this),
        _Internal::mixed_area_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool mixed_area_stroke_undefined = 124;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(124, this->_internal_mixed_area_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive mixed_column_stroke = 125;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(125, _Internal::mixed_column_stroke(this),
        _Internal::mixed_column_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool mixed_column_stroke_undefined = 126;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(126, this->_internal_mixed_column_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .TSDSOS.SpecStrokeArchive mixed_line_stroke = 127;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(127, _Internal::mixed_line_stroke(this),
        _Internal::mixed_line_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool mixed_line_stroke_undefined = 128;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(128, this->_internal_mixed_line_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive pie_stroke = 129;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(129, _Internal::pie_stroke(this),
        _Internal::pie_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool pie_stroke_undefined = 130;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(130, this->_internal_pie_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive radar_area_stroke = 131;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(131, _Internal::radar_area_stroke(this),
        _Internal::radar_area_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool radar_area_stroke_undefined = 132;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(132, this->_internal_radar_area_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive scatter_stroke = 133;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(133, _Internal::scatter_stroke(this),
        _Internal::scatter_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool scatter_stroke_undefined = 134;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(134, this->_internal_scatter_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecFillArchive area_symbol_fill = 135;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(135, _Internal::area_symbol_fill(this),
        _Internal::area_symbol_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool area_symbol_fill_undefined = 136;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(136, this->_internal_area_symbol_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecFillArchive bubble_symbol_fill = 137;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(137, _Internal::bubble_symbol_fill(this),
        _Internal::bubble_symbol_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool bubble_symbol_fill_undefined = 138;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(138, this->_internal_bubble_symbol_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecFillArchive line_symbol_fill = 139;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(139, _Internal::line_symbol_fill(this),
        _Internal::line_symbol_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool line_symbol_fill_undefined = 140;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(140, this->_internal_line_symbol_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecFillArchive mixed_area_symbol_fill = 141;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(141, _Internal::mixed_area_symbol_fill(this),
        _Internal::mixed_area_symbol_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool mixed_area_symbol_fill_undefined = 142;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(142, this->_internal_mixed_area_symbol_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecFillArchive mixed_line_symbol_fill = 143;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(143, _Internal::mixed_line_symbol_fill(this),
        _Internal::mixed_line_symbol_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool mixed_line_symbol_fill_undefined = 144;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(144, this->_internal_mixed_line_symbol_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecFillArchive radar_area_symbol_fill = 145;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(145, _Internal::radar_area_symbol_fill(this),
        _Internal::radar_area_symbol_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool radar_area_symbol_fill_undefined = 146;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(146, this->_internal_radar_area_symbol_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecFillArchive scatter_symbol_fill = 147;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(147, _Internal::scatter_symbol_fill(this),
        _Internal::scatter_symbol_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional bool scatter_symbol_fill_undefined = 148;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(148, this->_internal_scatter_symbol_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_fill = 149;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(149, _Internal::area_symbol_fill_use_series_fill(this),
        _Internal::area_symbol_fill_use_series_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool area_symbol_fill_use_series_fill_undefined = 150;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(150, this->_internal_area_symbol_fill_use_series_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_fill = 151;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(151, _Internal::line_symbol_fill_use_series_fill(this),
        _Internal::line_symbol_fill_use_series_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool line_symbol_fill_use_series_fill_undefined = 152;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(152, this->_internal_line_symbol_fill_use_series_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_fill = 153;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(153, _Internal::mixed_area_symbol_fill_use_series_fill(this),
        _Internal::mixed_area_symbol_fill_use_series_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool mixed_area_symbol_fill_use_series_fill_undefined = 154;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(154, this->_internal_mixed_area_symbol_fill_use_series_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_fill = 155;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(155, _Internal::mixed_line_symbol_fill_use_series_fill(this),
        _Internal::mixed_line_symbol_fill_use_series_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool mixed_line_symbol_fill_use_series_fill_undefined = 156;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(156, this->_internal_mixed_line_symbol_fill_use_series_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive radar_area_symbol_fill_use_series_fill = 157;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(157, _Internal::radar_area_symbol_fill_use_series_fill(this),
        _Internal::radar_area_symbol_fill_use_series_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool radar_area_symbol_fill_use_series_fill_undefined = 158;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(158, this->_internal_radar_area_symbol_fill_use_series_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_stroke = 159;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(159, _Internal::area_symbol_fill_use_series_stroke(this),
        _Internal::area_symbol_fill_use_series_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool area_symbol_fill_use_series_stroke_undefined = 160;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(160, this->_internal_area_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive bubble_symbol_fill_use_series_stroke = 161;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(161, _Internal::bubble_symbol_fill_use_series_stroke(this),
        _Internal::bubble_symbol_fill_use_series_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool bubble_symbol_fill_use_series_stroke_undefined = 162;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(162, this->_internal_bubble_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_stroke = 163;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(163, _Internal::line_symbol_fill_use_series_stroke(this),
        _Internal::line_symbol_fill_use_series_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool line_symbol_fill_use_series_stroke_undefined = 164;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(164, this->_internal_line_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_stroke = 165;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(165, _Internal::mixed_area_symbol_fill_use_series_stroke(this),
        _Internal::mixed_area_symbol_fill_use_series_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool mixed_area_symbol_fill_use_series_stroke_undefined = 166;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(166, this->_internal_mixed_area_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_stroke = 167;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(167, _Internal::mixed_line_symbol_fill_use_series_stroke(this),
        _Internal::mixed_line_symbol_fill_use_series_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool mixed_line_symbol_fill_use_series_stroke_undefined = 168;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(168, this->_internal_mixed_line_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive radar_area_symbol_fill_use_series_stroke = 169;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(169, _Internal::radar_area_symbol_fill_use_series_stroke(this),
        _Internal::radar_area_symbol_fill_use_series_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool radar_area_symbol_fill_use_series_stroke_undefined = 170;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(170, this->_internal_radar_area_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecBoolArchive scatter_symbol_fill_use_series_stroke = 171;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(171, _Internal::scatter_symbol_fill_use_series_stroke(this),
        _Internal::scatter_symbol_fill_use_series_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool scatter_symbol_fill_use_series_stroke_undefined = 172;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(172, this->_internal_scatter_symbol_fill_use_series_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive area_symbol_size = 173;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(173, _Internal::area_symbol_size(this),
        _Internal::area_symbol_size(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool area_symbol_size_undefined = 174;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(174, this->_internal_area_symbol_size_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive line_symbol_size = 175;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(175, _Internal::line_symbol_size(this),
        _Internal::line_symbol_size(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool line_symbol_size_undefined = 176;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(176, this->_internal_line_symbol_size_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive mixed_area_symbol_size = 177;
  if (cached_has_bits & 0x01000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(177, _Internal::mixed_area_symbol_size(this),
        _Internal::mixed_area_symbol_size(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool mixed_area_symbol_size_undefined = 178;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(178, this->_internal_mixed_area_symbol_size_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive mixed_line_symbol_size = 179;
  if (cached_has_bits & 0x02000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(179, _Internal::mixed_line_symbol_size(this),
        _Internal::mixed_line_symbol_size(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool mixed_line_symbol_size_undefined = 180;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(180, this->_internal_mixed_line_symbol_size_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive radar_area_symbol_size = 181;
  if (cached_has_bits & 0x04000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(181, _Internal::radar_area_symbol_size(this),
        _Internal::radar_area_symbol_size(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool radar_area_symbol_size_undefined = 182;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(182, this->_internal_radar_area_symbol_size_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSSSOS.SpecDoubleArchive scatter_symbol_size = 183;
  if (cached_has_bits & 0x08000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(183, _Internal::scatter_symbol_size(this),
        _Internal::scatter_symbol_size(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool scatter_symbol_size_undefined = 184;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(184, this->_internal_scatter_symbol_size_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive area_symbol_stroke = 185;
  if (cached_has_bits & 0x10000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(185, _Internal::area_symbol_stroke(this),
        _Internal::area_symbol_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool area_symbol_stroke_undefined = 186;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(186, this->_internal_area_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive bubble_symbol_stroke = 187;
  if (cached_has_bits & 0x20000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(187, _Internal::bubble_symbol_stroke(this),
        _Internal::bubble_symbol_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool bubble_symbol_stroke_undefined = 188;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(188, this->_internal_bubble_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive line_symbol_stroke = 189;
  if (cached_has_bits & 0x40000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(189, _Internal::line_symbol_stroke(this),
        _Internal::line_symbol_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool line_symbol_stroke_undefined = 190;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(190, this->_internal_line_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional .TSDSOS.SpecStrokeArchive mixed_area_symbol_stroke = 191;
  if (cached_has_bits & 0x80000000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(191, _Internal::mixed_area_symbol_stroke(this),
        _Internal::mixed_area_symbol_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool mixed_area_symbol_stroke_undefined = 192;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(192, this->_internal_mixed_area_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSDSOS.SpecStrokeArchive mixed_line_symbol_stroke = 193;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(193, _Internal::mixed_line_symbol_stroke(this),
        _Internal::mixed_line_symbol_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool mixed_line_symbol_stroke_undefined = 194;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(194, this->_internal_mixed_line_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSDSOS.SpecStrokeArchive radar_area_symbol_stroke = 195;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(195, _Internal::radar_area_symbol_stroke(this),
        _Internal::radar_area_symbol_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool radar_area_symbol_stroke_undefined = 196;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(196, this->_internal_radar_area_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSDSOS.SpecStrokeArchive scatter_symbol_stroke = 197;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(197, _Internal::scatter_symbol_stroke(this),
        _Internal::scatter_symbol_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool scatter_symbol_stroke_undefined = 198;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(198, this->_internal_scatter_symbol_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSDSOS.SpecShadowArchive default_trend_line_shadow = 199;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(199, _Internal::default_trend_line_shadow(this),
        _Internal::default_trend_line_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool default_trend_line_shadow_undefined = 200;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(200, this->_internal_default_trend_line_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSDSOS.SpecStrokeArchive default_trend_line_stroke = 201;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(201, _Internal::default_trend_line_stroke(this),
        _Internal::default_trend_line_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool default_trend_line_stroke_undefined = 202;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(202, this->_internal_default_trend_line_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecDoubleArchive default_trendline_equation_opacity = 203;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(203, _Internal::default_trendline_equation_opacity(this),
        _Internal::default_trendline_equation_opacity(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool default_trendline_equation_opacity_undefined = 204;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(204, this->_internal_default_trendline_equation_opacity_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive default_trendline_equation_paragraph_style_index = 205;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(205, _Internal::default_trendline_equation_paragraph_style_index(this),
        _Internal::default_trendline_equation_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool default_trendline_equation_paragraph_style_index_undefined = 206;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(206, this->_internal_default_trendline_equation_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecDoubleArchive default_trendline_r_squared_opacity = 207;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(207, _Internal::default_trendline_r_squared_opacity(this),
        _Internal::default_trendline_r_squared_opacity(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool default_trendline_r_squared_opacity_undefined = 208;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(208, this->_internal_default_trendline_r_squared_opacity_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive default_trendline_r_squared_paragraph_style_index = 209;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(209, _Internal::default_trendline_r_squared_paragraph_style_index(this),
        _Internal::default_trendline_r_squared_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool default_trendline_r_squared_paragraph_style_index_undefined = 210;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(210, this->_internal_default_trendline_r_squared_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive area_value_label_position = 211;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(211, _Internal::area_value_label_position(this),
        _Internal::area_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[6];
  // optional bool area_value_label_position_undefined = 212;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(212, this->_internal_area_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive bar_value_label_position = 213;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(213, _Internal::bar_value_label_position(this),
        _Internal::bar_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool bar_value_label_position_undefined = 214;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(214, this->_internal_bar_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive bubble_value_label_position = 215;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(215, _Internal::bubble_value_label_position(this),
        _Internal::bubble_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool bubble_value_label_position_undefined = 216;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(216, this->_internal_bubble_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive default_value_label_position = 217;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(217, _Internal::default_value_label_position(this),
        _Internal::default_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool default_value_label_position_undefined = 218;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(218, this->_internal_default_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive line_value_label_position = 219;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(219, _Internal::line_value_label_position(this),
        _Internal::line_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool line_value_label_position_undefined = 220;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(220, this->_internal_line_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive mixed_area_value_label_position = 221;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(221, _Internal::mixed_area_value_label_position(this),
        _Internal::mixed_area_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool mixed_area_value_label_position_undefined = 222;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(222, this->_internal_mixed_area_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive mixed_column_value_label_position = 223;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(223, _Internal::mixed_column_value_label_position(this),
        _Internal::mixed_column_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool mixed_column_value_label_position_undefined = 224;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(224, this->_internal_mixed_column_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive mixed_line_value_label_position = 225;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(225, _Internal::mixed_line_value_label_position(this),
        _Internal::mixed_line_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool mixed_line_value_label_position_undefined = 226;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(226, this->_internal_mixed_line_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive radar_area_value_label_position = 227;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(227, _Internal::radar_area_value_label_position(this),
        _Internal::radar_area_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool radar_area_value_label_position_undefined = 228;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(228, this->_internal_radar_area_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive scatter_value_label_position = 229;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(229, _Internal::scatter_value_label_position(this),
        _Internal::scatter_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool scatter_value_label_position_undefined = 230;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(230, this->_internal_scatter_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive stacked_area_value_label_position = 231;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(231, _Internal::stacked_area_value_label_position(this),
        _Internal::stacked_area_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool stacked_area_value_label_position_undefined = 232;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(232, this->_internal_stacked_area_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive stacked_bar_value_label_position = 233;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(233, _Internal::stacked_bar_value_label_position(this),
        _Internal::stacked_bar_value_label_position(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool stacked_bar_value_label_position_undefined = 234;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(234, this->_internal_stacked_bar_value_label_position_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .TSSSOS.SpecIntegerArchive default_value_label_spacing = 235;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(235, _Internal::default_value_label_spacing(this),
        _Internal::default_value_label_spacing(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[7];
  // optional bool default_value_label_spacing_undefined = 236;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(236, this->_internal_default_value_label_spacing_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  return target;
}

size_t ChartSeriesStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSDSOS.SpecLineEndArchive default_callout_line_end_line_end = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_callout_line_end_line_end_);
    }

    // optional .TSDSOS.SpecLineEndArchive default_callout_line_start_line_end = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_callout_line_start_line_end_);
    }

    // optional .TSDSOS.SpecStrokeArchive default_callout_line_stroke_style = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_callout_line_stroke_style_);
    }

    // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_line_end_);
    }

    // optional .TSDSOS.SpecLineEndArchive default_error_bar_line_end_scatter_x = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_line_end_scatter_x_);
    }

    // optional .TSDSOS.SpecShadowArchive default_error_bar_shadow = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_shadow_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_spacing_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_error_bar_spacing_scatter_x = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_spacing_scatter_x_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive default_error_bar_stroke_scatter_x = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_error_bar_stroke_scatter_x_);
    }

    // optional .TSDSOS.SpecFillArchive area3d_fill = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area3d_fill_);
    }

    // optional .TSDSOS.SpecFillArchive bar3d_fill = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar3d_fill_);
    }

    // optional .TSDSOS.SpecFillArchive column3d_fill = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.column3d_fill_);
    }

    // optional .TSDSOS.SpecFillArchive line3d_fill = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line3d_fill_);
    }

    // optional .TSDSOS.SpecFillArchive pie3d_fill = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie3d_fill_);
    }

    // optional .TSDSOS.SpecFillArchive area_fill = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_fill_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSDSOS.SpecFillArchive bar_fill = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar_fill_);
    }

    // optional .TSDSOS.SpecFillArchive column_fill = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.column_fill_);
    }

    // optional .TSDSOS.SpecFillArchive default_fill = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_fill_);
    }

    // optional .TSDSOS.SpecFillArchive mixed_area_fill = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_area_fill_);
    }

    // optional .TSDSOS.SpecFillArchive mixed_column_fill = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_column_fill_);
    }

    // optional .TSDSOS.SpecFillArchive pie_fill = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_fill_);
    }

    // optional .TSDSOS.SpecFillArchive radar_area_fill = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_fill_);
    }

    // optional .TSSSOS.SpecDoubleArchive radar_area_fill_use_series_stroke_alpha_multiplier = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecBoolArchive radar_area_fill_use_series_stroke = 49;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_label_paragraph_style_index = 51;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive bar_label_paragraph_style_index = 53;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_label_paragraph_style_index = 55;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive donut_label_paragraph_style_index = 57;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.donut_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive line_label_paragraph_style_index = 59;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_label_paragraph_style_index = 61;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive pie_label_paragraph_style_index = 63;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_label_paragraph_style_index_);
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecIntegerArchive radar_label_paragraph_style_index = 65;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_opacity = 67;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_opacity_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_outside_label_paragraph_style_index = 69;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_outside_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive bar_outside_label_paragraph_style_index = 71;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar_outside_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_outside_label_paragraph_style_index = 73;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_outside_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive donut_outside_label_paragraph_style_index = 75;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.donut_outside_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_outside_label_paragraph_style_index = 77;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_outside_label_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive pie_outside_label_paragraph_style_index = 79;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_outside_label_paragraph_style_index_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive radar_outside_label_paragraph_style_index = 81;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_outside_label_paragraph_style_index_);
    }

    // optional .TSDSOS.SpecShadowArchive area3d_shadow = 83;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area3d_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive bar3d_shadow = 85;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar3d_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive column3d_shadow = 87;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.column3d_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive line3d_shadow = 89;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line3d_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive pie3d_shadow = 91;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie3d_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive area_shadow = 93;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive bar_shadow = 95;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar_shadow_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSDSOS.SpecShadowArchive bubble_shadow = 97;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive default_shadow = 99;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive line_shadow = 101;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive mixed_area_shadow = 103;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_area_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive mixed_column_shadow = 105;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_column_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive mixed_line_shadow = 107;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_line_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive pie_shadow = 109;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_shadow_);
    }

    // optional .TSDSOS.SpecShadowArchive radar_area_shadow = 111;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_shadow_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSDSOS.SpecShadowArchive scatter_shadow = 113;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive area_stroke = 115;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive bar_stroke = 117;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive bubble_stroke = 119;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive line_stroke = 121;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive mixed_area_stroke = 123;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_area_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive mixed_column_stroke = 125;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_column_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive mixed_line_stroke = 127;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_line_stroke_);
    }

  }
  cached_has_bits = _impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSDSOS.SpecStrokeArchive pie_stroke = 129;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive radar_area_stroke = 131;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive scatter_stroke = 133;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_stroke_);
    }

    // optional .TSDSOS.SpecFillArchive area_symbol_fill = 135;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_symbol_fill_);
    }

    // optional .TSDSOS.SpecFillArchive bubble_symbol_fill = 137;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_symbol_fill_);
    }

    // optional .TSDSOS.SpecFillArchive line_symbol_fill = 139;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_symbol_fill_);
    }

    // optional .TSDSOS.SpecFillArchive mixed_area_symbol_fill = 141;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_area_symbol_fill_);
    }

    // optional .TSDSOS.SpecFillArchive mixed_line_symbol_fill = 143;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_line_symbol_fill_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSDSOS.SpecFillArchive radar_area_symbol_fill = 145;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_symbol_fill_);
    }

    // optional .TSDSOS.SpecFillArchive scatter_symbol_fill = 147;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_symbol_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_fill = 149;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_symbol_fill_use_series_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_fill = 151;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_symbol_fill_use_series_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_fill = 153;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_area_symbol_fill_use_series_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_fill = 155;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_line_symbol_fill_use_series_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive radar_area_symbol_fill_use_series_fill = 157;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_symbol_fill_use_series_fill_);
    }

    // optional .TSSSOS.SpecBoolArchive area_symbol_fill_use_series_stroke = 159;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_symbol_fill_use_series_stroke_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecBoolArchive bubble_symbol_fill_use_series_stroke = 161;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_symbol_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive line_symbol_fill_use_series_stroke = 163;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_symbol_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_area_symbol_fill_use_series_stroke = 165;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_area_symbol_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive mixed_line_symbol_fill_use_series_stroke = 167;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_line_symbol_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive radar_area_symbol_fill_use_series_stroke = 169;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_symbol_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive scatter_symbol_fill_use_series_stroke = 171;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_symbol_fill_use_series_stroke_);
    }

    // optional .TSSSOS.SpecDoubleArchive area_symbol_size = 173;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_symbol_size_);
    }

    // optional .TSSSOS.SpecDoubleArchive line_symbol_size = 175;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_symbol_size_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .TSSSOS.SpecDoubleArchive mixed_area_symbol_size = 177;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_area_symbol_size_);
    }

    // optional .TSSSOS.SpecDoubleArchive mixed_line_symbol_size = 179;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_line_symbol_size_);
    }

    // optional .TSSSOS.SpecDoubleArchive radar_area_symbol_size = 181;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_symbol_size_);
    }

    // optional .TSSSOS.SpecDoubleArchive scatter_symbol_size = 183;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_symbol_size_);
    }

    // optional .TSDSOS.SpecStrokeArchive area_symbol_stroke = 185;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_symbol_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive bubble_symbol_stroke = 187;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_symbol_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive line_symbol_stroke = 189;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_symbol_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive mixed_area_symbol_stroke = 191;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_area_symbol_stroke_);
    }

  }
  cached_has_bits = _impl_._has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSDSOS.SpecStrokeArchive mixed_line_symbol_stroke = 193;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_line_symbol_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive radar_area_symbol_stroke = 195;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_symbol_stroke_);
    }

    // optional .TSDSOS.SpecStrokeArchive scatter_symbol_stroke = 197;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_symbol_stroke_);
    }

    // optional .TSDSOS.SpecShadowArchive default_trend_line_shadow = 199;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive default_trend_line_stroke = 201;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trend_line_stroke_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_trendline_equation_opacity = 203;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trendline_equation_opacity_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_trendline_equation_paragraph_style_index = 205;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trendline_equation_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_trendline_r_squared_opacity = 207;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trendline_r_squared_opacity_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSSSOS.SpecIntegerArchive default_trendline_r_squared_paragraph_style_index = 209;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_trendline_r_squared_paragraph_style_index_);
    }

    // optional .TSSSOS.SpecIntegerArchive area_value_label_position = 211;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive bar_value_label_position = 213;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive bubble_value_label_position = 215;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bubble_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_value_label_position = 217;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive line_value_label_position = 219;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_area_value_label_position = 221;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_area_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive mixed_column_value_label_position = 223;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_column_value_label_position_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecIntegerArchive mixed_line_value_label_position = 225;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.mixed_line_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive radar_area_value_label_position = 227;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radar_area_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive scatter_value_label_position = 229;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scatter_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_area_value_label_position = 231;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stacked_area_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive stacked_bar_value_label_position = 233;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stacked_bar_value_label_position_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_value_label_spacing = 235;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_value_label_spacing_);
    }

    // optional bool default_callout_line_end_line_end_undefined = 2;
    if (cached_has_bits & 0x00400000u) {
      total_size += 1 + 1;
    }

    // optional bool default_callout_line_start_line_end_undefined = 4;
    if (cached_has_bits & 0x00800000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool default_callout_line_stroke_style_undefined = 6;
    if (cached_has_bits & 0x01000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_error_bar_line_end_undefined = 8;
    if (cached_has_bits & 0x02000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_error_bar_line_end_scatter_x_undefined = 10;
    if (cached_has_bits & 0x04000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_error_bar_shadow_undefined = 12;
    if (cached_has_bits & 0x08000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_error_bar_spacing_undefined = 14;
    if (cached_has_bits & 0x10000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_error_bar_spacing_scatter_x_undefined = 16;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_stroke_undefined = 18;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_error_bar_stroke_scatter_x_undefined = 20;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool area3d_fill_undefined = 22;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool bar3d_fill_undefined = 24;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool column3d_fill_undefined = 26;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool line3d_fill_undefined = 28;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool pie3d_fill_undefined = 30;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool area_fill_undefined = 32;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool bar_fill_undefined = 34;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool column_fill_undefined = 36;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool default_fill_undefined = 38;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_fill_undefined = 40;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_column_fill_undefined = 42;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool pie_fill_undefined = 44;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_fill_undefined = 46;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_fill_use_series_stroke_alpha_multiplier_undefined = 48;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_fill_use_series_stroke_undefined = 50;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool area_label_paragraph_style_index_undefined = 52;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool bar_label_paragraph_style_index_undefined = 54;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool default_label_paragraph_style_index_undefined = 56;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool donut_label_paragraph_style_index_undefined = 58;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool line_label_paragraph_style_index_undefined = 60;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_label_paragraph_style_index_undefined = 62;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_label_paragraph_style_index_undefined = 64;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool radar_label_paragraph_style_index_undefined = 66;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool default_opacity_undefined = 68;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool area_outside_label_paragraph_style_index_undefined = 70;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool bar_outside_label_paragraph_style_index_undefined = 72;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_outside_label_paragraph_style_index_undefined = 74;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool donut_outside_label_paragraph_style_index_undefined = 76;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_outside_label_paragraph_style_index_undefined = 78;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_outside_label_paragraph_style_index_undefined = 80;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool radar_outside_label_paragraph_style_index_undefined = 82;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool area3d_shadow_undefined = 84;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool bar3d_shadow_undefined = 86;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool column3d_shadow_undefined = 88;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool line3d_shadow_undefined = 90;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool pie3d_shadow_undefined = 92;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool area_shadow_undefined = 94;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool bar_shadow_undefined = 96;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_shadow_undefined = 98;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool default_shadow_undefined = 100;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool line_shadow_undefined = 102;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_shadow_undefined = 104;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_column_shadow_undefined = 106;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_shadow_undefined = 108;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool pie_shadow_undefined = 110;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_shadow_undefined = 112;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_shadow_undefined = 114;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool area_stroke_undefined = 116;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool bar_stroke_undefined = 118;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_stroke_undefined = 120;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool line_stroke_undefined = 122;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_stroke_undefined = 124;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_column_stroke_undefined = 126;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_stroke_undefined = 128;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool pie_stroke_undefined = 130;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_stroke_undefined = 132;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool scatter_stroke_undefined = 134;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool area_symbol_fill_undefined = 136;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_symbol_fill_undefined = 138;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool line_symbol_fill_undefined = 140;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_symbol_fill_undefined = 142;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_symbol_fill_undefined = 144;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_symbol_fill_undefined = 146;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_symbol_fill_undefined = 148;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[6];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool area_symbol_fill_use_series_fill_undefined = 150;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool line_symbol_fill_use_series_fill_undefined = 152;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_symbol_fill_use_series_fill_undefined = 154;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_symbol_fill_use_series_fill_undefined = 156;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_symbol_fill_use_series_fill_undefined = 158;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool area_symbol_fill_use_series_stroke_undefined = 160;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_symbol_fill_use_series_stroke_undefined = 162;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool line_symbol_fill_use_series_stroke_undefined = 164;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool mixed_area_symbol_fill_use_series_stroke_undefined = 166;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_symbol_fill_use_series_stroke_undefined = 168;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_symbol_fill_use_series_stroke_undefined = 170;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_symbol_fill_use_series_stroke_undefined = 172;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool area_symbol_size_undefined = 174;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool line_symbol_size_undefined = 176;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_symbol_size_undefined = 178;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_symbol_size_undefined = 180;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool radar_area_symbol_size_undefined = 182;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool scatter_symbol_size_undefined = 184;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional bool area_symbol_stroke_undefined = 186;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_symbol_stroke_undefined = 188;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional bool line_symbol_stroke_undefined = 190;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_symbol_stroke_undefined = 192;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_symbol_stroke_undefined = 194;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_symbol_stroke_undefined = 196;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool scatter_symbol_stroke_undefined = 198;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_shadow_undefined = 200;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trend_line_stroke_undefined = 202;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trendline_equation_opacity_undefined = 204;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trendline_equation_paragraph_style_index_undefined = 206;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trendline_r_squared_opacity_undefined = 208;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + 1;
    }

    // optional bool default_trendline_r_squared_paragraph_style_index_undefined = 210;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + 1;
    }

    // optional bool area_value_label_position_undefined = 212;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[7];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool bar_value_label_position_undefined = 214;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool bubble_value_label_position_undefined = 216;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool default_value_label_position_undefined = 218;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool line_value_label_position_undefined = 220;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_area_value_label_position_undefined = 222;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_column_value_label_position_undefined = 224;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool mixed_line_value_label_position_undefined = 226;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool radar_area_value_label_position_undefined = 228;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional bool scatter_value_label_position_undefined = 230;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_area_value_label_position_undefined = 232;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool stacked_bar_value_label_position_undefined = 234;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool default_value_label_spacing_undefined = 236;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChartSeriesStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChartSeriesStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChartSeriesStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ChartSeriesStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChartSeriesStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ChartSeriesStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_default_callout_line_end_line_end()->::TSDSOS::SpecLineEndArchive::MergeFrom(
          from._internal_default_callout_line_end_line_end());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_default_callout_line_start_line_end()->::TSDSOS::SpecLineEndArchive::MergeFrom(
          from._internal_default_callout_line_start_line_end());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_default_callout_line_stroke_style()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_default_callout_line_stroke_style());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_default_error_bar_line_end()->::TSDSOS::SpecLineEndArchive::MergeFrom(
          from._internal_default_error_bar_line_end());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_default_error_bar_line_end_scatter_x()->::TSDSOS::SpecLineEndArchive::MergeFrom(
          from._internal_default_error_bar_line_end_scatter_x());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_default_error_bar_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_default_error_bar_shadow());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_default_error_bar_spacing()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_error_bar_spacing());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_default_error_bar_spacing_scatter_x()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_error_bar_spacing_scatter_x());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_default_error_bar_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_default_error_bar_stroke());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_default_error_bar_stroke_scatter_x()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_default_error_bar_stroke_scatter_x());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_area3d_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_area3d_fill());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_bar3d_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_bar3d_fill());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_column3d_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_column3d_fill());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_line3d_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_line3d_fill());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_pie3d_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_pie3d_fill());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_area_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_area_fill());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_bar_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_bar_fill());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_column_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_column_fill());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_default_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_default_fill());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_mixed_area_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_mixed_area_fill());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_mixed_column_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_mixed_column_fill());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_pie_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_pie_fill());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_radar_area_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_radar_area_fill());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_radar_area_fill_use_series_stroke_alpha_multiplier()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_radar_area_fill_use_series_stroke_alpha_multiplier());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_radar_area_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_radar_area_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_area_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_area_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_mutable_bar_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_bar_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_mutable_default_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_mutable_donut_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_donut_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_mutable_line_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_line_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_mutable_mixed_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_mixed_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_internal_mutable_pie_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_pie_label_paragraph_style_index());
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_radar_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_radar_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_default_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_opacity());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_area_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_area_outside_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_bar_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_bar_outside_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_default_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_outside_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_donut_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_donut_outside_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_mixed_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_mixed_outside_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_pie_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_pie_outside_label_paragraph_style_index());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_radar_outside_label_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_radar_outside_label_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_area3d_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_area3d_shadow());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_bar3d_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_bar3d_shadow());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_column3d_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_column3d_shadow());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_line3d_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_line3d_shadow());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_pie3d_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_pie3d_shadow());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_area_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_area_shadow());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_bar_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_bar_shadow());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_bubble_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_bubble_shadow());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_default_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_default_shadow());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_line_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_line_shadow());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_mixed_area_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_mixed_area_shadow());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_mixed_column_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_mixed_column_shadow());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_mixed_line_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_mixed_line_shadow());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_pie_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_pie_shadow());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_radar_area_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_radar_area_shadow());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_scatter_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_scatter_shadow());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_area_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_area_stroke());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_mutable_bar_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_bar_stroke());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_mutable_bubble_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_bubble_stroke());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_mutable_line_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_line_stroke());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_mutable_mixed_area_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_mixed_area_stroke());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_mutable_mixed_column_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_mixed_column_stroke());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_internal_mutable_mixed_line_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_mixed_line_stroke());
    }
  }
  cached_has_bits = from._impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_pie_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_pie_stroke());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_radar_area_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_radar_area_stroke());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_scatter_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_scatter_stroke());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_area_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_area_symbol_fill());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_bubble_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_bubble_symbol_fill());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_line_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_line_symbol_fill());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_mixed_area_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_mixed_area_symbol_fill());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_mixed_line_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_mixed_line_symbol_fill());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_radar_area_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_radar_area_symbol_fill());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_scatter_symbol_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_scatter_symbol_fill());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_area_symbol_fill_use_series_fill()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_area_symbol_fill_use_series_fill());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_line_symbol_fill_use_series_fill()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_line_symbol_fill_use_series_fill());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_mixed_area_symbol_fill_use_series_fill()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_mixed_area_symbol_fill_use_series_fill());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_mixed_line_symbol_fill_use_series_fill()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_mixed_line_symbol_fill_use_series_fill());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_radar_area_symbol_fill_use_series_fill()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_radar_area_symbol_fill_use_series_fill());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_area_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_area_symbol_fill_use_series_stroke());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_bubble_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_bubble_symbol_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_line_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_line_symbol_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_mixed_area_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_mixed_area_symbol_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_mixed_line_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_mixed_line_symbol_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_radar_area_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_radar_area_symbol_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_scatter_symbol_fill_use_series_stroke()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_scatter_symbol_fill_use_series_stroke());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_area_symbol_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_area_symbol_size());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_line_symbol_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_line_symbol_size());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_mutable_mixed_area_symbol_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_mixed_area_symbol_size());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_mutable_mixed_line_symbol_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_mixed_line_symbol_size());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_mutable_radar_area_symbol_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_radar_area_symbol_size());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_mutable_scatter_symbol_size()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_scatter_symbol_size());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_mutable_area_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_area_symbol_stroke());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_mutable_bubble_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_bubble_symbol_stroke());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_mutable_line_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_line_symbol_stroke());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_internal_mutable_mixed_area_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_mixed_area_symbol_stroke());
    }
  }
  cached_has_bits = from._impl_._has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_mixed_line_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_mixed_line_symbol_stroke());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_radar_area_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_radar_area_symbol_stroke());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_scatter_symbol_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_scatter_symbol_stroke());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_default_trend_line_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_default_trend_line_shadow());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_default_trend_line_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_default_trend_line_stroke());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_default_trendline_equation_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_trendline_equation_opacity());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_default_trendline_equation_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_trendline_equation_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_default_trendline_r_squared_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_trendline_r_squared_opacity());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_default_trendline_r_squared_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_trendline_r_squared_paragraph_style_index());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_area_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_area_value_label_position());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_bar_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_bar_value_label_position());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_bubble_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_bubble_value_label_position());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_default_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_value_label_position());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_line_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_line_value_label_position());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_mixed_area_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_mixed_area_value_label_position());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_mixed_column_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_mixed_column_value_label_position());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_mixed_line_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_mixed_line_value_label_position());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_radar_area_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_radar_area_value_label_position());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_scatter_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_scatter_value_label_position());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_stacked_area_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_stacked_area_value_label_position());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_stacked_bar_value_label_position()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_stacked_bar_value_label_position());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_default_value_label_spacing()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_value_label_spacing());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.default_callout_line_end_line_end_undefined_ = from._impl_.default_callout_line_end_line_end_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.default_callout_line_start_line_end_undefined_ = from._impl_.default_callout_line_start_line_end_undefined_;
    }
    _this->_impl_._has_bits_[3] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.default_callout_line_stroke_style_undefined_ = from._impl_.default_callout_line_stroke_style_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.default_error_bar_line_end_undefined_ = from._impl_.default_error_bar_line_end_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.default_error_bar_line_end_scatter_x_undefined_ = from._impl_.default_error_bar_line_end_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.default_error_bar_shadow_undefined_ = from._impl_.default_error_bar_shadow_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.default_error_bar_spacing_undefined_ = from._impl_.default_error_bar_spacing_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.default_error_bar_spacing_scatter_x_undefined_ = from._impl_.default_error_bar_spacing_scatter_x_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.default_error_bar_stroke_undefined_ = from._impl_.default_error_bar_stroke_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.default_error_bar_stroke_scatter_x_undefined_ = from._impl_.default_error_bar_stroke_scatter_x_undefined_;
    }
    _this->_impl_._has_bits_[3] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.area3d_fill_undefined_ = from._impl_.area3d_fill_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.bar3d_fill_undefined_ = from._impl_.bar3d_fill_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.column3d_fill_undefined_ = from._impl_.column3d_fill_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.line3d_fill_undefined_ = from._impl_.line3d_fill_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.pie3d_fill_undefined_ = from._impl_.pie3d_fill_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.area_fill_undefined_ = from._impl_.area_fill_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.bar_fill_undefined_ = from._impl_.bar_fill_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.column_fill_undefined_ = from._impl_.column_fill_undefined_;
    }
    _this->_impl_._has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.default_fill_undefined_ = from._impl_.default_fill_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.mixed_area_fill_undefined_ = from._impl_.mixed_area_fill_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.mixed_column_fill_undefined_ = from._impl_.mixed_column_fill_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.pie_fill_undefined_ = from._impl_.pie_fill_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.radar_area_fill_undefined_ = from._impl_.radar_area_fill_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_undefined_ = from._impl_.radar_area_fill_use_series_stroke_alpha_multiplier_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.radar_area_fill_use_series_stroke_undefined_ = from._impl_.radar_area_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.area_label_paragraph_style_index_undefined_ = from._impl_.area_label_paragraph_style_index_undefined_;
    }
    _this->_impl_._has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.bar_label_paragraph_style_index_undefined_ = from._impl_.bar_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.default_label_paragraph_style_index_undefined_ = from._impl_.default_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.donut_label_paragraph_style_index_undefined_ = from._impl_.donut_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.line_label_paragraph_style_index_undefined_ = from._impl_.line_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.mixed_label_paragraph_style_index_undefined_ = from._impl_.mixed_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.pie_label_paragraph_style_index_undefined_ = from._impl_.pie_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.radar_label_paragraph_style_index_undefined_ = from._impl_.radar_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.default_opacity_undefined_ = from._impl_.default_opacity_undefined_;
    }
    _this->_impl_._has_bits_[4] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.area_outside_label_paragraph_style_index_undefined_ = from._impl_.area_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.bar_outside_label_paragraph_style_index_undefined_ = from._impl_.bar_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.default_outside_label_paragraph_style_index_undefined_ = from._impl_.default_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.donut_outside_label_paragraph_style_index_undefined_ = from._impl_.donut_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.mixed_outside_label_paragraph_style_index_undefined_ = from._impl_.mixed_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.pie_outside_label_paragraph_style_index_undefined_ = from._impl_.pie_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.radar_outside_label_paragraph_style_index_undefined_ = from._impl_.radar_outside_label_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.area3d_shadow_undefined_ = from._impl_.area3d_shadow_undefined_;
    }
    _this->_impl_._has_bits_[4] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.bar3d_shadow_undefined_ = from._impl_.bar3d_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.column3d_shadow_undefined_ = from._impl_.column3d_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.line3d_shadow_undefined_ = from._impl_.line3d_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.pie3d_shadow_undefined_ = from._impl_.pie3d_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.area_shadow_undefined_ = from._impl_.area_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.bar_shadow_undefined_ = from._impl_.bar_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.bubble_shadow_undefined_ = from._impl_.bubble_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.default_shadow_undefined_ = from._impl_.default_shadow_undefined_;
    }
    _this->_impl_._has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.line_shadow_undefined_ = from._impl_.line_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.mixed_area_shadow_undefined_ = from._impl_.mixed_area_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.mixed_column_shadow_undefined_ = from._impl_.mixed_column_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.mixed_line_shadow_undefined_ = from._impl_.mixed_line_shadow_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.pie_shadow_undefined_ = from._impl_.pie_shadow_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.radar_area_shadow_undefined_ = from._impl_.radar_area_shadow_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.scatter_shadow_undefined_ = from._impl_.scatter_shadow_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.area_stroke_undefined_ = from._impl_.area_stroke_undefined_;
    }
    _this->_impl_._has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.bar_stroke_undefined_ = from._impl_.bar_stroke_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.bubble_stroke_undefined_ = from._impl_.bubble_stroke_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.line_stroke_undefined_ = from._impl_.line_stroke_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.mixed_area_stroke_undefined_ = from._impl_.mixed_area_stroke_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.mixed_column_stroke_undefined_ = from._impl_.mixed_column_stroke_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.mixed_line_stroke_undefined_ = from._impl_.mixed_line_stroke_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.pie_stroke_undefined_ = from._impl_.pie_stroke_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.radar_area_stroke_undefined_ = from._impl_.radar_area_stroke_undefined_;
    }
    _this->_impl_._has_bits_[5] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.scatter_stroke_undefined_ = from._impl_.scatter_stroke_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.area_symbol_fill_undefined_ = from._impl_.area_symbol_fill_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.bubble_symbol_fill_undefined_ = from._impl_.bubble_symbol_fill_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.line_symbol_fill_undefined_ = from._impl_.line_symbol_fill_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.mixed_area_symbol_fill_undefined_ = from._impl_.mixed_area_symbol_fill_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.mixed_line_symbol_fill_undefined_ = from._impl_.mixed_line_symbol_fill_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.radar_area_symbol_fill_undefined_ = from._impl_.radar_area_symbol_fill_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.scatter_symbol_fill_undefined_ = from._impl_.scatter_symbol_fill_undefined_;
    }
    _this->_impl_._has_bits_[5] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[6];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.area_symbol_fill_use_series_fill_undefined_ = from._impl_.area_symbol_fill_use_series_fill_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.line_symbol_fill_use_series_fill_undefined_ = from._impl_.line_symbol_fill_use_series_fill_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mixed_area_symbol_fill_use_series_fill_undefined_ = from._impl_.mixed_area_symbol_fill_use_series_fill_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.mixed_line_symbol_fill_use_series_fill_undefined_ = from._impl_.mixed_line_symbol_fill_use_series_fill_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.radar_area_symbol_fill_use_series_fill_undefined_ = from._impl_.radar_area_symbol_fill_use_series_fill_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.area_symbol_fill_use_series_stroke_undefined_ = from._impl_.area_symbol_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.bubble_symbol_fill_use_series_stroke_undefined_ = from._impl_.bubble_symbol_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.line_symbol_fill_use_series_stroke_undefined_ = from._impl_.line_symbol_fill_use_series_stroke_undefined_;
    }
    _this->_impl_._has_bits_[6] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.mixed_area_symbol_fill_use_series_stroke_undefined_ = from._impl_.mixed_area_symbol_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.mixed_line_symbol_fill_use_series_stroke_undefined_ = from._impl_.mixed_line_symbol_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.radar_area_symbol_fill_use_series_stroke_undefined_ = from._impl_.radar_area_symbol_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.scatter_symbol_fill_use_series_stroke_undefined_ = from._impl_.scatter_symbol_fill_use_series_stroke_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.area_symbol_size_undefined_ = from._impl_.area_symbol_size_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.line_symbol_size_undefined_ = from._impl_.line_symbol_size_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.mixed_area_symbol_size_undefined_ = from._impl_.mixed_area_symbol_size_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.mixed_line_symbol_size_undefined_ = from._impl_.mixed_line_symbol_size_undefined_;
    }
    _this->_impl_._has_bits_[6] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.radar_area_symbol_size_undefined_ = from._impl_.radar_area_symbol_size_undefined_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.scatter_symbol_size_undefined_ = from._impl_.scatter_symbol_size_undefined_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.area_symbol_stroke_undefined_ = from._impl_.area_symbol_stroke_undefined_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.bubble_symbol_stroke_undefined_ = from._impl_.bubble_symbol_stroke_undefined_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.line_symbol_stroke_undefined_ = from._impl_.line_symbol_stroke_undefined_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.mixed_area_symbol_stroke_undefined_ = from._impl_.mixed_area_symbol_stroke_undefined_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.mixed_line_symbol_stroke_undefined_ = from._impl_.mixed_line_symbol_stroke_undefined_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.radar_area_symbol_stroke_undefined_ = from._impl_.radar_area_symbol_stroke_undefined_;
    }
    _this->_impl_._has_bits_[6] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.scatter_symbol_stroke_undefined_ = from._impl_.scatter_symbol_stroke_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.default_trend_line_shadow_undefined_ = from._impl_.default_trend_line_shadow_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.default_trend_line_stroke_undefined_ = from._impl_.default_trend_line_stroke_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.default_trendline_equation_opacity_undefined_ = from._impl_.default_trendline_equation_opacity_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.default_trendline_equation_paragraph_style_index_undefined_ = from._impl_.default_trendline_equation_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.default_trendline_r_squared_opacity_undefined_ = from._impl_.default_trendline_r_squared_opacity_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.default_trendline_r_squared_paragraph_style_index_undefined_ = from._impl_.default_trendline_r_squared_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.area_value_label_position_undefined_ = from._impl_.area_value_label_position_undefined_;
    }
    _this->_impl_._has_bits_[6] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[7];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.bar_value_label_position_undefined_ = from._impl_.bar_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.bubble_value_label_position_undefined_ = from._impl_.bubble_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.default_value_label_position_undefined_ = from._impl_.default_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.line_value_label_position_undefined_ = from._impl_.line_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.mixed_area_value_label_position_undefined_ = from._impl_.mixed_area_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.mixed_column_value_label_position_undefined_ = from._impl_.mixed_column_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.mixed_line_value_label_position_undefined_ = from._impl_.mixed_line_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.radar_area_value_label_position_undefined_ = from._impl_.radar_area_value_label_position_undefined_;
    }
    _this->_impl_._has_bits_[7] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.scatter_value_label_position_undefined_ = from._impl_.scatter_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.stacked_area_value_label_position_undefined_ = from._impl_.stacked_area_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.stacked_bar_value_label_position_undefined_ = from._impl_.stacked_bar_value_label_position_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.default_value_label_spacing_undefined_ = from._impl_.default_value_label_spacing_undefined_;
    }
    _this->_impl_._has_bits_[7] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChartSeriesStylePropertyChangeSetArchive::CopyFrom(const ChartSeriesStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartSeriesStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartSeriesStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default_callout_line_end_line_end()) {
    if (!_impl_.default_callout_line_end_line_end_->IsInitialized()) return false;
  }
  if (_internal_has_default_callout_line_start_line_end()) {
    if (!_impl_.default_callout_line_start_line_end_->IsInitialized()) return false;
  }
  if (_internal_has_default_callout_line_stroke_style()) {
    if (!_impl_.default_callout_line_stroke_style_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_line_end()) {
    if (!_impl_.default_error_bar_line_end_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_line_end_scatter_x()) {
    if (!_impl_.default_error_bar_line_end_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_shadow()) {
    if (!_impl_.default_error_bar_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_spacing()) {
    if (!_impl_.default_error_bar_spacing_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_spacing_scatter_x()) {
    if (!_impl_.default_error_bar_spacing_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_stroke()) {
    if (!_impl_.default_error_bar_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_error_bar_stroke_scatter_x()) {
    if (!_impl_.default_error_bar_stroke_scatter_x_->IsInitialized()) return false;
  }
  if (_internal_has_area3d_fill()) {
    if (!_impl_.area3d_fill_->IsInitialized()) return false;
  }
  if (_internal_has_bar3d_fill()) {
    if (!_impl_.bar3d_fill_->IsInitialized()) return false;
  }
  if (_internal_has_column3d_fill()) {
    if (!_impl_.column3d_fill_->IsInitialized()) return false;
  }
  if (_internal_has_line3d_fill()) {
    if (!_impl_.line3d_fill_->IsInitialized()) return false;
  }
  if (_internal_has_pie3d_fill()) {
    if (!_impl_.pie3d_fill_->IsInitialized()) return false;
  }
  if (_internal_has_area_fill()) {
    if (!_impl_.area_fill_->IsInitialized()) return false;
  }
  if (_internal_has_bar_fill()) {
    if (!_impl_.bar_fill_->IsInitialized()) return false;
  }
  if (_internal_has_column_fill()) {
    if (!_impl_.column_fill_->IsInitialized()) return false;
  }
  if (_internal_has_default_fill()) {
    if (!_impl_.default_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_fill()) {
    if (!_impl_.mixed_area_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_column_fill()) {
    if (!_impl_.mixed_column_fill_->IsInitialized()) return false;
  }
  if (_internal_has_pie_fill()) {
    if (!_impl_.pie_fill_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_fill()) {
    if (!_impl_.radar_area_fill_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_fill_use_series_stroke_alpha_multiplier()) {
    if (!_impl_.radar_area_fill_use_series_stroke_alpha_multiplier_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_fill_use_series_stroke()) {
    if (!_impl_.radar_area_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_area_label_paragraph_style_index()) {
    if (!_impl_.area_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_bar_label_paragraph_style_index()) {
    if (!_impl_.bar_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_label_paragraph_style_index()) {
    if (!_impl_.default_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_donut_label_paragraph_style_index()) {
    if (!_impl_.donut_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_line_label_paragraph_style_index()) {
    if (!_impl_.line_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_label_paragraph_style_index()) {
    if (!_impl_.mixed_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_pie_label_paragraph_style_index()) {
    if (!_impl_.pie_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_radar_label_paragraph_style_index()) {
    if (!_impl_.radar_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_opacity()) {
    if (!_impl_.default_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_area_outside_label_paragraph_style_index()) {
    if (!_impl_.area_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_bar_outside_label_paragraph_style_index()) {
    if (!_impl_.bar_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_outside_label_paragraph_style_index()) {
    if (!_impl_.default_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_donut_outside_label_paragraph_style_index()) {
    if (!_impl_.donut_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_outside_label_paragraph_style_index()) {
    if (!_impl_.mixed_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_pie_outside_label_paragraph_style_index()) {
    if (!_impl_.pie_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_radar_outside_label_paragraph_style_index()) {
    if (!_impl_.radar_outside_label_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_area3d_shadow()) {
    if (!_impl_.area3d_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_bar3d_shadow()) {
    if (!_impl_.bar3d_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_column3d_shadow()) {
    if (!_impl_.column3d_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_line3d_shadow()) {
    if (!_impl_.line3d_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_pie3d_shadow()) {
    if (!_impl_.pie3d_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_area_shadow()) {
    if (!_impl_.area_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_bar_shadow()) {
    if (!_impl_.bar_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_shadow()) {
    if (!_impl_.bubble_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_shadow()) {
    if (!_impl_.default_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_line_shadow()) {
    if (!_impl_.line_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_shadow()) {
    if (!_impl_.mixed_area_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_column_shadow()) {
    if (!_impl_.mixed_column_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_shadow()) {
    if (!_impl_.mixed_line_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_pie_shadow()) {
    if (!_impl_.pie_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_shadow()) {
    if (!_impl_.radar_area_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_shadow()) {
    if (!_impl_.scatter_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_area_stroke()) {
    if (!_impl_.area_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_bar_stroke()) {
    if (!_impl_.bar_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_stroke()) {
    if (!_impl_.bubble_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_line_stroke()) {
    if (!_impl_.line_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_stroke()) {
    if (!_impl_.mixed_area_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_column_stroke()) {
    if (!_impl_.mixed_column_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_stroke()) {
    if (!_impl_.mixed_line_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_pie_stroke()) {
    if (!_impl_.pie_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_stroke()) {
    if (!_impl_.radar_area_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_stroke()) {
    if (!_impl_.scatter_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_fill()) {
    if (!_impl_.area_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_symbol_fill()) {
    if (!_impl_.bubble_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_fill()) {
    if (!_impl_.line_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_fill()) {
    if (!_impl_.mixed_area_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_fill()) {
    if (!_impl_.mixed_line_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_symbol_fill()) {
    if (!_impl_.radar_area_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_symbol_fill()) {
    if (!_impl_.scatter_symbol_fill_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_fill_use_series_fill()) {
    if (!_impl_.area_symbol_fill_use_series_fill_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_fill_use_series_fill()) {
    if (!_impl_.line_symbol_fill_use_series_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_fill_use_series_fill()) {
    if (!_impl_.mixed_area_symbol_fill_use_series_fill_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_fill_use_series_fill()) {
    if (!_impl_.mixed_line_symbol_fill_use_series_fill_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_symbol_fill_use_series_fill()) {
    if (!_impl_.radar_area_symbol_fill_use_series_fill_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_fill_use_series_stroke()) {
    if (!_impl_.area_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_symbol_fill_use_series_stroke()) {
    if (!_impl_.bubble_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_fill_use_series_stroke()) {
    if (!_impl_.line_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_fill_use_series_stroke()) {
    if (!_impl_.mixed_area_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_fill_use_series_stroke()) {
    if (!_impl_.mixed_line_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_symbol_fill_use_series_stroke()) {
    if (!_impl_.radar_area_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_symbol_fill_use_series_stroke()) {
    if (!_impl_.scatter_symbol_fill_use_series_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_size()) {
    if (!_impl_.area_symbol_size_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_size()) {
    if (!_impl_.line_symbol_size_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_size()) {
    if (!_impl_.mixed_area_symbol_size_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_size()) {
    if (!_impl_.mixed_line_symbol_size_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_symbol_size()) {
    if (!_impl_.radar_area_symbol_size_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_symbol_size()) {
    if (!_impl_.scatter_symbol_size_->IsInitialized()) return false;
  }
  if (_internal_has_area_symbol_stroke()) {
    if (!_impl_.area_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_symbol_stroke()) {
    if (!_impl_.bubble_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_line_symbol_stroke()) {
    if (!_impl_.line_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_symbol_stroke()) {
    if (!_impl_.mixed_area_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_symbol_stroke()) {
    if (!_impl_.mixed_line_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_symbol_stroke()) {
    if (!_impl_.radar_area_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_symbol_stroke()) {
    if (!_impl_.scatter_symbol_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_shadow()) {
    if (!_impl_.default_trend_line_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_trend_line_stroke()) {
    if (!_impl_.default_trend_line_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_trendline_equation_opacity()) {
    if (!_impl_.default_trendline_equation_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_default_trendline_equation_paragraph_style_index()) {
    if (!_impl_.default_trendline_equation_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_trendline_r_squared_opacity()) {
    if (!_impl_.default_trendline_r_squared_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_default_trendline_r_squared_paragraph_style_index()) {
    if (!_impl_.default_trendline_r_squared_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_area_value_label_position()) {
    if (!_impl_.area_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_bar_value_label_position()) {
    if (!_impl_.bar_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_bubble_value_label_position()) {
    if (!_impl_.bubble_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_default_value_label_position()) {
    if (!_impl_.default_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_line_value_label_position()) {
    if (!_impl_.line_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_area_value_label_position()) {
    if (!_impl_.mixed_area_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_column_value_label_position()) {
    if (!_impl_.mixed_column_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_mixed_line_value_label_position()) {
    if (!_impl_.mixed_line_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_radar_area_value_label_position()) {
    if (!_impl_.radar_area_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_scatter_value_label_position()) {
    if (!_impl_.scatter_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_area_value_label_position()) {
    if (!_impl_.stacked_area_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_stacked_bar_value_label_position()) {
    if (!_impl_.stacked_bar_value_label_position_->IsInitialized()) return false;
  }
  if (_internal_has_default_value_label_spacing()) {
    if (!_impl_.default_value_label_spacing_->IsInitialized()) return false;
  }
  return true;
}

void ChartSeriesStylePropertyChangeSetArchive::InternalSwap(ChartSeriesStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  swap(_impl_._has_bits_[2], other->_impl_._has_bits_[2]);
  swap(_impl_._has_bits_[3], other->_impl_._has_bits_[3]);
  swap(_impl_._has_bits_[4], other->_impl_._has_bits_[4]);
  swap(_impl_._has_bits_[5], other->_impl_._has_bits_[5]);
  swap(_impl_._has_bits_[6], other->_impl_._has_bits_[6]);
  swap(_impl_._has_bits_[7], other->_impl_._has_bits_[7]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartSeriesStylePropertyChangeSetArchive, _impl_.default_value_label_spacing_undefined_)
      + sizeof(ChartSeriesStylePropertyChangeSetArchive::_impl_.default_value_label_spacing_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartSeriesStylePropertyChangeSetArchive, _impl_.default_callout_line_end_line_end_)>(
          reinterpret_cast<char*>(&_impl_.default_callout_line_end_line_end_),
          reinterpret_cast<char*>(&other->_impl_.default_callout_line_end_line_end_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartSeriesStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[20]);
}

// ===================================================================

class ChartStylePropertyChangeSetArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<ChartStylePropertyChangeSetArchive>()._impl_._has_bits_);
  static const ::TSSSOS::SpecDoubleArchive& default3d_chart_opacity(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_chart_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_default3d_chart_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& area3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_area3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_area3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& bar3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_bar3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_bar3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& column3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_column3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_column3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& default3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_default3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& line3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_line3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_line3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static const ::TSCHSOS::SpecChart3dLightingPackageArchive& pie3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_pie3d_lighting_package(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_pie3d_lighting_package_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static const ::TSDSOS::SpecFillArchive& default_background_fill(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_background_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_default_background_fill_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_background_stroke(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_background_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_default_background_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_border_opacity(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_border_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_default_border_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static const ::TSDSOS::SpecShadowArchive& default_border_shadow(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_border_shadow(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_default_border_shadow_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::TSDSOS::SpecStrokeArchive& default_border_stroke(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_border_stroke(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_default_border_stroke_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_combine_layers(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_combine_layers(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_default_combine_layers_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_data_set_name_paragraph_style_index(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_data_set_name_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_default_data_set_name_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static const ::TSDSOS::SpecFillArchive& default_grid_background_fill(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_grid_background_fill(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_default_grid_background_fill_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_grid_background_opacity(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_grid_background_opacity(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_default_grid_background_opacity_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_inter_bar_gap(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_inter_bar_gap(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_default_inter_bar_gap_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_inter_set_gap(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_inter_set_gap(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_default_inter_set_gap_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_radar_radius_gridline_curve(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_radar_radius_gridline_curve(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_default_radar_radius_gridline_curve_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_rounded_corner_outer_end_only(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_rounded_corner_outer_end_only(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_default_rounded_corner_outer_end_only_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::TSSSOS::SpecDoubleArchive& default_rounded_corner_radius(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_rounded_corner_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_default_rounded_corner_radius_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static const ::TSSSOS::SpecBoolArchive& default_show_border(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_show_border(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_default_show_border_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static const ::TSSSOS::SpecColorArchive& default_title_color(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_title_color(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_default_title_color_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::TSSSOS::SpecIntegerArchive& default_title_paragraph_style_index(const ChartStylePropertyChangeSetArchive* msg);
  static void set_has_default_title_paragraph_style_index(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_default_title_paragraph_style_index_undefined(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
};

const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default3d_chart_opacity(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default3d_chart_opacity_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::area3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.area3d_lighting_package_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::bar3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.bar3d_lighting_package_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::column3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.column3d_lighting_package_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::default3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default3d_lighting_package_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::line3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.line3d_lighting_package_;
}
const ::TSCHSOS::SpecChart3dLightingPackageArchive&
ChartStylePropertyChangeSetArchive::_Internal::pie3d_lighting_package(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.pie3d_lighting_package_;
}
const ::TSDSOS::SpecFillArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_background_fill(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_background_fill_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_background_stroke(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_background_stroke_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_border_opacity(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_border_opacity_;
}
const ::TSDSOS::SpecShadowArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_border_shadow(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_border_shadow_;
}
const ::TSDSOS::SpecStrokeArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_border_stroke(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_border_stroke_;
}
const ::TSSSOS::SpecBoolArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_combine_layers(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_combine_layers_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_data_set_name_paragraph_style_index(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_data_set_name_paragraph_style_index_;
}
const ::TSDSOS::SpecFillArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_grid_background_fill(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_grid_background_fill_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_grid_background_opacity(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_grid_background_opacity_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_inter_bar_gap(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_inter_bar_gap_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_inter_set_gap(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_inter_set_gap_;
}
const ::TSSSOS::SpecBoolArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_radar_radius_gridline_curve(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_radar_radius_gridline_curve_;
}
const ::TSSSOS::SpecBoolArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_rounded_corner_outer_end_only(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_rounded_corner_outer_end_only_;
}
const ::TSSSOS::SpecDoubleArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_rounded_corner_radius(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_rounded_corner_radius_;
}
const ::TSSSOS::SpecBoolArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_show_border(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_show_border_;
}
const ::TSSSOS::SpecColorArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_title_color(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_title_color_;
}
const ::TSSSOS::SpecIntegerArchive&
ChartStylePropertyChangeSetArchive::_Internal::default_title_paragraph_style_index(const ChartStylePropertyChangeSetArchive* msg) {
  return *msg->_impl_.default_title_paragraph_style_index_;
}
void ChartStylePropertyChangeSetArchive::clear_default3d_chart_opacity() {
  if (_impl_.default3d_chart_opacity_ != nullptr) _impl_.default3d_chart_opacity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ChartStylePropertyChangeSetArchive::clear_default_background_fill() {
  if (_impl_.default_background_fill_ != nullptr) _impl_.default_background_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void ChartStylePropertyChangeSetArchive::clear_default_background_stroke() {
  if (_impl_.default_background_stroke_ != nullptr) _impl_.default_background_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void ChartStylePropertyChangeSetArchive::clear_default_border_opacity() {
  if (_impl_.default_border_opacity_ != nullptr) _impl_.default_border_opacity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void ChartStylePropertyChangeSetArchive::clear_default_border_shadow() {
  if (_impl_.default_border_shadow_ != nullptr) _impl_.default_border_shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void ChartStylePropertyChangeSetArchive::clear_default_border_stroke() {
  if (_impl_.default_border_stroke_ != nullptr) _impl_.default_border_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void ChartStylePropertyChangeSetArchive::clear_default_combine_layers() {
  if (_impl_.default_combine_layers_ != nullptr) _impl_.default_combine_layers_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_data_set_name_paragraph_style_index() {
  if (_impl_.default_data_set_name_paragraph_style_index_ != nullptr) _impl_.default_data_set_name_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_grid_background_fill() {
  if (_impl_.default_grid_background_fill_ != nullptr) _impl_.default_grid_background_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_grid_background_opacity() {
  if (_impl_.default_grid_background_opacity_ != nullptr) _impl_.default_grid_background_opacity_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_inter_bar_gap() {
  if (_impl_.default_inter_bar_gap_ != nullptr) _impl_.default_inter_bar_gap_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_inter_set_gap() {
  if (_impl_.default_inter_set_gap_ != nullptr) _impl_.default_inter_set_gap_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_radar_radius_gridline_curve() {
  if (_impl_.default_radar_radius_gridline_curve_ != nullptr) _impl_.default_radar_radius_gridline_curve_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_rounded_corner_outer_end_only() {
  if (_impl_.default_rounded_corner_outer_end_only_ != nullptr) _impl_.default_rounded_corner_outer_end_only_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_rounded_corner_radius() {
  if (_impl_.default_rounded_corner_radius_ != nullptr) _impl_.default_rounded_corner_radius_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_show_border() {
  if (_impl_.default_show_border_ != nullptr) _impl_.default_show_border_->Clear();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_title_color() {
  if (_impl_.default_title_color_ != nullptr) _impl_.default_title_color_->Clear();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
void ChartStylePropertyChangeSetArchive::clear_default_title_paragraph_style_index() {
  if (_impl_.default_title_paragraph_style_index_ != nullptr) _impl_.default_title_paragraph_style_index_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
ChartStylePropertyChangeSetArchive::ChartStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSCHSOS.ChartStylePropertyChangeSetArchive)
}
ChartStylePropertyChangeSetArchive::ChartStylePropertyChangeSetArchive(const ChartStylePropertyChangeSetArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChartStylePropertyChangeSetArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default3d_chart_opacity_){nullptr}
    , decltype(_impl_.area3d_lighting_package_){nullptr}
    , decltype(_impl_.bar3d_lighting_package_){nullptr}
    , decltype(_impl_.column3d_lighting_package_){nullptr}
    , decltype(_impl_.default3d_lighting_package_){nullptr}
    , decltype(_impl_.line3d_lighting_package_){nullptr}
    , decltype(_impl_.pie3d_lighting_package_){nullptr}
    , decltype(_impl_.default_background_fill_){nullptr}
    , decltype(_impl_.default_background_stroke_){nullptr}
    , decltype(_impl_.default_border_opacity_){nullptr}
    , decltype(_impl_.default_border_shadow_){nullptr}
    , decltype(_impl_.default_border_stroke_){nullptr}
    , decltype(_impl_.default_combine_layers_){nullptr}
    , decltype(_impl_.default_data_set_name_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_grid_background_fill_){nullptr}
    , decltype(_impl_.default_grid_background_opacity_){nullptr}
    , decltype(_impl_.default_inter_bar_gap_){nullptr}
    , decltype(_impl_.default_inter_set_gap_){nullptr}
    , decltype(_impl_.default_radar_radius_gridline_curve_){nullptr}
    , decltype(_impl_.default_rounded_corner_outer_end_only_){nullptr}
    , decltype(_impl_.default_rounded_corner_radius_){nullptr}
    , decltype(_impl_.default_show_border_){nullptr}
    , decltype(_impl_.default_title_color_){nullptr}
    , decltype(_impl_.default_title_paragraph_style_index_){nullptr}
    , decltype(_impl_.default3d_chart_opacity_undefined_){}
    , decltype(_impl_.area3d_lighting_package_undefined_){}
    , decltype(_impl_.bar3d_lighting_package_undefined_){}
    , decltype(_impl_.column3d_lighting_package_undefined_){}
    , decltype(_impl_.default3d_lighting_package_undefined_){}
    , decltype(_impl_.line3d_lighting_package_undefined_){}
    , decltype(_impl_.pie3d_lighting_package_undefined_){}
    , decltype(_impl_.default_background_fill_undefined_){}
    , decltype(_impl_.default_background_stroke_undefined_){}
    , decltype(_impl_.default_border_opacity_undefined_){}
    , decltype(_impl_.default_border_shadow_undefined_){}
    , decltype(_impl_.default_border_stroke_undefined_){}
    , decltype(_impl_.default_combine_layers_undefined_){}
    , decltype(_impl_.default_data_set_name_paragraph_style_index_undefined_){}
    , decltype(_impl_.default_grid_background_fill_undefined_){}
    , decltype(_impl_.default_grid_background_opacity_undefined_){}
    , decltype(_impl_.default_inter_bar_gap_undefined_){}
    , decltype(_impl_.default_inter_set_gap_undefined_){}
    , decltype(_impl_.default_radar_radius_gridline_curve_undefined_){}
    , decltype(_impl_.default_rounded_corner_outer_end_only_undefined_){}
    , decltype(_impl_.default_rounded_corner_radius_undefined_){}
    , decltype(_impl_.default_show_border_undefined_){}
    , decltype(_impl_.default_title_color_undefined_){}
    , decltype(_impl_.default_title_paragraph_style_index_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default3d_chart_opacity()) {
    _this->_impl_.default3d_chart_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default3d_chart_opacity_);
  }
  if (from._internal_has_area3d_lighting_package()) {
    _this->_impl_.area3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from._impl_.area3d_lighting_package_);
  }
  if (from._internal_has_bar3d_lighting_package()) {
    _this->_impl_.bar3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from._impl_.bar3d_lighting_package_);
  }
  if (from._internal_has_column3d_lighting_package()) {
    _this->_impl_.column3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from._impl_.column3d_lighting_package_);
  }
  if (from._internal_has_default3d_lighting_package()) {
    _this->_impl_.default3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from._impl_.default3d_lighting_package_);
  }
  if (from._internal_has_line3d_lighting_package()) {
    _this->_impl_.line3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from._impl_.line3d_lighting_package_);
  }
  if (from._internal_has_pie3d_lighting_package()) {
    _this->_impl_.pie3d_lighting_package_ = new ::TSCHSOS::SpecChart3dLightingPackageArchive(*from._impl_.pie3d_lighting_package_);
  }
  if (from._internal_has_default_background_fill()) {
    _this->_impl_.default_background_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.default_background_fill_);
  }
  if (from._internal_has_default_background_stroke()) {
    _this->_impl_.default_background_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.default_background_stroke_);
  }
  if (from._internal_has_default_border_opacity()) {
    _this->_impl_.default_border_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_border_opacity_);
  }
  if (from._internal_has_default_border_shadow()) {
    _this->_impl_.default_border_shadow_ = new ::TSDSOS::SpecShadowArchive(*from._impl_.default_border_shadow_);
  }
  if (from._internal_has_default_border_stroke()) {
    _this->_impl_.default_border_stroke_ = new ::TSDSOS::SpecStrokeArchive(*from._impl_.default_border_stroke_);
  }
  if (from._internal_has_default_combine_layers()) {
    _this->_impl_.default_combine_layers_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_combine_layers_);
  }
  if (from._internal_has_default_data_set_name_paragraph_style_index()) {
    _this->_impl_.default_data_set_name_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_data_set_name_paragraph_style_index_);
  }
  if (from._internal_has_default_grid_background_fill()) {
    _this->_impl_.default_grid_background_fill_ = new ::TSDSOS::SpecFillArchive(*from._impl_.default_grid_background_fill_);
  }
  if (from._internal_has_default_grid_background_opacity()) {
    _this->_impl_.default_grid_background_opacity_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_grid_background_opacity_);
  }
  if (from._internal_has_default_inter_bar_gap()) {
    _this->_impl_.default_inter_bar_gap_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_inter_bar_gap_);
  }
  if (from._internal_has_default_inter_set_gap()) {
    _this->_impl_.default_inter_set_gap_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_inter_set_gap_);
  }
  if (from._internal_has_default_radar_radius_gridline_curve()) {
    _this->_impl_.default_radar_radius_gridline_curve_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_radar_radius_gridline_curve_);
  }
  if (from._internal_has_default_rounded_corner_outer_end_only()) {
    _this->_impl_.default_rounded_corner_outer_end_only_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_rounded_corner_outer_end_only_);
  }
  if (from._internal_has_default_rounded_corner_radius()) {
    _this->_impl_.default_rounded_corner_radius_ = new ::TSSSOS::SpecDoubleArchive(*from._impl_.default_rounded_corner_radius_);
  }
  if (from._internal_has_default_show_border()) {
    _this->_impl_.default_show_border_ = new ::TSSSOS::SpecBoolArchive(*from._impl_.default_show_border_);
  }
  if (from._internal_has_default_title_color()) {
    _this->_impl_.default_title_color_ = new ::TSSSOS::SpecColorArchive(*from._impl_.default_title_color_);
  }
  if (from._internal_has_default_title_paragraph_style_index()) {
    _this->_impl_.default_title_paragraph_style_index_ = new ::TSSSOS::SpecIntegerArchive(*from._impl_.default_title_paragraph_style_index_);
  }
  ::memcpy(&_impl_.default3d_chart_opacity_undefined_, &from._impl_.default3d_chart_opacity_undefined_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.default_title_paragraph_style_index_undefined_) -
    reinterpret_cast<char*>(&_impl_.default3d_chart_opacity_undefined_)) + sizeof(_impl_.default_title_paragraph_style_index_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSCHSOS.ChartStylePropertyChangeSetArchive)
}

inline void ChartStylePropertyChangeSetArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.default3d_chart_opacity_){nullptr}
    , decltype(_impl_.area3d_lighting_package_){nullptr}
    , decltype(_impl_.bar3d_lighting_package_){nullptr}
    , decltype(_impl_.column3d_lighting_package_){nullptr}
    , decltype(_impl_.default3d_lighting_package_){nullptr}
    , decltype(_impl_.line3d_lighting_package_){nullptr}
    , decltype(_impl_.pie3d_lighting_package_){nullptr}
    , decltype(_impl_.default_background_fill_){nullptr}
    , decltype(_impl_.default_background_stroke_){nullptr}
    , decltype(_impl_.default_border_opacity_){nullptr}
    , decltype(_impl_.default_border_shadow_){nullptr}
    , decltype(_impl_.default_border_stroke_){nullptr}
    , decltype(_impl_.default_combine_layers_){nullptr}
    , decltype(_impl_.default_data_set_name_paragraph_style_index_){nullptr}
    , decltype(_impl_.default_grid_background_fill_){nullptr}
    , decltype(_impl_.default_grid_background_opacity_){nullptr}
    , decltype(_impl_.default_inter_bar_gap_){nullptr}
    , decltype(_impl_.default_inter_set_gap_){nullptr}
    , decltype(_impl_.default_radar_radius_gridline_curve_){nullptr}
    , decltype(_impl_.default_rounded_corner_outer_end_only_){nullptr}
    , decltype(_impl_.default_rounded_corner_radius_){nullptr}
    , decltype(_impl_.default_show_border_){nullptr}
    , decltype(_impl_.default_title_color_){nullptr}
    , decltype(_impl_.default_title_paragraph_style_index_){nullptr}
    , decltype(_impl_.default3d_chart_opacity_undefined_){false}
    , decltype(_impl_.area3d_lighting_package_undefined_){false}
    , decltype(_impl_.bar3d_lighting_package_undefined_){false}
    , decltype(_impl_.column3d_lighting_package_undefined_){false}
    , decltype(_impl_.default3d_lighting_package_undefined_){false}
    , decltype(_impl_.line3d_lighting_package_undefined_){false}
    , decltype(_impl_.pie3d_lighting_package_undefined_){false}
    , decltype(_impl_.default_background_fill_undefined_){false}
    , decltype(_impl_.default_background_stroke_undefined_){false}
    , decltype(_impl_.default_border_opacity_undefined_){false}
    , decltype(_impl_.default_border_shadow_undefined_){false}
    , decltype(_impl_.default_border_stroke_undefined_){false}
    , decltype(_impl_.default_combine_layers_undefined_){false}
    , decltype(_impl_.default_data_set_name_paragraph_style_index_undefined_){false}
    , decltype(_impl_.default_grid_background_fill_undefined_){false}
    , decltype(_impl_.default_grid_background_opacity_undefined_){false}
    , decltype(_impl_.default_inter_bar_gap_undefined_){false}
    , decltype(_impl_.default_inter_set_gap_undefined_){false}
    , decltype(_impl_.default_radar_radius_gridline_curve_undefined_){false}
    , decltype(_impl_.default_rounded_corner_outer_end_only_undefined_){false}
    , decltype(_impl_.default_rounded_corner_radius_undefined_){false}
    , decltype(_impl_.default_show_border_undefined_){false}
    , decltype(_impl_.default_title_color_undefined_){false}
    , decltype(_impl_.default_title_paragraph_style_index_undefined_){false}
  };
}

ChartStylePropertyChangeSetArchive::~ChartStylePropertyChangeSetArchive() {
  // @@protoc_insertion_point(destructor:TSCHSOS.ChartStylePropertyChangeSetArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChartStylePropertyChangeSetArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.default3d_chart_opacity_;
  if (this != internal_default_instance()) delete _impl_.area3d_lighting_package_;
  if (this != internal_default_instance()) delete _impl_.bar3d_lighting_package_;
  if (this != internal_default_instance()) delete _impl_.column3d_lighting_package_;
  if (this != internal_default_instance()) delete _impl_.default3d_lighting_package_;
  if (this != internal_default_instance()) delete _impl_.line3d_lighting_package_;
  if (this != internal_default_instance()) delete _impl_.pie3d_lighting_package_;
  if (this != internal_default_instance()) delete _impl_.default_background_fill_;
  if (this != internal_default_instance()) delete _impl_.default_background_stroke_;
  if (this != internal_default_instance()) delete _impl_.default_border_opacity_;
  if (this != internal_default_instance()) delete _impl_.default_border_shadow_;
  if (this != internal_default_instance()) delete _impl_.default_border_stroke_;
  if (this != internal_default_instance()) delete _impl_.default_combine_layers_;
  if (this != internal_default_instance()) delete _impl_.default_data_set_name_paragraph_style_index_;
  if (this != internal_default_instance()) delete _impl_.default_grid_background_fill_;
  if (this != internal_default_instance()) delete _impl_.default_grid_background_opacity_;
  if (this != internal_default_instance()) delete _impl_.default_inter_bar_gap_;
  if (this != internal_default_instance()) delete _impl_.default_inter_set_gap_;
  if (this != internal_default_instance()) delete _impl_.default_radar_radius_gridline_curve_;
  if (this != internal_default_instance()) delete _impl_.default_rounded_corner_outer_end_only_;
  if (this != internal_default_instance()) delete _impl_.default_rounded_corner_radius_;
  if (this != internal_default_instance()) delete _impl_.default_show_border_;
  if (this != internal_default_instance()) delete _impl_.default_title_color_;
  if (this != internal_default_instance()) delete _impl_.default_title_paragraph_style_index_;
}

void ChartStylePropertyChangeSetArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChartStylePropertyChangeSetArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.default3d_chart_opacity_ != nullptr);
      _impl_.default3d_chart_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.area3d_lighting_package_ != nullptr);
      _impl_.area3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.bar3d_lighting_package_ != nullptr);
      _impl_.bar3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.column3d_lighting_package_ != nullptr);
      _impl_.column3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.default3d_lighting_package_ != nullptr);
      _impl_.default3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.line3d_lighting_package_ != nullptr);
      _impl_.line3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.pie3d_lighting_package_ != nullptr);
      _impl_.pie3d_lighting_package_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.default_background_fill_ != nullptr);
      _impl_.default_background_fill_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.default_background_stroke_ != nullptr);
      _impl_.default_background_stroke_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.default_border_opacity_ != nullptr);
      _impl_.default_border_opacity_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.default_border_shadow_ != nullptr);
      _impl_.default_border_shadow_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.default_border_stroke_ != nullptr);
      _impl_.default_border_stroke_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.default_combine_layers_ != nullptr);
      _impl_.default_combine_layers_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.default_data_set_name_paragraph_style_index_ != nullptr);
      _impl_.default_data_set_name_paragraph_style_index_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.default_grid_background_fill_ != nullptr);
      _impl_.default_grid_background_fill_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.default_grid_background_opacity_ != nullptr);
      _impl_.default_grid_background_opacity_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.default_inter_bar_gap_ != nullptr);
      _impl_.default_inter_bar_gap_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.default_inter_set_gap_ != nullptr);
      _impl_.default_inter_set_gap_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.default_radar_radius_gridline_curve_ != nullptr);
      _impl_.default_radar_radius_gridline_curve_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(_impl_.default_rounded_corner_outer_end_only_ != nullptr);
      _impl_.default_rounded_corner_outer_end_only_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(_impl_.default_rounded_corner_radius_ != nullptr);
      _impl_.default_rounded_corner_radius_->Clear();
    }
    if (cached_has_bits & 0x00200000u) {
      GOOGLE_DCHECK(_impl_.default_show_border_ != nullptr);
      _impl_.default_show_border_->Clear();
    }
    if (cached_has_bits & 0x00400000u) {
      GOOGLE_DCHECK(_impl_.default_title_color_ != nullptr);
      _impl_.default_title_color_->Clear();
    }
    if (cached_has_bits & 0x00800000u) {
      GOOGLE_DCHECK(_impl_.default_title_paragraph_style_index_ != nullptr);
      _impl_.default_title_paragraph_style_index_->Clear();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.default3d_chart_opacity_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_background_fill_undefined_) -
        reinterpret_cast<char*>(&_impl_.default3d_chart_opacity_undefined_)) + sizeof(_impl_.default_background_fill_undefined_));
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.default_background_stroke_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_grid_background_opacity_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_background_stroke_undefined_)) + sizeof(_impl_.default_grid_background_opacity_undefined_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.default_inter_bar_gap_undefined_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.default_title_paragraph_style_index_undefined_) -
        reinterpret_cast<char*>(&_impl_.default_inter_bar_gap_undefined_)) + sizeof(_impl_.default_title_paragraph_style_index_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChartStylePropertyChangeSetArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSSSOS.SpecDoubleArchive default3d_chart_opacity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_chart_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default3d_chart_opacity_undefined = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_default3d_chart_opacity_undefined(&_impl_._has_bits_);
          _impl_.default3d_chart_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive area3d_lighting_package = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_area3d_lighting_package(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool area3d_lighting_package_undefined = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_area3d_lighting_package_undefined(&_impl_._has_bits_);
          _impl_.area3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive bar3d_lighting_package = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_bar3d_lighting_package(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bar3d_lighting_package_undefined = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_bar3d_lighting_package_undefined(&_impl_._has_bits_);
          _impl_.bar3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive column3d_lighting_package = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_column3d_lighting_package(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool column3d_lighting_package_undefined = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_column3d_lighting_package_undefined(&_impl_._has_bits_);
          _impl_.column3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive default3d_lighting_package = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default3d_lighting_package(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default3d_lighting_package_undefined = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default3d_lighting_package_undefined(&_impl_._has_bits_);
          _impl_.default3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive line3d_lighting_package = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_line3d_lighting_package(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool line3d_lighting_package_undefined = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_line3d_lighting_package_undefined(&_impl_._has_bits_);
          _impl_.line3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSCHSOS.SpecChart3dLightingPackageArchive pie3d_lighting_package = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_pie3d_lighting_package(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pie3d_lighting_package_undefined = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_pie3d_lighting_package_undefined(&_impl_._has_bits_);
          _impl_.pie3d_lighting_package_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive default_background_fill = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_background_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_background_fill_undefined = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default_background_fill_undefined(&_impl_._has_bits_);
          _impl_.default_background_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_background_stroke = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_background_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_background_stroke_undefined = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _Internal::set_has_default_background_stroke_undefined(&_impl_._has_bits_);
          _impl_.default_background_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_border_opacity = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_border_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_border_opacity_undefined = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _Internal::set_has_default_border_opacity_undefined(&_impl_._has_bits_);
          _impl_.default_border_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecShadowArchive default_border_shadow = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_border_shadow(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_border_shadow_undefined = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _Internal::set_has_default_border_shadow_undefined(&_impl_._has_bits_);
          _impl_.default_border_shadow_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecStrokeArchive default_border_stroke = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_border_stroke(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_border_stroke_undefined = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _Internal::set_has_default_border_stroke_undefined(&_impl_._has_bits_);
          _impl_.default_border_stroke_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_combine_layers = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_combine_layers(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_combine_layers_undefined = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _Internal::set_has_default_combine_layers_undefined(&_impl_._has_bits_);
          _impl_.default_combine_layers_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_data_set_name_paragraph_style_index = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_data_set_name_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_data_set_name_paragraph_style_index_undefined = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _Internal::set_has_default_data_set_name_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.default_data_set_name_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSDSOS.SpecFillArchive default_grid_background_fill = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_grid_background_fill(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_grid_background_fill_undefined = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_default_grid_background_fill_undefined(&_impl_._has_bits_);
          _impl_.default_grid_background_fill_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_grid_background_opacity = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_grid_background_opacity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_grid_background_opacity_undefined = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_default_grid_background_opacity_undefined(&_impl_._has_bits_);
          _impl_.default_grid_background_opacity_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_inter_bar_gap = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_inter_bar_gap(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_inter_bar_gap_undefined = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_default_inter_bar_gap_undefined(&_impl_._has_bits_);
          _impl_.default_inter_bar_gap_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_inter_set_gap = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_inter_set_gap(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_inter_set_gap_undefined = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_default_inter_set_gap_undefined(&_impl_._has_bits_);
          _impl_.default_inter_set_gap_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_radar_radius_gridline_curve = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_radar_radius_gridline_curve(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_radar_radius_gridline_curve_undefined = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_default_radar_radius_gridline_curve_undefined(&_impl_._has_bits_);
          _impl_.default_radar_radius_gridline_curve_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_rounded_corner_outer_end_only = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_rounded_corner_outer_end_only(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_rounded_corner_outer_end_only_undefined = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_default_rounded_corner_outer_end_only_undefined(&_impl_._has_bits_);
          _impl_.default_rounded_corner_outer_end_only_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecDoubleArchive default_rounded_corner_radius = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_rounded_corner_radius(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_rounded_corner_radius_undefined = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_default_rounded_corner_radius_undefined(&_impl_._has_bits_);
          _impl_.default_rounded_corner_radius_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecBoolArchive default_show_border = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_show_border(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_show_border_undefined = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_default_show_border_undefined(&_impl_._has_bits_);
          _impl_.default_show_border_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecColorArchive default_title_color = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_title_color(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_title_color_undefined = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_default_title_color_undefined(&_impl_._has_bits_);
          _impl_.default_title_color_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_title_paragraph_style_index(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool default_title_paragraph_style_index_undefined = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_default_title_paragraph_style_index_undefined(&_impl_._has_bits_);
          _impl_.default_title_paragraph_style_index_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChartStylePropertyChangeSetArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default3d_chart_opacity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::default3d_chart_opacity(this),
        _Internal::default3d_chart_opacity(this).GetCachedSize(), target, stream);
  }

  // optional bool default3d_chart_opacity_undefined = 2;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_default3d_chart_opacity_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive area3d_lighting_package = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::area3d_lighting_package(this),
        _Internal::area3d_lighting_package(this).GetCachedSize(), target, stream);
  }

  // optional bool area3d_lighting_package_undefined = 4;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_area3d_lighting_package_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive bar3d_lighting_package = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::bar3d_lighting_package(this),
        _Internal::bar3d_lighting_package(this).GetCachedSize(), target, stream);
  }

  // optional bool bar3d_lighting_package_undefined = 6;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_bar3d_lighting_package_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive column3d_lighting_package = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::column3d_lighting_package(this),
        _Internal::column3d_lighting_package(this).GetCachedSize(), target, stream);
  }

  // optional bool column3d_lighting_package_undefined = 8;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_column3d_lighting_package_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive default3d_lighting_package = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::default3d_lighting_package(this),
        _Internal::default3d_lighting_package(this).GetCachedSize(), target, stream);
  }

  // optional bool default3d_lighting_package_undefined = 10;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_default3d_lighting_package_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive line3d_lighting_package = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::line3d_lighting_package(this),
        _Internal::line3d_lighting_package(this).GetCachedSize(), target, stream);
  }

  // optional bool line3d_lighting_package_undefined = 12;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_line3d_lighting_package_undefined(), target);
  }

  // optional .TSCHSOS.SpecChart3dLightingPackageArchive pie3d_lighting_package = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::pie3d_lighting_package(this),
        _Internal::pie3d_lighting_package(this).GetCachedSize(), target, stream);
  }

  // optional bool pie3d_lighting_package_undefined = 14;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_pie3d_lighting_package_undefined(), target);
  }

  // optional .TSDSOS.SpecFillArchive default_background_fill = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::default_background_fill(this),
        _Internal::default_background_fill(this).GetCachedSize(), target, stream);
  }

  // optional bool default_background_fill_undefined = 16;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_default_background_fill_undefined(), target);
  }

  // optional .TSDSOS.SpecStrokeArchive default_background_stroke = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::default_background_stroke(this),
        _Internal::default_background_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_background_stroke_undefined = 18;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_default_background_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_border_opacity = 19;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(19, _Internal::default_border_opacity(this),
        _Internal::default_border_opacity(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_border_opacity_undefined = 20;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(20, this->_internal_default_border_opacity_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecShadowArchive default_border_shadow = 21;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::default_border_shadow(this),
        _Internal::default_border_shadow(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_border_shadow_undefined = 22;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(22, this->_internal_default_border_shadow_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecStrokeArchive default_border_stroke = 23;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(23, _Internal::default_border_stroke(this),
        _Internal::default_border_stroke(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_border_stroke_undefined = 24;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(24, this->_internal_default_border_stroke_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_combine_layers = 25;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, _Internal::default_combine_layers(this),
        _Internal::default_combine_layers(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_combine_layers_undefined = 26;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(26, this->_internal_default_combine_layers_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_data_set_name_paragraph_style_index = 27;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(27, _Internal::default_data_set_name_paragraph_style_index(this),
        _Internal::default_data_set_name_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_data_set_name_paragraph_style_index_undefined = 28;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(28, this->_internal_default_data_set_name_paragraph_style_index_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSDSOS.SpecFillArchive default_grid_background_fill = 29;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(29, _Internal::default_grid_background_fill(this),
        _Internal::default_grid_background_fill(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_grid_background_fill_undefined = 30;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(30, this->_internal_default_grid_background_fill_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_grid_background_opacity = 31;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(31, _Internal::default_grid_background_opacity(this),
        _Internal::default_grid_background_opacity(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_grid_background_opacity_undefined = 32;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(32, this->_internal_default_grid_background_opacity_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_inter_bar_gap = 33;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(33, _Internal::default_inter_bar_gap(this),
        _Internal::default_inter_bar_gap(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_inter_bar_gap_undefined = 34;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(34, this->_internal_default_inter_bar_gap_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_inter_set_gap = 35;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, _Internal::default_inter_set_gap(this),
        _Internal::default_inter_set_gap(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_inter_set_gap_undefined = 36;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(36, this->_internal_default_inter_set_gap_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_radar_radius_gridline_curve = 37;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(37, _Internal::default_radar_radius_gridline_curve(this),
        _Internal::default_radar_radius_gridline_curve(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_radar_radius_gridline_curve_undefined = 38;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(38, this->_internal_default_radar_radius_gridline_curve_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_rounded_corner_outer_end_only = 39;
  if (cached_has_bits & 0x00080000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(39, _Internal::default_rounded_corner_outer_end_only(this),
        _Internal::default_rounded_corner_outer_end_only(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_rounded_corner_outer_end_only_undefined = 40;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(40, this->_internal_default_rounded_corner_outer_end_only_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecDoubleArchive default_rounded_corner_radius = 41;
  if (cached_has_bits & 0x00100000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(41, _Internal::default_rounded_corner_radius(this),
        _Internal::default_rounded_corner_radius(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_rounded_corner_radius_undefined = 42;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(42, this->_internal_default_rounded_corner_radius_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecBoolArchive default_show_border = 43;
  if (cached_has_bits & 0x00200000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(43, _Internal::default_show_border(this),
        _Internal::default_show_border(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_show_border_undefined = 44;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(44, this->_internal_default_show_border_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecColorArchive default_title_color = 45;
  if (cached_has_bits & 0x00400000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(45, _Internal::default_title_color(this),
        _Internal::default_title_color(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_title_color_undefined = 46;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(46, this->_internal_default_title_color_undefined(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 47;
  if (cached_has_bits & 0x00800000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(47, _Internal::default_title_paragraph_style_index(this),
        _Internal::default_title_paragraph_style_index(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool default_title_paragraph_style_index_undefined = 48;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(48, this->_internal_default_title_paragraph_style_index_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSCHSOS.ChartStylePropertyChangeSetArchive)
  return target;
}

size_t ChartStylePropertyChangeSetArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TSSSOS.SpecDoubleArchive default3d_chart_opacity = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default3d_chart_opacity_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive area3d_lighting_package = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.area3d_lighting_package_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive bar3d_lighting_package = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bar3d_lighting_package_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive column3d_lighting_package = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.column3d_lighting_package_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive default3d_lighting_package = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default3d_lighting_package_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive line3d_lighting_package = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.line3d_lighting_package_);
    }

    // optional .TSCHSOS.SpecChart3dLightingPackageArchive pie3d_lighting_package = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pie3d_lighting_package_);
    }

    // optional .TSDSOS.SpecFillArchive default_background_fill = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_background_fill_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .TSDSOS.SpecStrokeArchive default_background_stroke = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_background_stroke_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_border_opacity = 19;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_border_opacity_);
    }

    // optional .TSDSOS.SpecShadowArchive default_border_shadow = 21;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_border_shadow_);
    }

    // optional .TSDSOS.SpecStrokeArchive default_border_stroke = 23;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_border_stroke_);
    }

    // optional .TSSSOS.SpecBoolArchive default_combine_layers = 25;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_combine_layers_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_data_set_name_paragraph_style_index = 27;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_data_set_name_paragraph_style_index_);
    }

    // optional .TSDSOS.SpecFillArchive default_grid_background_fill = 29;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_grid_background_fill_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_grid_background_opacity = 31;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_grid_background_opacity_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .TSSSOS.SpecDoubleArchive default_inter_bar_gap = 33;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_inter_bar_gap_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_inter_set_gap = 35;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_inter_set_gap_);
    }

    // optional .TSSSOS.SpecBoolArchive default_radar_radius_gridline_curve = 37;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_radar_radius_gridline_curve_);
    }

    // optional .TSSSOS.SpecBoolArchive default_rounded_corner_outer_end_only = 39;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_rounded_corner_outer_end_only_);
    }

    // optional .TSSSOS.SpecDoubleArchive default_rounded_corner_radius = 41;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_rounded_corner_radius_);
    }

    // optional .TSSSOS.SpecBoolArchive default_show_border = 43;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_show_border_);
    }

    // optional .TSSSOS.SpecColorArchive default_title_color = 45;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_title_color_);
    }

    // optional .TSSSOS.SpecIntegerArchive default_title_paragraph_style_index = 47;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.default_title_paragraph_style_index_);
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool default3d_chart_opacity_undefined = 2;
    if (cached_has_bits & 0x01000000u) {
      total_size += 1 + 1;
    }

    // optional bool area3d_lighting_package_undefined = 4;
    if (cached_has_bits & 0x02000000u) {
      total_size += 1 + 1;
    }

    // optional bool bar3d_lighting_package_undefined = 6;
    if (cached_has_bits & 0x04000000u) {
      total_size += 1 + 1;
    }

    // optional bool column3d_lighting_package_undefined = 8;
    if (cached_has_bits & 0x08000000u) {
      total_size += 1 + 1;
    }

    // optional bool default3d_lighting_package_undefined = 10;
    if (cached_has_bits & 0x10000000u) {
      total_size += 1 + 1;
    }

    // optional bool line3d_lighting_package_undefined = 12;
    if (cached_has_bits & 0x20000000u) {
      total_size += 1 + 1;
    }

    // optional bool pie3d_lighting_package_undefined = 14;
    if (cached_has_bits & 0x40000000u) {
      total_size += 1 + 1;
    }

    // optional bool default_background_fill_undefined = 16;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + 1;
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool default_background_stroke_undefined = 18;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + 1;
    }

    // optional bool default_border_opacity_undefined = 20;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + 1;
    }

    // optional bool default_border_shadow_undefined = 22;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + 1;
    }

    // optional bool default_border_stroke_undefined = 24;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + 1;
    }

    // optional bool default_combine_layers_undefined = 26;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + 1;
    }

    // optional bool default_data_set_name_paragraph_style_index_undefined = 28;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + 1;
    }

    // optional bool default_grid_background_fill_undefined = 30;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + 1;
    }

    // optional bool default_grid_background_opacity_undefined = 32;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool default_inter_bar_gap_undefined = 34;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional bool default_inter_set_gap_undefined = 36;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + 1;
    }

    // optional bool default_radar_radius_gridline_curve_undefined = 38;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + 1;
    }

    // optional bool default_rounded_corner_outer_end_only_undefined = 40;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + 1;
    }

    // optional bool default_rounded_corner_radius_undefined = 42;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional bool default_show_border_undefined = 44;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 1;
    }

    // optional bool default_title_color_undefined = 46;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional bool default_title_paragraph_style_index_undefined = 48;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChartStylePropertyChangeSetArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChartStylePropertyChangeSetArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChartStylePropertyChangeSetArchive::GetClassData() const { return &_class_data_; }


void ChartStylePropertyChangeSetArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChartStylePropertyChangeSetArchive*>(&to_msg);
  auto& from = static_cast<const ChartStylePropertyChangeSetArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_default3d_chart_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default3d_chart_opacity());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_area3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(
          from._internal_area3d_lighting_package());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_bar3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(
          from._internal_bar3d_lighting_package());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_column3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(
          from._internal_column3d_lighting_package());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_default3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(
          from._internal_default3d_lighting_package());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_line3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(
          from._internal_line3d_lighting_package());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_pie3d_lighting_package()->::TSCHSOS::SpecChart3dLightingPackageArchive::MergeFrom(
          from._internal_pie3d_lighting_package());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_default_background_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_default_background_fill());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_default_background_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_default_background_stroke());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_default_border_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_border_opacity());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_default_border_shadow()->::TSDSOS::SpecShadowArchive::MergeFrom(
          from._internal_default_border_shadow());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_default_border_stroke()->::TSDSOS::SpecStrokeArchive::MergeFrom(
          from._internal_default_border_stroke());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_default_combine_layers()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_combine_layers());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_default_data_set_name_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_data_set_name_paragraph_style_index());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_default_grid_background_fill()->::TSDSOS::SpecFillArchive::MergeFrom(
          from._internal_default_grid_background_fill());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_default_grid_background_opacity()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_grid_background_opacity());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_default_inter_bar_gap()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_inter_bar_gap());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_default_inter_set_gap()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_inter_set_gap());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_default_radar_radius_gridline_curve()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_radar_radius_gridline_curve());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_mutable_default_rounded_corner_outer_end_only()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_rounded_corner_outer_end_only());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_mutable_default_rounded_corner_radius()->::TSSSOS::SpecDoubleArchive::MergeFrom(
          from._internal_default_rounded_corner_radius());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_mutable_default_show_border()->::TSSSOS::SpecBoolArchive::MergeFrom(
          from._internal_default_show_border());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_mutable_default_title_color()->::TSSSOS::SpecColorArchive::MergeFrom(
          from._internal_default_title_color());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_mutable_default_title_paragraph_style_index()->::TSSSOS::SpecIntegerArchive::MergeFrom(
          from._internal_default_title_paragraph_style_index());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.default3d_chart_opacity_undefined_ = from._impl_.default3d_chart_opacity_undefined_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.area3d_lighting_package_undefined_ = from._impl_.area3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.bar3d_lighting_package_undefined_ = from._impl_.bar3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.column3d_lighting_package_undefined_ = from._impl_.column3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.default3d_lighting_package_undefined_ = from._impl_.default3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.line3d_lighting_package_undefined_ = from._impl_.line3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.pie3d_lighting_package_undefined_ = from._impl_.pie3d_lighting_package_undefined_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.default_background_fill_undefined_ = from._impl_.default_background_fill_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.default_background_stroke_undefined_ = from._impl_.default_background_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.default_border_opacity_undefined_ = from._impl_.default_border_opacity_undefined_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.default_border_shadow_undefined_ = from._impl_.default_border_shadow_undefined_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.default_border_stroke_undefined_ = from._impl_.default_border_stroke_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.default_combine_layers_undefined_ = from._impl_.default_combine_layers_undefined_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.default_data_set_name_paragraph_style_index_undefined_ = from._impl_.default_data_set_name_paragraph_style_index_undefined_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.default_grid_background_fill_undefined_ = from._impl_.default_grid_background_fill_undefined_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.default_grid_background_opacity_undefined_ = from._impl_.default_grid_background_opacity_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.default_inter_bar_gap_undefined_ = from._impl_.default_inter_bar_gap_undefined_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.default_inter_set_gap_undefined_ = from._impl_.default_inter_set_gap_undefined_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.default_radar_radius_gridline_curve_undefined_ = from._impl_.default_radar_radius_gridline_curve_undefined_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.default_rounded_corner_outer_end_only_undefined_ = from._impl_.default_rounded_corner_outer_end_only_undefined_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.default_rounded_corner_radius_undefined_ = from._impl_.default_rounded_corner_radius_undefined_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.default_show_border_undefined_ = from._impl_.default_show_border_undefined_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.default_title_color_undefined_ = from._impl_.default_title_color_undefined_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.default_title_paragraph_style_index_undefined_ = from._impl_.default_title_paragraph_style_index_undefined_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChartStylePropertyChangeSetArchive::CopyFrom(const ChartStylePropertyChangeSetArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSCHSOS.ChartStylePropertyChangeSetArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChartStylePropertyChangeSetArchive::IsInitialized() const {
  if (_internal_has_default3d_chart_opacity()) {
    if (!_impl_.default3d_chart_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_area3d_lighting_package()) {
    if (!_impl_.area3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_bar3d_lighting_package()) {
    if (!_impl_.bar3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_column3d_lighting_package()) {
    if (!_impl_.column3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_default3d_lighting_package()) {
    if (!_impl_.default3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_line3d_lighting_package()) {
    if (!_impl_.line3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_pie3d_lighting_package()) {
    if (!_impl_.pie3d_lighting_package_->IsInitialized()) return false;
  }
  if (_internal_has_default_background_fill()) {
    if (!_impl_.default_background_fill_->IsInitialized()) return false;
  }
  if (_internal_has_default_background_stroke()) {
    if (!_impl_.default_background_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_border_opacity()) {
    if (!_impl_.default_border_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_default_border_shadow()) {
    if (!_impl_.default_border_shadow_->IsInitialized()) return false;
  }
  if (_internal_has_default_border_stroke()) {
    if (!_impl_.default_border_stroke_->IsInitialized()) return false;
  }
  if (_internal_has_default_combine_layers()) {
    if (!_impl_.default_combine_layers_->IsInitialized()) return false;
  }
  if (_internal_has_default_data_set_name_paragraph_style_index()) {
    if (!_impl_.default_data_set_name_paragraph_style_index_->IsInitialized()) return false;
  }
  if (_internal_has_default_grid_background_fill()) {
    if (!_impl_.default_grid_background_fill_->IsInitialized()) return false;
  }
  if (_internal_has_default_grid_background_opacity()) {
    if (!_impl_.default_grid_background_opacity_->IsInitialized()) return false;
  }
  if (_internal_has_default_inter_bar_gap()) {
    if (!_impl_.default_inter_bar_gap_->IsInitialized()) return false;
  }
  if (_internal_has_default_inter_set_gap()) {
    if (!_impl_.default_inter_set_gap_->IsInitialized()) return false;
  }
  if (_internal_has_default_radar_radius_gridline_curve()) {
    if (!_impl_.default_radar_radius_gridline_curve_->IsInitialized()) return false;
  }
  if (_internal_has_default_rounded_corner_outer_end_only()) {
    if (!_impl_.default_rounded_corner_outer_end_only_->IsInitialized()) return false;
  }
  if (_internal_has_default_rounded_corner_radius()) {
    if (!_impl_.default_rounded_corner_radius_->IsInitialized()) return false;
  }
  if (_internal_has_default_show_border()) {
    if (!_impl_.default_show_border_->IsInitialized()) return false;
  }
  if (_internal_has_default_title_color()) {
    if (!_impl_.default_title_color_->IsInitialized()) return false;
  }
  if (_internal_has_default_title_paragraph_style_index()) {
    if (!_impl_.default_title_paragraph_style_index_->IsInitialized()) return false;
  }
  return true;
}

void ChartStylePropertyChangeSetArchive::InternalSwap(ChartStylePropertyChangeSetArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChartStylePropertyChangeSetArchive, _impl_.default_title_paragraph_style_index_undefined_)
      + sizeof(ChartStylePropertyChangeSetArchive::_impl_.default_title_paragraph_style_index_undefined_)
      - PROTOBUF_FIELD_OFFSET(ChartStylePropertyChangeSetArchive, _impl_.default3d_chart_opacity_)>(
          reinterpret_cast<char*>(&_impl_.default3d_chart_opacity_),
          reinterpret_cast<char*>(&other->_impl_.default3d_chart_opacity_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChartStylePropertyChangeSetArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSCHArchives_2esos_2eproto_getter, &descriptor_table_TSCHArchives_2esos_2eproto_once,
      file_level_metadata_TSCHArchives_2esos_2eproto[21]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace TSCHSOS
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetChart3dLightingPackageArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetChart3dLightingPackageArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetChart3dLightingPackageArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetChart3dVectorArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetChart3dVectorArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetChart3dVectorArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetChartErrorBarCustomDataArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetChartsOptionalDoubleArchiveArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetFormatObjectArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetFormatObjectArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetFormatObjectArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecSetNumberFormatArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecSetNumberFormatArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecSetNumberFormatArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecChart3dLightingPackageArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecChart3dLightingPackageArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecChart3dLightingPackageArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecChart3dVectorArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecChart3dVectorArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecChart3dVectorArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecChartErrorBarCustomDataArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecChartErrorBarCustomDataArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecChartErrorBarCustomDataArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecChartsOptionalDoubleArchiveArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecFormatObjectArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecFormatObjectArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecFormatObjectArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::SpecNumberFormatArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::SpecNumberFormatArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::SpecNumberFormatArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartAxisNonStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartAxisStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::ChartAxisStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartAxisStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartLegendNonStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::ChartLegendNonStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartLegendNonStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartLegendStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::ChartLegendStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartLegendStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartNonStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::ChartNonStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartNonStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartReferenceLineNonStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartReferenceLineStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartSeriesNonStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartSeriesStylePropertyChangeSetArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSCHSOS::ChartStylePropertyChangeSetArchive*
Arena::CreateMaybeMessage< ::TSCHSOS::ChartStylePropertyChangeSetArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSCHSOS::ChartStylePropertyChangeSetArchive >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
