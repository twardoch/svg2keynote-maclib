// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSAArchives.sos.proto

#include "TSAArchives.sos.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace TSASOS {
PROTOBUF_CONSTEXPR InducedVerifyActivityStreamWithServerCommandArchive::InducedVerifyActivityStreamWithServerCommandArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.server_activities_)*/{}
  , /*decltype(_impl_.author_identifiers_to_verify_)*/{}
  , /*decltype(_impl_.super_)*/nullptr
  , /*decltype(_impl_.timestamp_of_last_activity_when_last_activity_coalescing_)*/0
  , /*decltype(_impl_.next_activity_to_transform_index_)*/0
  , /*decltype(_impl_.server_activities_undefined_)*/false
  , /*decltype(_impl_.author_identifiers_to_verify_undefined_)*/false} {}
struct InducedVerifyActivityStreamWithServerCommandArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InducedVerifyActivityStreamWithServerCommandArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InducedVerifyActivityStreamWithServerCommandArchiveDefaultTypeInternal() {}
  union {
    InducedVerifyActivityStreamWithServerCommandArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InducedVerifyActivityStreamWithServerCommandArchiveDefaultTypeInternal _InducedVerifyActivityStreamWithServerCommandArchive_default_instance_;
PROTOBUF_CONSTEXPR DrawableZOrderListArchive::DrawableZOrderListArchive(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.drawable_id_list_)*/{}
  , /*decltype(_impl_.container_id_)*/nullptr
  , /*decltype(_impl_.drawable_id_list_undefined_)*/false} {}
struct DrawableZOrderListArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DrawableZOrderListArchiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DrawableZOrderListArchiveDefaultTypeInternal() {}
  union {
    DrawableZOrderListArchive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DrawableZOrderListArchiveDefaultTypeInternal _DrawableZOrderListArchive_default_instance_;
}  // namespace TSASOS
static ::_pb::Metadata file_level_metadata_TSAArchives_2esos_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_TSAArchives_2esos_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_TSAArchives_2esos_2eproto = nullptr;

const uint32_t TableStruct_TSAArchives_2esos_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive, _impl_.super_),
  PROTOBUF_FIELD_OFFSET(::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive, _impl_.server_activities_),
  PROTOBUF_FIELD_OFFSET(::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive, _impl_.server_activities_undefined_),
  PROTOBUF_FIELD_OFFSET(::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive, _impl_.timestamp_of_last_activity_when_last_activity_coalescing_),
  PROTOBUF_FIELD_OFFSET(::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive, _impl_.next_activity_to_transform_index_),
  PROTOBUF_FIELD_OFFSET(::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive, _impl_.author_identifiers_to_verify_),
  PROTOBUF_FIELD_OFFSET(::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive, _impl_.author_identifiers_to_verify_undefined_),
  0,
  ~0u,
  3,
  1,
  2,
  ~0u,
  4,
  PROTOBUF_FIELD_OFFSET(::TSASOS::DrawableZOrderListArchive, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::TSASOS::DrawableZOrderListArchive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TSASOS::DrawableZOrderListArchive, _impl_.container_id_),
  PROTOBUF_FIELD_OFFSET(::TSASOS::DrawableZOrderListArchive, _impl_.drawable_id_list_),
  PROTOBUF_FIELD_OFFSET(::TSASOS::DrawableZOrderListArchive, _impl_.drawable_id_list_undefined_),
  0,
  ~0u,
  1,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, -1, sizeof(::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive)},
  { 20, 29, -1, sizeof(::TSASOS::DrawableZOrderListArchive)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::TSASOS::_InducedVerifyActivityStreamWithServerCommandArchive_default_instance_._instance,
  &::TSASOS::_DrawableZOrderListArchive_default_instance_._instance,
};

const char descriptor_table_protodef_TSAArchives_2esos_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025TSAArchives.sos.proto\022\006TSASOS\032\021TSKArch"
  "ives.proto\032\021TSPMessages.proto\"\366\002\n3Induce"
  "dVerifyActivityStreamWithServerCommandAr"
  "chive\022\"\n\005super\030\001 \002(\0132\023.TSK.CommandArchiv"
  "e\022)\n\021server_activities\030\002 \003(\0132\016.TSP.Refer"
  "ence\022#\n\033server_activities_undefined\030\003 \001("
  "\010\022@\n8timestamp_of_last_activity_when_las"
  "t_activity_coalescing\030\004 \002(\001\022(\n next_acti"
  "vity_to_transform_index\030\005 \002(\005\022/\n\034author_"
  "identifiers_to_verify\030\006 \003(\0132\t.TSP.UUID\022."
  "\n&author_identifiers_to_verify_undefined"
  "\030\007 \001(\010\"\205\001\n\031DrawableZOrderListArchive\022\037\n\014"
  "container_id\030\001 \001(\0132\t.TSP.UUID\022#\n\020drawabl"
  "e_id_list\030\002 \003(\0132\t.TSP.UUID\022\"\n\032drawable_i"
  "d_list_undefined\030\003 \001(\010"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_TSAArchives_2esos_2eproto_deps[2] = {
  &::descriptor_table_TSKArchives_2eproto,
  &::descriptor_table_TSPMessages_2eproto,
};
static ::_pbi::once_flag descriptor_table_TSAArchives_2esos_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_TSAArchives_2esos_2eproto = {
    false, false, 582, descriptor_table_protodef_TSAArchives_2esos_2eproto,
    "TSAArchives.sos.proto",
    &descriptor_table_TSAArchives_2esos_2eproto_once, descriptor_table_TSAArchives_2esos_2eproto_deps, 2, 2,
    schemas, file_default_instances, TableStruct_TSAArchives_2esos_2eproto::offsets,
    file_level_metadata_TSAArchives_2esos_2eproto, file_level_enum_descriptors_TSAArchives_2esos_2eproto,
    file_level_service_descriptors_TSAArchives_2esos_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_TSAArchives_2esos_2eproto_getter() {
  return &descriptor_table_TSAArchives_2esos_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_TSAArchives_2esos_2eproto(&descriptor_table_TSAArchives_2esos_2eproto);
namespace TSASOS {

// ===================================================================

class InducedVerifyActivityStreamWithServerCommandArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<InducedVerifyActivityStreamWithServerCommandArchive>()._impl_._has_bits_);
  static const ::TSK::CommandArchive& super(const InducedVerifyActivityStreamWithServerCommandArchive* msg);
  static void set_has_super(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_server_activities_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_timestamp_of_last_activity_when_last_activity_coalescing(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_next_activity_to_transform_index(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_author_identifiers_to_verify_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

const ::TSK::CommandArchive&
InducedVerifyActivityStreamWithServerCommandArchive::_Internal::super(const InducedVerifyActivityStreamWithServerCommandArchive* msg) {
  return *msg->_impl_.super_;
}
void InducedVerifyActivityStreamWithServerCommandArchive::clear_super() {
  if (_impl_.super_ != nullptr) _impl_.super_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void InducedVerifyActivityStreamWithServerCommandArchive::clear_server_activities() {
  _impl_.server_activities_.Clear();
}
void InducedVerifyActivityStreamWithServerCommandArchive::clear_author_identifiers_to_verify() {
  _impl_.author_identifiers_to_verify_.Clear();
}
InducedVerifyActivityStreamWithServerCommandArchive::InducedVerifyActivityStreamWithServerCommandArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSASOS.InducedVerifyActivityStreamWithServerCommandArchive)
}
InducedVerifyActivityStreamWithServerCommandArchive::InducedVerifyActivityStreamWithServerCommandArchive(const InducedVerifyActivityStreamWithServerCommandArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InducedVerifyActivityStreamWithServerCommandArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.server_activities_){from._impl_.server_activities_}
    , decltype(_impl_.author_identifiers_to_verify_){from._impl_.author_identifiers_to_verify_}
    , decltype(_impl_.super_){nullptr}
    , decltype(_impl_.timestamp_of_last_activity_when_last_activity_coalescing_){}
    , decltype(_impl_.next_activity_to_transform_index_){}
    , decltype(_impl_.server_activities_undefined_){}
    , decltype(_impl_.author_identifiers_to_verify_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_super()) {
    _this->_impl_.super_ = new ::TSK::CommandArchive(*from._impl_.super_);
  }
  ::memcpy(&_impl_.timestamp_of_last_activity_when_last_activity_coalescing_, &from._impl_.timestamp_of_last_activity_when_last_activity_coalescing_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.author_identifiers_to_verify_undefined_) -
    reinterpret_cast<char*>(&_impl_.timestamp_of_last_activity_when_last_activity_coalescing_)) + sizeof(_impl_.author_identifiers_to_verify_undefined_));
  // @@protoc_insertion_point(copy_constructor:TSASOS.InducedVerifyActivityStreamWithServerCommandArchive)
}

inline void InducedVerifyActivityStreamWithServerCommandArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.server_activities_){arena}
    , decltype(_impl_.author_identifiers_to_verify_){arena}
    , decltype(_impl_.super_){nullptr}
    , decltype(_impl_.timestamp_of_last_activity_when_last_activity_coalescing_){0}
    , decltype(_impl_.next_activity_to_transform_index_){0}
    , decltype(_impl_.server_activities_undefined_){false}
    , decltype(_impl_.author_identifiers_to_verify_undefined_){false}
  };
}

InducedVerifyActivityStreamWithServerCommandArchive::~InducedVerifyActivityStreamWithServerCommandArchive() {
  // @@protoc_insertion_point(destructor:TSASOS.InducedVerifyActivityStreamWithServerCommandArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InducedVerifyActivityStreamWithServerCommandArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.server_activities_.~RepeatedPtrField();
  _impl_.author_identifiers_to_verify_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.super_;
}

void InducedVerifyActivityStreamWithServerCommandArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InducedVerifyActivityStreamWithServerCommandArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSASOS.InducedVerifyActivityStreamWithServerCommandArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.server_activities_.Clear();
  _impl_.author_identifiers_to_verify_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.super_ != nullptr);
    _impl_.super_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.timestamp_of_last_activity_when_last_activity_coalescing_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.author_identifiers_to_verify_undefined_) -
        reinterpret_cast<char*>(&_impl_.timestamp_of_last_activity_when_last_activity_coalescing_)) + sizeof(_impl_.author_identifiers_to_verify_undefined_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InducedVerifyActivityStreamWithServerCommandArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TSK.CommandArchive super = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_super(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TSP.Reference server_activities = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_server_activities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool server_activities_undefined = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_server_activities_undefined(&has_bits);
          _impl_.server_activities_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required double timestamp_of_last_activity_when_last_activity_coalescing = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          _Internal::set_has_timestamp_of_last_activity_when_last_activity_coalescing(&has_bits);
          _impl_.timestamp_of_last_activity_when_last_activity_coalescing_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // required int32 next_activity_to_transform_index = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_next_activity_to_transform_index(&has_bits);
          _impl_.next_activity_to_transform_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TSP.UUID author_identifiers_to_verify = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_author_identifiers_to_verify(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool author_identifiers_to_verify_undefined = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_author_identifiers_to_verify_undefined(&has_bits);
          _impl_.author_identifiers_to_verify_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InducedVerifyActivityStreamWithServerCommandArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSASOS.InducedVerifyActivityStreamWithServerCommandArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TSK.CommandArchive super = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::super(this),
        _Internal::super(this).GetCachedSize(), target, stream);
  }

  // repeated .TSP.Reference server_activities = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_server_activities_size()); i < n; i++) {
    const auto& repfield = this->_internal_server_activities(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bool server_activities_undefined = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_server_activities_undefined(), target);
  }

  // required double timestamp_of_last_activity_when_last_activity_coalescing = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_timestamp_of_last_activity_when_last_activity_coalescing(), target);
  }

  // required int32 next_activity_to_transform_index = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_next_activity_to_transform_index(), target);
  }

  // repeated .TSP.UUID author_identifiers_to_verify = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_author_identifiers_to_verify_size()); i < n; i++) {
    const auto& repfield = this->_internal_author_identifiers_to_verify(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bool author_identifiers_to_verify_undefined = 7;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_author_identifiers_to_verify_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSASOS.InducedVerifyActivityStreamWithServerCommandArchive)
  return target;
}

size_t InducedVerifyActivityStreamWithServerCommandArchive::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:TSASOS.InducedVerifyActivityStreamWithServerCommandArchive)
  size_t total_size = 0;

  if (_internal_has_super()) {
    // required .TSK.CommandArchive super = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.super_);
  }

  if (_internal_has_timestamp_of_last_activity_when_last_activity_coalescing()) {
    // required double timestamp_of_last_activity_when_last_activity_coalescing = 4;
    total_size += 1 + 8;
  }

  if (_internal_has_next_activity_to_transform_index()) {
    // required int32 next_activity_to_transform_index = 5;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_next_activity_to_transform_index());
  }

  return total_size;
}
size_t InducedVerifyActivityStreamWithServerCommandArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSASOS.InducedVerifyActivityStreamWithServerCommandArchive)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .TSK.CommandArchive super = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.super_);

    // required double timestamp_of_last_activity_when_last_activity_coalescing = 4;
    total_size += 1 + 8;

    // required int32 next_activity_to_transform_index = 5;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_next_activity_to_transform_index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TSP.Reference server_activities = 2;
  total_size += 1UL * this->_internal_server_activities_size();
  for (const auto& msg : this->_impl_.server_activities_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .TSP.UUID author_identifiers_to_verify = 6;
  total_size += 1UL * this->_internal_author_identifiers_to_verify_size();
  for (const auto& msg : this->_impl_.author_identifiers_to_verify_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000018u) {
    // optional bool server_activities_undefined = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool author_identifiers_to_verify_undefined = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InducedVerifyActivityStreamWithServerCommandArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InducedVerifyActivityStreamWithServerCommandArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InducedVerifyActivityStreamWithServerCommandArchive::GetClassData() const { return &_class_data_; }


void InducedVerifyActivityStreamWithServerCommandArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InducedVerifyActivityStreamWithServerCommandArchive*>(&to_msg);
  auto& from = static_cast<const InducedVerifyActivityStreamWithServerCommandArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSASOS.InducedVerifyActivityStreamWithServerCommandArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.server_activities_.MergeFrom(from._impl_.server_activities_);
  _this->_impl_.author_identifiers_to_verify_.MergeFrom(from._impl_.author_identifiers_to_verify_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_super()->::TSK::CommandArchive::MergeFrom(
          from._internal_super());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.timestamp_of_last_activity_when_last_activity_coalescing_ = from._impl_.timestamp_of_last_activity_when_last_activity_coalescing_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.next_activity_to_transform_index_ = from._impl_.next_activity_to_transform_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.server_activities_undefined_ = from._impl_.server_activities_undefined_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.author_identifiers_to_verify_undefined_ = from._impl_.author_identifiers_to_verify_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InducedVerifyActivityStreamWithServerCommandArchive::CopyFrom(const InducedVerifyActivityStreamWithServerCommandArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSASOS.InducedVerifyActivityStreamWithServerCommandArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InducedVerifyActivityStreamWithServerCommandArchive::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.server_activities_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.author_identifiers_to_verify_))
    return false;
  if (_internal_has_super()) {
    if (!_impl_.super_->IsInitialized()) return false;
  }
  return true;
}

void InducedVerifyActivityStreamWithServerCommandArchive::InternalSwap(InducedVerifyActivityStreamWithServerCommandArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.server_activities_.InternalSwap(&other->_impl_.server_activities_);
  _impl_.author_identifiers_to_verify_.InternalSwap(&other->_impl_.author_identifiers_to_verify_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InducedVerifyActivityStreamWithServerCommandArchive, _impl_.author_identifiers_to_verify_undefined_)
      + sizeof(InducedVerifyActivityStreamWithServerCommandArchive::_impl_.author_identifiers_to_verify_undefined_)
      - PROTOBUF_FIELD_OFFSET(InducedVerifyActivityStreamWithServerCommandArchive, _impl_.super_)>(
          reinterpret_cast<char*>(&_impl_.super_),
          reinterpret_cast<char*>(&other->_impl_.super_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InducedVerifyActivityStreamWithServerCommandArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSAArchives_2esos_2eproto_getter, &descriptor_table_TSAArchives_2esos_2eproto_once,
      file_level_metadata_TSAArchives_2esos_2eproto[0]);
}

// ===================================================================

class DrawableZOrderListArchive::_Internal {
 public:
  using HasBits = decltype(std::declval<DrawableZOrderListArchive>()._impl_._has_bits_);
  static const ::TSP::UUID& container_id(const DrawableZOrderListArchive* msg);
  static void set_has_container_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_drawable_id_list_undefined(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TSP::UUID&
DrawableZOrderListArchive::_Internal::container_id(const DrawableZOrderListArchive* msg) {
  return *msg->_impl_.container_id_;
}
void DrawableZOrderListArchive::clear_container_id() {
  if (_impl_.container_id_ != nullptr) _impl_.container_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DrawableZOrderListArchive::clear_drawable_id_list() {
  _impl_.drawable_id_list_.Clear();
}
DrawableZOrderListArchive::DrawableZOrderListArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TSASOS.DrawableZOrderListArchive)
}
DrawableZOrderListArchive::DrawableZOrderListArchive(const DrawableZOrderListArchive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DrawableZOrderListArchive* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.drawable_id_list_){from._impl_.drawable_id_list_}
    , decltype(_impl_.container_id_){nullptr}
    , decltype(_impl_.drawable_id_list_undefined_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_container_id()) {
    _this->_impl_.container_id_ = new ::TSP::UUID(*from._impl_.container_id_);
  }
  _this->_impl_.drawable_id_list_undefined_ = from._impl_.drawable_id_list_undefined_;
  // @@protoc_insertion_point(copy_constructor:TSASOS.DrawableZOrderListArchive)
}

inline void DrawableZOrderListArchive::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.drawable_id_list_){arena}
    , decltype(_impl_.container_id_){nullptr}
    , decltype(_impl_.drawable_id_list_undefined_){false}
  };
}

DrawableZOrderListArchive::~DrawableZOrderListArchive() {
  // @@protoc_insertion_point(destructor:TSASOS.DrawableZOrderListArchive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DrawableZOrderListArchive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.drawable_id_list_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.container_id_;
}

void DrawableZOrderListArchive::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DrawableZOrderListArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:TSASOS.DrawableZOrderListArchive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.drawable_id_list_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.container_id_ != nullptr);
    _impl_.container_id_->Clear();
  }
  _impl_.drawable_id_list_undefined_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DrawableZOrderListArchive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TSP.UUID container_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_container_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TSP.UUID drawable_id_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_drawable_id_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool drawable_id_list_undefined = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_drawable_id_list_undefined(&has_bits);
          _impl_.drawable_id_list_undefined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DrawableZOrderListArchive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TSASOS.DrawableZOrderListArchive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TSP.UUID container_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::container_id(this),
        _Internal::container_id(this).GetCachedSize(), target, stream);
  }

  // repeated .TSP.UUID drawable_id_list = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_drawable_id_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_drawable_id_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bool drawable_id_list_undefined = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_drawable_id_list_undefined(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TSASOS.DrawableZOrderListArchive)
  return target;
}

size_t DrawableZOrderListArchive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TSASOS.DrawableZOrderListArchive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TSP.UUID drawable_id_list = 2;
  total_size += 1UL * this->_internal_drawable_id_list_size();
  for (const auto& msg : this->_impl_.drawable_id_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TSP.UUID container_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.container_id_);
    }

    // optional bool drawable_id_list_undefined = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DrawableZOrderListArchive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DrawableZOrderListArchive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DrawableZOrderListArchive::GetClassData() const { return &_class_data_; }


void DrawableZOrderListArchive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DrawableZOrderListArchive*>(&to_msg);
  auto& from = static_cast<const DrawableZOrderListArchive&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TSASOS.DrawableZOrderListArchive)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.drawable_id_list_.MergeFrom(from._impl_.drawable_id_list_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_container_id()->::TSP::UUID::MergeFrom(
          from._internal_container_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.drawable_id_list_undefined_ = from._impl_.drawable_id_list_undefined_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DrawableZOrderListArchive::CopyFrom(const DrawableZOrderListArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TSASOS.DrawableZOrderListArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrawableZOrderListArchive::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.drawable_id_list_))
    return false;
  if (_internal_has_container_id()) {
    if (!_impl_.container_id_->IsInitialized()) return false;
  }
  return true;
}

void DrawableZOrderListArchive::InternalSwap(DrawableZOrderListArchive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.drawable_id_list_.InternalSwap(&other->_impl_.drawable_id_list_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DrawableZOrderListArchive, _impl_.drawable_id_list_undefined_)
      + sizeof(DrawableZOrderListArchive::_impl_.drawable_id_list_undefined_)
      - PROTOBUF_FIELD_OFFSET(DrawableZOrderListArchive, _impl_.container_id_)>(
          reinterpret_cast<char*>(&_impl_.container_id_),
          reinterpret_cast<char*>(&other->_impl_.container_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DrawableZOrderListArchive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TSAArchives_2esos_2eproto_getter, &descriptor_table_TSAArchives_2esos_2eproto_once,
      file_level_metadata_TSAArchives_2esos_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace TSASOS
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive*
Arena::CreateMaybeMessage< ::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSASOS::InducedVerifyActivityStreamWithServerCommandArchive >(arena);
}
template<> PROTOBUF_NOINLINE ::TSASOS::DrawableZOrderListArchive*
Arena::CreateMaybeMessage< ::TSASOS::DrawableZOrderListArchive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TSASOS::DrawableZOrderListArchive >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
