// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSPArchiveMessages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_TSPArchiveMessages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_TSPArchiveMessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "TSPMessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_TSPArchiveMessages_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_TSPArchiveMessages_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TSPArchiveMessages_2eproto;
namespace TSP {
class ArchiveInfo;
struct ArchiveInfoDefaultTypeInternal;
extern ArchiveInfoDefaultTypeInternal _ArchiveInfo_default_instance_;
class ComponentDataReference;
struct ComponentDataReferenceDefaultTypeInternal;
extern ComponentDataReferenceDefaultTypeInternal _ComponentDataReference_default_instance_;
class ComponentDataReference_ObjectReference;
struct ComponentDataReference_ObjectReferenceDefaultTypeInternal;
extern ComponentDataReference_ObjectReferenceDefaultTypeInternal _ComponentDataReference_ObjectReference_default_instance_;
class ComponentExternalReference;
struct ComponentExternalReferenceDefaultTypeInternal;
extern ComponentExternalReferenceDefaultTypeInternal _ComponentExternalReference_default_instance_;
class ComponentInfo;
struct ComponentInfoDefaultTypeInternal;
extern ComponentInfoDefaultTypeInternal _ComponentInfo_default_instance_;
class DataInfo;
struct DataInfoDefaultTypeInternal;
extern DataInfoDefaultTypeInternal _DataInfo_default_instance_;
class DataMetadata;
struct DataMetadataDefaultTypeInternal;
extern DataMetadataDefaultTypeInternal _DataMetadata_default_instance_;
class DataMetadataMap;
struct DataMetadataMapDefaultTypeInternal;
extern DataMetadataMapDefaultTypeInternal _DataMetadataMap_default_instance_;
class DataMetadataMap_DataMetadataMapEntry;
struct DataMetadataMap_DataMetadataMapEntryDefaultTypeInternal;
extern DataMetadataMap_DataMetadataMapEntryDefaultTypeInternal _DataMetadataMap_DataMetadataMapEntry_default_instance_;
class DataPropertiesEntryV1;
struct DataPropertiesEntryV1DefaultTypeInternal;
extern DataPropertiesEntryV1DefaultTypeInternal _DataPropertiesEntryV1_default_instance_;
class DataPropertiesV1;
struct DataPropertiesV1DefaultTypeInternal;
extern DataPropertiesV1DefaultTypeInternal _DataPropertiesV1_default_instance_;
class DocumentMetadata;
struct DocumentMetadataDefaultTypeInternal;
extern DocumentMetadataDefaultTypeInternal _DocumentMetadata_default_instance_;
class DocumentRevision;
struct DocumentRevisionDefaultTypeInternal;
extern DocumentRevisionDefaultTypeInternal _DocumentRevision_default_instance_;
class EncryptionBlockInfo;
struct EncryptionBlockInfoDefaultTypeInternal;
extern EncryptionBlockInfoDefaultTypeInternal _EncryptionBlockInfo_default_instance_;
class EncryptionInfo;
struct EncryptionInfoDefaultTypeInternal;
extern EncryptionInfoDefaultTypeInternal _EncryptionInfo_default_instance_;
class FeatureInfo;
struct FeatureInfoDefaultTypeInternal;
extern FeatureInfoDefaultTypeInternal _FeatureInfo_default_instance_;
class FieldInfo;
struct FieldInfoDefaultTypeInternal;
extern FieldInfoDefaultTypeInternal _FieldInfo_default_instance_;
class FieldPath;
struct FieldPathDefaultTypeInternal;
extern FieldPathDefaultTypeInternal _FieldPath_default_instance_;
class MessageInfo;
struct MessageInfoDefaultTypeInternal;
extern MessageInfoDefaultTypeInternal _MessageInfo_default_instance_;
class ObjectSerializationDirectory;
struct ObjectSerializationDirectoryDefaultTypeInternal;
extern ObjectSerializationDirectoryDefaultTypeInternal _ObjectSerializationDirectory_default_instance_;
class ObjectSerializationDirectory_Entry;
struct ObjectSerializationDirectory_EntryDefaultTypeInternal;
extern ObjectSerializationDirectory_EntryDefaultTypeInternal _ObjectSerializationDirectory_Entry_default_instance_;
class ObjectSerializationMetadata;
struct ObjectSerializationMetadataDefaultTypeInternal;
extern ObjectSerializationMetadataDefaultTypeInternal _ObjectSerializationMetadata_default_instance_;
class ObjectUUIDMapEntry;
struct ObjectUUIDMapEntryDefaultTypeInternal;
extern ObjectUUIDMapEntryDefaultTypeInternal _ObjectUUIDMapEntry_default_instance_;
class PackageMetadata;
struct PackageMetadataDefaultTypeInternal;
extern PackageMetadataDefaultTypeInternal _PackageMetadata_default_instance_;
class PasteboardMetadata;
struct PasteboardMetadataDefaultTypeInternal;
extern PasteboardMetadataDefaultTypeInternal _PasteboardMetadata_default_instance_;
class SupportMetadata;
struct SupportMetadataDefaultTypeInternal;
extern SupportMetadataDefaultTypeInternal _SupportMetadata_default_instance_;
class SupportMetadata_DataCollaborationProperties;
struct SupportMetadata_DataCollaborationPropertiesDefaultTypeInternal;
extern SupportMetadata_DataCollaborationPropertiesDefaultTypeInternal _SupportMetadata_DataCollaborationProperties_default_instance_;
class ViewStateMetadata;
struct ViewStateMetadataDefaultTypeInternal;
extern ViewStateMetadataDefaultTypeInternal _ViewStateMetadata_default_instance_;
}  // namespace TSP
PROTOBUF_NAMESPACE_OPEN
template<> ::TSP::ArchiveInfo* Arena::CreateMaybeMessage<::TSP::ArchiveInfo>(Arena*);
template<> ::TSP::ComponentDataReference* Arena::CreateMaybeMessage<::TSP::ComponentDataReference>(Arena*);
template<> ::TSP::ComponentDataReference_ObjectReference* Arena::CreateMaybeMessage<::TSP::ComponentDataReference_ObjectReference>(Arena*);
template<> ::TSP::ComponentExternalReference* Arena::CreateMaybeMessage<::TSP::ComponentExternalReference>(Arena*);
template<> ::TSP::ComponentInfo* Arena::CreateMaybeMessage<::TSP::ComponentInfo>(Arena*);
template<> ::TSP::DataInfo* Arena::CreateMaybeMessage<::TSP::DataInfo>(Arena*);
template<> ::TSP::DataMetadata* Arena::CreateMaybeMessage<::TSP::DataMetadata>(Arena*);
template<> ::TSP::DataMetadataMap* Arena::CreateMaybeMessage<::TSP::DataMetadataMap>(Arena*);
template<> ::TSP::DataMetadataMap_DataMetadataMapEntry* Arena::CreateMaybeMessage<::TSP::DataMetadataMap_DataMetadataMapEntry>(Arena*);
template<> ::TSP::DataPropertiesEntryV1* Arena::CreateMaybeMessage<::TSP::DataPropertiesEntryV1>(Arena*);
template<> ::TSP::DataPropertiesV1* Arena::CreateMaybeMessage<::TSP::DataPropertiesV1>(Arena*);
template<> ::TSP::DocumentMetadata* Arena::CreateMaybeMessage<::TSP::DocumentMetadata>(Arena*);
template<> ::TSP::DocumentRevision* Arena::CreateMaybeMessage<::TSP::DocumentRevision>(Arena*);
template<> ::TSP::EncryptionBlockInfo* Arena::CreateMaybeMessage<::TSP::EncryptionBlockInfo>(Arena*);
template<> ::TSP::EncryptionInfo* Arena::CreateMaybeMessage<::TSP::EncryptionInfo>(Arena*);
template<> ::TSP::FeatureInfo* Arena::CreateMaybeMessage<::TSP::FeatureInfo>(Arena*);
template<> ::TSP::FieldInfo* Arena::CreateMaybeMessage<::TSP::FieldInfo>(Arena*);
template<> ::TSP::FieldPath* Arena::CreateMaybeMessage<::TSP::FieldPath>(Arena*);
template<> ::TSP::MessageInfo* Arena::CreateMaybeMessage<::TSP::MessageInfo>(Arena*);
template<> ::TSP::ObjectSerializationDirectory* Arena::CreateMaybeMessage<::TSP::ObjectSerializationDirectory>(Arena*);
template<> ::TSP::ObjectSerializationDirectory_Entry* Arena::CreateMaybeMessage<::TSP::ObjectSerializationDirectory_Entry>(Arena*);
template<> ::TSP::ObjectSerializationMetadata* Arena::CreateMaybeMessage<::TSP::ObjectSerializationMetadata>(Arena*);
template<> ::TSP::ObjectUUIDMapEntry* Arena::CreateMaybeMessage<::TSP::ObjectUUIDMapEntry>(Arena*);
template<> ::TSP::PackageMetadata* Arena::CreateMaybeMessage<::TSP::PackageMetadata>(Arena*);
template<> ::TSP::PasteboardMetadata* Arena::CreateMaybeMessage<::TSP::PasteboardMetadata>(Arena*);
template<> ::TSP::SupportMetadata* Arena::CreateMaybeMessage<::TSP::SupportMetadata>(Arena*);
template<> ::TSP::SupportMetadata_DataCollaborationProperties* Arena::CreateMaybeMessage<::TSP::SupportMetadata_DataCollaborationProperties>(Arena*);
template<> ::TSP::ViewStateMetadata* Arena::CreateMaybeMessage<::TSP::ViewStateMetadata>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace TSP {

enum FieldInfo_Type : int {
  FieldInfo_Type_Value = 0,
  FieldInfo_Type_ObjectReference = 1,
  FieldInfo_Type_DataReference = 2,
  FieldInfo_Type_Message = 3
};
bool FieldInfo_Type_IsValid(int value);
constexpr FieldInfo_Type FieldInfo_Type_Type_MIN = FieldInfo_Type_Value;
constexpr FieldInfo_Type FieldInfo_Type_Type_MAX = FieldInfo_Type_Message;
constexpr int FieldInfo_Type_Type_ARRAYSIZE = FieldInfo_Type_Type_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FieldInfo_Type_descriptor();
template<typename T>
inline const std::string& FieldInfo_Type_Name(T enum_t_value) {
  static_assert(::std::is_same<T, FieldInfo_Type>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function FieldInfo_Type_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    FieldInfo_Type_descriptor(), enum_t_value);
}
inline bool FieldInfo_Type_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, FieldInfo_Type* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<FieldInfo_Type>(
    FieldInfo_Type_descriptor(), name, value);
}
enum FieldInfo_UnknownFieldRule : int {
  FieldInfo_UnknownFieldRule_IgnoreAndPreserveUntilModified = 0,
  FieldInfo_UnknownFieldRule_IgnoreAndPreserve = 1,
  FieldInfo_UnknownFieldRule_MustUnderstand = 2,
  FieldInfo_UnknownFieldRule_NotSupported = -1
};
bool FieldInfo_UnknownFieldRule_IsValid(int value);
constexpr FieldInfo_UnknownFieldRule FieldInfo_UnknownFieldRule_UnknownFieldRule_MIN = FieldInfo_UnknownFieldRule_NotSupported;
constexpr FieldInfo_UnknownFieldRule FieldInfo_UnknownFieldRule_UnknownFieldRule_MAX = FieldInfo_UnknownFieldRule_MustUnderstand;
constexpr int FieldInfo_UnknownFieldRule_UnknownFieldRule_ARRAYSIZE = FieldInfo_UnknownFieldRule_UnknownFieldRule_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FieldInfo_UnknownFieldRule_descriptor();
template<typename T>
inline const std::string& FieldInfo_UnknownFieldRule_Name(T enum_t_value) {
  static_assert(::std::is_same<T, FieldInfo_UnknownFieldRule>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function FieldInfo_UnknownFieldRule_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    FieldInfo_UnknownFieldRule_descriptor(), enum_t_value);
}
inline bool FieldInfo_UnknownFieldRule_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, FieldInfo_UnknownFieldRule* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<FieldInfo_UnknownFieldRule>(
    FieldInfo_UnknownFieldRule_descriptor(), name, value);
}
enum FieldInfo_KnownFieldRule : int {
  FieldInfo_KnownFieldRule_None = 0,
  FieldInfo_KnownFieldRule_PreserveNewerValueUntilModified = 1,
  FieldInfo_KnownFieldRule_PreserveNewerValue = 2
};
bool FieldInfo_KnownFieldRule_IsValid(int value);
constexpr FieldInfo_KnownFieldRule FieldInfo_KnownFieldRule_KnownFieldRule_MIN = FieldInfo_KnownFieldRule_None;
constexpr FieldInfo_KnownFieldRule FieldInfo_KnownFieldRule_KnownFieldRule_MAX = FieldInfo_KnownFieldRule_PreserveNewerValue;
constexpr int FieldInfo_KnownFieldRule_KnownFieldRule_ARRAYSIZE = FieldInfo_KnownFieldRule_KnownFieldRule_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FieldInfo_KnownFieldRule_descriptor();
template<typename T>
inline const std::string& FieldInfo_KnownFieldRule_Name(T enum_t_value) {
  static_assert(::std::is_same<T, FieldInfo_KnownFieldRule>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function FieldInfo_KnownFieldRule_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    FieldInfo_KnownFieldRule_descriptor(), enum_t_value);
}
inline bool FieldInfo_KnownFieldRule_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, FieldInfo_KnownFieldRule* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<FieldInfo_KnownFieldRule>(
    FieldInfo_KnownFieldRule_descriptor(), name, value);
}
enum PackageMetadata_PackageType : int {
  PackageMetadata_PackageType_Default = 0,
  PackageMetadata_PackageType_Directory = 1,
  PackageMetadata_PackageType_SingleFile = 2
};
bool PackageMetadata_PackageType_IsValid(int value);
constexpr PackageMetadata_PackageType PackageMetadata_PackageType_PackageType_MIN = PackageMetadata_PackageType_Default;
constexpr PackageMetadata_PackageType PackageMetadata_PackageType_PackageType_MAX = PackageMetadata_PackageType_SingleFile;
constexpr int PackageMetadata_PackageType_PackageType_ARRAYSIZE = PackageMetadata_PackageType_PackageType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PackageMetadata_PackageType_descriptor();
template<typename T>
inline const std::string& PackageMetadata_PackageType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PackageMetadata_PackageType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PackageMetadata_PackageType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PackageMetadata_PackageType_descriptor(), enum_t_value);
}
inline bool PackageMetadata_PackageType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PackageMetadata_PackageType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PackageMetadata_PackageType>(
    PackageMetadata_PackageType_descriptor(), name, value);
}
enum DataInfo_DownloadPriority : int {
  DataInfo_DownloadPriority_High = 0,
  DataInfo_DownloadPriority_Default = 1
};
bool DataInfo_DownloadPriority_IsValid(int value);
constexpr DataInfo_DownloadPriority DataInfo_DownloadPriority_DownloadPriority_MIN = DataInfo_DownloadPriority_High;
constexpr DataInfo_DownloadPriority DataInfo_DownloadPriority_DownloadPriority_MAX = DataInfo_DownloadPriority_Default;
constexpr int DataInfo_DownloadPriority_DownloadPriority_ARRAYSIZE = DataInfo_DownloadPriority_DownloadPriority_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataInfo_DownloadPriority_descriptor();
template<typename T>
inline const std::string& DataInfo_DownloadPriority_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DataInfo_DownloadPriority>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DataInfo_DownloadPriority_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DataInfo_DownloadPriority_descriptor(), enum_t_value);
}
inline bool DataInfo_DownloadPriority_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DataInfo_DownloadPriority* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DataInfo_DownloadPriority>(
    DataInfo_DownloadPriority_descriptor(), name, value);
}
// ===================================================================

class ArchiveInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.ArchiveInfo) */ {
 public:
  inline ArchiveInfo() : ArchiveInfo(nullptr) {}
  ~ArchiveInfo() override;
  explicit PROTOBUF_CONSTEXPR ArchiveInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ArchiveInfo(const ArchiveInfo& from);
  ArchiveInfo(ArchiveInfo&& from) noexcept
    : ArchiveInfo() {
    *this = ::std::move(from);
  }

  inline ArchiveInfo& operator=(const ArchiveInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArchiveInfo& operator=(ArchiveInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArchiveInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArchiveInfo* internal_default_instance() {
    return reinterpret_cast<const ArchiveInfo*>(
               &_ArchiveInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ArchiveInfo& a, ArchiveInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ArchiveInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArchiveInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArchiveInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArchiveInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ArchiveInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ArchiveInfo& from) {
    ArchiveInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArchiveInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.ArchiveInfo";
  }
  protected:
  explicit ArchiveInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageInfosFieldNumber = 2,
    kIdentifierFieldNumber = 1,
    kShouldMergeFieldNumber = 3,
  };
  // repeated .TSP.MessageInfo message_infos = 2;
  int message_infos_size() const;
  private:
  int _internal_message_infos_size() const;
  public:
  void clear_message_infos();
  ::TSP::MessageInfo* mutable_message_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::MessageInfo >*
      mutable_message_infos();
  private:
  const ::TSP::MessageInfo& _internal_message_infos(int index) const;
  ::TSP::MessageInfo* _internal_add_message_infos();
  public:
  const ::TSP::MessageInfo& message_infos(int index) const;
  ::TSP::MessageInfo* add_message_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::MessageInfo >&
      message_infos() const;

  // optional uint64 identifier = 1;
  bool has_identifier() const;
  private:
  bool _internal_has_identifier() const;
  public:
  void clear_identifier();
  uint64_t identifier() const;
  void set_identifier(uint64_t value);
  private:
  uint64_t _internal_identifier() const;
  void _internal_set_identifier(uint64_t value);
  public:

  // optional bool should_merge = 3;
  bool has_should_merge() const;
  private:
  bool _internal_has_should_merge() const;
  public:
  void clear_should_merge();
  bool should_merge() const;
  void set_should_merge(bool value);
  private:
  bool _internal_should_merge() const;
  void _internal_set_should_merge(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.ArchiveInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::MessageInfo > message_infos_;
    uint64_t identifier_;
    bool should_merge_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class MessageInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.MessageInfo) */ {
 public:
  inline MessageInfo() : MessageInfo(nullptr) {}
  ~MessageInfo() override;
  explicit PROTOBUF_CONSTEXPR MessageInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageInfo(const MessageInfo& from);
  MessageInfo(MessageInfo&& from) noexcept
    : MessageInfo() {
    *this = ::std::move(from);
  }

  inline MessageInfo& operator=(const MessageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageInfo& operator=(MessageInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageInfo* internal_default_instance() {
    return reinterpret_cast<const MessageInfo*>(
               &_MessageInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MessageInfo& a, MessageInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MessageInfo& from) {
    MessageInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.MessageInfo";
  }
  protected:
  explicit MessageInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 2,
    kFieldInfosFieldNumber = 4,
    kObjectReferencesFieldNumber = 5,
    kDataReferencesFieldNumber = 6,
    kDiffMergeVersionFieldNumber = 8,
    kFieldsToRemoveFieldNumber = 10,
    kDiffReadVersionFieldNumber = 11,
    kDiffFieldPathFieldNumber = 9,
    kTypeFieldNumber = 1,
    kLengthFieldNumber = 3,
    kBaseMessageIndexFieldNumber = 7,
  };
  // repeated uint32 version = 2 [packed = true];
  int version_size() const;
  private:
  int _internal_version_size() const;
  public:
  void clear_version();
  private:
  uint32_t _internal_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_version() const;
  void _internal_add_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_version();
  public:
  uint32_t version(int index) const;
  void set_version(int index, uint32_t value);
  void add_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_version();

  // repeated .TSP.FieldInfo field_infos = 4;
  int field_infos_size() const;
  private:
  int _internal_field_infos_size() const;
  public:
  void clear_field_infos();
  ::TSP::FieldInfo* mutable_field_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FieldInfo >*
      mutable_field_infos();
  private:
  const ::TSP::FieldInfo& _internal_field_infos(int index) const;
  ::TSP::FieldInfo* _internal_add_field_infos();
  public:
  const ::TSP::FieldInfo& field_infos(int index) const;
  ::TSP::FieldInfo* add_field_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FieldInfo >&
      field_infos() const;

  // repeated uint64 object_references = 5 [packed = true];
  int object_references_size() const;
  private:
  int _internal_object_references_size() const;
  public:
  void clear_object_references();
  private:
  uint64_t _internal_object_references(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_object_references() const;
  void _internal_add_object_references(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_object_references();
  public:
  uint64_t object_references(int index) const;
  void set_object_references(int index, uint64_t value);
  void add_object_references(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      object_references() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_object_references();

  // repeated uint64 data_references = 6 [packed = true];
  int data_references_size() const;
  private:
  int _internal_data_references_size() const;
  public:
  void clear_data_references();
  private:
  uint64_t _internal_data_references(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_data_references() const;
  void _internal_add_data_references(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_data_references();
  public:
  uint64_t data_references(int index) const;
  void set_data_references(int index, uint64_t value);
  void add_data_references(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      data_references() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_data_references();

  // repeated uint32 diff_merge_version = 8 [packed = true];
  int diff_merge_version_size() const;
  private:
  int _internal_diff_merge_version_size() const;
  public:
  void clear_diff_merge_version();
  private:
  uint32_t _internal_diff_merge_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_diff_merge_version() const;
  void _internal_add_diff_merge_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_diff_merge_version();
  public:
  uint32_t diff_merge_version(int index) const;
  void set_diff_merge_version(int index, uint32_t value);
  void add_diff_merge_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      diff_merge_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_diff_merge_version();

  // repeated .TSP.FieldPath fields_to_remove = 10;
  int fields_to_remove_size() const;
  private:
  int _internal_fields_to_remove_size() const;
  public:
  void clear_fields_to_remove();
  ::TSP::FieldPath* mutable_fields_to_remove(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FieldPath >*
      mutable_fields_to_remove();
  private:
  const ::TSP::FieldPath& _internal_fields_to_remove(int index) const;
  ::TSP::FieldPath* _internal_add_fields_to_remove();
  public:
  const ::TSP::FieldPath& fields_to_remove(int index) const;
  ::TSP::FieldPath* add_fields_to_remove();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FieldPath >&
      fields_to_remove() const;

  // repeated uint32 diff_read_version = 11 [packed = true];
  int diff_read_version_size() const;
  private:
  int _internal_diff_read_version_size() const;
  public:
  void clear_diff_read_version();
  private:
  uint32_t _internal_diff_read_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_diff_read_version() const;
  void _internal_add_diff_read_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_diff_read_version();
  public:
  uint32_t diff_read_version(int index) const;
  void set_diff_read_version(int index, uint32_t value);
  void add_diff_read_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      diff_read_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_diff_read_version();

  // optional .TSP.FieldPath diff_field_path = 9;
  bool has_diff_field_path() const;
  private:
  bool _internal_has_diff_field_path() const;
  public:
  void clear_diff_field_path();
  const ::TSP::FieldPath& diff_field_path() const;
  PROTOBUF_NODISCARD ::TSP::FieldPath* release_diff_field_path();
  ::TSP::FieldPath* mutable_diff_field_path();
  void set_allocated_diff_field_path(::TSP::FieldPath* diff_field_path);
  private:
  const ::TSP::FieldPath& _internal_diff_field_path() const;
  ::TSP::FieldPath* _internal_mutable_diff_field_path();
  public:
  void unsafe_arena_set_allocated_diff_field_path(
      ::TSP::FieldPath* diff_field_path);
  ::TSP::FieldPath* unsafe_arena_release_diff_field_path();

  // required uint32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  uint32_t type() const;
  void set_type(uint32_t value);
  private:
  uint32_t _internal_type() const;
  void _internal_set_type(uint32_t value);
  public:

  // required uint32 length = 3;
  bool has_length() const;
  private:
  bool _internal_has_length() const;
  public:
  void clear_length();
  uint32_t length() const;
  void set_length(uint32_t value);
  private:
  uint32_t _internal_length() const;
  void _internal_set_length(uint32_t value);
  public:

  // optional uint32 base_message_index = 7;
  bool has_base_message_index() const;
  private:
  bool _internal_has_base_message_index() const;
  public:
  void clear_base_message_index();
  uint32_t base_message_index() const;
  void set_base_message_index(uint32_t value);
  private:
  uint32_t _internal_base_message_index() const;
  void _internal_set_base_message_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.MessageInfo)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > version_;
    mutable std::atomic<int> _version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FieldInfo > field_infos_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > object_references_;
    mutable std::atomic<int> _object_references_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > data_references_;
    mutable std::atomic<int> _data_references_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > diff_merge_version_;
    mutable std::atomic<int> _diff_merge_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FieldPath > fields_to_remove_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > diff_read_version_;
    mutable std::atomic<int> _diff_read_version_cached_byte_size_;
    ::TSP::FieldPath* diff_field_path_;
    uint32_t type_;
    uint32_t length_;
    uint32_t base_message_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class FieldInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.FieldInfo) */ {
 public:
  inline FieldInfo() : FieldInfo(nullptr) {}
  ~FieldInfo() override;
  explicit PROTOBUF_CONSTEXPR FieldInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FieldInfo(const FieldInfo& from);
  FieldInfo(FieldInfo&& from) noexcept
    : FieldInfo() {
    *this = ::std::move(from);
  }

  inline FieldInfo& operator=(const FieldInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline FieldInfo& operator=(FieldInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FieldInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const FieldInfo* internal_default_instance() {
    return reinterpret_cast<const FieldInfo*>(
               &_FieldInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FieldInfo& a, FieldInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(FieldInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FieldInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FieldInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FieldInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FieldInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const FieldInfo& from) {
    FieldInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FieldInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.FieldInfo";
  }
  protected:
  explicit FieldInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FieldInfo_Type Type;
  static constexpr Type Value =
    FieldInfo_Type_Value;
  static constexpr Type ObjectReference =
    FieldInfo_Type_ObjectReference;
  static constexpr Type DataReference =
    FieldInfo_Type_DataReference;
  static constexpr Type Message =
    FieldInfo_Type_Message;
  static inline bool Type_IsValid(int value) {
    return FieldInfo_Type_IsValid(value);
  }
  static constexpr Type Type_MIN =
    FieldInfo_Type_Type_MIN;
  static constexpr Type Type_MAX =
    FieldInfo_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE =
    FieldInfo_Type_Type_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Type_descriptor() {
    return FieldInfo_Type_descriptor();
  }
  template<typename T>
  static inline const std::string& Type_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Type>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Type_Name.");
    return FieldInfo_Type_Name(enum_t_value);
  }
  static inline bool Type_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Type* value) {
    return FieldInfo_Type_Parse(name, value);
  }

  typedef FieldInfo_UnknownFieldRule UnknownFieldRule;
  static constexpr UnknownFieldRule IgnoreAndPreserveUntilModified =
    FieldInfo_UnknownFieldRule_IgnoreAndPreserveUntilModified;
  static constexpr UnknownFieldRule IgnoreAndPreserve =
    FieldInfo_UnknownFieldRule_IgnoreAndPreserve;
  static constexpr UnknownFieldRule MustUnderstand =
    FieldInfo_UnknownFieldRule_MustUnderstand;
  static constexpr UnknownFieldRule NotSupported =
    FieldInfo_UnknownFieldRule_NotSupported;
  static inline bool UnknownFieldRule_IsValid(int value) {
    return FieldInfo_UnknownFieldRule_IsValid(value);
  }
  static constexpr UnknownFieldRule UnknownFieldRule_MIN =
    FieldInfo_UnknownFieldRule_UnknownFieldRule_MIN;
  static constexpr UnknownFieldRule UnknownFieldRule_MAX =
    FieldInfo_UnknownFieldRule_UnknownFieldRule_MAX;
  static constexpr int UnknownFieldRule_ARRAYSIZE =
    FieldInfo_UnknownFieldRule_UnknownFieldRule_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  UnknownFieldRule_descriptor() {
    return FieldInfo_UnknownFieldRule_descriptor();
  }
  template<typename T>
  static inline const std::string& UnknownFieldRule_Name(T enum_t_value) {
    static_assert(::std::is_same<T, UnknownFieldRule>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function UnknownFieldRule_Name.");
    return FieldInfo_UnknownFieldRule_Name(enum_t_value);
  }
  static inline bool UnknownFieldRule_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      UnknownFieldRule* value) {
    return FieldInfo_UnknownFieldRule_Parse(name, value);
  }

  typedef FieldInfo_KnownFieldRule KnownFieldRule;
  static constexpr KnownFieldRule None =
    FieldInfo_KnownFieldRule_None;
  static constexpr KnownFieldRule PreserveNewerValueUntilModified =
    FieldInfo_KnownFieldRule_PreserveNewerValueUntilModified;
  static constexpr KnownFieldRule PreserveNewerValue =
    FieldInfo_KnownFieldRule_PreserveNewerValue;
  static inline bool KnownFieldRule_IsValid(int value) {
    return FieldInfo_KnownFieldRule_IsValid(value);
  }
  static constexpr KnownFieldRule KnownFieldRule_MIN =
    FieldInfo_KnownFieldRule_KnownFieldRule_MIN;
  static constexpr KnownFieldRule KnownFieldRule_MAX =
    FieldInfo_KnownFieldRule_KnownFieldRule_MAX;
  static constexpr int KnownFieldRule_ARRAYSIZE =
    FieldInfo_KnownFieldRule_KnownFieldRule_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  KnownFieldRule_descriptor() {
    return FieldInfo_KnownFieldRule_descriptor();
  }
  template<typename T>
  static inline const std::string& KnownFieldRule_Name(T enum_t_value) {
    static_assert(::std::is_same<T, KnownFieldRule>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function KnownFieldRule_Name.");
    return FieldInfo_KnownFieldRule_Name(enum_t_value);
  }
  static inline bool KnownFieldRule_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      KnownFieldRule* value) {
    return FieldInfo_KnownFieldRule_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kObjectReferencesFieldNumber = 4,
    kDataReferencesFieldNumber = 5,
    kKnownFieldVersionFieldNumber = 7,
    kKnownFieldFeatureIdentifierFieldNumber = 8,
    kPathFieldNumber = 1,
    kTypeFieldNumber = 2,
    kUnknownFieldRuleFieldNumber = 3,
    kKnownFieldRuleFieldNumber = 6,
  };
  // repeated uint64 object_references = 4 [packed = true];
  int object_references_size() const;
  private:
  int _internal_object_references_size() const;
  public:
  void clear_object_references();
  private:
  uint64_t _internal_object_references(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_object_references() const;
  void _internal_add_object_references(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_object_references();
  public:
  uint64_t object_references(int index) const;
  void set_object_references(int index, uint64_t value);
  void add_object_references(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      object_references() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_object_references();

  // repeated uint64 data_references = 5 [packed = true];
  int data_references_size() const;
  private:
  int _internal_data_references_size() const;
  public:
  void clear_data_references();
  private:
  uint64_t _internal_data_references(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_data_references() const;
  void _internal_add_data_references(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_data_references();
  public:
  uint64_t data_references(int index) const;
  void set_data_references(int index, uint64_t value);
  void add_data_references(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      data_references() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_data_references();

  // repeated uint32 known_field_version = 7 [packed = true];
  int known_field_version_size() const;
  private:
  int _internal_known_field_version_size() const;
  public:
  void clear_known_field_version();
  private:
  uint32_t _internal_known_field_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_known_field_version() const;
  void _internal_add_known_field_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_known_field_version();
  public:
  uint32_t known_field_version(int index) const;
  void set_known_field_version(int index, uint32_t value);
  void add_known_field_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      known_field_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_known_field_version();

  // optional string known_field_feature_identifier = 8;
  bool has_known_field_feature_identifier() const;
  private:
  bool _internal_has_known_field_feature_identifier() const;
  public:
  void clear_known_field_feature_identifier();
  const std::string& known_field_feature_identifier() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_known_field_feature_identifier(ArgT0&& arg0, ArgT... args);
  std::string* mutable_known_field_feature_identifier();
  PROTOBUF_NODISCARD std::string* release_known_field_feature_identifier();
  void set_allocated_known_field_feature_identifier(std::string* known_field_feature_identifier);
  private:
  const std::string& _internal_known_field_feature_identifier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_known_field_feature_identifier(const std::string& value);
  std::string* _internal_mutable_known_field_feature_identifier();
  public:

  // required .TSP.FieldPath path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::TSP::FieldPath& path() const;
  PROTOBUF_NODISCARD ::TSP::FieldPath* release_path();
  ::TSP::FieldPath* mutable_path();
  void set_allocated_path(::TSP::FieldPath* path);
  private:
  const ::TSP::FieldPath& _internal_path() const;
  ::TSP::FieldPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::TSP::FieldPath* path);
  ::TSP::FieldPath* unsafe_arena_release_path();

  // optional .TSP.FieldInfo.Type type = 2 [default = Value];
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::TSP::FieldInfo_Type type() const;
  void set_type(::TSP::FieldInfo_Type value);
  private:
  ::TSP::FieldInfo_Type _internal_type() const;
  void _internal_set_type(::TSP::FieldInfo_Type value);
  public:

  // optional .TSP.FieldInfo.UnknownFieldRule unknown_field_rule = 3 [default = IgnoreAndPreserveUntilModified];
  bool has_unknown_field_rule() const;
  private:
  bool _internal_has_unknown_field_rule() const;
  public:
  void clear_unknown_field_rule();
  ::TSP::FieldInfo_UnknownFieldRule unknown_field_rule() const;
  void set_unknown_field_rule(::TSP::FieldInfo_UnknownFieldRule value);
  private:
  ::TSP::FieldInfo_UnknownFieldRule _internal_unknown_field_rule() const;
  void _internal_set_unknown_field_rule(::TSP::FieldInfo_UnknownFieldRule value);
  public:

  // optional .TSP.FieldInfo.KnownFieldRule known_field_rule = 6 [default = None];
  bool has_known_field_rule() const;
  private:
  bool _internal_has_known_field_rule() const;
  public:
  void clear_known_field_rule();
  ::TSP::FieldInfo_KnownFieldRule known_field_rule() const;
  void set_known_field_rule(::TSP::FieldInfo_KnownFieldRule value);
  private:
  ::TSP::FieldInfo_KnownFieldRule _internal_known_field_rule() const;
  void _internal_set_known_field_rule(::TSP::FieldInfo_KnownFieldRule value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.FieldInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > object_references_;
    mutable std::atomic<int> _object_references_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > data_references_;
    mutable std::atomic<int> _data_references_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > known_field_version_;
    mutable std::atomic<int> _known_field_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr known_field_feature_identifier_;
    ::TSP::FieldPath* path_;
    int type_;
    int unknown_field_rule_;
    int known_field_rule_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class FieldPath final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.FieldPath) */ {
 public:
  inline FieldPath() : FieldPath(nullptr) {}
  ~FieldPath() override;
  explicit PROTOBUF_CONSTEXPR FieldPath(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FieldPath(const FieldPath& from);
  FieldPath(FieldPath&& from) noexcept
    : FieldPath() {
    *this = ::std::move(from);
  }

  inline FieldPath& operator=(const FieldPath& from) {
    CopyFrom(from);
    return *this;
  }
  inline FieldPath& operator=(FieldPath&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FieldPath& default_instance() {
    return *internal_default_instance();
  }
  static inline const FieldPath* internal_default_instance() {
    return reinterpret_cast<const FieldPath*>(
               &_FieldPath_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(FieldPath& a, FieldPath& b) {
    a.Swap(&b);
  }
  inline void Swap(FieldPath* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FieldPath* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FieldPath* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FieldPath>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FieldPath& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const FieldPath& from) {
    FieldPath::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FieldPath* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.FieldPath";
  }
  protected:
  explicit FieldPath(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
  };
  // repeated uint32 path = 1 [packed = true];
  int path_size() const;
  private:
  int _internal_path_size() const;
  public:
  void clear_path();
  private:
  uint32_t _internal_path(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_path() const;
  void _internal_add_path(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_path();
  public:
  uint32_t path(int index) const;
  void set_path(int index, uint32_t value);
  void add_path(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      path() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_path();

  // @@protoc_insertion_point(class_scope:TSP.FieldPath)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > path_;
    mutable std::atomic<int> _path_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class ComponentInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.ComponentInfo) */ {
 public:
  inline ComponentInfo() : ComponentInfo(nullptr) {}
  ~ComponentInfo() override;
  explicit PROTOBUF_CONSTEXPR ComponentInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComponentInfo(const ComponentInfo& from);
  ComponentInfo(ComponentInfo&& from) noexcept
    : ComponentInfo() {
    *this = ::std::move(from);
  }

  inline ComponentInfo& operator=(const ComponentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentInfo& operator=(ComponentInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComponentInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComponentInfo* internal_default_instance() {
    return reinterpret_cast<const ComponentInfo*>(
               &_ComponentInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ComponentInfo& a, ComponentInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ComponentInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComponentInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ComponentInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ComponentInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ComponentInfo& from) {
    ComponentInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.ComponentInfo";
  }
  protected:
  explicit ComponentInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDocumentReadVersionFieldNumber = 4,
    kDocumentWriteVersionFieldNumber = 5,
    kExternalReferencesFieldNumber = 6,
    kDataReferencesFieldNumber = 7,
    kObjectUuidMapEntriesFieldNumber = 11,
    kFeatureInfosFieldNumber = 13,
    kComponentReadVersionFieldNumber = 14,
    kComponentRequiredVersionFieldNumber = 15,
    kVersionedExternalReferencesFieldNumber = 18,
    kAmbiguousObjectIdentifiersFieldNumber = 20,
    kPreferredLocatorFieldNumber = 2,
    kLocatorFieldNumber = 3,
    kIdentifierFieldNumber = 1,
    kSaveTokenFieldNumber = 12,
    kIsStoredOutsideObjectArchiveFieldNumber = 10,
    kCanBeDroppedFieldNumber = 17,
    kIsWastefulFieldNumber = 19,
    kCompressionAlgorithmFieldNumber = 16,
    kRequiredPackageIdentifierFieldNumber = 21,
  };
  // repeated uint32 document_read_version = 4 [packed = true];
  int document_read_version_size() const;
  private:
  int _internal_document_read_version_size() const;
  public:
  void clear_document_read_version();
  private:
  uint32_t _internal_document_read_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_document_read_version() const;
  void _internal_add_document_read_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_document_read_version();
  public:
  uint32_t document_read_version(int index) const;
  void set_document_read_version(int index, uint32_t value);
  void add_document_read_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      document_read_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_document_read_version();

  // repeated uint32 document_write_version = 5 [packed = true];
  int document_write_version_size() const;
  private:
  int _internal_document_write_version_size() const;
  public:
  void clear_document_write_version();
  private:
  uint32_t _internal_document_write_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_document_write_version() const;
  void _internal_add_document_write_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_document_write_version();
  public:
  uint32_t document_write_version(int index) const;
  void set_document_write_version(int index, uint32_t value);
  void add_document_write_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      document_write_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_document_write_version();

  // repeated .TSP.ComponentExternalReference external_references = 6;
  int external_references_size() const;
  private:
  int _internal_external_references_size() const;
  public:
  void clear_external_references();
  ::TSP::ComponentExternalReference* mutable_external_references(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentExternalReference >*
      mutable_external_references();
  private:
  const ::TSP::ComponentExternalReference& _internal_external_references(int index) const;
  ::TSP::ComponentExternalReference* _internal_add_external_references();
  public:
  const ::TSP::ComponentExternalReference& external_references(int index) const;
  ::TSP::ComponentExternalReference* add_external_references();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentExternalReference >&
      external_references() const;

  // repeated .TSP.ComponentDataReference data_references = 7;
  int data_references_size() const;
  private:
  int _internal_data_references_size() const;
  public:
  void clear_data_references();
  ::TSP::ComponentDataReference* mutable_data_references(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentDataReference >*
      mutable_data_references();
  private:
  const ::TSP::ComponentDataReference& _internal_data_references(int index) const;
  ::TSP::ComponentDataReference* _internal_add_data_references();
  public:
  const ::TSP::ComponentDataReference& data_references(int index) const;
  ::TSP::ComponentDataReference* add_data_references();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentDataReference >&
      data_references() const;

  // repeated .TSP.ObjectUUIDMapEntry object_uuid_map_entries = 11;
  int object_uuid_map_entries_size() const;
  private:
  int _internal_object_uuid_map_entries_size() const;
  public:
  void clear_object_uuid_map_entries();
  ::TSP::ObjectUUIDMapEntry* mutable_object_uuid_map_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >*
      mutable_object_uuid_map_entries();
  private:
  const ::TSP::ObjectUUIDMapEntry& _internal_object_uuid_map_entries(int index) const;
  ::TSP::ObjectUUIDMapEntry* _internal_add_object_uuid_map_entries();
  public:
  const ::TSP::ObjectUUIDMapEntry& object_uuid_map_entries(int index) const;
  ::TSP::ObjectUUIDMapEntry* add_object_uuid_map_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >&
      object_uuid_map_entries() const;

  // repeated .TSP.FeatureInfo feature_infos = 13;
  int feature_infos_size() const;
  private:
  int _internal_feature_infos_size() const;
  public:
  void clear_feature_infos();
  ::TSP::FeatureInfo* mutable_feature_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FeatureInfo >*
      mutable_feature_infos();
  private:
  const ::TSP::FeatureInfo& _internal_feature_infos(int index) const;
  ::TSP::FeatureInfo* _internal_add_feature_infos();
  public:
  const ::TSP::FeatureInfo& feature_infos(int index) const;
  ::TSP::FeatureInfo* add_feature_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FeatureInfo >&
      feature_infos() const;

  // repeated uint32 component_read_version = 14 [packed = true];
  int component_read_version_size() const;
  private:
  int _internal_component_read_version_size() const;
  public:
  void clear_component_read_version();
  private:
  uint32_t _internal_component_read_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_component_read_version() const;
  void _internal_add_component_read_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_component_read_version();
  public:
  uint32_t component_read_version(int index) const;
  void set_component_read_version(int index, uint32_t value);
  void add_component_read_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      component_read_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_component_read_version();

  // repeated uint32 component_required_version = 15 [packed = true];
  int component_required_version_size() const;
  private:
  int _internal_component_required_version_size() const;
  public:
  void clear_component_required_version();
  private:
  uint32_t _internal_component_required_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_component_required_version() const;
  void _internal_add_component_required_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_component_required_version();
  public:
  uint32_t component_required_version(int index) const;
  void set_component_required_version(int index, uint32_t value);
  void add_component_required_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      component_required_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_component_required_version();

  // repeated .TSP.ComponentExternalReference versioned_external_references = 18;
  int versioned_external_references_size() const;
  private:
  int _internal_versioned_external_references_size() const;
  public:
  void clear_versioned_external_references();
  ::TSP::ComponentExternalReference* mutable_versioned_external_references(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentExternalReference >*
      mutable_versioned_external_references();
  private:
  const ::TSP::ComponentExternalReference& _internal_versioned_external_references(int index) const;
  ::TSP::ComponentExternalReference* _internal_add_versioned_external_references();
  public:
  const ::TSP::ComponentExternalReference& versioned_external_references(int index) const;
  ::TSP::ComponentExternalReference* add_versioned_external_references();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentExternalReference >&
      versioned_external_references() const;

  // repeated uint64 ambiguous_object_identifiers = 20 [packed = true];
  int ambiguous_object_identifiers_size() const;
  private:
  int _internal_ambiguous_object_identifiers_size() const;
  public:
  void clear_ambiguous_object_identifiers();
  private:
  uint64_t _internal_ambiguous_object_identifiers(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_ambiguous_object_identifiers() const;
  void _internal_add_ambiguous_object_identifiers(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_ambiguous_object_identifiers();
  public:
  uint64_t ambiguous_object_identifiers(int index) const;
  void set_ambiguous_object_identifiers(int index, uint64_t value);
  void add_ambiguous_object_identifiers(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      ambiguous_object_identifiers() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_ambiguous_object_identifiers();

  // required string preferred_locator = 2;
  bool has_preferred_locator() const;
  private:
  bool _internal_has_preferred_locator() const;
  public:
  void clear_preferred_locator();
  const std::string& preferred_locator() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_preferred_locator(ArgT0&& arg0, ArgT... args);
  std::string* mutable_preferred_locator();
  PROTOBUF_NODISCARD std::string* release_preferred_locator();
  void set_allocated_preferred_locator(std::string* preferred_locator);
  private:
  const std::string& _internal_preferred_locator() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_preferred_locator(const std::string& value);
  std::string* _internal_mutable_preferred_locator();
  public:

  // optional string locator = 3;
  bool has_locator() const;
  private:
  bool _internal_has_locator() const;
  public:
  void clear_locator();
  const std::string& locator() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_locator(ArgT0&& arg0, ArgT... args);
  std::string* mutable_locator();
  PROTOBUF_NODISCARD std::string* release_locator();
  void set_allocated_locator(std::string* locator);
  private:
  const std::string& _internal_locator() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_locator(const std::string& value);
  std::string* _internal_mutable_locator();
  public:

  // required uint64 identifier = 1;
  bool has_identifier() const;
  private:
  bool _internal_has_identifier() const;
  public:
  void clear_identifier();
  uint64_t identifier() const;
  void set_identifier(uint64_t value);
  private:
  uint64_t _internal_identifier() const;
  void _internal_set_identifier(uint64_t value);
  public:

  // optional uint64 save_token = 12 [default = 0];
  bool has_save_token() const;
  private:
  bool _internal_has_save_token() const;
  public:
  void clear_save_token();
  uint64_t save_token() const;
  void set_save_token(uint64_t value);
  private:
  uint64_t _internal_save_token() const;
  void _internal_set_save_token(uint64_t value);
  public:

  // optional bool is_stored_outside_object_archive = 10 [default = false];
  bool has_is_stored_outside_object_archive() const;
  private:
  bool _internal_has_is_stored_outside_object_archive() const;
  public:
  void clear_is_stored_outside_object_archive();
  bool is_stored_outside_object_archive() const;
  void set_is_stored_outside_object_archive(bool value);
  private:
  bool _internal_is_stored_outside_object_archive() const;
  void _internal_set_is_stored_outside_object_archive(bool value);
  public:

  // optional bool can_be_dropped = 17;
  bool has_can_be_dropped() const;
  private:
  bool _internal_has_can_be_dropped() const;
  public:
  void clear_can_be_dropped();
  bool can_be_dropped() const;
  void set_can_be_dropped(bool value);
  private:
  bool _internal_can_be_dropped() const;
  void _internal_set_can_be_dropped(bool value);
  public:

  // optional bool is_wasteful = 19;
  bool has_is_wasteful() const;
  private:
  bool _internal_has_is_wasteful() const;
  public:
  void clear_is_wasteful();
  bool is_wasteful() const;
  void set_is_wasteful(bool value);
  private:
  bool _internal_is_wasteful() const;
  void _internal_set_is_wasteful(bool value);
  public:

  // optional uint32 compression_algorithm = 16;
  bool has_compression_algorithm() const;
  private:
  bool _internal_has_compression_algorithm() const;
  public:
  void clear_compression_algorithm();
  uint32_t compression_algorithm() const;
  void set_compression_algorithm(uint32_t value);
  private:
  uint32_t _internal_compression_algorithm() const;
  void _internal_set_compression_algorithm(uint32_t value);
  public:

  // optional uint32 required_package_identifier = 21;
  bool has_required_package_identifier() const;
  private:
  bool _internal_has_required_package_identifier() const;
  public:
  void clear_required_package_identifier();
  uint32_t required_package_identifier() const;
  void set_required_package_identifier(uint32_t value);
  private:
  uint32_t _internal_required_package_identifier() const;
  void _internal_set_required_package_identifier(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.ComponentInfo)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > document_read_version_;
    mutable std::atomic<int> _document_read_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > document_write_version_;
    mutable std::atomic<int> _document_write_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentExternalReference > external_references_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentDataReference > data_references_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry > object_uuid_map_entries_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FeatureInfo > feature_infos_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > component_read_version_;
    mutable std::atomic<int> _component_read_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > component_required_version_;
    mutable std::atomic<int> _component_required_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentExternalReference > versioned_external_references_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > ambiguous_object_identifiers_;
    mutable std::atomic<int> _ambiguous_object_identifiers_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr preferred_locator_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locator_;
    uint64_t identifier_;
    uint64_t save_token_;
    bool is_stored_outside_object_archive_;
    bool can_be_dropped_;
    bool is_wasteful_;
    uint32_t compression_algorithm_;
    uint32_t required_package_identifier_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class ComponentExternalReference final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.ComponentExternalReference) */ {
 public:
  inline ComponentExternalReference() : ComponentExternalReference(nullptr) {}
  ~ComponentExternalReference() override;
  explicit PROTOBUF_CONSTEXPR ComponentExternalReference(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComponentExternalReference(const ComponentExternalReference& from);
  ComponentExternalReference(ComponentExternalReference&& from) noexcept
    : ComponentExternalReference() {
    *this = ::std::move(from);
  }

  inline ComponentExternalReference& operator=(const ComponentExternalReference& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentExternalReference& operator=(ComponentExternalReference&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComponentExternalReference& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComponentExternalReference* internal_default_instance() {
    return reinterpret_cast<const ComponentExternalReference*>(
               &_ComponentExternalReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ComponentExternalReference& a, ComponentExternalReference& b) {
    a.Swap(&b);
  }
  inline void Swap(ComponentExternalReference* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentExternalReference* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComponentExternalReference* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ComponentExternalReference>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ComponentExternalReference& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ComponentExternalReference& from) {
    ComponentExternalReference::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentExternalReference* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.ComponentExternalReference";
  }
  protected:
  explicit ComponentExternalReference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentIdentifierFieldNumber = 1,
    kObjectIdentifierFieldNumber = 2,
    kIsWeakFieldNumber = 3,
  };
  // required uint64 component_identifier = 1;
  bool has_component_identifier() const;
  private:
  bool _internal_has_component_identifier() const;
  public:
  void clear_component_identifier();
  uint64_t component_identifier() const;
  void set_component_identifier(uint64_t value);
  private:
  uint64_t _internal_component_identifier() const;
  void _internal_set_component_identifier(uint64_t value);
  public:

  // optional uint64 object_identifier = 2;
  bool has_object_identifier() const;
  private:
  bool _internal_has_object_identifier() const;
  public:
  void clear_object_identifier();
  uint64_t object_identifier() const;
  void set_object_identifier(uint64_t value);
  private:
  uint64_t _internal_object_identifier() const;
  void _internal_set_object_identifier(uint64_t value);
  public:

  // optional bool is_weak = 3;
  bool has_is_weak() const;
  private:
  bool _internal_has_is_weak() const;
  public:
  void clear_is_weak();
  bool is_weak() const;
  void set_is_weak(bool value);
  private:
  bool _internal_is_weak() const;
  void _internal_set_is_weak(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.ComponentExternalReference)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t component_identifier_;
    uint64_t object_identifier_;
    bool is_weak_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class ComponentDataReference_ObjectReference final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.ComponentDataReference.ObjectReference) */ {
 public:
  inline ComponentDataReference_ObjectReference() : ComponentDataReference_ObjectReference(nullptr) {}
  ~ComponentDataReference_ObjectReference() override;
  explicit PROTOBUF_CONSTEXPR ComponentDataReference_ObjectReference(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComponentDataReference_ObjectReference(const ComponentDataReference_ObjectReference& from);
  ComponentDataReference_ObjectReference(ComponentDataReference_ObjectReference&& from) noexcept
    : ComponentDataReference_ObjectReference() {
    *this = ::std::move(from);
  }

  inline ComponentDataReference_ObjectReference& operator=(const ComponentDataReference_ObjectReference& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentDataReference_ObjectReference& operator=(ComponentDataReference_ObjectReference&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComponentDataReference_ObjectReference& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComponentDataReference_ObjectReference* internal_default_instance() {
    return reinterpret_cast<const ComponentDataReference_ObjectReference*>(
               &_ComponentDataReference_ObjectReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ComponentDataReference_ObjectReference& a, ComponentDataReference_ObjectReference& b) {
    a.Swap(&b);
  }
  inline void Swap(ComponentDataReference_ObjectReference* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentDataReference_ObjectReference* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComponentDataReference_ObjectReference* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ComponentDataReference_ObjectReference>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ComponentDataReference_ObjectReference& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ComponentDataReference_ObjectReference& from) {
    ComponentDataReference_ObjectReference::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentDataReference_ObjectReference* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.ComponentDataReference.ObjectReference";
  }
  protected:
  explicit ComponentDataReference_ObjectReference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdentifierFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // required uint64 object_identifier = 1;
  bool has_object_identifier() const;
  private:
  bool _internal_has_object_identifier() const;
  public:
  void clear_object_identifier();
  uint64_t object_identifier() const;
  void set_object_identifier(uint64_t value);
  private:
  uint64_t _internal_object_identifier() const;
  void _internal_set_object_identifier(uint64_t value);
  public:

  // required uint32 count = 2;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  uint32_t count() const;
  void set_count(uint32_t value);
  private:
  uint32_t _internal_count() const;
  void _internal_set_count(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.ComponentDataReference.ObjectReference)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t object_identifier_;
    uint32_t count_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class ComponentDataReference final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.ComponentDataReference) */ {
 public:
  inline ComponentDataReference() : ComponentDataReference(nullptr) {}
  ~ComponentDataReference() override;
  explicit PROTOBUF_CONSTEXPR ComponentDataReference(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ComponentDataReference(const ComponentDataReference& from);
  ComponentDataReference(ComponentDataReference&& from) noexcept
    : ComponentDataReference() {
    *this = ::std::move(from);
  }

  inline ComponentDataReference& operator=(const ComponentDataReference& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentDataReference& operator=(ComponentDataReference&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComponentDataReference& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComponentDataReference* internal_default_instance() {
    return reinterpret_cast<const ComponentDataReference*>(
               &_ComponentDataReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ComponentDataReference& a, ComponentDataReference& b) {
    a.Swap(&b);
  }
  inline void Swap(ComponentDataReference* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentDataReference* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComponentDataReference* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ComponentDataReference>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ComponentDataReference& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ComponentDataReference& from) {
    ComponentDataReference::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentDataReference* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.ComponentDataReference";
  }
  protected:
  explicit ComponentDataReference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ComponentDataReference_ObjectReference ObjectReference;

  // accessors -------------------------------------------------------

  enum : int {
    kObjectReferenceListFieldNumber = 2,
    kDataIdentifierFieldNumber = 1,
  };
  // repeated .TSP.ComponentDataReference.ObjectReference object_reference_list = 2;
  int object_reference_list_size() const;
  private:
  int _internal_object_reference_list_size() const;
  public:
  void clear_object_reference_list();
  ::TSP::ComponentDataReference_ObjectReference* mutable_object_reference_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentDataReference_ObjectReference >*
      mutable_object_reference_list();
  private:
  const ::TSP::ComponentDataReference_ObjectReference& _internal_object_reference_list(int index) const;
  ::TSP::ComponentDataReference_ObjectReference* _internal_add_object_reference_list();
  public:
  const ::TSP::ComponentDataReference_ObjectReference& object_reference_list(int index) const;
  ::TSP::ComponentDataReference_ObjectReference* add_object_reference_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentDataReference_ObjectReference >&
      object_reference_list() const;

  // required uint64 data_identifier = 1;
  bool has_data_identifier() const;
  private:
  bool _internal_has_data_identifier() const;
  public:
  void clear_data_identifier();
  uint64_t data_identifier() const;
  void set_data_identifier(uint64_t value);
  private:
  uint64_t _internal_data_identifier() const;
  void _internal_set_data_identifier(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.ComponentDataReference)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentDataReference_ObjectReference > object_reference_list_;
    uint64_t data_identifier_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class ObjectUUIDMapEntry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.ObjectUUIDMapEntry) */ {
 public:
  inline ObjectUUIDMapEntry() : ObjectUUIDMapEntry(nullptr) {}
  ~ObjectUUIDMapEntry() override;
  explicit PROTOBUF_CONSTEXPR ObjectUUIDMapEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ObjectUUIDMapEntry(const ObjectUUIDMapEntry& from);
  ObjectUUIDMapEntry(ObjectUUIDMapEntry&& from) noexcept
    : ObjectUUIDMapEntry() {
    *this = ::std::move(from);
  }

  inline ObjectUUIDMapEntry& operator=(const ObjectUUIDMapEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectUUIDMapEntry& operator=(ObjectUUIDMapEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObjectUUIDMapEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const ObjectUUIDMapEntry* internal_default_instance() {
    return reinterpret_cast<const ObjectUUIDMapEntry*>(
               &_ObjectUUIDMapEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ObjectUUIDMapEntry& a, ObjectUUIDMapEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectUUIDMapEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectUUIDMapEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObjectUUIDMapEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ObjectUUIDMapEntry>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ObjectUUIDMapEntry& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ObjectUUIDMapEntry& from) {
    ObjectUUIDMapEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectUUIDMapEntry* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.ObjectUUIDMapEntry";
  }
  protected:
  explicit ObjectUUIDMapEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUuidFieldNumber = 2,
    kIdentifierFieldNumber = 1,
  };
  // required .TSP.UUID uuid = 2;
  bool has_uuid() const;
  private:
  bool _internal_has_uuid() const;
  public:
  void clear_uuid();
  const ::TSP::UUID& uuid() const;
  PROTOBUF_NODISCARD ::TSP::UUID* release_uuid();
  ::TSP::UUID* mutable_uuid();
  void set_allocated_uuid(::TSP::UUID* uuid);
  private:
  const ::TSP::UUID& _internal_uuid() const;
  ::TSP::UUID* _internal_mutable_uuid();
  public:
  void unsafe_arena_set_allocated_uuid(
      ::TSP::UUID* uuid);
  ::TSP::UUID* unsafe_arena_release_uuid();

  // required uint64 identifier = 1;
  bool has_identifier() const;
  private:
  bool _internal_has_identifier() const;
  public:
  void clear_identifier();
  uint64_t identifier() const;
  void set_identifier(uint64_t value);
  private:
  uint64_t _internal_identifier() const;
  void _internal_set_identifier(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.ObjectUUIDMapEntry)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSP::UUID* uuid_;
    uint64_t identifier_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class FeatureInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.FeatureInfo) */ {
 public:
  inline FeatureInfo() : FeatureInfo(nullptr) {}
  ~FeatureInfo() override;
  explicit PROTOBUF_CONSTEXPR FeatureInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FeatureInfo(const FeatureInfo& from);
  FeatureInfo(FeatureInfo&& from) noexcept
    : FeatureInfo() {
    *this = ::std::move(from);
  }

  inline FeatureInfo& operator=(const FeatureInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline FeatureInfo& operator=(FeatureInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FeatureInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const FeatureInfo* internal_default_instance() {
    return reinterpret_cast<const FeatureInfo*>(
               &_FeatureInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(FeatureInfo& a, FeatureInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(FeatureInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FeatureInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FeatureInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FeatureInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FeatureInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const FeatureInfo& from) {
    FeatureInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FeatureInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.FeatureInfo";
  }
  protected:
  explicit FeatureInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReadVersionFieldNumber = 2,
    kWriteVersionFieldNumber = 3,
    kIdentifierFieldNumber = 1,
  };
  // repeated uint32 read_version = 2 [packed = true];
  int read_version_size() const;
  private:
  int _internal_read_version_size() const;
  public:
  void clear_read_version();
  private:
  uint32_t _internal_read_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_read_version() const;
  void _internal_add_read_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_read_version();
  public:
  uint32_t read_version(int index) const;
  void set_read_version(int index, uint32_t value);
  void add_read_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      read_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_read_version();

  // repeated uint32 write_version = 3 [packed = true];
  int write_version_size() const;
  private:
  int _internal_write_version_size() const;
  public:
  void clear_write_version();
  private:
  uint32_t _internal_write_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_write_version() const;
  void _internal_add_write_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_write_version();
  public:
  uint32_t write_version(int index) const;
  void set_write_version(int index, uint32_t value);
  void add_write_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      write_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_write_version();

  // required string identifier = 1;
  bool has_identifier() const;
  private:
  bool _internal_has_identifier() const;
  public:
  void clear_identifier();
  const std::string& identifier() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_identifier(ArgT0&& arg0, ArgT... args);
  std::string* mutable_identifier();
  PROTOBUF_NODISCARD std::string* release_identifier();
  void set_allocated_identifier(std::string* identifier);
  private:
  const std::string& _internal_identifier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_identifier(const std::string& value);
  std::string* _internal_mutable_identifier();
  public:

  // @@protoc_insertion_point(class_scope:TSP.FeatureInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > read_version_;
    mutable std::atomic<int> _read_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > write_version_;
    mutable std::atomic<int> _write_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr identifier_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class PackageMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.PackageMetadata) */ {
 public:
  inline PackageMetadata() : PackageMetadata(nullptr) {}
  ~PackageMetadata() override;
  explicit PROTOBUF_CONSTEXPR PackageMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PackageMetadata(const PackageMetadata& from);
  PackageMetadata(PackageMetadata&& from) noexcept
    : PackageMetadata() {
    *this = ::std::move(from);
  }

  inline PackageMetadata& operator=(const PackageMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackageMetadata& operator=(PackageMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PackageMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const PackageMetadata* internal_default_instance() {
    return reinterpret_cast<const PackageMetadata*>(
               &_PackageMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(PackageMetadata& a, PackageMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(PackageMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PackageMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PackageMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PackageMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PackageMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PackageMetadata& from) {
    PackageMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PackageMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.PackageMetadata";
  }
  protected:
  explicit PackageMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PackageMetadata_PackageType PackageType;
  static constexpr PackageType Default =
    PackageMetadata_PackageType_Default;
  static constexpr PackageType Directory =
    PackageMetadata_PackageType_Directory;
  static constexpr PackageType SingleFile =
    PackageMetadata_PackageType_SingleFile;
  static inline bool PackageType_IsValid(int value) {
    return PackageMetadata_PackageType_IsValid(value);
  }
  static constexpr PackageType PackageType_MIN =
    PackageMetadata_PackageType_PackageType_MIN;
  static constexpr PackageType PackageType_MAX =
    PackageMetadata_PackageType_PackageType_MAX;
  static constexpr int PackageType_ARRAYSIZE =
    PackageMetadata_PackageType_PackageType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  PackageType_descriptor() {
    return PackageMetadata_PackageType_descriptor();
  }
  template<typename T>
  static inline const std::string& PackageType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, PackageType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function PackageType_Name.");
    return PackageMetadata_PackageType_Name(enum_t_value);
  }
  static inline bool PackageType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      PackageType* value) {
    return PackageMetadata_PackageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kComponentsFieldNumber = 3,
    kDatasFieldNumber = 4,
    kReadVersionFieldNumber = 5,
    kWriteVersionFieldNumber = 6,
    kFileFormatVersionFieldNumber = 7,
    kVersionedComponentsFieldNumber = 11,
    kRevisionFieldNumber = 2,
    kDataMetadataMapFieldNumber = 10,
    kLastObjectIdentifierFieldNumber = 1,
    kSaveTokenFieldNumber = 8,
    kPreferredPackageTypeFieldNumber = 9,
  };
  // repeated .TSP.ComponentInfo components = 3;
  int components_size() const;
  private:
  int _internal_components_size() const;
  public:
  void clear_components();
  ::TSP::ComponentInfo* mutable_components(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentInfo >*
      mutable_components();
  private:
  const ::TSP::ComponentInfo& _internal_components(int index) const;
  ::TSP::ComponentInfo* _internal_add_components();
  public:
  const ::TSP::ComponentInfo& components(int index) const;
  ::TSP::ComponentInfo* add_components();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentInfo >&
      components() const;

  // repeated .TSP.DataInfo datas = 4;
  int datas_size() const;
  private:
  int _internal_datas_size() const;
  public:
  void clear_datas();
  ::TSP::DataInfo* mutable_datas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >*
      mutable_datas();
  private:
  const ::TSP::DataInfo& _internal_datas(int index) const;
  ::TSP::DataInfo* _internal_add_datas();
  public:
  const ::TSP::DataInfo& datas(int index) const;
  ::TSP::DataInfo* add_datas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >&
      datas() const;

  // repeated uint32 read_version = 5 [packed = true];
  int read_version_size() const;
  private:
  int _internal_read_version_size() const;
  public:
  void clear_read_version();
  private:
  uint32_t _internal_read_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_read_version() const;
  void _internal_add_read_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_read_version();
  public:
  uint32_t read_version(int index) const;
  void set_read_version(int index, uint32_t value);
  void add_read_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      read_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_read_version();

  // repeated uint32 write_version = 6 [packed = true];
  int write_version_size() const;
  private:
  int _internal_write_version_size() const;
  public:
  void clear_write_version();
  private:
  uint32_t _internal_write_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_write_version() const;
  void _internal_add_write_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_write_version();
  public:
  uint32_t write_version(int index) const;
  void set_write_version(int index, uint32_t value);
  void add_write_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      write_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_write_version();

  // repeated uint32 file_format_version = 7 [packed = true];
  int file_format_version_size() const;
  private:
  int _internal_file_format_version_size() const;
  public:
  void clear_file_format_version();
  private:
  uint32_t _internal_file_format_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_file_format_version() const;
  void _internal_add_file_format_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_file_format_version();
  public:
  uint32_t file_format_version(int index) const;
  void set_file_format_version(int index, uint32_t value);
  void add_file_format_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      file_format_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_file_format_version();

  // repeated .TSP.ComponentInfo versioned_components = 11;
  int versioned_components_size() const;
  private:
  int _internal_versioned_components_size() const;
  public:
  void clear_versioned_components();
  ::TSP::ComponentInfo* mutable_versioned_components(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentInfo >*
      mutable_versioned_components();
  private:
  const ::TSP::ComponentInfo& _internal_versioned_components(int index) const;
  ::TSP::ComponentInfo* _internal_add_versioned_components();
  public:
  const ::TSP::ComponentInfo& versioned_components(int index) const;
  ::TSP::ComponentInfo* add_versioned_components();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentInfo >&
      versioned_components() const;

  // optional .TSP.DocumentRevision revision = 2;
  bool has_revision() const;
  private:
  bool _internal_has_revision() const;
  public:
  void clear_revision();
  const ::TSP::DocumentRevision& revision() const;
  PROTOBUF_NODISCARD ::TSP::DocumentRevision* release_revision();
  ::TSP::DocumentRevision* mutable_revision();
  void set_allocated_revision(::TSP::DocumentRevision* revision);
  private:
  const ::TSP::DocumentRevision& _internal_revision() const;
  ::TSP::DocumentRevision* _internal_mutable_revision();
  public:
  void unsafe_arena_set_allocated_revision(
      ::TSP::DocumentRevision* revision);
  ::TSP::DocumentRevision* unsafe_arena_release_revision();

  // optional .TSP.Reference data_metadata_map = 10;
  bool has_data_metadata_map() const;
  private:
  bool _internal_has_data_metadata_map() const;
  public:
  void clear_data_metadata_map();
  const ::TSP::Reference& data_metadata_map() const;
  PROTOBUF_NODISCARD ::TSP::Reference* release_data_metadata_map();
  ::TSP::Reference* mutable_data_metadata_map();
  void set_allocated_data_metadata_map(::TSP::Reference* data_metadata_map);
  private:
  const ::TSP::Reference& _internal_data_metadata_map() const;
  ::TSP::Reference* _internal_mutable_data_metadata_map();
  public:
  void unsafe_arena_set_allocated_data_metadata_map(
      ::TSP::Reference* data_metadata_map);
  ::TSP::Reference* unsafe_arena_release_data_metadata_map();

  // required uint64 last_object_identifier = 1;
  bool has_last_object_identifier() const;
  private:
  bool _internal_has_last_object_identifier() const;
  public:
  void clear_last_object_identifier();
  uint64_t last_object_identifier() const;
  void set_last_object_identifier(uint64_t value);
  private:
  uint64_t _internal_last_object_identifier() const;
  void _internal_set_last_object_identifier(uint64_t value);
  public:

  // optional uint64 save_token = 8 [default = 0];
  bool has_save_token() const;
  private:
  bool _internal_has_save_token() const;
  public:
  void clear_save_token();
  uint64_t save_token() const;
  void set_save_token(uint64_t value);
  private:
  uint64_t _internal_save_token() const;
  void _internal_set_save_token(uint64_t value);
  public:

  // optional .TSP.PackageMetadata.PackageType preferred_package_type = 9 [default = Default];
  bool has_preferred_package_type() const;
  private:
  bool _internal_has_preferred_package_type() const;
  public:
  void clear_preferred_package_type();
  ::TSP::PackageMetadata_PackageType preferred_package_type() const;
  void set_preferred_package_type(::TSP::PackageMetadata_PackageType value);
  private:
  ::TSP::PackageMetadata_PackageType _internal_preferred_package_type() const;
  void _internal_set_preferred_package_type(::TSP::PackageMetadata_PackageType value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.PackageMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentInfo > components_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo > datas_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > read_version_;
    mutable std::atomic<int> _read_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > write_version_;
    mutable std::atomic<int> _write_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > file_format_version_;
    mutable std::atomic<int> _file_format_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentInfo > versioned_components_;
    ::TSP::DocumentRevision* revision_;
    ::TSP::Reference* data_metadata_map_;
    uint64_t last_object_identifier_;
    uint64_t save_token_;
    int preferred_package_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class DocumentRevision final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.DocumentRevision) */ {
 public:
  inline DocumentRevision() : DocumentRevision(nullptr) {}
  ~DocumentRevision() override;
  explicit PROTOBUF_CONSTEXPR DocumentRevision(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DocumentRevision(const DocumentRevision& from);
  DocumentRevision(DocumentRevision&& from) noexcept
    : DocumentRevision() {
    *this = ::std::move(from);
  }

  inline DocumentRevision& operator=(const DocumentRevision& from) {
    CopyFrom(from);
    return *this;
  }
  inline DocumentRevision& operator=(DocumentRevision&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DocumentRevision& default_instance() {
    return *internal_default_instance();
  }
  static inline const DocumentRevision* internal_default_instance() {
    return reinterpret_cast<const DocumentRevision*>(
               &_DocumentRevision_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DocumentRevision& a, DocumentRevision& b) {
    a.Swap(&b);
  }
  inline void Swap(DocumentRevision* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DocumentRevision* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DocumentRevision* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DocumentRevision>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DocumentRevision& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DocumentRevision& from) {
    DocumentRevision::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DocumentRevision* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.DocumentRevision";
  }
  protected:
  explicit DocumentRevision(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdentifierFieldNumber = 2,
    kSequence64FieldNumber = 1,
    kSequence32FieldNumber = 3,
  };
  // optional string identifier = 2;
  bool has_identifier() const;
  private:
  bool _internal_has_identifier() const;
  public:
  void clear_identifier();
  const std::string& identifier() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_identifier(ArgT0&& arg0, ArgT... args);
  std::string* mutable_identifier();
  PROTOBUF_NODISCARD std::string* release_identifier();
  void set_allocated_identifier(std::string* identifier);
  private:
  const std::string& _internal_identifier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_identifier(const std::string& value);
  std::string* _internal_mutable_identifier();
  public:

  // optional uint64 sequence_64 = 1 [default = 0];
  bool has_sequence_64() const;
  private:
  bool _internal_has_sequence_64() const;
  public:
  void clear_sequence_64();
  uint64_t sequence_64() const;
  void set_sequence_64(uint64_t value);
  private:
  uint64_t _internal_sequence_64() const;
  void _internal_set_sequence_64(uint64_t value);
  public:

  // optional int32 sequence_32 = 3 [default = 0];
  bool has_sequence_32() const;
  private:
  bool _internal_has_sequence_32() const;
  public:
  void clear_sequence_32();
  int32_t sequence_32() const;
  void set_sequence_32(int32_t value);
  private:
  int32_t _internal_sequence_32() const;
  void _internal_set_sequence_32(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.DocumentRevision)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr identifier_;
    uint64_t sequence_64_;
    int32_t sequence_32_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class PasteboardMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.PasteboardMetadata) */ {
 public:
  inline PasteboardMetadata() : PasteboardMetadata(nullptr) {}
  ~PasteboardMetadata() override;
  explicit PROTOBUF_CONSTEXPR PasteboardMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PasteboardMetadata(const PasteboardMetadata& from);
  PasteboardMetadata(PasteboardMetadata&& from) noexcept
    : PasteboardMetadata() {
    *this = ::std::move(from);
  }

  inline PasteboardMetadata& operator=(const PasteboardMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline PasteboardMetadata& operator=(PasteboardMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PasteboardMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const PasteboardMetadata* internal_default_instance() {
    return reinterpret_cast<const PasteboardMetadata*>(
               &_PasteboardMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(PasteboardMetadata& a, PasteboardMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(PasteboardMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PasteboardMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PasteboardMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PasteboardMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PasteboardMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PasteboardMetadata& from) {
    PasteboardMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PasteboardMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.PasteboardMetadata";
  }
  protected:
  explicit PasteboardMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
    kDatasFieldNumber = 3,
    kReadVersionFieldNumber = 7,
    kAppNameFieldNumber = 2,
    kSourceDocumentUuidFieldNumber = 5,
    kDataMetadataMapFieldNumber = 6,
  };
  // repeated uint32 version = 1 [packed = true];
  int version_size() const;
  private:
  int _internal_version_size() const;
  public:
  void clear_version();
  private:
  uint32_t _internal_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_version() const;
  void _internal_add_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_version();
  public:
  uint32_t version(int index) const;
  void set_version(int index, uint32_t value);
  void add_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_version();

  // repeated .TSP.DataInfo datas = 3;
  int datas_size() const;
  private:
  int _internal_datas_size() const;
  public:
  void clear_datas();
  ::TSP::DataInfo* mutable_datas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >*
      mutable_datas();
  private:
  const ::TSP::DataInfo& _internal_datas(int index) const;
  ::TSP::DataInfo* _internal_add_datas();
  public:
  const ::TSP::DataInfo& datas(int index) const;
  ::TSP::DataInfo* add_datas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >&
      datas() const;

  // repeated uint32 read_version = 7 [packed = true];
  int read_version_size() const;
  private:
  int _internal_read_version_size() const;
  public:
  void clear_read_version();
  private:
  uint32_t _internal_read_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_read_version() const;
  void _internal_add_read_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_read_version();
  public:
  uint32_t read_version(int index) const;
  void set_read_version(int index, uint32_t value);
  void add_read_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      read_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_read_version();

  // required string app_name = 2;
  bool has_app_name() const;
  private:
  bool _internal_has_app_name() const;
  public:
  void clear_app_name();
  const std::string& app_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_app_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_app_name();
  PROTOBUF_NODISCARD std::string* release_app_name();
  void set_allocated_app_name(std::string* app_name);
  private:
  const std::string& _internal_app_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_name(const std::string& value);
  std::string* _internal_mutable_app_name();
  public:

  // optional .TSP.UUID source_document_uuid = 5;
  bool has_source_document_uuid() const;
  private:
  bool _internal_has_source_document_uuid() const;
  public:
  void clear_source_document_uuid();
  const ::TSP::UUID& source_document_uuid() const;
  PROTOBUF_NODISCARD ::TSP::UUID* release_source_document_uuid();
  ::TSP::UUID* mutable_source_document_uuid();
  void set_allocated_source_document_uuid(::TSP::UUID* source_document_uuid);
  private:
  const ::TSP::UUID& _internal_source_document_uuid() const;
  ::TSP::UUID* _internal_mutable_source_document_uuid();
  public:
  void unsafe_arena_set_allocated_source_document_uuid(
      ::TSP::UUID* source_document_uuid);
  ::TSP::UUID* unsafe_arena_release_source_document_uuid();

  // optional .TSP.Reference data_metadata_map = 6;
  bool has_data_metadata_map() const;
  private:
  bool _internal_has_data_metadata_map() const;
  public:
  void clear_data_metadata_map();
  const ::TSP::Reference& data_metadata_map() const;
  PROTOBUF_NODISCARD ::TSP::Reference* release_data_metadata_map();
  ::TSP::Reference* mutable_data_metadata_map();
  void set_allocated_data_metadata_map(::TSP::Reference* data_metadata_map);
  private:
  const ::TSP::Reference& _internal_data_metadata_map() const;
  ::TSP::Reference* _internal_mutable_data_metadata_map();
  public:
  void unsafe_arena_set_allocated_data_metadata_map(
      ::TSP::Reference* data_metadata_map);
  ::TSP::Reference* unsafe_arena_release_data_metadata_map();

  // @@protoc_insertion_point(class_scope:TSP.PasteboardMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > version_;
    mutable std::atomic<int> _version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo > datas_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > read_version_;
    mutable std::atomic<int> _read_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr app_name_;
    ::TSP::UUID* source_document_uuid_;
    ::TSP::Reference* data_metadata_map_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class DataInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.DataInfo) */ {
 public:
  inline DataInfo() : DataInfo(nullptr) {}
  ~DataInfo() override;
  explicit PROTOBUF_CONSTEXPR DataInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DataInfo(const DataInfo& from);
  DataInfo(DataInfo&& from) noexcept
    : DataInfo() {
    *this = ::std::move(from);
  }

  inline DataInfo& operator=(const DataInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataInfo& operator=(DataInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataInfo* internal_default_instance() {
    return reinterpret_cast<const DataInfo*>(
               &_DataInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DataInfo& a, DataInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(DataInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DataInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DataInfo& from) {
    DataInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.DataInfo";
  }
  protected:
  explicit DataInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataInfo_DownloadPriority DownloadPriority;
  static constexpr DownloadPriority High =
    DataInfo_DownloadPriority_High;
  static constexpr DownloadPriority Default =
    DataInfo_DownloadPriority_Default;
  static inline bool DownloadPriority_IsValid(int value) {
    return DataInfo_DownloadPriority_IsValid(value);
  }
  static constexpr DownloadPriority DownloadPriority_MIN =
    DataInfo_DownloadPriority_DownloadPriority_MIN;
  static constexpr DownloadPriority DownloadPriority_MAX =
    DataInfo_DownloadPriority_DownloadPriority_MAX;
  static constexpr int DownloadPriority_ARRAYSIZE =
    DataInfo_DownloadPriority_DownloadPriority_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  DownloadPriority_descriptor() {
    return DataInfo_DownloadPriority_descriptor();
  }
  template<typename T>
  static inline const std::string& DownloadPriority_Name(T enum_t_value) {
    static_assert(::std::is_same<T, DownloadPriority>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function DownloadPriority_Name.");
    return DataInfo_DownloadPriority_Name(enum_t_value);
  }
  static inline bool DownloadPriority_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      DownloadPriority* value) {
    return DataInfo_DownloadPriority_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kDigestFieldNumber = 2,
    kPreferredFileNameFieldNumber = 3,
    kFileNameFieldNumber = 4,
    kDocumentResourceLocatorFieldNumber = 5,
    kSourceBookmarkDataFieldNumber = 6,
    kRemoteUrlFieldNumber = 7,
    kLastMismatchedDigestFieldNumber = 12,
    kPasteboardExternalFilePathFieldNumber = 99,
    kAttributesFieldNumber = 10,
    kEncryptionInfoFieldNumber = 11,
    kUnmaterializedRangesFieldNumber = 13,
    kIdentifierFieldNumber = 1,
    kCanDownloadFieldNumber = 8,
    kRemoteDataHasPackageStorageFieldNumber = 15,
    kUploadStatusFieldNumber = 16,
    kRemoteDataLengthFieldNumber = 14,
    kRemoteDataMtimeFieldNumber = 17,
    kMaterializedLengthFieldNumber = 18,
    kDownloadPriorityFieldNumber = 9,
  };
  // required bytes digest = 2;
  bool has_digest() const;
  private:
  bool _internal_has_digest() const;
  public:
  void clear_digest();
  const std::string& digest() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_digest(ArgT0&& arg0, ArgT... args);
  std::string* mutable_digest();
  PROTOBUF_NODISCARD std::string* release_digest();
  void set_allocated_digest(std::string* digest);
  private:
  const std::string& _internal_digest() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_digest(const std::string& value);
  std::string* _internal_mutable_digest();
  public:

  // required string preferred_file_name = 3;
  bool has_preferred_file_name() const;
  private:
  bool _internal_has_preferred_file_name() const;
  public:
  void clear_preferred_file_name();
  const std::string& preferred_file_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_preferred_file_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_preferred_file_name();
  PROTOBUF_NODISCARD std::string* release_preferred_file_name();
  void set_allocated_preferred_file_name(std::string* preferred_file_name);
  private:
  const std::string& _internal_preferred_file_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_preferred_file_name(const std::string& value);
  std::string* _internal_mutable_preferred_file_name();
  public:

  // optional string file_name = 4;
  bool has_file_name() const;
  private:
  bool _internal_has_file_name() const;
  public:
  void clear_file_name();
  const std::string& file_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_file_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_file_name();
  PROTOBUF_NODISCARD std::string* release_file_name();
  void set_allocated_file_name(std::string* file_name);
  private:
  const std::string& _internal_file_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_name(const std::string& value);
  std::string* _internal_mutable_file_name();
  public:

  // optional string document_resource_locator = 5;
  bool has_document_resource_locator() const;
  private:
  bool _internal_has_document_resource_locator() const;
  public:
  void clear_document_resource_locator();
  const std::string& document_resource_locator() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_document_resource_locator(ArgT0&& arg0, ArgT... args);
  std::string* mutable_document_resource_locator();
  PROTOBUF_NODISCARD std::string* release_document_resource_locator();
  void set_allocated_document_resource_locator(std::string* document_resource_locator);
  private:
  const std::string& _internal_document_resource_locator() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_document_resource_locator(const std::string& value);
  std::string* _internal_mutable_document_resource_locator();
  public:

  // optional bytes source_bookmark_data = 6;
  bool has_source_bookmark_data() const;
  private:
  bool _internal_has_source_bookmark_data() const;
  public:
  void clear_source_bookmark_data();
  const std::string& source_bookmark_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_source_bookmark_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_source_bookmark_data();
  PROTOBUF_NODISCARD std::string* release_source_bookmark_data();
  void set_allocated_source_bookmark_data(std::string* source_bookmark_data);
  private:
  const std::string& _internal_source_bookmark_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_bookmark_data(const std::string& value);
  std::string* _internal_mutable_source_bookmark_data();
  public:

  // optional string remote_url = 7;
  bool has_remote_url() const;
  private:
  bool _internal_has_remote_url() const;
  public:
  void clear_remote_url();
  const std::string& remote_url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_remote_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_remote_url();
  PROTOBUF_NODISCARD std::string* release_remote_url();
  void set_allocated_remote_url(std::string* remote_url);
  private:
  const std::string& _internal_remote_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remote_url(const std::string& value);
  std::string* _internal_mutable_remote_url();
  public:

  // optional bytes last_mismatched_digest = 12;
  bool has_last_mismatched_digest() const;
  private:
  bool _internal_has_last_mismatched_digest() const;
  public:
  void clear_last_mismatched_digest();
  const std::string& last_mismatched_digest() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_last_mismatched_digest(ArgT0&& arg0, ArgT... args);
  std::string* mutable_last_mismatched_digest();
  PROTOBUF_NODISCARD std::string* release_last_mismatched_digest();
  void set_allocated_last_mismatched_digest(std::string* last_mismatched_digest);
  private:
  const std::string& _internal_last_mismatched_digest() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_mismatched_digest(const std::string& value);
  std::string* _internal_mutable_last_mismatched_digest();
  public:

  // optional string pasteboard_external_file_path = 99;
  bool has_pasteboard_external_file_path() const;
  private:
  bool _internal_has_pasteboard_external_file_path() const;
  public:
  void clear_pasteboard_external_file_path();
  const std::string& pasteboard_external_file_path() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_pasteboard_external_file_path(ArgT0&& arg0, ArgT... args);
  std::string* mutable_pasteboard_external_file_path();
  PROTOBUF_NODISCARD std::string* release_pasteboard_external_file_path();
  void set_allocated_pasteboard_external_file_path(std::string* pasteboard_external_file_path);
  private:
  const std::string& _internal_pasteboard_external_file_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pasteboard_external_file_path(const std::string& value);
  std::string* _internal_mutable_pasteboard_external_file_path();
  public:

  // optional .TSP.DataAttributes attributes = 10;
  bool has_attributes() const;
  private:
  bool _internal_has_attributes() const;
  public:
  void clear_attributes();
  const ::TSP::DataAttributes& attributes() const;
  PROTOBUF_NODISCARD ::TSP::DataAttributes* release_attributes();
  ::TSP::DataAttributes* mutable_attributes();
  void set_allocated_attributes(::TSP::DataAttributes* attributes);
  private:
  const ::TSP::DataAttributes& _internal_attributes() const;
  ::TSP::DataAttributes* _internal_mutable_attributes();
  public:
  void unsafe_arena_set_allocated_attributes(
      ::TSP::DataAttributes* attributes);
  ::TSP::DataAttributes* unsafe_arena_release_attributes();

  // optional .TSP.EncryptionInfo encryption_info = 11;
  bool has_encryption_info() const;
  private:
  bool _internal_has_encryption_info() const;
  public:
  void clear_encryption_info();
  const ::TSP::EncryptionInfo& encryption_info() const;
  PROTOBUF_NODISCARD ::TSP::EncryptionInfo* release_encryption_info();
  ::TSP::EncryptionInfo* mutable_encryption_info();
  void set_allocated_encryption_info(::TSP::EncryptionInfo* encryption_info);
  private:
  const ::TSP::EncryptionInfo& _internal_encryption_info() const;
  ::TSP::EncryptionInfo* _internal_mutable_encryption_info();
  public:
  void unsafe_arena_set_allocated_encryption_info(
      ::TSP::EncryptionInfo* encryption_info);
  ::TSP::EncryptionInfo* unsafe_arena_release_encryption_info();

  // optional .TSP.IndexSet unmaterialized_ranges = 13;
  bool has_unmaterialized_ranges() const;
  private:
  bool _internal_has_unmaterialized_ranges() const;
  public:
  void clear_unmaterialized_ranges();
  const ::TSP::IndexSet& unmaterialized_ranges() const;
  PROTOBUF_NODISCARD ::TSP::IndexSet* release_unmaterialized_ranges();
  ::TSP::IndexSet* mutable_unmaterialized_ranges();
  void set_allocated_unmaterialized_ranges(::TSP::IndexSet* unmaterialized_ranges);
  private:
  const ::TSP::IndexSet& _internal_unmaterialized_ranges() const;
  ::TSP::IndexSet* _internal_mutable_unmaterialized_ranges();
  public:
  void unsafe_arena_set_allocated_unmaterialized_ranges(
      ::TSP::IndexSet* unmaterialized_ranges);
  ::TSP::IndexSet* unsafe_arena_release_unmaterialized_ranges();

  // required uint64 identifier = 1;
  bool has_identifier() const;
  private:
  bool _internal_has_identifier() const;
  public:
  void clear_identifier();
  uint64_t identifier() const;
  void set_identifier(uint64_t value);
  private:
  uint64_t _internal_identifier() const;
  void _internal_set_identifier(uint64_t value);
  public:

  // optional bool can_download = 8 [default = false];
  bool has_can_download() const;
  private:
  bool _internal_has_can_download() const;
  public:
  void clear_can_download();
  bool can_download() const;
  void set_can_download(bool value);
  private:
  bool _internal_can_download() const;
  void _internal_set_can_download(bool value);
  public:

  // optional bool remote_data_has_package_storage = 15 [default = false];
  bool has_remote_data_has_package_storage() const;
  private:
  bool _internal_has_remote_data_has_package_storage() const;
  public:
  void clear_remote_data_has_package_storage();
  bool remote_data_has_package_storage() const;
  void set_remote_data_has_package_storage(bool value);
  private:
  bool _internal_remote_data_has_package_storage() const;
  void _internal_set_remote_data_has_package_storage(bool value);
  public:

  // optional .TSP.DataUploadStatus upload_status = 16 [default = DataUploadStatus_Pending];
  bool has_upload_status() const;
  private:
  bool _internal_has_upload_status() const;
  public:
  void clear_upload_status();
  ::TSP::DataUploadStatus upload_status() const;
  void set_upload_status(::TSP::DataUploadStatus value);
  private:
  ::TSP::DataUploadStatus _internal_upload_status() const;
  void _internal_set_upload_status(::TSP::DataUploadStatus value);
  public:

  // optional uint64 remote_data_length = 14;
  bool has_remote_data_length() const;
  private:
  bool _internal_has_remote_data_length() const;
  public:
  void clear_remote_data_length();
  uint64_t remote_data_length() const;
  void set_remote_data_length(uint64_t value);
  private:
  uint64_t _internal_remote_data_length() const;
  void _internal_set_remote_data_length(uint64_t value);
  public:

  // optional double remote_data_mtime = 17;
  bool has_remote_data_mtime() const;
  private:
  bool _internal_has_remote_data_mtime() const;
  public:
  void clear_remote_data_mtime();
  double remote_data_mtime() const;
  void set_remote_data_mtime(double value);
  private:
  double _internal_remote_data_mtime() const;
  void _internal_set_remote_data_mtime(double value);
  public:

  // optional uint64 materialized_length = 18;
  bool has_materialized_length() const;
  private:
  bool _internal_has_materialized_length() const;
  public:
  void clear_materialized_length();
  uint64_t materialized_length() const;
  void set_materialized_length(uint64_t value);
  private:
  uint64_t _internal_materialized_length() const;
  void _internal_set_materialized_length(uint64_t value);
  public:

  // optional .TSP.DataInfo.DownloadPriority download_priority = 9 [default = Default];
  bool has_download_priority() const;
  private:
  bool _internal_has_download_priority() const;
  public:
  void clear_download_priority();
  ::TSP::DataInfo_DownloadPriority download_priority() const;
  void set_download_priority(::TSP::DataInfo_DownloadPriority value);
  private:
  ::TSP::DataInfo_DownloadPriority _internal_download_priority() const;
  void _internal_set_download_priority(::TSP::DataInfo_DownloadPriority value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.DataInfo)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr digest_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr preferred_file_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr document_resource_locator_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr source_bookmark_data_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr remote_url_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_mismatched_digest_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pasteboard_external_file_path_;
    ::TSP::DataAttributes* attributes_;
    ::TSP::EncryptionInfo* encryption_info_;
    ::TSP::IndexSet* unmaterialized_ranges_;
    uint64_t identifier_;
    bool can_download_;
    bool remote_data_has_package_storage_;
    int upload_status_;
    uint64_t remote_data_length_;
    double remote_data_mtime_;
    uint64_t materialized_length_;
    int download_priority_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class DataMetadataMap_DataMetadataMapEntry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.DataMetadataMap.DataMetadataMapEntry) */ {
 public:
  inline DataMetadataMap_DataMetadataMapEntry() : DataMetadataMap_DataMetadataMapEntry(nullptr) {}
  ~DataMetadataMap_DataMetadataMapEntry() override;
  explicit PROTOBUF_CONSTEXPR DataMetadataMap_DataMetadataMapEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DataMetadataMap_DataMetadataMapEntry(const DataMetadataMap_DataMetadataMapEntry& from);
  DataMetadataMap_DataMetadataMapEntry(DataMetadataMap_DataMetadataMapEntry&& from) noexcept
    : DataMetadataMap_DataMetadataMapEntry() {
    *this = ::std::move(from);
  }

  inline DataMetadataMap_DataMetadataMapEntry& operator=(const DataMetadataMap_DataMetadataMapEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMetadataMap_DataMetadataMapEntry& operator=(DataMetadataMap_DataMetadataMapEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMetadataMap_DataMetadataMapEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMetadataMap_DataMetadataMapEntry* internal_default_instance() {
    return reinterpret_cast<const DataMetadataMap_DataMetadataMapEntry*>(
               &_DataMetadataMap_DataMetadataMapEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(DataMetadataMap_DataMetadataMapEntry& a, DataMetadataMap_DataMetadataMapEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMetadataMap_DataMetadataMapEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMetadataMap_DataMetadataMapEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMetadataMap_DataMetadataMapEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMetadataMap_DataMetadataMapEntry>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DataMetadataMap_DataMetadataMapEntry& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DataMetadataMap_DataMetadataMapEntry& from) {
    DataMetadataMap_DataMetadataMapEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMetadataMap_DataMetadataMapEntry* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.DataMetadataMap.DataMetadataMapEntry";
  }
  protected:
  explicit DataMetadataMap_DataMetadataMapEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataMetadataFieldNumber = 2,
    kDataIdentifierFieldNumber = 1,
  };
  // required .TSP.Reference data_metadata = 2;
  bool has_data_metadata() const;
  private:
  bool _internal_has_data_metadata() const;
  public:
  void clear_data_metadata();
  const ::TSP::Reference& data_metadata() const;
  PROTOBUF_NODISCARD ::TSP::Reference* release_data_metadata();
  ::TSP::Reference* mutable_data_metadata();
  void set_allocated_data_metadata(::TSP::Reference* data_metadata);
  private:
  const ::TSP::Reference& _internal_data_metadata() const;
  ::TSP::Reference* _internal_mutable_data_metadata();
  public:
  void unsafe_arena_set_allocated_data_metadata(
      ::TSP::Reference* data_metadata);
  ::TSP::Reference* unsafe_arena_release_data_metadata();

  // required uint64 data_identifier = 1;
  bool has_data_identifier() const;
  private:
  bool _internal_has_data_identifier() const;
  public:
  void clear_data_identifier();
  uint64_t data_identifier() const;
  void set_data_identifier(uint64_t value);
  private:
  uint64_t _internal_data_identifier() const;
  void _internal_set_data_identifier(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.DataMetadataMap.DataMetadataMapEntry)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSP::Reference* data_metadata_;
    uint64_t data_identifier_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class DataMetadataMap final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.DataMetadataMap) */ {
 public:
  inline DataMetadataMap() : DataMetadataMap(nullptr) {}
  ~DataMetadataMap() override;
  explicit PROTOBUF_CONSTEXPR DataMetadataMap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DataMetadataMap(const DataMetadataMap& from);
  DataMetadataMap(DataMetadataMap&& from) noexcept
    : DataMetadataMap() {
    *this = ::std::move(from);
  }

  inline DataMetadataMap& operator=(const DataMetadataMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMetadataMap& operator=(DataMetadataMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMetadataMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMetadataMap* internal_default_instance() {
    return reinterpret_cast<const DataMetadataMap*>(
               &_DataMetadataMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(DataMetadataMap& a, DataMetadataMap& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMetadataMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMetadataMap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMetadataMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMetadataMap>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DataMetadataMap& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DataMetadataMap& from) {
    DataMetadataMap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMetadataMap* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.DataMetadataMap";
  }
  protected:
  explicit DataMetadataMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DataMetadataMap_DataMetadataMapEntry DataMetadataMapEntry;

  // accessors -------------------------------------------------------

  enum : int {
    kDataMetadataEntriesFieldNumber = 1,
  };
  // repeated .TSP.DataMetadataMap.DataMetadataMapEntry data_metadata_entries = 1;
  int data_metadata_entries_size() const;
  private:
  int _internal_data_metadata_entries_size() const;
  public:
  void clear_data_metadata_entries();
  ::TSP::DataMetadataMap_DataMetadataMapEntry* mutable_data_metadata_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataMetadataMap_DataMetadataMapEntry >*
      mutable_data_metadata_entries();
  private:
  const ::TSP::DataMetadataMap_DataMetadataMapEntry& _internal_data_metadata_entries(int index) const;
  ::TSP::DataMetadataMap_DataMetadataMapEntry* _internal_add_data_metadata_entries();
  public:
  const ::TSP::DataMetadataMap_DataMetadataMapEntry& data_metadata_entries(int index) const;
  ::TSP::DataMetadataMap_DataMetadataMapEntry* add_data_metadata_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataMetadataMap_DataMetadataMapEntry >&
      data_metadata_entries() const;

  // @@protoc_insertion_point(class_scope:TSP.DataMetadataMap)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataMetadataMap_DataMetadataMapEntry > data_metadata_entries_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class DataMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.DataMetadata) */ {
 public:
  inline DataMetadata() : DataMetadata(nullptr) {}
  ~DataMetadata() override;
  explicit PROTOBUF_CONSTEXPR DataMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DataMetadata(const DataMetadata& from);
  DataMetadata(DataMetadata&& from) noexcept
    : DataMetadata() {
    *this = ::std::move(from);
  }

  inline DataMetadata& operator=(const DataMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataMetadata& operator=(DataMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataMetadata* internal_default_instance() {
    return reinterpret_cast<const DataMetadata*>(
               &_DataMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(DataMetadata& a, DataMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(DataMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DataMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DataMetadata& from) {
    DataMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.DataMetadata";
  }
  protected:
  explicit DataMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFallbackColorFieldNumber = 1,
  };
  // optional .TSP.Color fallback_color = 1;
  bool has_fallback_color() const;
  private:
  bool _internal_has_fallback_color() const;
  public:
  void clear_fallback_color();
  const ::TSP::Color& fallback_color() const;
  PROTOBUF_NODISCARD ::TSP::Color* release_fallback_color();
  ::TSP::Color* mutable_fallback_color();
  void set_allocated_fallback_color(::TSP::Color* fallback_color);
  private:
  const ::TSP::Color& _internal_fallback_color() const;
  ::TSP::Color* _internal_mutable_fallback_color();
  public:
  void unsafe_arena_set_allocated_fallback_color(
      ::TSP::Color* fallback_color);
  ::TSP::Color* unsafe_arena_release_fallback_color();

  // @@protoc_insertion_point(class_scope:TSP.DataMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSP::Color* fallback_color_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class EncryptionInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.EncryptionInfo) */ {
 public:
  inline EncryptionInfo() : EncryptionInfo(nullptr) {}
  ~EncryptionInfo() override;
  explicit PROTOBUF_CONSTEXPR EncryptionInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EncryptionInfo(const EncryptionInfo& from);
  EncryptionInfo(EncryptionInfo&& from) noexcept
    : EncryptionInfo() {
    *this = ::std::move(from);
  }

  inline EncryptionInfo& operator=(const EncryptionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline EncryptionInfo& operator=(EncryptionInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EncryptionInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const EncryptionInfo* internal_default_instance() {
    return reinterpret_cast<const EncryptionInfo*>(
               &_EncryptionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(EncryptionInfo& a, EncryptionInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(EncryptionInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EncryptionInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EncryptionInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EncryptionInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EncryptionInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EncryptionInfo& from) {
    EncryptionInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptionInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.EncryptionInfo";
  }
  protected:
  explicit EncryptionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlockInfosFieldNumber = 3,
    kDecodedLengthFieldNumber = 1,
    kPreferredBlockSizeFieldNumber = 2,
  };
  // repeated .TSP.EncryptionBlockInfo block_infos = 3;
  int block_infos_size() const;
  private:
  int _internal_block_infos_size() const;
  public:
  void clear_block_infos();
  ::TSP::EncryptionBlockInfo* mutable_block_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::EncryptionBlockInfo >*
      mutable_block_infos();
  private:
  const ::TSP::EncryptionBlockInfo& _internal_block_infos(int index) const;
  ::TSP::EncryptionBlockInfo* _internal_add_block_infos();
  public:
  const ::TSP::EncryptionBlockInfo& block_infos(int index) const;
  ::TSP::EncryptionBlockInfo* add_block_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::EncryptionBlockInfo >&
      block_infos() const;

  // optional uint64 decoded_length = 1;
  bool has_decoded_length() const;
  private:
  bool _internal_has_decoded_length() const;
  public:
  void clear_decoded_length();
  uint64_t decoded_length() const;
  void set_decoded_length(uint64_t value);
  private:
  uint64_t _internal_decoded_length() const;
  void _internal_set_decoded_length(uint64_t value);
  public:

  // optional uint64 preferred_block_size = 2;
  bool has_preferred_block_size() const;
  private:
  bool _internal_has_preferred_block_size() const;
  public:
  void clear_preferred_block_size();
  uint64_t preferred_block_size() const;
  void set_preferred_block_size(uint64_t value);
  private:
  uint64_t _internal_preferred_block_size() const;
  void _internal_set_preferred_block_size(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.EncryptionInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::EncryptionBlockInfo > block_infos_;
    uint64_t decoded_length_;
    uint64_t preferred_block_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class EncryptionBlockInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.EncryptionBlockInfo) */ {
 public:
  inline EncryptionBlockInfo() : EncryptionBlockInfo(nullptr) {}
  ~EncryptionBlockInfo() override;
  explicit PROTOBUF_CONSTEXPR EncryptionBlockInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EncryptionBlockInfo(const EncryptionBlockInfo& from);
  EncryptionBlockInfo(EncryptionBlockInfo&& from) noexcept
    : EncryptionBlockInfo() {
    *this = ::std::move(from);
  }

  inline EncryptionBlockInfo& operator=(const EncryptionBlockInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline EncryptionBlockInfo& operator=(EncryptionBlockInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EncryptionBlockInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const EncryptionBlockInfo* internal_default_instance() {
    return reinterpret_cast<const EncryptionBlockInfo*>(
               &_EncryptionBlockInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(EncryptionBlockInfo& a, EncryptionBlockInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(EncryptionBlockInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EncryptionBlockInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EncryptionBlockInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EncryptionBlockInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EncryptionBlockInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EncryptionBlockInfo& from) {
    EncryptionBlockInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptionBlockInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.EncryptionBlockInfo";
  }
  protected:
  explicit EncryptionBlockInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEncodedLengthFieldNumber = 1,
    kDecodedLengthFieldNumber = 2,
  };
  // required uint64 encoded_length = 1;
  bool has_encoded_length() const;
  private:
  bool _internal_has_encoded_length() const;
  public:
  void clear_encoded_length();
  uint64_t encoded_length() const;
  void set_encoded_length(uint64_t value);
  private:
  uint64_t _internal_encoded_length() const;
  void _internal_set_encoded_length(uint64_t value);
  public:

  // optional uint64 decoded_length = 2;
  bool has_decoded_length() const;
  private:
  bool _internal_has_decoded_length() const;
  public:
  void clear_decoded_length();
  uint64_t decoded_length() const;
  void set_decoded_length(uint64_t value);
  private:
  uint64_t _internal_decoded_length() const;
  void _internal_set_decoded_length(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.EncryptionBlockInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t encoded_length_;
    uint64_t decoded_length_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class ViewStateMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.ViewStateMetadata) */ {
 public:
  inline ViewStateMetadata() : ViewStateMetadata(nullptr) {}
  ~ViewStateMetadata() override;
  explicit PROTOBUF_CONSTEXPR ViewStateMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ViewStateMetadata(const ViewStateMetadata& from);
  ViewStateMetadata(ViewStateMetadata&& from) noexcept
    : ViewStateMetadata() {
    *this = ::std::move(from);
  }

  inline ViewStateMetadata& operator=(const ViewStateMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline ViewStateMetadata& operator=(ViewStateMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ViewStateMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const ViewStateMetadata* internal_default_instance() {
    return reinterpret_cast<const ViewStateMetadata*>(
               &_ViewStateMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(ViewStateMetadata& a, ViewStateMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(ViewStateMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ViewStateMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ViewStateMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ViewStateMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ViewStateMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ViewStateMetadata& from) {
    ViewStateMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ViewStateMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.ViewStateMetadata";
  }
  protected:
  explicit ViewStateMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
    kExternalObjectUuidMapEntriesFieldNumber = 5,
    kReadVersionFieldNumber = 6,
    kComponentFieldNumber = 3,
    kVersionUuidFieldNumber = 4,
  };
  // repeated uint32 version = 1 [packed = true];
  int version_size() const;
  private:
  int _internal_version_size() const;
  public:
  void clear_version();
  private:
  uint32_t _internal_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_version() const;
  void _internal_add_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_version();
  public:
  uint32_t version(int index) const;
  void set_version(int index, uint32_t value);
  void add_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_version();

  // repeated .TSP.ObjectUUIDMapEntry external_object_uuid_map_entries = 5;
  int external_object_uuid_map_entries_size() const;
  private:
  int _internal_external_object_uuid_map_entries_size() const;
  public:
  void clear_external_object_uuid_map_entries();
  ::TSP::ObjectUUIDMapEntry* mutable_external_object_uuid_map_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >*
      mutable_external_object_uuid_map_entries();
  private:
  const ::TSP::ObjectUUIDMapEntry& _internal_external_object_uuid_map_entries(int index) const;
  ::TSP::ObjectUUIDMapEntry* _internal_add_external_object_uuid_map_entries();
  public:
  const ::TSP::ObjectUUIDMapEntry& external_object_uuid_map_entries(int index) const;
  ::TSP::ObjectUUIDMapEntry* add_external_object_uuid_map_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >&
      external_object_uuid_map_entries() const;

  // repeated uint32 read_version = 6 [packed = true];
  int read_version_size() const;
  private:
  int _internal_read_version_size() const;
  public:
  void clear_read_version();
  private:
  uint32_t _internal_read_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_read_version() const;
  void _internal_add_read_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_read_version();
  public:
  uint32_t read_version(int index) const;
  void set_read_version(int index, uint32_t value);
  void add_read_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      read_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_read_version();

  // required .TSP.ComponentInfo component = 3;
  bool has_component() const;
  private:
  bool _internal_has_component() const;
  public:
  void clear_component();
  const ::TSP::ComponentInfo& component() const;
  PROTOBUF_NODISCARD ::TSP::ComponentInfo* release_component();
  ::TSP::ComponentInfo* mutable_component();
  void set_allocated_component(::TSP::ComponentInfo* component);
  private:
  const ::TSP::ComponentInfo& _internal_component() const;
  ::TSP::ComponentInfo* _internal_mutable_component();
  public:
  void unsafe_arena_set_allocated_component(
      ::TSP::ComponentInfo* component);
  ::TSP::ComponentInfo* unsafe_arena_release_component();

  // optional .TSP.UUID version_uuid = 4;
  bool has_version_uuid() const;
  private:
  bool _internal_has_version_uuid() const;
  public:
  void clear_version_uuid();
  const ::TSP::UUID& version_uuid() const;
  PROTOBUF_NODISCARD ::TSP::UUID* release_version_uuid();
  ::TSP::UUID* mutable_version_uuid();
  void set_allocated_version_uuid(::TSP::UUID* version_uuid);
  private:
  const ::TSP::UUID& _internal_version_uuid() const;
  ::TSP::UUID* _internal_mutable_version_uuid();
  public:
  void unsafe_arena_set_allocated_version_uuid(
      ::TSP::UUID* version_uuid);
  ::TSP::UUID* unsafe_arena_release_version_uuid();

  // @@protoc_insertion_point(class_scope:TSP.ViewStateMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > version_;
    mutable std::atomic<int> _version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry > external_object_uuid_map_entries_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > read_version_;
    mutable std::atomic<int> _read_version_cached_byte_size_;
    ::TSP::ComponentInfo* component_;
    ::TSP::UUID* version_uuid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class ObjectSerializationMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.ObjectSerializationMetadata) */ {
 public:
  inline ObjectSerializationMetadata() : ObjectSerializationMetadata(nullptr) {}
  ~ObjectSerializationMetadata() override;
  explicit PROTOBUF_CONSTEXPR ObjectSerializationMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ObjectSerializationMetadata(const ObjectSerializationMetadata& from);
  ObjectSerializationMetadata(ObjectSerializationMetadata&& from) noexcept
    : ObjectSerializationMetadata() {
    *this = ::std::move(from);
  }

  inline ObjectSerializationMetadata& operator=(const ObjectSerializationMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectSerializationMetadata& operator=(ObjectSerializationMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObjectSerializationMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const ObjectSerializationMetadata* internal_default_instance() {
    return reinterpret_cast<const ObjectSerializationMetadata*>(
               &_ObjectSerializationMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(ObjectSerializationMetadata& a, ObjectSerializationMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectSerializationMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectSerializationMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObjectSerializationMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ObjectSerializationMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ObjectSerializationMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ObjectSerializationMetadata& from) {
    ObjectSerializationMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectSerializationMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.ObjectSerializationMetadata";
  }
  protected:
  explicit ObjectSerializationMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
    kDatasFieldNumber = 5,
    kExternalObjectUuidMapEntriesFieldNumber = 6,
    kReadVersionFieldNumber = 8,
    kSourceDocumentUuidFieldNumber = 2,
    kVersionUuidFieldNumber = 3,
    kComponentFieldNumber = 4,
    kDataMetadataMapFieldNumber = 7,
  };
  // repeated uint32 version = 1 [packed = true];
  int version_size() const;
  private:
  int _internal_version_size() const;
  public:
  void clear_version();
  private:
  uint32_t _internal_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_version() const;
  void _internal_add_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_version();
  public:
  uint32_t version(int index) const;
  void set_version(int index, uint32_t value);
  void add_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_version();

  // repeated .TSP.DataInfo datas = 5;
  int datas_size() const;
  private:
  int _internal_datas_size() const;
  public:
  void clear_datas();
  ::TSP::DataInfo* mutable_datas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >*
      mutable_datas();
  private:
  const ::TSP::DataInfo& _internal_datas(int index) const;
  ::TSP::DataInfo* _internal_add_datas();
  public:
  const ::TSP::DataInfo& datas(int index) const;
  ::TSP::DataInfo* add_datas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >&
      datas() const;

  // repeated .TSP.ObjectUUIDMapEntry external_object_uuid_map_entries = 6;
  int external_object_uuid_map_entries_size() const;
  private:
  int _internal_external_object_uuid_map_entries_size() const;
  public:
  void clear_external_object_uuid_map_entries();
  ::TSP::ObjectUUIDMapEntry* mutable_external_object_uuid_map_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >*
      mutable_external_object_uuid_map_entries();
  private:
  const ::TSP::ObjectUUIDMapEntry& _internal_external_object_uuid_map_entries(int index) const;
  ::TSP::ObjectUUIDMapEntry* _internal_add_external_object_uuid_map_entries();
  public:
  const ::TSP::ObjectUUIDMapEntry& external_object_uuid_map_entries(int index) const;
  ::TSP::ObjectUUIDMapEntry* add_external_object_uuid_map_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >&
      external_object_uuid_map_entries() const;

  // repeated uint32 read_version = 8 [packed = true];
  int read_version_size() const;
  private:
  int _internal_read_version_size() const;
  public:
  void clear_read_version();
  private:
  uint32_t _internal_read_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_read_version() const;
  void _internal_add_read_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_read_version();
  public:
  uint32_t read_version(int index) const;
  void set_read_version(int index, uint32_t value);
  void add_read_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      read_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_read_version();

  // optional .TSP.UUID source_document_uuid = 2;
  bool has_source_document_uuid() const;
  private:
  bool _internal_has_source_document_uuid() const;
  public:
  void clear_source_document_uuid();
  const ::TSP::UUID& source_document_uuid() const;
  PROTOBUF_NODISCARD ::TSP::UUID* release_source_document_uuid();
  ::TSP::UUID* mutable_source_document_uuid();
  void set_allocated_source_document_uuid(::TSP::UUID* source_document_uuid);
  private:
  const ::TSP::UUID& _internal_source_document_uuid() const;
  ::TSP::UUID* _internal_mutable_source_document_uuid();
  public:
  void unsafe_arena_set_allocated_source_document_uuid(
      ::TSP::UUID* source_document_uuid);
  ::TSP::UUID* unsafe_arena_release_source_document_uuid();

  // optional .TSP.UUID version_uuid = 3;
  bool has_version_uuid() const;
  private:
  bool _internal_has_version_uuid() const;
  public:
  void clear_version_uuid();
  const ::TSP::UUID& version_uuid() const;
  PROTOBUF_NODISCARD ::TSP::UUID* release_version_uuid();
  ::TSP::UUID* mutable_version_uuid();
  void set_allocated_version_uuid(::TSP::UUID* version_uuid);
  private:
  const ::TSP::UUID& _internal_version_uuid() const;
  ::TSP::UUID* _internal_mutable_version_uuid();
  public:
  void unsafe_arena_set_allocated_version_uuid(
      ::TSP::UUID* version_uuid);
  ::TSP::UUID* unsafe_arena_release_version_uuid();

  // required .TSP.ComponentInfo component = 4;
  bool has_component() const;
  private:
  bool _internal_has_component() const;
  public:
  void clear_component();
  const ::TSP::ComponentInfo& component() const;
  PROTOBUF_NODISCARD ::TSP::ComponentInfo* release_component();
  ::TSP::ComponentInfo* mutable_component();
  void set_allocated_component(::TSP::ComponentInfo* component);
  private:
  const ::TSP::ComponentInfo& _internal_component() const;
  ::TSP::ComponentInfo* _internal_mutable_component();
  public:
  void unsafe_arena_set_allocated_component(
      ::TSP::ComponentInfo* component);
  ::TSP::ComponentInfo* unsafe_arena_release_component();

  // optional .TSP.Reference data_metadata_map = 7;
  bool has_data_metadata_map() const;
  private:
  bool _internal_has_data_metadata_map() const;
  public:
  void clear_data_metadata_map();
  const ::TSP::Reference& data_metadata_map() const;
  PROTOBUF_NODISCARD ::TSP::Reference* release_data_metadata_map();
  ::TSP::Reference* mutable_data_metadata_map();
  void set_allocated_data_metadata_map(::TSP::Reference* data_metadata_map);
  private:
  const ::TSP::Reference& _internal_data_metadata_map() const;
  ::TSP::Reference* _internal_mutable_data_metadata_map();
  public:
  void unsafe_arena_set_allocated_data_metadata_map(
      ::TSP::Reference* data_metadata_map);
  ::TSP::Reference* unsafe_arena_release_data_metadata_map();

  // @@protoc_insertion_point(class_scope:TSP.ObjectSerializationMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > version_;
    mutable std::atomic<int> _version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo > datas_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry > external_object_uuid_map_entries_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > read_version_;
    mutable std::atomic<int> _read_version_cached_byte_size_;
    ::TSP::UUID* source_document_uuid_;
    ::TSP::UUID* version_uuid_;
    ::TSP::ComponentInfo* component_;
    ::TSP::Reference* data_metadata_map_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class ObjectSerializationDirectory_Entry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.ObjectSerializationDirectory.Entry) */ {
 public:
  inline ObjectSerializationDirectory_Entry() : ObjectSerializationDirectory_Entry(nullptr) {}
  ~ObjectSerializationDirectory_Entry() override;
  explicit PROTOBUF_CONSTEXPR ObjectSerializationDirectory_Entry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ObjectSerializationDirectory_Entry(const ObjectSerializationDirectory_Entry& from);
  ObjectSerializationDirectory_Entry(ObjectSerializationDirectory_Entry&& from) noexcept
    : ObjectSerializationDirectory_Entry() {
    *this = ::std::move(from);
  }

  inline ObjectSerializationDirectory_Entry& operator=(const ObjectSerializationDirectory_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectSerializationDirectory_Entry& operator=(ObjectSerializationDirectory_Entry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObjectSerializationDirectory_Entry& default_instance() {
    return *internal_default_instance();
  }
  static inline const ObjectSerializationDirectory_Entry* internal_default_instance() {
    return reinterpret_cast<const ObjectSerializationDirectory_Entry*>(
               &_ObjectSerializationDirectory_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(ObjectSerializationDirectory_Entry& a, ObjectSerializationDirectory_Entry& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectSerializationDirectory_Entry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectSerializationDirectory_Entry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObjectSerializationDirectory_Entry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ObjectSerializationDirectory_Entry>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ObjectSerializationDirectory_Entry& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ObjectSerializationDirectory_Entry& from) {
    ObjectSerializationDirectory_Entry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectSerializationDirectory_Entry* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.ObjectSerializationDirectory.Entry";
  }
  protected:
  explicit ObjectSerializationDirectory_Entry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocatorFieldNumber = 1,
    kOffsetFieldNumber = 2,
    kSizeFieldNumber = 3,
  };
  // required string locator = 1;
  bool has_locator() const;
  private:
  bool _internal_has_locator() const;
  public:
  void clear_locator();
  const std::string& locator() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_locator(ArgT0&& arg0, ArgT... args);
  std::string* mutable_locator();
  PROTOBUF_NODISCARD std::string* release_locator();
  void set_allocated_locator(std::string* locator);
  private:
  const std::string& _internal_locator() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_locator(const std::string& value);
  std::string* _internal_mutable_locator();
  public:

  // required uint64 offset = 2;
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  uint64_t offset() const;
  void set_offset(uint64_t value);
  private:
  uint64_t _internal_offset() const;
  void _internal_set_offset(uint64_t value);
  public:

  // required uint64 size = 3;
  bool has_size() const;
  private:
  bool _internal_has_size() const;
  public:
  void clear_size();
  uint64_t size() const;
  void set_size(uint64_t value);
  private:
  uint64_t _internal_size() const;
  void _internal_set_size(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.ObjectSerializationDirectory.Entry)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locator_;
    uint64_t offset_;
    uint64_t size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class ObjectSerializationDirectory final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.ObjectSerializationDirectory) */ {
 public:
  inline ObjectSerializationDirectory() : ObjectSerializationDirectory(nullptr) {}
  ~ObjectSerializationDirectory() override;
  explicit PROTOBUF_CONSTEXPR ObjectSerializationDirectory(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ObjectSerializationDirectory(const ObjectSerializationDirectory& from);
  ObjectSerializationDirectory(ObjectSerializationDirectory&& from) noexcept
    : ObjectSerializationDirectory() {
    *this = ::std::move(from);
  }

  inline ObjectSerializationDirectory& operator=(const ObjectSerializationDirectory& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectSerializationDirectory& operator=(ObjectSerializationDirectory&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObjectSerializationDirectory& default_instance() {
    return *internal_default_instance();
  }
  static inline const ObjectSerializationDirectory* internal_default_instance() {
    return reinterpret_cast<const ObjectSerializationDirectory*>(
               &_ObjectSerializationDirectory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(ObjectSerializationDirectory& a, ObjectSerializationDirectory& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectSerializationDirectory* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectSerializationDirectory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObjectSerializationDirectory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ObjectSerializationDirectory>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ObjectSerializationDirectory& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ObjectSerializationDirectory& from) {
    ObjectSerializationDirectory::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectSerializationDirectory* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.ObjectSerializationDirectory";
  }
  protected:
  explicit ObjectSerializationDirectory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ObjectSerializationDirectory_Entry Entry;

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .TSP.ObjectSerializationDirectory.Entry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;
  public:
  void clear_entries();
  ::TSP::ObjectSerializationDirectory_Entry* mutable_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectSerializationDirectory_Entry >*
      mutable_entries();
  private:
  const ::TSP::ObjectSerializationDirectory_Entry& _internal_entries(int index) const;
  ::TSP::ObjectSerializationDirectory_Entry* _internal_add_entries();
  public:
  const ::TSP::ObjectSerializationDirectory_Entry& entries(int index) const;
  ::TSP::ObjectSerializationDirectory_Entry* add_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectSerializationDirectory_Entry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:TSP.ObjectSerializationDirectory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectSerializationDirectory_Entry > entries_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class DataPropertiesEntryV1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.DataPropertiesEntryV1) */ {
 public:
  inline DataPropertiesEntryV1() : DataPropertiesEntryV1(nullptr) {}
  ~DataPropertiesEntryV1() override;
  explicit PROTOBUF_CONSTEXPR DataPropertiesEntryV1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DataPropertiesEntryV1(const DataPropertiesEntryV1& from);
  DataPropertiesEntryV1(DataPropertiesEntryV1&& from) noexcept
    : DataPropertiesEntryV1() {
    *this = ::std::move(from);
  }

  inline DataPropertiesEntryV1& operator=(const DataPropertiesEntryV1& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataPropertiesEntryV1& operator=(DataPropertiesEntryV1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataPropertiesEntryV1& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataPropertiesEntryV1* internal_default_instance() {
    return reinterpret_cast<const DataPropertiesEntryV1*>(
               &_DataPropertiesEntryV1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(DataPropertiesEntryV1& a, DataPropertiesEntryV1& b) {
    a.Swap(&b);
  }
  inline void Swap(DataPropertiesEntryV1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataPropertiesEntryV1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataPropertiesEntryV1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataPropertiesEntryV1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DataPropertiesEntryV1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DataPropertiesEntryV1& from) {
    DataPropertiesEntryV1::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataPropertiesEntryV1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.DataPropertiesEntryV1";
  }
  protected:
  explicit DataPropertiesEntryV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCreationVersionFieldNumber = 4,
    kDigestFieldNumber = 1,
    kLastMismatchedDigestFieldNumber = 5,
    kCreationTimeIntervalSince1970FieldNumber = 3,
    kExpectsMatchedDigestFieldNumber = 2,
  };
  // repeated uint32 creation_version = 4 [packed = true];
  int creation_version_size() const;
  private:
  int _internal_creation_version_size() const;
  public:
  void clear_creation_version();
  private:
  uint32_t _internal_creation_version(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_creation_version() const;
  void _internal_add_creation_version(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_creation_version();
  public:
  uint32_t creation_version(int index) const;
  void set_creation_version(int index, uint32_t value);
  void add_creation_version(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      creation_version() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_creation_version();

  // required bytes digest = 1;
  bool has_digest() const;
  private:
  bool _internal_has_digest() const;
  public:
  void clear_digest();
  const std::string& digest() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_digest(ArgT0&& arg0, ArgT... args);
  std::string* mutable_digest();
  PROTOBUF_NODISCARD std::string* release_digest();
  void set_allocated_digest(std::string* digest);
  private:
  const std::string& _internal_digest() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_digest(const std::string& value);
  std::string* _internal_mutable_digest();
  public:

  // optional bytes last_mismatched_digest = 5;
  bool has_last_mismatched_digest() const;
  private:
  bool _internal_has_last_mismatched_digest() const;
  public:
  void clear_last_mismatched_digest();
  const std::string& last_mismatched_digest() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_last_mismatched_digest(ArgT0&& arg0, ArgT... args);
  std::string* mutable_last_mismatched_digest();
  PROTOBUF_NODISCARD std::string* release_last_mismatched_digest();
  void set_allocated_last_mismatched_digest(std::string* last_mismatched_digest);
  private:
  const std::string& _internal_last_mismatched_digest() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_mismatched_digest(const std::string& value);
  std::string* _internal_mutable_last_mismatched_digest();
  public:

  // optional double creation_time_interval_since_1970 = 3;
  bool has_creation_time_interval_since_1970() const;
  private:
  bool _internal_has_creation_time_interval_since_1970() const;
  public:
  void clear_creation_time_interval_since_1970();
  double creation_time_interval_since_1970() const;
  void set_creation_time_interval_since_1970(double value);
  private:
  double _internal_creation_time_interval_since_1970() const;
  void _internal_set_creation_time_interval_since_1970(double value);
  public:

  // optional bool expects_matched_digest = 2;
  bool has_expects_matched_digest() const;
  private:
  bool _internal_has_expects_matched_digest() const;
  public:
  void clear_expects_matched_digest();
  bool expects_matched_digest() const;
  void set_expects_matched_digest(bool value);
  private:
  bool _internal_expects_matched_digest() const;
  void _internal_set_expects_matched_digest(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.DataPropertiesEntryV1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > creation_version_;
    mutable std::atomic<int> _creation_version_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr digest_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_mismatched_digest_;
    double creation_time_interval_since_1970_;
    bool expects_matched_digest_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class DataPropertiesV1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.DataPropertiesV1) */ {
 public:
  inline DataPropertiesV1() : DataPropertiesV1(nullptr) {}
  ~DataPropertiesV1() override;
  explicit PROTOBUF_CONSTEXPR DataPropertiesV1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DataPropertiesV1(const DataPropertiesV1& from);
  DataPropertiesV1(DataPropertiesV1&& from) noexcept
    : DataPropertiesV1() {
    *this = ::std::move(from);
  }

  inline DataPropertiesV1& operator=(const DataPropertiesV1& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataPropertiesV1& operator=(DataPropertiesV1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataPropertiesV1& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataPropertiesV1* internal_default_instance() {
    return reinterpret_cast<const DataPropertiesV1*>(
               &_DataPropertiesV1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(DataPropertiesV1& a, DataPropertiesV1& b) {
    a.Swap(&b);
  }
  inline void Swap(DataPropertiesV1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataPropertiesV1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataPropertiesV1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataPropertiesV1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DataPropertiesV1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DataPropertiesV1& from) {
    DataPropertiesV1::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataPropertiesV1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.DataPropertiesV1";
  }
  protected:
  explicit DataPropertiesV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPropertiesFieldNumber = 1,
  };
  // repeated .TSP.DataPropertiesEntryV1 properties = 1;
  int properties_size() const;
  private:
  int _internal_properties_size() const;
  public:
  void clear_properties();
  ::TSP::DataPropertiesEntryV1* mutable_properties(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataPropertiesEntryV1 >*
      mutable_properties();
  private:
  const ::TSP::DataPropertiesEntryV1& _internal_properties(int index) const;
  ::TSP::DataPropertiesEntryV1* _internal_add_properties();
  public:
  const ::TSP::DataPropertiesEntryV1& properties(int index) const;
  ::TSP::DataPropertiesEntryV1* add_properties();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataPropertiesEntryV1 >&
      properties() const;

  // @@protoc_insertion_point(class_scope:TSP.DataPropertiesV1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataPropertiesEntryV1 > properties_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class DocumentMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.DocumentMetadata) */ {
 public:
  inline DocumentMetadata() : DocumentMetadata(nullptr) {}
  ~DocumentMetadata() override;
  explicit PROTOBUF_CONSTEXPR DocumentMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DocumentMetadata(const DocumentMetadata& from);
  DocumentMetadata(DocumentMetadata&& from) noexcept
    : DocumentMetadata() {
    *this = ::std::move(from);
  }

  inline DocumentMetadata& operator=(const DocumentMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline DocumentMetadata& operator=(DocumentMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DocumentMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const DocumentMetadata* internal_default_instance() {
    return reinterpret_cast<const DocumentMetadata*>(
               &_DocumentMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(DocumentMetadata& a, DocumentMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(DocumentMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DocumentMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DocumentMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DocumentMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DocumentMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DocumentMetadata& from) {
    DocumentMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DocumentMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.DocumentMetadata";
  }
  protected:
  explicit DocumentMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataPropertiesV1FieldNumber = 3,
    kIsInCollaborationModeFieldNumber = 1,
  };
  // optional .TSP.DataPropertiesV1 data_properties_v1 = 3;
  bool has_data_properties_v1() const;
  private:
  bool _internal_has_data_properties_v1() const;
  public:
  void clear_data_properties_v1();
  const ::TSP::DataPropertiesV1& data_properties_v1() const;
  PROTOBUF_NODISCARD ::TSP::DataPropertiesV1* release_data_properties_v1();
  ::TSP::DataPropertiesV1* mutable_data_properties_v1();
  void set_allocated_data_properties_v1(::TSP::DataPropertiesV1* data_properties_v1);
  private:
  const ::TSP::DataPropertiesV1& _internal_data_properties_v1() const;
  ::TSP::DataPropertiesV1* _internal_mutable_data_properties_v1();
  public:
  void unsafe_arena_set_allocated_data_properties_v1(
      ::TSP::DataPropertiesV1* data_properties_v1);
  ::TSP::DataPropertiesV1* unsafe_arena_release_data_properties_v1();

  // optional bool is_in_collaboration_mode = 1;
  bool has_is_in_collaboration_mode() const;
  private:
  bool _internal_has_is_in_collaboration_mode() const;
  public:
  void clear_is_in_collaboration_mode();
  bool is_in_collaboration_mode() const;
  void set_is_in_collaboration_mode(bool value);
  private:
  bool _internal_is_in_collaboration_mode() const;
  void _internal_set_is_in_collaboration_mode(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.DocumentMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSP::DataPropertiesV1* data_properties_v1_;
    bool is_in_collaboration_mode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class SupportMetadata_DataCollaborationProperties final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.SupportMetadata.DataCollaborationProperties) */ {
 public:
  inline SupportMetadata_DataCollaborationProperties() : SupportMetadata_DataCollaborationProperties(nullptr) {}
  ~SupportMetadata_DataCollaborationProperties() override;
  explicit PROTOBUF_CONSTEXPR SupportMetadata_DataCollaborationProperties(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SupportMetadata_DataCollaborationProperties(const SupportMetadata_DataCollaborationProperties& from);
  SupportMetadata_DataCollaborationProperties(SupportMetadata_DataCollaborationProperties&& from) noexcept
    : SupportMetadata_DataCollaborationProperties() {
    *this = ::std::move(from);
  }

  inline SupportMetadata_DataCollaborationProperties& operator=(const SupportMetadata_DataCollaborationProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline SupportMetadata_DataCollaborationProperties& operator=(SupportMetadata_DataCollaborationProperties&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SupportMetadata_DataCollaborationProperties& default_instance() {
    return *internal_default_instance();
  }
  static inline const SupportMetadata_DataCollaborationProperties* internal_default_instance() {
    return reinterpret_cast<const SupportMetadata_DataCollaborationProperties*>(
               &_SupportMetadata_DataCollaborationProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(SupportMetadata_DataCollaborationProperties& a, SupportMetadata_DataCollaborationProperties& b) {
    a.Swap(&b);
  }
  inline void Swap(SupportMetadata_DataCollaborationProperties* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SupportMetadata_DataCollaborationProperties* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SupportMetadata_DataCollaborationProperties* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SupportMetadata_DataCollaborationProperties>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SupportMetadata_DataCollaborationProperties& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SupportMetadata_DataCollaborationProperties& from) {
    SupportMetadata_DataCollaborationProperties::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SupportMetadata_DataCollaborationProperties* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.SupportMetadata.DataCollaborationProperties";
  }
  protected:
  explicit SupportMetadata_DataCollaborationProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDigestFieldNumber = 1,
    kAcknowledgedByServerFieldNumber = 2,
    kMaterializedOnServerFieldNumber = 3,
    kIsRemoteDataEverFieldNumber = 6,
    kUploadStatusFieldNumber = 4,
    kRevisionSequenceForMaterializedOnServerFieldNumber = 5,
    kRevisionSequenceForAcknowledgedByServerFieldNumber = 7,
  };
  // required bytes digest = 1;
  bool has_digest() const;
  private:
  bool _internal_has_digest() const;
  public:
  void clear_digest();
  const std::string& digest() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_digest(ArgT0&& arg0, ArgT... args);
  std::string* mutable_digest();
  PROTOBUF_NODISCARD std::string* release_digest();
  void set_allocated_digest(std::string* digest);
  private:
  const std::string& _internal_digest() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_digest(const std::string& value);
  std::string* _internal_mutable_digest();
  public:

  // optional bool acknowledged_by_server = 2 [default = false];
  bool has_acknowledged_by_server() const;
  private:
  bool _internal_has_acknowledged_by_server() const;
  public:
  void clear_acknowledged_by_server();
  bool acknowledged_by_server() const;
  void set_acknowledged_by_server(bool value);
  private:
  bool _internal_acknowledged_by_server() const;
  void _internal_set_acknowledged_by_server(bool value);
  public:

  // optional bool materialized_on_server = 3 [default = false];
  bool has_materialized_on_server() const;
  private:
  bool _internal_has_materialized_on_server() const;
  public:
  void clear_materialized_on_server();
  bool materialized_on_server() const;
  void set_materialized_on_server(bool value);
  private:
  bool _internal_materialized_on_server() const;
  void _internal_set_materialized_on_server(bool value);
  public:

  // optional bool is_remote_data_ever = 6 [default = false];
  bool has_is_remote_data_ever() const;
  private:
  bool _internal_has_is_remote_data_ever() const;
  public:
  void clear_is_remote_data_ever();
  bool is_remote_data_ever() const;
  void set_is_remote_data_ever(bool value);
  private:
  bool _internal_is_remote_data_ever() const;
  void _internal_set_is_remote_data_ever(bool value);
  public:

  // optional .TSP.DataUploadStatus upload_status = 4 [default = DataUploadStatus_Pending];
  bool has_upload_status() const;
  private:
  bool _internal_has_upload_status() const;
  public:
  void clear_upload_status();
  ::TSP::DataUploadStatus upload_status() const;
  void set_upload_status(::TSP::DataUploadStatus value);
  private:
  ::TSP::DataUploadStatus _internal_upload_status() const;
  void _internal_set_upload_status(::TSP::DataUploadStatus value);
  public:

  // optional int32 revision_sequence_for_materialized_on_server = 5 [default = 0];
  bool has_revision_sequence_for_materialized_on_server() const;
  private:
  bool _internal_has_revision_sequence_for_materialized_on_server() const;
  public:
  void clear_revision_sequence_for_materialized_on_server();
  int32_t revision_sequence_for_materialized_on_server() const;
  void set_revision_sequence_for_materialized_on_server(int32_t value);
  private:
  int32_t _internal_revision_sequence_for_materialized_on_server() const;
  void _internal_set_revision_sequence_for_materialized_on_server(int32_t value);
  public:

  // optional int32 revision_sequence_for_acknowledged_by_server = 7 [default = 0];
  bool has_revision_sequence_for_acknowledged_by_server() const;
  private:
  bool _internal_has_revision_sequence_for_acknowledged_by_server() const;
  public:
  void clear_revision_sequence_for_acknowledged_by_server();
  int32_t revision_sequence_for_acknowledged_by_server() const;
  void set_revision_sequence_for_acknowledged_by_server(int32_t value);
  private:
  int32_t _internal_revision_sequence_for_acknowledged_by_server() const;
  void _internal_set_revision_sequence_for_acknowledged_by_server(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.SupportMetadata.DataCollaborationProperties)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr digest_;
    bool acknowledged_by_server_;
    bool materialized_on_server_;
    bool is_remote_data_ever_;
    int upload_status_;
    int32_t revision_sequence_for_materialized_on_server_;
    int32_t revision_sequence_for_acknowledged_by_server_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// -------------------------------------------------------------------

class SupportMetadata final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSP.SupportMetadata) */ {
 public:
  inline SupportMetadata() : SupportMetadata(nullptr) {}
  ~SupportMetadata() override;
  explicit PROTOBUF_CONSTEXPR SupportMetadata(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SupportMetadata(const SupportMetadata& from);
  SupportMetadata(SupportMetadata&& from) noexcept
    : SupportMetadata() {
    *this = ::std::move(from);
  }

  inline SupportMetadata& operator=(const SupportMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline SupportMetadata& operator=(SupportMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SupportMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const SupportMetadata* internal_default_instance() {
    return reinterpret_cast<const SupportMetadata*>(
               &_SupportMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(SupportMetadata& a, SupportMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(SupportMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SupportMetadata* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SupportMetadata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SupportMetadata>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SupportMetadata& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SupportMetadata& from) {
    SupportMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SupportMetadata* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSP.SupportMetadata";
  }
  protected:
  explicit SupportMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SupportMetadata_DataCollaborationProperties DataCollaborationProperties;

  // accessors -------------------------------------------------------

  enum : int {
    kDataCollaborationPropertiesFieldNumber = 2,
    kIsInCollaborationModeFieldNumber = 1,
  };
  // repeated .TSP.SupportMetadata.DataCollaborationProperties data_collaboration_properties = 2;
  int data_collaboration_properties_size() const;
  private:
  int _internal_data_collaboration_properties_size() const;
  public:
  void clear_data_collaboration_properties();
  ::TSP::SupportMetadata_DataCollaborationProperties* mutable_data_collaboration_properties(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::SupportMetadata_DataCollaborationProperties >*
      mutable_data_collaboration_properties();
  private:
  const ::TSP::SupportMetadata_DataCollaborationProperties& _internal_data_collaboration_properties(int index) const;
  ::TSP::SupportMetadata_DataCollaborationProperties* _internal_add_data_collaboration_properties();
  public:
  const ::TSP::SupportMetadata_DataCollaborationProperties& data_collaboration_properties(int index) const;
  ::TSP::SupportMetadata_DataCollaborationProperties* add_data_collaboration_properties();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::SupportMetadata_DataCollaborationProperties >&
      data_collaboration_properties() const;

  // optional bool is_in_collaboration_mode = 1;
  bool has_is_in_collaboration_mode() const;
  private:
  bool _internal_has_is_in_collaboration_mode() const;
  public:
  void clear_is_in_collaboration_mode();
  bool is_in_collaboration_mode() const;
  void set_is_in_collaboration_mode(bool value);
  private:
  bool _internal_is_in_collaboration_mode() const;
  void _internal_set_is_in_collaboration_mode(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSP.SupportMetadata)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::SupportMetadata_DataCollaborationProperties > data_collaboration_properties_;
    bool is_in_collaboration_mode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSPArchiveMessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ArchiveInfo

// optional uint64 identifier = 1;
inline bool ArchiveInfo::_internal_has_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ArchiveInfo::has_identifier() const {
  return _internal_has_identifier();
}
inline void ArchiveInfo::clear_identifier() {
  _impl_.identifier_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t ArchiveInfo::_internal_identifier() const {
  return _impl_.identifier_;
}
inline uint64_t ArchiveInfo::identifier() const {
  // @@protoc_insertion_point(field_get:TSP.ArchiveInfo.identifier)
  return _internal_identifier();
}
inline void ArchiveInfo::_internal_set_identifier(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.identifier_ = value;
}
inline void ArchiveInfo::set_identifier(uint64_t value) {
  _internal_set_identifier(value);
  // @@protoc_insertion_point(field_set:TSP.ArchiveInfo.identifier)
}

// repeated .TSP.MessageInfo message_infos = 2;
inline int ArchiveInfo::_internal_message_infos_size() const {
  return _impl_.message_infos_.size();
}
inline int ArchiveInfo::message_infos_size() const {
  return _internal_message_infos_size();
}
inline void ArchiveInfo::clear_message_infos() {
  _impl_.message_infos_.Clear();
}
inline ::TSP::MessageInfo* ArchiveInfo::mutable_message_infos(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.ArchiveInfo.message_infos)
  return _impl_.message_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::MessageInfo >*
ArchiveInfo::mutable_message_infos() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ArchiveInfo.message_infos)
  return &_impl_.message_infos_;
}
inline const ::TSP::MessageInfo& ArchiveInfo::_internal_message_infos(int index) const {
  return _impl_.message_infos_.Get(index);
}
inline const ::TSP::MessageInfo& ArchiveInfo::message_infos(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ArchiveInfo.message_infos)
  return _internal_message_infos(index);
}
inline ::TSP::MessageInfo* ArchiveInfo::_internal_add_message_infos() {
  return _impl_.message_infos_.Add();
}
inline ::TSP::MessageInfo* ArchiveInfo::add_message_infos() {
  ::TSP::MessageInfo* _add = _internal_add_message_infos();
  // @@protoc_insertion_point(field_add:TSP.ArchiveInfo.message_infos)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::MessageInfo >&
ArchiveInfo::message_infos() const {
  // @@protoc_insertion_point(field_list:TSP.ArchiveInfo.message_infos)
  return _impl_.message_infos_;
}

// optional bool should_merge = 3;
inline bool ArchiveInfo::_internal_has_should_merge() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ArchiveInfo::has_should_merge() const {
  return _internal_has_should_merge();
}
inline void ArchiveInfo::clear_should_merge() {
  _impl_.should_merge_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool ArchiveInfo::_internal_should_merge() const {
  return _impl_.should_merge_;
}
inline bool ArchiveInfo::should_merge() const {
  // @@protoc_insertion_point(field_get:TSP.ArchiveInfo.should_merge)
  return _internal_should_merge();
}
inline void ArchiveInfo::_internal_set_should_merge(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.should_merge_ = value;
}
inline void ArchiveInfo::set_should_merge(bool value) {
  _internal_set_should_merge(value);
  // @@protoc_insertion_point(field_set:TSP.ArchiveInfo.should_merge)
}

// -------------------------------------------------------------------

// MessageInfo

// required uint32 type = 1;
inline bool MessageInfo::_internal_has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MessageInfo::has_type() const {
  return _internal_has_type();
}
inline void MessageInfo::clear_type() {
  _impl_.type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t MessageInfo::_internal_type() const {
  return _impl_.type_;
}
inline uint32_t MessageInfo::type() const {
  // @@protoc_insertion_point(field_get:TSP.MessageInfo.type)
  return _internal_type();
}
inline void MessageInfo::_internal_set_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_ = value;
}
inline void MessageInfo::set_type(uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:TSP.MessageInfo.type)
}

// repeated uint32 version = 2 [packed = true];
inline int MessageInfo::_internal_version_size() const {
  return _impl_.version_.size();
}
inline int MessageInfo::version_size() const {
  return _internal_version_size();
}
inline void MessageInfo::clear_version() {
  _impl_.version_.Clear();
}
inline uint32_t MessageInfo::_internal_version(int index) const {
  return _impl_.version_.Get(index);
}
inline uint32_t MessageInfo::version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.MessageInfo.version)
  return _internal_version(index);
}
inline void MessageInfo::set_version(int index, uint32_t value) {
  _impl_.version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.MessageInfo.version)
}
inline void MessageInfo::_internal_add_version(uint32_t value) {
  _impl_.version_.Add(value);
}
inline void MessageInfo::add_version(uint32_t value) {
  _internal_add_version(value);
  // @@protoc_insertion_point(field_add:TSP.MessageInfo.version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
MessageInfo::_internal_version() const {
  return _impl_.version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
MessageInfo::version() const {
  // @@protoc_insertion_point(field_list:TSP.MessageInfo.version)
  return _internal_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
MessageInfo::_internal_mutable_version() {
  return &_impl_.version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
MessageInfo::mutable_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.MessageInfo.version)
  return _internal_mutable_version();
}

// required uint32 length = 3;
inline bool MessageInfo::_internal_has_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MessageInfo::has_length() const {
  return _internal_has_length();
}
inline void MessageInfo::clear_length() {
  _impl_.length_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t MessageInfo::_internal_length() const {
  return _impl_.length_;
}
inline uint32_t MessageInfo::length() const {
  // @@protoc_insertion_point(field_get:TSP.MessageInfo.length)
  return _internal_length();
}
inline void MessageInfo::_internal_set_length(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.length_ = value;
}
inline void MessageInfo::set_length(uint32_t value) {
  _internal_set_length(value);
  // @@protoc_insertion_point(field_set:TSP.MessageInfo.length)
}

// repeated .TSP.FieldInfo field_infos = 4;
inline int MessageInfo::_internal_field_infos_size() const {
  return _impl_.field_infos_.size();
}
inline int MessageInfo::field_infos_size() const {
  return _internal_field_infos_size();
}
inline void MessageInfo::clear_field_infos() {
  _impl_.field_infos_.Clear();
}
inline ::TSP::FieldInfo* MessageInfo::mutable_field_infos(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.MessageInfo.field_infos)
  return _impl_.field_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FieldInfo >*
MessageInfo::mutable_field_infos() {
  // @@protoc_insertion_point(field_mutable_list:TSP.MessageInfo.field_infos)
  return &_impl_.field_infos_;
}
inline const ::TSP::FieldInfo& MessageInfo::_internal_field_infos(int index) const {
  return _impl_.field_infos_.Get(index);
}
inline const ::TSP::FieldInfo& MessageInfo::field_infos(int index) const {
  // @@protoc_insertion_point(field_get:TSP.MessageInfo.field_infos)
  return _internal_field_infos(index);
}
inline ::TSP::FieldInfo* MessageInfo::_internal_add_field_infos() {
  return _impl_.field_infos_.Add();
}
inline ::TSP::FieldInfo* MessageInfo::add_field_infos() {
  ::TSP::FieldInfo* _add = _internal_add_field_infos();
  // @@protoc_insertion_point(field_add:TSP.MessageInfo.field_infos)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FieldInfo >&
MessageInfo::field_infos() const {
  // @@protoc_insertion_point(field_list:TSP.MessageInfo.field_infos)
  return _impl_.field_infos_;
}

// repeated uint64 object_references = 5 [packed = true];
inline int MessageInfo::_internal_object_references_size() const {
  return _impl_.object_references_.size();
}
inline int MessageInfo::object_references_size() const {
  return _internal_object_references_size();
}
inline void MessageInfo::clear_object_references() {
  _impl_.object_references_.Clear();
}
inline uint64_t MessageInfo::_internal_object_references(int index) const {
  return _impl_.object_references_.Get(index);
}
inline uint64_t MessageInfo::object_references(int index) const {
  // @@protoc_insertion_point(field_get:TSP.MessageInfo.object_references)
  return _internal_object_references(index);
}
inline void MessageInfo::set_object_references(int index, uint64_t value) {
  _impl_.object_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.MessageInfo.object_references)
}
inline void MessageInfo::_internal_add_object_references(uint64_t value) {
  _impl_.object_references_.Add(value);
}
inline void MessageInfo::add_object_references(uint64_t value) {
  _internal_add_object_references(value);
  // @@protoc_insertion_point(field_add:TSP.MessageInfo.object_references)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
MessageInfo::_internal_object_references() const {
  return _impl_.object_references_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
MessageInfo::object_references() const {
  // @@protoc_insertion_point(field_list:TSP.MessageInfo.object_references)
  return _internal_object_references();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
MessageInfo::_internal_mutable_object_references() {
  return &_impl_.object_references_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
MessageInfo::mutable_object_references() {
  // @@protoc_insertion_point(field_mutable_list:TSP.MessageInfo.object_references)
  return _internal_mutable_object_references();
}

// repeated uint64 data_references = 6 [packed = true];
inline int MessageInfo::_internal_data_references_size() const {
  return _impl_.data_references_.size();
}
inline int MessageInfo::data_references_size() const {
  return _internal_data_references_size();
}
inline void MessageInfo::clear_data_references() {
  _impl_.data_references_.Clear();
}
inline uint64_t MessageInfo::_internal_data_references(int index) const {
  return _impl_.data_references_.Get(index);
}
inline uint64_t MessageInfo::data_references(int index) const {
  // @@protoc_insertion_point(field_get:TSP.MessageInfo.data_references)
  return _internal_data_references(index);
}
inline void MessageInfo::set_data_references(int index, uint64_t value) {
  _impl_.data_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.MessageInfo.data_references)
}
inline void MessageInfo::_internal_add_data_references(uint64_t value) {
  _impl_.data_references_.Add(value);
}
inline void MessageInfo::add_data_references(uint64_t value) {
  _internal_add_data_references(value);
  // @@protoc_insertion_point(field_add:TSP.MessageInfo.data_references)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
MessageInfo::_internal_data_references() const {
  return _impl_.data_references_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
MessageInfo::data_references() const {
  // @@protoc_insertion_point(field_list:TSP.MessageInfo.data_references)
  return _internal_data_references();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
MessageInfo::_internal_mutable_data_references() {
  return &_impl_.data_references_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
MessageInfo::mutable_data_references() {
  // @@protoc_insertion_point(field_mutable_list:TSP.MessageInfo.data_references)
  return _internal_mutable_data_references();
}

// optional uint32 base_message_index = 7;
inline bool MessageInfo::_internal_has_base_message_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MessageInfo::has_base_message_index() const {
  return _internal_has_base_message_index();
}
inline void MessageInfo::clear_base_message_index() {
  _impl_.base_message_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t MessageInfo::_internal_base_message_index() const {
  return _impl_.base_message_index_;
}
inline uint32_t MessageInfo::base_message_index() const {
  // @@protoc_insertion_point(field_get:TSP.MessageInfo.base_message_index)
  return _internal_base_message_index();
}
inline void MessageInfo::_internal_set_base_message_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.base_message_index_ = value;
}
inline void MessageInfo::set_base_message_index(uint32_t value) {
  _internal_set_base_message_index(value);
  // @@protoc_insertion_point(field_set:TSP.MessageInfo.base_message_index)
}

// repeated uint32 diff_merge_version = 8 [packed = true];
inline int MessageInfo::_internal_diff_merge_version_size() const {
  return _impl_.diff_merge_version_.size();
}
inline int MessageInfo::diff_merge_version_size() const {
  return _internal_diff_merge_version_size();
}
inline void MessageInfo::clear_diff_merge_version() {
  _impl_.diff_merge_version_.Clear();
}
inline uint32_t MessageInfo::_internal_diff_merge_version(int index) const {
  return _impl_.diff_merge_version_.Get(index);
}
inline uint32_t MessageInfo::diff_merge_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.MessageInfo.diff_merge_version)
  return _internal_diff_merge_version(index);
}
inline void MessageInfo::set_diff_merge_version(int index, uint32_t value) {
  _impl_.diff_merge_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.MessageInfo.diff_merge_version)
}
inline void MessageInfo::_internal_add_diff_merge_version(uint32_t value) {
  _impl_.diff_merge_version_.Add(value);
}
inline void MessageInfo::add_diff_merge_version(uint32_t value) {
  _internal_add_diff_merge_version(value);
  // @@protoc_insertion_point(field_add:TSP.MessageInfo.diff_merge_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
MessageInfo::_internal_diff_merge_version() const {
  return _impl_.diff_merge_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
MessageInfo::diff_merge_version() const {
  // @@protoc_insertion_point(field_list:TSP.MessageInfo.diff_merge_version)
  return _internal_diff_merge_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
MessageInfo::_internal_mutable_diff_merge_version() {
  return &_impl_.diff_merge_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
MessageInfo::mutable_diff_merge_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.MessageInfo.diff_merge_version)
  return _internal_mutable_diff_merge_version();
}

// optional .TSP.FieldPath diff_field_path = 9;
inline bool MessageInfo::_internal_has_diff_field_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.diff_field_path_ != nullptr);
  return value;
}
inline bool MessageInfo::has_diff_field_path() const {
  return _internal_has_diff_field_path();
}
inline void MessageInfo::clear_diff_field_path() {
  if (_impl_.diff_field_path_ != nullptr) _impl_.diff_field_path_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::TSP::FieldPath& MessageInfo::_internal_diff_field_path() const {
  const ::TSP::FieldPath* p = _impl_.diff_field_path_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::FieldPath&>(
      ::TSP::_FieldPath_default_instance_);
}
inline const ::TSP::FieldPath& MessageInfo::diff_field_path() const {
  // @@protoc_insertion_point(field_get:TSP.MessageInfo.diff_field_path)
  return _internal_diff_field_path();
}
inline void MessageInfo::unsafe_arena_set_allocated_diff_field_path(
    ::TSP::FieldPath* diff_field_path) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.diff_field_path_);
  }
  _impl_.diff_field_path_ = diff_field_path;
  if (diff_field_path) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.MessageInfo.diff_field_path)
}
inline ::TSP::FieldPath* MessageInfo::release_diff_field_path() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::FieldPath* temp = _impl_.diff_field_path_;
  _impl_.diff_field_path_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::FieldPath* MessageInfo::unsafe_arena_release_diff_field_path() {
  // @@protoc_insertion_point(field_release:TSP.MessageInfo.diff_field_path)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::FieldPath* temp = _impl_.diff_field_path_;
  _impl_.diff_field_path_ = nullptr;
  return temp;
}
inline ::TSP::FieldPath* MessageInfo::_internal_mutable_diff_field_path() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.diff_field_path_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::FieldPath>(GetArenaForAllocation());
    _impl_.diff_field_path_ = p;
  }
  return _impl_.diff_field_path_;
}
inline ::TSP::FieldPath* MessageInfo::mutable_diff_field_path() {
  ::TSP::FieldPath* _msg = _internal_mutable_diff_field_path();
  // @@protoc_insertion_point(field_mutable:TSP.MessageInfo.diff_field_path)
  return _msg;
}
inline void MessageInfo::set_allocated_diff_field_path(::TSP::FieldPath* diff_field_path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.diff_field_path_;
  }
  if (diff_field_path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(diff_field_path);
    if (message_arena != submessage_arena) {
      diff_field_path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, diff_field_path, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.diff_field_path_ = diff_field_path;
  // @@protoc_insertion_point(field_set_allocated:TSP.MessageInfo.diff_field_path)
}

// repeated .TSP.FieldPath fields_to_remove = 10;
inline int MessageInfo::_internal_fields_to_remove_size() const {
  return _impl_.fields_to_remove_.size();
}
inline int MessageInfo::fields_to_remove_size() const {
  return _internal_fields_to_remove_size();
}
inline void MessageInfo::clear_fields_to_remove() {
  _impl_.fields_to_remove_.Clear();
}
inline ::TSP::FieldPath* MessageInfo::mutable_fields_to_remove(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.MessageInfo.fields_to_remove)
  return _impl_.fields_to_remove_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FieldPath >*
MessageInfo::mutable_fields_to_remove() {
  // @@protoc_insertion_point(field_mutable_list:TSP.MessageInfo.fields_to_remove)
  return &_impl_.fields_to_remove_;
}
inline const ::TSP::FieldPath& MessageInfo::_internal_fields_to_remove(int index) const {
  return _impl_.fields_to_remove_.Get(index);
}
inline const ::TSP::FieldPath& MessageInfo::fields_to_remove(int index) const {
  // @@protoc_insertion_point(field_get:TSP.MessageInfo.fields_to_remove)
  return _internal_fields_to_remove(index);
}
inline ::TSP::FieldPath* MessageInfo::_internal_add_fields_to_remove() {
  return _impl_.fields_to_remove_.Add();
}
inline ::TSP::FieldPath* MessageInfo::add_fields_to_remove() {
  ::TSP::FieldPath* _add = _internal_add_fields_to_remove();
  // @@protoc_insertion_point(field_add:TSP.MessageInfo.fields_to_remove)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FieldPath >&
MessageInfo::fields_to_remove() const {
  // @@protoc_insertion_point(field_list:TSP.MessageInfo.fields_to_remove)
  return _impl_.fields_to_remove_;
}

// repeated uint32 diff_read_version = 11 [packed = true];
inline int MessageInfo::_internal_diff_read_version_size() const {
  return _impl_.diff_read_version_.size();
}
inline int MessageInfo::diff_read_version_size() const {
  return _internal_diff_read_version_size();
}
inline void MessageInfo::clear_diff_read_version() {
  _impl_.diff_read_version_.Clear();
}
inline uint32_t MessageInfo::_internal_diff_read_version(int index) const {
  return _impl_.diff_read_version_.Get(index);
}
inline uint32_t MessageInfo::diff_read_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.MessageInfo.diff_read_version)
  return _internal_diff_read_version(index);
}
inline void MessageInfo::set_diff_read_version(int index, uint32_t value) {
  _impl_.diff_read_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.MessageInfo.diff_read_version)
}
inline void MessageInfo::_internal_add_diff_read_version(uint32_t value) {
  _impl_.diff_read_version_.Add(value);
}
inline void MessageInfo::add_diff_read_version(uint32_t value) {
  _internal_add_diff_read_version(value);
  // @@protoc_insertion_point(field_add:TSP.MessageInfo.diff_read_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
MessageInfo::_internal_diff_read_version() const {
  return _impl_.diff_read_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
MessageInfo::diff_read_version() const {
  // @@protoc_insertion_point(field_list:TSP.MessageInfo.diff_read_version)
  return _internal_diff_read_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
MessageInfo::_internal_mutable_diff_read_version() {
  return &_impl_.diff_read_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
MessageInfo::mutable_diff_read_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.MessageInfo.diff_read_version)
  return _internal_mutable_diff_read_version();
}

// -------------------------------------------------------------------

// FieldInfo

// required .TSP.FieldPath path = 1;
inline bool FieldInfo::_internal_has_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.path_ != nullptr);
  return value;
}
inline bool FieldInfo::has_path() const {
  return _internal_has_path();
}
inline void FieldInfo::clear_path() {
  if (_impl_.path_ != nullptr) _impl_.path_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::TSP::FieldPath& FieldInfo::_internal_path() const {
  const ::TSP::FieldPath* p = _impl_.path_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::FieldPath&>(
      ::TSP::_FieldPath_default_instance_);
}
inline const ::TSP::FieldPath& FieldInfo::path() const {
  // @@protoc_insertion_point(field_get:TSP.FieldInfo.path)
  return _internal_path();
}
inline void FieldInfo::unsafe_arena_set_allocated_path(
    ::TSP::FieldPath* path) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.path_);
  }
  _impl_.path_ = path;
  if (path) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.FieldInfo.path)
}
inline ::TSP::FieldPath* FieldInfo::release_path() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSP::FieldPath* temp = _impl_.path_;
  _impl_.path_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::FieldPath* FieldInfo::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:TSP.FieldInfo.path)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSP::FieldPath* temp = _impl_.path_;
  _impl_.path_ = nullptr;
  return temp;
}
inline ::TSP::FieldPath* FieldInfo::_internal_mutable_path() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.path_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::FieldPath>(GetArenaForAllocation());
    _impl_.path_ = p;
  }
  return _impl_.path_;
}
inline ::TSP::FieldPath* FieldInfo::mutable_path() {
  ::TSP::FieldPath* _msg = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:TSP.FieldInfo.path)
  return _msg;
}
inline void FieldInfo::set_allocated_path(::TSP::FieldPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.path_ = path;
  // @@protoc_insertion_point(field_set_allocated:TSP.FieldInfo.path)
}

// optional .TSP.FieldInfo.Type type = 2 [default = Value];
inline bool FieldInfo::_internal_has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool FieldInfo::has_type() const {
  return _internal_has_type();
}
inline void FieldInfo::clear_type() {
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::TSP::FieldInfo_Type FieldInfo::_internal_type() const {
  return static_cast< ::TSP::FieldInfo_Type >(_impl_.type_);
}
inline ::TSP::FieldInfo_Type FieldInfo::type() const {
  // @@protoc_insertion_point(field_get:TSP.FieldInfo.type)
  return _internal_type();
}
inline void FieldInfo::_internal_set_type(::TSP::FieldInfo_Type value) {
  assert(::TSP::FieldInfo_Type_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.type_ = value;
}
inline void FieldInfo::set_type(::TSP::FieldInfo_Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:TSP.FieldInfo.type)
}

// optional .TSP.FieldInfo.UnknownFieldRule unknown_field_rule = 3 [default = IgnoreAndPreserveUntilModified];
inline bool FieldInfo::_internal_has_unknown_field_rule() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool FieldInfo::has_unknown_field_rule() const {
  return _internal_has_unknown_field_rule();
}
inline void FieldInfo::clear_unknown_field_rule() {
  _impl_.unknown_field_rule_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::TSP::FieldInfo_UnknownFieldRule FieldInfo::_internal_unknown_field_rule() const {
  return static_cast< ::TSP::FieldInfo_UnknownFieldRule >(_impl_.unknown_field_rule_);
}
inline ::TSP::FieldInfo_UnknownFieldRule FieldInfo::unknown_field_rule() const {
  // @@protoc_insertion_point(field_get:TSP.FieldInfo.unknown_field_rule)
  return _internal_unknown_field_rule();
}
inline void FieldInfo::_internal_set_unknown_field_rule(::TSP::FieldInfo_UnknownFieldRule value) {
  assert(::TSP::FieldInfo_UnknownFieldRule_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.unknown_field_rule_ = value;
}
inline void FieldInfo::set_unknown_field_rule(::TSP::FieldInfo_UnknownFieldRule value) {
  _internal_set_unknown_field_rule(value);
  // @@protoc_insertion_point(field_set:TSP.FieldInfo.unknown_field_rule)
}

// repeated uint64 object_references = 4 [packed = true];
inline int FieldInfo::_internal_object_references_size() const {
  return _impl_.object_references_.size();
}
inline int FieldInfo::object_references_size() const {
  return _internal_object_references_size();
}
inline void FieldInfo::clear_object_references() {
  _impl_.object_references_.Clear();
}
inline uint64_t FieldInfo::_internal_object_references(int index) const {
  return _impl_.object_references_.Get(index);
}
inline uint64_t FieldInfo::object_references(int index) const {
  // @@protoc_insertion_point(field_get:TSP.FieldInfo.object_references)
  return _internal_object_references(index);
}
inline void FieldInfo::set_object_references(int index, uint64_t value) {
  _impl_.object_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.FieldInfo.object_references)
}
inline void FieldInfo::_internal_add_object_references(uint64_t value) {
  _impl_.object_references_.Add(value);
}
inline void FieldInfo::add_object_references(uint64_t value) {
  _internal_add_object_references(value);
  // @@protoc_insertion_point(field_add:TSP.FieldInfo.object_references)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
FieldInfo::_internal_object_references() const {
  return _impl_.object_references_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
FieldInfo::object_references() const {
  // @@protoc_insertion_point(field_list:TSP.FieldInfo.object_references)
  return _internal_object_references();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
FieldInfo::_internal_mutable_object_references() {
  return &_impl_.object_references_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
FieldInfo::mutable_object_references() {
  // @@protoc_insertion_point(field_mutable_list:TSP.FieldInfo.object_references)
  return _internal_mutable_object_references();
}

// repeated uint64 data_references = 5 [packed = true];
inline int FieldInfo::_internal_data_references_size() const {
  return _impl_.data_references_.size();
}
inline int FieldInfo::data_references_size() const {
  return _internal_data_references_size();
}
inline void FieldInfo::clear_data_references() {
  _impl_.data_references_.Clear();
}
inline uint64_t FieldInfo::_internal_data_references(int index) const {
  return _impl_.data_references_.Get(index);
}
inline uint64_t FieldInfo::data_references(int index) const {
  // @@protoc_insertion_point(field_get:TSP.FieldInfo.data_references)
  return _internal_data_references(index);
}
inline void FieldInfo::set_data_references(int index, uint64_t value) {
  _impl_.data_references_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.FieldInfo.data_references)
}
inline void FieldInfo::_internal_add_data_references(uint64_t value) {
  _impl_.data_references_.Add(value);
}
inline void FieldInfo::add_data_references(uint64_t value) {
  _internal_add_data_references(value);
  // @@protoc_insertion_point(field_add:TSP.FieldInfo.data_references)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
FieldInfo::_internal_data_references() const {
  return _impl_.data_references_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
FieldInfo::data_references() const {
  // @@protoc_insertion_point(field_list:TSP.FieldInfo.data_references)
  return _internal_data_references();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
FieldInfo::_internal_mutable_data_references() {
  return &_impl_.data_references_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
FieldInfo::mutable_data_references() {
  // @@protoc_insertion_point(field_mutable_list:TSP.FieldInfo.data_references)
  return _internal_mutable_data_references();
}

// optional .TSP.FieldInfo.KnownFieldRule known_field_rule = 6 [default = None];
inline bool FieldInfo::_internal_has_known_field_rule() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool FieldInfo::has_known_field_rule() const {
  return _internal_has_known_field_rule();
}
inline void FieldInfo::clear_known_field_rule() {
  _impl_.known_field_rule_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::TSP::FieldInfo_KnownFieldRule FieldInfo::_internal_known_field_rule() const {
  return static_cast< ::TSP::FieldInfo_KnownFieldRule >(_impl_.known_field_rule_);
}
inline ::TSP::FieldInfo_KnownFieldRule FieldInfo::known_field_rule() const {
  // @@protoc_insertion_point(field_get:TSP.FieldInfo.known_field_rule)
  return _internal_known_field_rule();
}
inline void FieldInfo::_internal_set_known_field_rule(::TSP::FieldInfo_KnownFieldRule value) {
  assert(::TSP::FieldInfo_KnownFieldRule_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.known_field_rule_ = value;
}
inline void FieldInfo::set_known_field_rule(::TSP::FieldInfo_KnownFieldRule value) {
  _internal_set_known_field_rule(value);
  // @@protoc_insertion_point(field_set:TSP.FieldInfo.known_field_rule)
}

// repeated uint32 known_field_version = 7 [packed = true];
inline int FieldInfo::_internal_known_field_version_size() const {
  return _impl_.known_field_version_.size();
}
inline int FieldInfo::known_field_version_size() const {
  return _internal_known_field_version_size();
}
inline void FieldInfo::clear_known_field_version() {
  _impl_.known_field_version_.Clear();
}
inline uint32_t FieldInfo::_internal_known_field_version(int index) const {
  return _impl_.known_field_version_.Get(index);
}
inline uint32_t FieldInfo::known_field_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.FieldInfo.known_field_version)
  return _internal_known_field_version(index);
}
inline void FieldInfo::set_known_field_version(int index, uint32_t value) {
  _impl_.known_field_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.FieldInfo.known_field_version)
}
inline void FieldInfo::_internal_add_known_field_version(uint32_t value) {
  _impl_.known_field_version_.Add(value);
}
inline void FieldInfo::add_known_field_version(uint32_t value) {
  _internal_add_known_field_version(value);
  // @@protoc_insertion_point(field_add:TSP.FieldInfo.known_field_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
FieldInfo::_internal_known_field_version() const {
  return _impl_.known_field_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
FieldInfo::known_field_version() const {
  // @@protoc_insertion_point(field_list:TSP.FieldInfo.known_field_version)
  return _internal_known_field_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
FieldInfo::_internal_mutable_known_field_version() {
  return &_impl_.known_field_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
FieldInfo::mutable_known_field_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.FieldInfo.known_field_version)
  return _internal_mutable_known_field_version();
}

// optional string known_field_feature_identifier = 8;
inline bool FieldInfo::_internal_has_known_field_feature_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool FieldInfo::has_known_field_feature_identifier() const {
  return _internal_has_known_field_feature_identifier();
}
inline void FieldInfo::clear_known_field_feature_identifier() {
  _impl_.known_field_feature_identifier_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& FieldInfo::known_field_feature_identifier() const {
  // @@protoc_insertion_point(field_get:TSP.FieldInfo.known_field_feature_identifier)
  return _internal_known_field_feature_identifier();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void FieldInfo::set_known_field_feature_identifier(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.known_field_feature_identifier_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.FieldInfo.known_field_feature_identifier)
}
inline std::string* FieldInfo::mutable_known_field_feature_identifier() {
  std::string* _s = _internal_mutable_known_field_feature_identifier();
  // @@protoc_insertion_point(field_mutable:TSP.FieldInfo.known_field_feature_identifier)
  return _s;
}
inline const std::string& FieldInfo::_internal_known_field_feature_identifier() const {
  return _impl_.known_field_feature_identifier_.Get();
}
inline void FieldInfo::_internal_set_known_field_feature_identifier(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.known_field_feature_identifier_.Set(value, GetArenaForAllocation());
}
inline std::string* FieldInfo::_internal_mutable_known_field_feature_identifier() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.known_field_feature_identifier_.Mutable(GetArenaForAllocation());
}
inline std::string* FieldInfo::release_known_field_feature_identifier() {
  // @@protoc_insertion_point(field_release:TSP.FieldInfo.known_field_feature_identifier)
  if (!_internal_has_known_field_feature_identifier()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.known_field_feature_identifier_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.known_field_feature_identifier_.IsDefault()) {
    _impl_.known_field_feature_identifier_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void FieldInfo::set_allocated_known_field_feature_identifier(std::string* known_field_feature_identifier) {
  if (known_field_feature_identifier != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.known_field_feature_identifier_.SetAllocated(known_field_feature_identifier, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.known_field_feature_identifier_.IsDefault()) {
    _impl_.known_field_feature_identifier_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.FieldInfo.known_field_feature_identifier)
}

// -------------------------------------------------------------------

// FieldPath

// repeated uint32 path = 1 [packed = true];
inline int FieldPath::_internal_path_size() const {
  return _impl_.path_.size();
}
inline int FieldPath::path_size() const {
  return _internal_path_size();
}
inline void FieldPath::clear_path() {
  _impl_.path_.Clear();
}
inline uint32_t FieldPath::_internal_path(int index) const {
  return _impl_.path_.Get(index);
}
inline uint32_t FieldPath::path(int index) const {
  // @@protoc_insertion_point(field_get:TSP.FieldPath.path)
  return _internal_path(index);
}
inline void FieldPath::set_path(int index, uint32_t value) {
  _impl_.path_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.FieldPath.path)
}
inline void FieldPath::_internal_add_path(uint32_t value) {
  _impl_.path_.Add(value);
}
inline void FieldPath::add_path(uint32_t value) {
  _internal_add_path(value);
  // @@protoc_insertion_point(field_add:TSP.FieldPath.path)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
FieldPath::_internal_path() const {
  return _impl_.path_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
FieldPath::path() const {
  // @@protoc_insertion_point(field_list:TSP.FieldPath.path)
  return _internal_path();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
FieldPath::_internal_mutable_path() {
  return &_impl_.path_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
FieldPath::mutable_path() {
  // @@protoc_insertion_point(field_mutable_list:TSP.FieldPath.path)
  return _internal_mutable_path();
}

// -------------------------------------------------------------------

// ComponentInfo

// required uint64 identifier = 1;
inline bool ComponentInfo::_internal_has_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ComponentInfo::has_identifier() const {
  return _internal_has_identifier();
}
inline void ComponentInfo::clear_identifier() {
  _impl_.identifier_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t ComponentInfo::_internal_identifier() const {
  return _impl_.identifier_;
}
inline uint64_t ComponentInfo::identifier() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.identifier)
  return _internal_identifier();
}
inline void ComponentInfo::_internal_set_identifier(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.identifier_ = value;
}
inline void ComponentInfo::set_identifier(uint64_t value) {
  _internal_set_identifier(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.identifier)
}

// required string preferred_locator = 2;
inline bool ComponentInfo::_internal_has_preferred_locator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ComponentInfo::has_preferred_locator() const {
  return _internal_has_preferred_locator();
}
inline void ComponentInfo::clear_preferred_locator() {
  _impl_.preferred_locator_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ComponentInfo::preferred_locator() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.preferred_locator)
  return _internal_preferred_locator();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ComponentInfo::set_preferred_locator(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.preferred_locator_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.preferred_locator)
}
inline std::string* ComponentInfo::mutable_preferred_locator() {
  std::string* _s = _internal_mutable_preferred_locator();
  // @@protoc_insertion_point(field_mutable:TSP.ComponentInfo.preferred_locator)
  return _s;
}
inline const std::string& ComponentInfo::_internal_preferred_locator() const {
  return _impl_.preferred_locator_.Get();
}
inline void ComponentInfo::_internal_set_preferred_locator(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.preferred_locator_.Set(value, GetArenaForAllocation());
}
inline std::string* ComponentInfo::_internal_mutable_preferred_locator() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.preferred_locator_.Mutable(GetArenaForAllocation());
}
inline std::string* ComponentInfo::release_preferred_locator() {
  // @@protoc_insertion_point(field_release:TSP.ComponentInfo.preferred_locator)
  if (!_internal_has_preferred_locator()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.preferred_locator_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.preferred_locator_.IsDefault()) {
    _impl_.preferred_locator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void ComponentInfo::set_allocated_preferred_locator(std::string* preferred_locator) {
  if (preferred_locator != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.preferred_locator_.SetAllocated(preferred_locator, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.preferred_locator_.IsDefault()) {
    _impl_.preferred_locator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.ComponentInfo.preferred_locator)
}

// optional string locator = 3;
inline bool ComponentInfo::_internal_has_locator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ComponentInfo::has_locator() const {
  return _internal_has_locator();
}
inline void ComponentInfo::clear_locator() {
  _impl_.locator_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ComponentInfo::locator() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.locator)
  return _internal_locator();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ComponentInfo::set_locator(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.locator_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.locator)
}
inline std::string* ComponentInfo::mutable_locator() {
  std::string* _s = _internal_mutable_locator();
  // @@protoc_insertion_point(field_mutable:TSP.ComponentInfo.locator)
  return _s;
}
inline const std::string& ComponentInfo::_internal_locator() const {
  return _impl_.locator_.Get();
}
inline void ComponentInfo::_internal_set_locator(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.locator_.Set(value, GetArenaForAllocation());
}
inline std::string* ComponentInfo::_internal_mutable_locator() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.locator_.Mutable(GetArenaForAllocation());
}
inline std::string* ComponentInfo::release_locator() {
  // @@protoc_insertion_point(field_release:TSP.ComponentInfo.locator)
  if (!_internal_has_locator()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.locator_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.locator_.IsDefault()) {
    _impl_.locator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void ComponentInfo::set_allocated_locator(std::string* locator) {
  if (locator != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.locator_.SetAllocated(locator, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.locator_.IsDefault()) {
    _impl_.locator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.ComponentInfo.locator)
}

// repeated uint32 document_read_version = 4 [packed = true];
inline int ComponentInfo::_internal_document_read_version_size() const {
  return _impl_.document_read_version_.size();
}
inline int ComponentInfo::document_read_version_size() const {
  return _internal_document_read_version_size();
}
inline void ComponentInfo::clear_document_read_version() {
  _impl_.document_read_version_.Clear();
}
inline uint32_t ComponentInfo::_internal_document_read_version(int index) const {
  return _impl_.document_read_version_.Get(index);
}
inline uint32_t ComponentInfo::document_read_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.document_read_version)
  return _internal_document_read_version(index);
}
inline void ComponentInfo::set_document_read_version(int index, uint32_t value) {
  _impl_.document_read_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.document_read_version)
}
inline void ComponentInfo::_internal_add_document_read_version(uint32_t value) {
  _impl_.document_read_version_.Add(value);
}
inline void ComponentInfo::add_document_read_version(uint32_t value) {
  _internal_add_document_read_version(value);
  // @@protoc_insertion_point(field_add:TSP.ComponentInfo.document_read_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ComponentInfo::_internal_document_read_version() const {
  return _impl_.document_read_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ComponentInfo::document_read_version() const {
  // @@protoc_insertion_point(field_list:TSP.ComponentInfo.document_read_version)
  return _internal_document_read_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ComponentInfo::_internal_mutable_document_read_version() {
  return &_impl_.document_read_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ComponentInfo::mutable_document_read_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ComponentInfo.document_read_version)
  return _internal_mutable_document_read_version();
}

// repeated uint32 document_write_version = 5 [packed = true];
inline int ComponentInfo::_internal_document_write_version_size() const {
  return _impl_.document_write_version_.size();
}
inline int ComponentInfo::document_write_version_size() const {
  return _internal_document_write_version_size();
}
inline void ComponentInfo::clear_document_write_version() {
  _impl_.document_write_version_.Clear();
}
inline uint32_t ComponentInfo::_internal_document_write_version(int index) const {
  return _impl_.document_write_version_.Get(index);
}
inline uint32_t ComponentInfo::document_write_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.document_write_version)
  return _internal_document_write_version(index);
}
inline void ComponentInfo::set_document_write_version(int index, uint32_t value) {
  _impl_.document_write_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.document_write_version)
}
inline void ComponentInfo::_internal_add_document_write_version(uint32_t value) {
  _impl_.document_write_version_.Add(value);
}
inline void ComponentInfo::add_document_write_version(uint32_t value) {
  _internal_add_document_write_version(value);
  // @@protoc_insertion_point(field_add:TSP.ComponentInfo.document_write_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ComponentInfo::_internal_document_write_version() const {
  return _impl_.document_write_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ComponentInfo::document_write_version() const {
  // @@protoc_insertion_point(field_list:TSP.ComponentInfo.document_write_version)
  return _internal_document_write_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ComponentInfo::_internal_mutable_document_write_version() {
  return &_impl_.document_write_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ComponentInfo::mutable_document_write_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ComponentInfo.document_write_version)
  return _internal_mutable_document_write_version();
}

// repeated .TSP.ComponentExternalReference external_references = 6;
inline int ComponentInfo::_internal_external_references_size() const {
  return _impl_.external_references_.size();
}
inline int ComponentInfo::external_references_size() const {
  return _internal_external_references_size();
}
inline void ComponentInfo::clear_external_references() {
  _impl_.external_references_.Clear();
}
inline ::TSP::ComponentExternalReference* ComponentInfo::mutable_external_references(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.ComponentInfo.external_references)
  return _impl_.external_references_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentExternalReference >*
ComponentInfo::mutable_external_references() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ComponentInfo.external_references)
  return &_impl_.external_references_;
}
inline const ::TSP::ComponentExternalReference& ComponentInfo::_internal_external_references(int index) const {
  return _impl_.external_references_.Get(index);
}
inline const ::TSP::ComponentExternalReference& ComponentInfo::external_references(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.external_references)
  return _internal_external_references(index);
}
inline ::TSP::ComponentExternalReference* ComponentInfo::_internal_add_external_references() {
  return _impl_.external_references_.Add();
}
inline ::TSP::ComponentExternalReference* ComponentInfo::add_external_references() {
  ::TSP::ComponentExternalReference* _add = _internal_add_external_references();
  // @@protoc_insertion_point(field_add:TSP.ComponentInfo.external_references)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentExternalReference >&
ComponentInfo::external_references() const {
  // @@protoc_insertion_point(field_list:TSP.ComponentInfo.external_references)
  return _impl_.external_references_;
}

// repeated .TSP.ComponentDataReference data_references = 7;
inline int ComponentInfo::_internal_data_references_size() const {
  return _impl_.data_references_.size();
}
inline int ComponentInfo::data_references_size() const {
  return _internal_data_references_size();
}
inline void ComponentInfo::clear_data_references() {
  _impl_.data_references_.Clear();
}
inline ::TSP::ComponentDataReference* ComponentInfo::mutable_data_references(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.ComponentInfo.data_references)
  return _impl_.data_references_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentDataReference >*
ComponentInfo::mutable_data_references() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ComponentInfo.data_references)
  return &_impl_.data_references_;
}
inline const ::TSP::ComponentDataReference& ComponentInfo::_internal_data_references(int index) const {
  return _impl_.data_references_.Get(index);
}
inline const ::TSP::ComponentDataReference& ComponentInfo::data_references(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.data_references)
  return _internal_data_references(index);
}
inline ::TSP::ComponentDataReference* ComponentInfo::_internal_add_data_references() {
  return _impl_.data_references_.Add();
}
inline ::TSP::ComponentDataReference* ComponentInfo::add_data_references() {
  ::TSP::ComponentDataReference* _add = _internal_add_data_references();
  // @@protoc_insertion_point(field_add:TSP.ComponentInfo.data_references)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentDataReference >&
ComponentInfo::data_references() const {
  // @@protoc_insertion_point(field_list:TSP.ComponentInfo.data_references)
  return _impl_.data_references_;
}

// optional bool is_stored_outside_object_archive = 10 [default = false];
inline bool ComponentInfo::_internal_has_is_stored_outside_object_archive() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ComponentInfo::has_is_stored_outside_object_archive() const {
  return _internal_has_is_stored_outside_object_archive();
}
inline void ComponentInfo::clear_is_stored_outside_object_archive() {
  _impl_.is_stored_outside_object_archive_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool ComponentInfo::_internal_is_stored_outside_object_archive() const {
  return _impl_.is_stored_outside_object_archive_;
}
inline bool ComponentInfo::is_stored_outside_object_archive() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.is_stored_outside_object_archive)
  return _internal_is_stored_outside_object_archive();
}
inline void ComponentInfo::_internal_set_is_stored_outside_object_archive(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.is_stored_outside_object_archive_ = value;
}
inline void ComponentInfo::set_is_stored_outside_object_archive(bool value) {
  _internal_set_is_stored_outside_object_archive(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.is_stored_outside_object_archive)
}

// repeated .TSP.ObjectUUIDMapEntry object_uuid_map_entries = 11;
inline int ComponentInfo::_internal_object_uuid_map_entries_size() const {
  return _impl_.object_uuid_map_entries_.size();
}
inline int ComponentInfo::object_uuid_map_entries_size() const {
  return _internal_object_uuid_map_entries_size();
}
inline void ComponentInfo::clear_object_uuid_map_entries() {
  _impl_.object_uuid_map_entries_.Clear();
}
inline ::TSP::ObjectUUIDMapEntry* ComponentInfo::mutable_object_uuid_map_entries(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.ComponentInfo.object_uuid_map_entries)
  return _impl_.object_uuid_map_entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >*
ComponentInfo::mutable_object_uuid_map_entries() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ComponentInfo.object_uuid_map_entries)
  return &_impl_.object_uuid_map_entries_;
}
inline const ::TSP::ObjectUUIDMapEntry& ComponentInfo::_internal_object_uuid_map_entries(int index) const {
  return _impl_.object_uuid_map_entries_.Get(index);
}
inline const ::TSP::ObjectUUIDMapEntry& ComponentInfo::object_uuid_map_entries(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.object_uuid_map_entries)
  return _internal_object_uuid_map_entries(index);
}
inline ::TSP::ObjectUUIDMapEntry* ComponentInfo::_internal_add_object_uuid_map_entries() {
  return _impl_.object_uuid_map_entries_.Add();
}
inline ::TSP::ObjectUUIDMapEntry* ComponentInfo::add_object_uuid_map_entries() {
  ::TSP::ObjectUUIDMapEntry* _add = _internal_add_object_uuid_map_entries();
  // @@protoc_insertion_point(field_add:TSP.ComponentInfo.object_uuid_map_entries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >&
ComponentInfo::object_uuid_map_entries() const {
  // @@protoc_insertion_point(field_list:TSP.ComponentInfo.object_uuid_map_entries)
  return _impl_.object_uuid_map_entries_;
}

// optional uint64 save_token = 12 [default = 0];
inline bool ComponentInfo::_internal_has_save_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ComponentInfo::has_save_token() const {
  return _internal_has_save_token();
}
inline void ComponentInfo::clear_save_token() {
  _impl_.save_token_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t ComponentInfo::_internal_save_token() const {
  return _impl_.save_token_;
}
inline uint64_t ComponentInfo::save_token() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.save_token)
  return _internal_save_token();
}
inline void ComponentInfo::_internal_set_save_token(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.save_token_ = value;
}
inline void ComponentInfo::set_save_token(uint64_t value) {
  _internal_set_save_token(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.save_token)
}

// repeated .TSP.FeatureInfo feature_infos = 13;
inline int ComponentInfo::_internal_feature_infos_size() const {
  return _impl_.feature_infos_.size();
}
inline int ComponentInfo::feature_infos_size() const {
  return _internal_feature_infos_size();
}
inline void ComponentInfo::clear_feature_infos() {
  _impl_.feature_infos_.Clear();
}
inline ::TSP::FeatureInfo* ComponentInfo::mutable_feature_infos(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.ComponentInfo.feature_infos)
  return _impl_.feature_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FeatureInfo >*
ComponentInfo::mutable_feature_infos() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ComponentInfo.feature_infos)
  return &_impl_.feature_infos_;
}
inline const ::TSP::FeatureInfo& ComponentInfo::_internal_feature_infos(int index) const {
  return _impl_.feature_infos_.Get(index);
}
inline const ::TSP::FeatureInfo& ComponentInfo::feature_infos(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.feature_infos)
  return _internal_feature_infos(index);
}
inline ::TSP::FeatureInfo* ComponentInfo::_internal_add_feature_infos() {
  return _impl_.feature_infos_.Add();
}
inline ::TSP::FeatureInfo* ComponentInfo::add_feature_infos() {
  ::TSP::FeatureInfo* _add = _internal_add_feature_infos();
  // @@protoc_insertion_point(field_add:TSP.ComponentInfo.feature_infos)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::FeatureInfo >&
ComponentInfo::feature_infos() const {
  // @@protoc_insertion_point(field_list:TSP.ComponentInfo.feature_infos)
  return _impl_.feature_infos_;
}

// repeated uint32 component_read_version = 14 [packed = true];
inline int ComponentInfo::_internal_component_read_version_size() const {
  return _impl_.component_read_version_.size();
}
inline int ComponentInfo::component_read_version_size() const {
  return _internal_component_read_version_size();
}
inline void ComponentInfo::clear_component_read_version() {
  _impl_.component_read_version_.Clear();
}
inline uint32_t ComponentInfo::_internal_component_read_version(int index) const {
  return _impl_.component_read_version_.Get(index);
}
inline uint32_t ComponentInfo::component_read_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.component_read_version)
  return _internal_component_read_version(index);
}
inline void ComponentInfo::set_component_read_version(int index, uint32_t value) {
  _impl_.component_read_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.component_read_version)
}
inline void ComponentInfo::_internal_add_component_read_version(uint32_t value) {
  _impl_.component_read_version_.Add(value);
}
inline void ComponentInfo::add_component_read_version(uint32_t value) {
  _internal_add_component_read_version(value);
  // @@protoc_insertion_point(field_add:TSP.ComponentInfo.component_read_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ComponentInfo::_internal_component_read_version() const {
  return _impl_.component_read_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ComponentInfo::component_read_version() const {
  // @@protoc_insertion_point(field_list:TSP.ComponentInfo.component_read_version)
  return _internal_component_read_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ComponentInfo::_internal_mutable_component_read_version() {
  return &_impl_.component_read_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ComponentInfo::mutable_component_read_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ComponentInfo.component_read_version)
  return _internal_mutable_component_read_version();
}

// repeated uint32 component_required_version = 15 [packed = true];
inline int ComponentInfo::_internal_component_required_version_size() const {
  return _impl_.component_required_version_.size();
}
inline int ComponentInfo::component_required_version_size() const {
  return _internal_component_required_version_size();
}
inline void ComponentInfo::clear_component_required_version() {
  _impl_.component_required_version_.Clear();
}
inline uint32_t ComponentInfo::_internal_component_required_version(int index) const {
  return _impl_.component_required_version_.Get(index);
}
inline uint32_t ComponentInfo::component_required_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.component_required_version)
  return _internal_component_required_version(index);
}
inline void ComponentInfo::set_component_required_version(int index, uint32_t value) {
  _impl_.component_required_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.component_required_version)
}
inline void ComponentInfo::_internal_add_component_required_version(uint32_t value) {
  _impl_.component_required_version_.Add(value);
}
inline void ComponentInfo::add_component_required_version(uint32_t value) {
  _internal_add_component_required_version(value);
  // @@protoc_insertion_point(field_add:TSP.ComponentInfo.component_required_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ComponentInfo::_internal_component_required_version() const {
  return _impl_.component_required_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ComponentInfo::component_required_version() const {
  // @@protoc_insertion_point(field_list:TSP.ComponentInfo.component_required_version)
  return _internal_component_required_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ComponentInfo::_internal_mutable_component_required_version() {
  return &_impl_.component_required_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ComponentInfo::mutable_component_required_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ComponentInfo.component_required_version)
  return _internal_mutable_component_required_version();
}

// optional uint32 compression_algorithm = 16;
inline bool ComponentInfo::_internal_has_compression_algorithm() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ComponentInfo::has_compression_algorithm() const {
  return _internal_has_compression_algorithm();
}
inline void ComponentInfo::clear_compression_algorithm() {
  _impl_.compression_algorithm_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t ComponentInfo::_internal_compression_algorithm() const {
  return _impl_.compression_algorithm_;
}
inline uint32_t ComponentInfo::compression_algorithm() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.compression_algorithm)
  return _internal_compression_algorithm();
}
inline void ComponentInfo::_internal_set_compression_algorithm(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.compression_algorithm_ = value;
}
inline void ComponentInfo::set_compression_algorithm(uint32_t value) {
  _internal_set_compression_algorithm(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.compression_algorithm)
}

// optional bool can_be_dropped = 17;
inline bool ComponentInfo::_internal_has_can_be_dropped() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ComponentInfo::has_can_be_dropped() const {
  return _internal_has_can_be_dropped();
}
inline void ComponentInfo::clear_can_be_dropped() {
  _impl_.can_be_dropped_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool ComponentInfo::_internal_can_be_dropped() const {
  return _impl_.can_be_dropped_;
}
inline bool ComponentInfo::can_be_dropped() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.can_be_dropped)
  return _internal_can_be_dropped();
}
inline void ComponentInfo::_internal_set_can_be_dropped(bool value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.can_be_dropped_ = value;
}
inline void ComponentInfo::set_can_be_dropped(bool value) {
  _internal_set_can_be_dropped(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.can_be_dropped)
}

// repeated .TSP.ComponentExternalReference versioned_external_references = 18;
inline int ComponentInfo::_internal_versioned_external_references_size() const {
  return _impl_.versioned_external_references_.size();
}
inline int ComponentInfo::versioned_external_references_size() const {
  return _internal_versioned_external_references_size();
}
inline void ComponentInfo::clear_versioned_external_references() {
  _impl_.versioned_external_references_.Clear();
}
inline ::TSP::ComponentExternalReference* ComponentInfo::mutable_versioned_external_references(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.ComponentInfo.versioned_external_references)
  return _impl_.versioned_external_references_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentExternalReference >*
ComponentInfo::mutable_versioned_external_references() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ComponentInfo.versioned_external_references)
  return &_impl_.versioned_external_references_;
}
inline const ::TSP::ComponentExternalReference& ComponentInfo::_internal_versioned_external_references(int index) const {
  return _impl_.versioned_external_references_.Get(index);
}
inline const ::TSP::ComponentExternalReference& ComponentInfo::versioned_external_references(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.versioned_external_references)
  return _internal_versioned_external_references(index);
}
inline ::TSP::ComponentExternalReference* ComponentInfo::_internal_add_versioned_external_references() {
  return _impl_.versioned_external_references_.Add();
}
inline ::TSP::ComponentExternalReference* ComponentInfo::add_versioned_external_references() {
  ::TSP::ComponentExternalReference* _add = _internal_add_versioned_external_references();
  // @@protoc_insertion_point(field_add:TSP.ComponentInfo.versioned_external_references)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentExternalReference >&
ComponentInfo::versioned_external_references() const {
  // @@protoc_insertion_point(field_list:TSP.ComponentInfo.versioned_external_references)
  return _impl_.versioned_external_references_;
}

// optional bool is_wasteful = 19;
inline bool ComponentInfo::_internal_has_is_wasteful() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ComponentInfo::has_is_wasteful() const {
  return _internal_has_is_wasteful();
}
inline void ComponentInfo::clear_is_wasteful() {
  _impl_.is_wasteful_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool ComponentInfo::_internal_is_wasteful() const {
  return _impl_.is_wasteful_;
}
inline bool ComponentInfo::is_wasteful() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.is_wasteful)
  return _internal_is_wasteful();
}
inline void ComponentInfo::_internal_set_is_wasteful(bool value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.is_wasteful_ = value;
}
inline void ComponentInfo::set_is_wasteful(bool value) {
  _internal_set_is_wasteful(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.is_wasteful)
}

// repeated uint64 ambiguous_object_identifiers = 20 [packed = true];
inline int ComponentInfo::_internal_ambiguous_object_identifiers_size() const {
  return _impl_.ambiguous_object_identifiers_.size();
}
inline int ComponentInfo::ambiguous_object_identifiers_size() const {
  return _internal_ambiguous_object_identifiers_size();
}
inline void ComponentInfo::clear_ambiguous_object_identifiers() {
  _impl_.ambiguous_object_identifiers_.Clear();
}
inline uint64_t ComponentInfo::_internal_ambiguous_object_identifiers(int index) const {
  return _impl_.ambiguous_object_identifiers_.Get(index);
}
inline uint64_t ComponentInfo::ambiguous_object_identifiers(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.ambiguous_object_identifiers)
  return _internal_ambiguous_object_identifiers(index);
}
inline void ComponentInfo::set_ambiguous_object_identifiers(int index, uint64_t value) {
  _impl_.ambiguous_object_identifiers_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.ambiguous_object_identifiers)
}
inline void ComponentInfo::_internal_add_ambiguous_object_identifiers(uint64_t value) {
  _impl_.ambiguous_object_identifiers_.Add(value);
}
inline void ComponentInfo::add_ambiguous_object_identifiers(uint64_t value) {
  _internal_add_ambiguous_object_identifiers(value);
  // @@protoc_insertion_point(field_add:TSP.ComponentInfo.ambiguous_object_identifiers)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
ComponentInfo::_internal_ambiguous_object_identifiers() const {
  return _impl_.ambiguous_object_identifiers_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
ComponentInfo::ambiguous_object_identifiers() const {
  // @@protoc_insertion_point(field_list:TSP.ComponentInfo.ambiguous_object_identifiers)
  return _internal_ambiguous_object_identifiers();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
ComponentInfo::_internal_mutable_ambiguous_object_identifiers() {
  return &_impl_.ambiguous_object_identifiers_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
ComponentInfo::mutable_ambiguous_object_identifiers() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ComponentInfo.ambiguous_object_identifiers)
  return _internal_mutable_ambiguous_object_identifiers();
}

// optional uint32 required_package_identifier = 21;
inline bool ComponentInfo::_internal_has_required_package_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ComponentInfo::has_required_package_identifier() const {
  return _internal_has_required_package_identifier();
}
inline void ComponentInfo::clear_required_package_identifier() {
  _impl_.required_package_identifier_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint32_t ComponentInfo::_internal_required_package_identifier() const {
  return _impl_.required_package_identifier_;
}
inline uint32_t ComponentInfo::required_package_identifier() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentInfo.required_package_identifier)
  return _internal_required_package_identifier();
}
inline void ComponentInfo::_internal_set_required_package_identifier(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.required_package_identifier_ = value;
}
inline void ComponentInfo::set_required_package_identifier(uint32_t value) {
  _internal_set_required_package_identifier(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentInfo.required_package_identifier)
}

// -------------------------------------------------------------------

// ComponentExternalReference

// required uint64 component_identifier = 1;
inline bool ComponentExternalReference::_internal_has_component_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ComponentExternalReference::has_component_identifier() const {
  return _internal_has_component_identifier();
}
inline void ComponentExternalReference::clear_component_identifier() {
  _impl_.component_identifier_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t ComponentExternalReference::_internal_component_identifier() const {
  return _impl_.component_identifier_;
}
inline uint64_t ComponentExternalReference::component_identifier() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentExternalReference.component_identifier)
  return _internal_component_identifier();
}
inline void ComponentExternalReference::_internal_set_component_identifier(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.component_identifier_ = value;
}
inline void ComponentExternalReference::set_component_identifier(uint64_t value) {
  _internal_set_component_identifier(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentExternalReference.component_identifier)
}

// optional uint64 object_identifier = 2;
inline bool ComponentExternalReference::_internal_has_object_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ComponentExternalReference::has_object_identifier() const {
  return _internal_has_object_identifier();
}
inline void ComponentExternalReference::clear_object_identifier() {
  _impl_.object_identifier_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t ComponentExternalReference::_internal_object_identifier() const {
  return _impl_.object_identifier_;
}
inline uint64_t ComponentExternalReference::object_identifier() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentExternalReference.object_identifier)
  return _internal_object_identifier();
}
inline void ComponentExternalReference::_internal_set_object_identifier(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.object_identifier_ = value;
}
inline void ComponentExternalReference::set_object_identifier(uint64_t value) {
  _internal_set_object_identifier(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentExternalReference.object_identifier)
}

// optional bool is_weak = 3;
inline bool ComponentExternalReference::_internal_has_is_weak() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ComponentExternalReference::has_is_weak() const {
  return _internal_has_is_weak();
}
inline void ComponentExternalReference::clear_is_weak() {
  _impl_.is_weak_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool ComponentExternalReference::_internal_is_weak() const {
  return _impl_.is_weak_;
}
inline bool ComponentExternalReference::is_weak() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentExternalReference.is_weak)
  return _internal_is_weak();
}
inline void ComponentExternalReference::_internal_set_is_weak(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.is_weak_ = value;
}
inline void ComponentExternalReference::set_is_weak(bool value) {
  _internal_set_is_weak(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentExternalReference.is_weak)
}

// -------------------------------------------------------------------

// ComponentDataReference_ObjectReference

// required uint64 object_identifier = 1;
inline bool ComponentDataReference_ObjectReference::_internal_has_object_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ComponentDataReference_ObjectReference::has_object_identifier() const {
  return _internal_has_object_identifier();
}
inline void ComponentDataReference_ObjectReference::clear_object_identifier() {
  _impl_.object_identifier_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t ComponentDataReference_ObjectReference::_internal_object_identifier() const {
  return _impl_.object_identifier_;
}
inline uint64_t ComponentDataReference_ObjectReference::object_identifier() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentDataReference.ObjectReference.object_identifier)
  return _internal_object_identifier();
}
inline void ComponentDataReference_ObjectReference::_internal_set_object_identifier(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.object_identifier_ = value;
}
inline void ComponentDataReference_ObjectReference::set_object_identifier(uint64_t value) {
  _internal_set_object_identifier(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentDataReference.ObjectReference.object_identifier)
}

// required uint32 count = 2;
inline bool ComponentDataReference_ObjectReference::_internal_has_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ComponentDataReference_ObjectReference::has_count() const {
  return _internal_has_count();
}
inline void ComponentDataReference_ObjectReference::clear_count() {
  _impl_.count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t ComponentDataReference_ObjectReference::_internal_count() const {
  return _impl_.count_;
}
inline uint32_t ComponentDataReference_ObjectReference::count() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentDataReference.ObjectReference.count)
  return _internal_count();
}
inline void ComponentDataReference_ObjectReference::_internal_set_count(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.count_ = value;
}
inline void ComponentDataReference_ObjectReference::set_count(uint32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentDataReference.ObjectReference.count)
}

// -------------------------------------------------------------------

// ComponentDataReference

// required uint64 data_identifier = 1;
inline bool ComponentDataReference::_internal_has_data_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ComponentDataReference::has_data_identifier() const {
  return _internal_has_data_identifier();
}
inline void ComponentDataReference::clear_data_identifier() {
  _impl_.data_identifier_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t ComponentDataReference::_internal_data_identifier() const {
  return _impl_.data_identifier_;
}
inline uint64_t ComponentDataReference::data_identifier() const {
  // @@protoc_insertion_point(field_get:TSP.ComponentDataReference.data_identifier)
  return _internal_data_identifier();
}
inline void ComponentDataReference::_internal_set_data_identifier(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_identifier_ = value;
}
inline void ComponentDataReference::set_data_identifier(uint64_t value) {
  _internal_set_data_identifier(value);
  // @@protoc_insertion_point(field_set:TSP.ComponentDataReference.data_identifier)
}

// repeated .TSP.ComponentDataReference.ObjectReference object_reference_list = 2;
inline int ComponentDataReference::_internal_object_reference_list_size() const {
  return _impl_.object_reference_list_.size();
}
inline int ComponentDataReference::object_reference_list_size() const {
  return _internal_object_reference_list_size();
}
inline void ComponentDataReference::clear_object_reference_list() {
  _impl_.object_reference_list_.Clear();
}
inline ::TSP::ComponentDataReference_ObjectReference* ComponentDataReference::mutable_object_reference_list(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.ComponentDataReference.object_reference_list)
  return _impl_.object_reference_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentDataReference_ObjectReference >*
ComponentDataReference::mutable_object_reference_list() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ComponentDataReference.object_reference_list)
  return &_impl_.object_reference_list_;
}
inline const ::TSP::ComponentDataReference_ObjectReference& ComponentDataReference::_internal_object_reference_list(int index) const {
  return _impl_.object_reference_list_.Get(index);
}
inline const ::TSP::ComponentDataReference_ObjectReference& ComponentDataReference::object_reference_list(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ComponentDataReference.object_reference_list)
  return _internal_object_reference_list(index);
}
inline ::TSP::ComponentDataReference_ObjectReference* ComponentDataReference::_internal_add_object_reference_list() {
  return _impl_.object_reference_list_.Add();
}
inline ::TSP::ComponentDataReference_ObjectReference* ComponentDataReference::add_object_reference_list() {
  ::TSP::ComponentDataReference_ObjectReference* _add = _internal_add_object_reference_list();
  // @@protoc_insertion_point(field_add:TSP.ComponentDataReference.object_reference_list)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentDataReference_ObjectReference >&
ComponentDataReference::object_reference_list() const {
  // @@protoc_insertion_point(field_list:TSP.ComponentDataReference.object_reference_list)
  return _impl_.object_reference_list_;
}

// -------------------------------------------------------------------

// ObjectUUIDMapEntry

// required uint64 identifier = 1;
inline bool ObjectUUIDMapEntry::_internal_has_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ObjectUUIDMapEntry::has_identifier() const {
  return _internal_has_identifier();
}
inline void ObjectUUIDMapEntry::clear_identifier() {
  _impl_.identifier_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t ObjectUUIDMapEntry::_internal_identifier() const {
  return _impl_.identifier_;
}
inline uint64_t ObjectUUIDMapEntry::identifier() const {
  // @@protoc_insertion_point(field_get:TSP.ObjectUUIDMapEntry.identifier)
  return _internal_identifier();
}
inline void ObjectUUIDMapEntry::_internal_set_identifier(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identifier_ = value;
}
inline void ObjectUUIDMapEntry::set_identifier(uint64_t value) {
  _internal_set_identifier(value);
  // @@protoc_insertion_point(field_set:TSP.ObjectUUIDMapEntry.identifier)
}

// required .TSP.UUID uuid = 2;
inline bool ObjectUUIDMapEntry::_internal_has_uuid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.uuid_ != nullptr);
  return value;
}
inline bool ObjectUUIDMapEntry::has_uuid() const {
  return _internal_has_uuid();
}
inline const ::TSP::UUID& ObjectUUIDMapEntry::_internal_uuid() const {
  const ::TSP::UUID* p = _impl_.uuid_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::UUID&>(
      ::TSP::_UUID_default_instance_);
}
inline const ::TSP::UUID& ObjectUUIDMapEntry::uuid() const {
  // @@protoc_insertion_point(field_get:TSP.ObjectUUIDMapEntry.uuid)
  return _internal_uuid();
}
inline void ObjectUUIDMapEntry::unsafe_arena_set_allocated_uuid(
    ::TSP::UUID* uuid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.uuid_);
  }
  _impl_.uuid_ = uuid;
  if (uuid) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.ObjectUUIDMapEntry.uuid)
}
inline ::TSP::UUID* ObjectUUIDMapEntry::release_uuid() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::UUID* temp = _impl_.uuid_;
  _impl_.uuid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::UUID* ObjectUUIDMapEntry::unsafe_arena_release_uuid() {
  // @@protoc_insertion_point(field_release:TSP.ObjectUUIDMapEntry.uuid)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::UUID* temp = _impl_.uuid_;
  _impl_.uuid_ = nullptr;
  return temp;
}
inline ::TSP::UUID* ObjectUUIDMapEntry::_internal_mutable_uuid() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.uuid_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::UUID>(GetArenaForAllocation());
    _impl_.uuid_ = p;
  }
  return _impl_.uuid_;
}
inline ::TSP::UUID* ObjectUUIDMapEntry::mutable_uuid() {
  ::TSP::UUID* _msg = _internal_mutable_uuid();
  // @@protoc_insertion_point(field_mutable:TSP.ObjectUUIDMapEntry.uuid)
  return _msg;
}
inline void ObjectUUIDMapEntry::set_allocated_uuid(::TSP::UUID* uuid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.uuid_);
  }
  if (uuid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(uuid));
    if (message_arena != submessage_arena) {
      uuid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uuid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.uuid_ = uuid;
  // @@protoc_insertion_point(field_set_allocated:TSP.ObjectUUIDMapEntry.uuid)
}

// -------------------------------------------------------------------

// FeatureInfo

// required string identifier = 1;
inline bool FeatureInfo::_internal_has_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool FeatureInfo::has_identifier() const {
  return _internal_has_identifier();
}
inline void FeatureInfo::clear_identifier() {
  _impl_.identifier_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& FeatureInfo::identifier() const {
  // @@protoc_insertion_point(field_get:TSP.FeatureInfo.identifier)
  return _internal_identifier();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void FeatureInfo::set_identifier(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.identifier_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.FeatureInfo.identifier)
}
inline std::string* FeatureInfo::mutable_identifier() {
  std::string* _s = _internal_mutable_identifier();
  // @@protoc_insertion_point(field_mutable:TSP.FeatureInfo.identifier)
  return _s;
}
inline const std::string& FeatureInfo::_internal_identifier() const {
  return _impl_.identifier_.Get();
}
inline void FeatureInfo::_internal_set_identifier(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.identifier_.Set(value, GetArenaForAllocation());
}
inline std::string* FeatureInfo::_internal_mutable_identifier() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.identifier_.Mutable(GetArenaForAllocation());
}
inline std::string* FeatureInfo::release_identifier() {
  // @@protoc_insertion_point(field_release:TSP.FeatureInfo.identifier)
  if (!_internal_has_identifier()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.identifier_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.identifier_.IsDefault()) {
    _impl_.identifier_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void FeatureInfo::set_allocated_identifier(std::string* identifier) {
  if (identifier != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.identifier_.SetAllocated(identifier, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.identifier_.IsDefault()) {
    _impl_.identifier_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.FeatureInfo.identifier)
}

// repeated uint32 read_version = 2 [packed = true];
inline int FeatureInfo::_internal_read_version_size() const {
  return _impl_.read_version_.size();
}
inline int FeatureInfo::read_version_size() const {
  return _internal_read_version_size();
}
inline void FeatureInfo::clear_read_version() {
  _impl_.read_version_.Clear();
}
inline uint32_t FeatureInfo::_internal_read_version(int index) const {
  return _impl_.read_version_.Get(index);
}
inline uint32_t FeatureInfo::read_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.FeatureInfo.read_version)
  return _internal_read_version(index);
}
inline void FeatureInfo::set_read_version(int index, uint32_t value) {
  _impl_.read_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.FeatureInfo.read_version)
}
inline void FeatureInfo::_internal_add_read_version(uint32_t value) {
  _impl_.read_version_.Add(value);
}
inline void FeatureInfo::add_read_version(uint32_t value) {
  _internal_add_read_version(value);
  // @@protoc_insertion_point(field_add:TSP.FeatureInfo.read_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
FeatureInfo::_internal_read_version() const {
  return _impl_.read_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
FeatureInfo::read_version() const {
  // @@protoc_insertion_point(field_list:TSP.FeatureInfo.read_version)
  return _internal_read_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
FeatureInfo::_internal_mutable_read_version() {
  return &_impl_.read_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
FeatureInfo::mutable_read_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.FeatureInfo.read_version)
  return _internal_mutable_read_version();
}

// repeated uint32 write_version = 3 [packed = true];
inline int FeatureInfo::_internal_write_version_size() const {
  return _impl_.write_version_.size();
}
inline int FeatureInfo::write_version_size() const {
  return _internal_write_version_size();
}
inline void FeatureInfo::clear_write_version() {
  _impl_.write_version_.Clear();
}
inline uint32_t FeatureInfo::_internal_write_version(int index) const {
  return _impl_.write_version_.Get(index);
}
inline uint32_t FeatureInfo::write_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.FeatureInfo.write_version)
  return _internal_write_version(index);
}
inline void FeatureInfo::set_write_version(int index, uint32_t value) {
  _impl_.write_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.FeatureInfo.write_version)
}
inline void FeatureInfo::_internal_add_write_version(uint32_t value) {
  _impl_.write_version_.Add(value);
}
inline void FeatureInfo::add_write_version(uint32_t value) {
  _internal_add_write_version(value);
  // @@protoc_insertion_point(field_add:TSP.FeatureInfo.write_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
FeatureInfo::_internal_write_version() const {
  return _impl_.write_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
FeatureInfo::write_version() const {
  // @@protoc_insertion_point(field_list:TSP.FeatureInfo.write_version)
  return _internal_write_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
FeatureInfo::_internal_mutable_write_version() {
  return &_impl_.write_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
FeatureInfo::mutable_write_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.FeatureInfo.write_version)
  return _internal_mutable_write_version();
}

// -------------------------------------------------------------------

// PackageMetadata

// required uint64 last_object_identifier = 1;
inline bool PackageMetadata::_internal_has_last_object_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PackageMetadata::has_last_object_identifier() const {
  return _internal_has_last_object_identifier();
}
inline void PackageMetadata::clear_last_object_identifier() {
  _impl_.last_object_identifier_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t PackageMetadata::_internal_last_object_identifier() const {
  return _impl_.last_object_identifier_;
}
inline uint64_t PackageMetadata::last_object_identifier() const {
  // @@protoc_insertion_point(field_get:TSP.PackageMetadata.last_object_identifier)
  return _internal_last_object_identifier();
}
inline void PackageMetadata::_internal_set_last_object_identifier(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.last_object_identifier_ = value;
}
inline void PackageMetadata::set_last_object_identifier(uint64_t value) {
  _internal_set_last_object_identifier(value);
  // @@protoc_insertion_point(field_set:TSP.PackageMetadata.last_object_identifier)
}

// optional .TSP.DocumentRevision revision = 2;
inline bool PackageMetadata::_internal_has_revision() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.revision_ != nullptr);
  return value;
}
inline bool PackageMetadata::has_revision() const {
  return _internal_has_revision();
}
inline void PackageMetadata::clear_revision() {
  if (_impl_.revision_ != nullptr) _impl_.revision_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::TSP::DocumentRevision& PackageMetadata::_internal_revision() const {
  const ::TSP::DocumentRevision* p = _impl_.revision_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::DocumentRevision&>(
      ::TSP::_DocumentRevision_default_instance_);
}
inline const ::TSP::DocumentRevision& PackageMetadata::revision() const {
  // @@protoc_insertion_point(field_get:TSP.PackageMetadata.revision)
  return _internal_revision();
}
inline void PackageMetadata::unsafe_arena_set_allocated_revision(
    ::TSP::DocumentRevision* revision) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.revision_);
  }
  _impl_.revision_ = revision;
  if (revision) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.PackageMetadata.revision)
}
inline ::TSP::DocumentRevision* PackageMetadata::release_revision() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::DocumentRevision* temp = _impl_.revision_;
  _impl_.revision_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::DocumentRevision* PackageMetadata::unsafe_arena_release_revision() {
  // @@protoc_insertion_point(field_release:TSP.PackageMetadata.revision)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::DocumentRevision* temp = _impl_.revision_;
  _impl_.revision_ = nullptr;
  return temp;
}
inline ::TSP::DocumentRevision* PackageMetadata::_internal_mutable_revision() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.revision_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::DocumentRevision>(GetArenaForAllocation());
    _impl_.revision_ = p;
  }
  return _impl_.revision_;
}
inline ::TSP::DocumentRevision* PackageMetadata::mutable_revision() {
  ::TSP::DocumentRevision* _msg = _internal_mutable_revision();
  // @@protoc_insertion_point(field_mutable:TSP.PackageMetadata.revision)
  return _msg;
}
inline void PackageMetadata::set_allocated_revision(::TSP::DocumentRevision* revision) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.revision_;
  }
  if (revision) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(revision);
    if (message_arena != submessage_arena) {
      revision = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, revision, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.revision_ = revision;
  // @@protoc_insertion_point(field_set_allocated:TSP.PackageMetadata.revision)
}

// repeated .TSP.ComponentInfo components = 3;
inline int PackageMetadata::_internal_components_size() const {
  return _impl_.components_.size();
}
inline int PackageMetadata::components_size() const {
  return _internal_components_size();
}
inline void PackageMetadata::clear_components() {
  _impl_.components_.Clear();
}
inline ::TSP::ComponentInfo* PackageMetadata::mutable_components(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.PackageMetadata.components)
  return _impl_.components_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentInfo >*
PackageMetadata::mutable_components() {
  // @@protoc_insertion_point(field_mutable_list:TSP.PackageMetadata.components)
  return &_impl_.components_;
}
inline const ::TSP::ComponentInfo& PackageMetadata::_internal_components(int index) const {
  return _impl_.components_.Get(index);
}
inline const ::TSP::ComponentInfo& PackageMetadata::components(int index) const {
  // @@protoc_insertion_point(field_get:TSP.PackageMetadata.components)
  return _internal_components(index);
}
inline ::TSP::ComponentInfo* PackageMetadata::_internal_add_components() {
  return _impl_.components_.Add();
}
inline ::TSP::ComponentInfo* PackageMetadata::add_components() {
  ::TSP::ComponentInfo* _add = _internal_add_components();
  // @@protoc_insertion_point(field_add:TSP.PackageMetadata.components)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentInfo >&
PackageMetadata::components() const {
  // @@protoc_insertion_point(field_list:TSP.PackageMetadata.components)
  return _impl_.components_;
}

// repeated .TSP.DataInfo datas = 4;
inline int PackageMetadata::_internal_datas_size() const {
  return _impl_.datas_.size();
}
inline int PackageMetadata::datas_size() const {
  return _internal_datas_size();
}
inline void PackageMetadata::clear_datas() {
  _impl_.datas_.Clear();
}
inline ::TSP::DataInfo* PackageMetadata::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.PackageMetadata.datas)
  return _impl_.datas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >*
PackageMetadata::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:TSP.PackageMetadata.datas)
  return &_impl_.datas_;
}
inline const ::TSP::DataInfo& PackageMetadata::_internal_datas(int index) const {
  return _impl_.datas_.Get(index);
}
inline const ::TSP::DataInfo& PackageMetadata::datas(int index) const {
  // @@protoc_insertion_point(field_get:TSP.PackageMetadata.datas)
  return _internal_datas(index);
}
inline ::TSP::DataInfo* PackageMetadata::_internal_add_datas() {
  return _impl_.datas_.Add();
}
inline ::TSP::DataInfo* PackageMetadata::add_datas() {
  ::TSP::DataInfo* _add = _internal_add_datas();
  // @@protoc_insertion_point(field_add:TSP.PackageMetadata.datas)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >&
PackageMetadata::datas() const {
  // @@protoc_insertion_point(field_list:TSP.PackageMetadata.datas)
  return _impl_.datas_;
}

// repeated uint32 read_version = 5 [packed = true];
inline int PackageMetadata::_internal_read_version_size() const {
  return _impl_.read_version_.size();
}
inline int PackageMetadata::read_version_size() const {
  return _internal_read_version_size();
}
inline void PackageMetadata::clear_read_version() {
  _impl_.read_version_.Clear();
}
inline uint32_t PackageMetadata::_internal_read_version(int index) const {
  return _impl_.read_version_.Get(index);
}
inline uint32_t PackageMetadata::read_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.PackageMetadata.read_version)
  return _internal_read_version(index);
}
inline void PackageMetadata::set_read_version(int index, uint32_t value) {
  _impl_.read_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.PackageMetadata.read_version)
}
inline void PackageMetadata::_internal_add_read_version(uint32_t value) {
  _impl_.read_version_.Add(value);
}
inline void PackageMetadata::add_read_version(uint32_t value) {
  _internal_add_read_version(value);
  // @@protoc_insertion_point(field_add:TSP.PackageMetadata.read_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
PackageMetadata::_internal_read_version() const {
  return _impl_.read_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
PackageMetadata::read_version() const {
  // @@protoc_insertion_point(field_list:TSP.PackageMetadata.read_version)
  return _internal_read_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
PackageMetadata::_internal_mutable_read_version() {
  return &_impl_.read_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
PackageMetadata::mutable_read_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.PackageMetadata.read_version)
  return _internal_mutable_read_version();
}

// repeated uint32 write_version = 6 [packed = true];
inline int PackageMetadata::_internal_write_version_size() const {
  return _impl_.write_version_.size();
}
inline int PackageMetadata::write_version_size() const {
  return _internal_write_version_size();
}
inline void PackageMetadata::clear_write_version() {
  _impl_.write_version_.Clear();
}
inline uint32_t PackageMetadata::_internal_write_version(int index) const {
  return _impl_.write_version_.Get(index);
}
inline uint32_t PackageMetadata::write_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.PackageMetadata.write_version)
  return _internal_write_version(index);
}
inline void PackageMetadata::set_write_version(int index, uint32_t value) {
  _impl_.write_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.PackageMetadata.write_version)
}
inline void PackageMetadata::_internal_add_write_version(uint32_t value) {
  _impl_.write_version_.Add(value);
}
inline void PackageMetadata::add_write_version(uint32_t value) {
  _internal_add_write_version(value);
  // @@protoc_insertion_point(field_add:TSP.PackageMetadata.write_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
PackageMetadata::_internal_write_version() const {
  return _impl_.write_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
PackageMetadata::write_version() const {
  // @@protoc_insertion_point(field_list:TSP.PackageMetadata.write_version)
  return _internal_write_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
PackageMetadata::_internal_mutable_write_version() {
  return &_impl_.write_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
PackageMetadata::mutable_write_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.PackageMetadata.write_version)
  return _internal_mutable_write_version();
}

// repeated uint32 file_format_version = 7 [packed = true];
inline int PackageMetadata::_internal_file_format_version_size() const {
  return _impl_.file_format_version_.size();
}
inline int PackageMetadata::file_format_version_size() const {
  return _internal_file_format_version_size();
}
inline void PackageMetadata::clear_file_format_version() {
  _impl_.file_format_version_.Clear();
}
inline uint32_t PackageMetadata::_internal_file_format_version(int index) const {
  return _impl_.file_format_version_.Get(index);
}
inline uint32_t PackageMetadata::file_format_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.PackageMetadata.file_format_version)
  return _internal_file_format_version(index);
}
inline void PackageMetadata::set_file_format_version(int index, uint32_t value) {
  _impl_.file_format_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.PackageMetadata.file_format_version)
}
inline void PackageMetadata::_internal_add_file_format_version(uint32_t value) {
  _impl_.file_format_version_.Add(value);
}
inline void PackageMetadata::add_file_format_version(uint32_t value) {
  _internal_add_file_format_version(value);
  // @@protoc_insertion_point(field_add:TSP.PackageMetadata.file_format_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
PackageMetadata::_internal_file_format_version() const {
  return _impl_.file_format_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
PackageMetadata::file_format_version() const {
  // @@protoc_insertion_point(field_list:TSP.PackageMetadata.file_format_version)
  return _internal_file_format_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
PackageMetadata::_internal_mutable_file_format_version() {
  return &_impl_.file_format_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
PackageMetadata::mutable_file_format_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.PackageMetadata.file_format_version)
  return _internal_mutable_file_format_version();
}

// optional uint64 save_token = 8 [default = 0];
inline bool PackageMetadata::_internal_has_save_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PackageMetadata::has_save_token() const {
  return _internal_has_save_token();
}
inline void PackageMetadata::clear_save_token() {
  _impl_.save_token_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t PackageMetadata::_internal_save_token() const {
  return _impl_.save_token_;
}
inline uint64_t PackageMetadata::save_token() const {
  // @@protoc_insertion_point(field_get:TSP.PackageMetadata.save_token)
  return _internal_save_token();
}
inline void PackageMetadata::_internal_set_save_token(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.save_token_ = value;
}
inline void PackageMetadata::set_save_token(uint64_t value) {
  _internal_set_save_token(value);
  // @@protoc_insertion_point(field_set:TSP.PackageMetadata.save_token)
}

// optional .TSP.PackageMetadata.PackageType preferred_package_type = 9 [default = Default];
inline bool PackageMetadata::_internal_has_preferred_package_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PackageMetadata::has_preferred_package_type() const {
  return _internal_has_preferred_package_type();
}
inline void PackageMetadata::clear_preferred_package_type() {
  _impl_.preferred_package_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::TSP::PackageMetadata_PackageType PackageMetadata::_internal_preferred_package_type() const {
  return static_cast< ::TSP::PackageMetadata_PackageType >(_impl_.preferred_package_type_);
}
inline ::TSP::PackageMetadata_PackageType PackageMetadata::preferred_package_type() const {
  // @@protoc_insertion_point(field_get:TSP.PackageMetadata.preferred_package_type)
  return _internal_preferred_package_type();
}
inline void PackageMetadata::_internal_set_preferred_package_type(::TSP::PackageMetadata_PackageType value) {
  assert(::TSP::PackageMetadata_PackageType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.preferred_package_type_ = value;
}
inline void PackageMetadata::set_preferred_package_type(::TSP::PackageMetadata_PackageType value) {
  _internal_set_preferred_package_type(value);
  // @@protoc_insertion_point(field_set:TSP.PackageMetadata.preferred_package_type)
}

// optional .TSP.Reference data_metadata_map = 10;
inline bool PackageMetadata::_internal_has_data_metadata_map() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_metadata_map_ != nullptr);
  return value;
}
inline bool PackageMetadata::has_data_metadata_map() const {
  return _internal_has_data_metadata_map();
}
inline const ::TSP::Reference& PackageMetadata::_internal_data_metadata_map() const {
  const ::TSP::Reference* p = _impl_.data_metadata_map_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::Reference&>(
      ::TSP::_Reference_default_instance_);
}
inline const ::TSP::Reference& PackageMetadata::data_metadata_map() const {
  // @@protoc_insertion_point(field_get:TSP.PackageMetadata.data_metadata_map)
  return _internal_data_metadata_map();
}
inline void PackageMetadata::unsafe_arena_set_allocated_data_metadata_map(
    ::TSP::Reference* data_metadata_map) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_metadata_map_);
  }
  _impl_.data_metadata_map_ = data_metadata_map;
  if (data_metadata_map) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.PackageMetadata.data_metadata_map)
}
inline ::TSP::Reference* PackageMetadata::release_data_metadata_map() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSP::Reference* temp = _impl_.data_metadata_map_;
  _impl_.data_metadata_map_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::Reference* PackageMetadata::unsafe_arena_release_data_metadata_map() {
  // @@protoc_insertion_point(field_release:TSP.PackageMetadata.data_metadata_map)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSP::Reference* temp = _impl_.data_metadata_map_;
  _impl_.data_metadata_map_ = nullptr;
  return temp;
}
inline ::TSP::Reference* PackageMetadata::_internal_mutable_data_metadata_map() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.data_metadata_map_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::Reference>(GetArenaForAllocation());
    _impl_.data_metadata_map_ = p;
  }
  return _impl_.data_metadata_map_;
}
inline ::TSP::Reference* PackageMetadata::mutable_data_metadata_map() {
  ::TSP::Reference* _msg = _internal_mutable_data_metadata_map();
  // @@protoc_insertion_point(field_mutable:TSP.PackageMetadata.data_metadata_map)
  return _msg;
}
inline void PackageMetadata::set_allocated_data_metadata_map(::TSP::Reference* data_metadata_map) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_metadata_map_);
  }
  if (data_metadata_map) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_metadata_map));
    if (message_arena != submessage_arena) {
      data_metadata_map = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_metadata_map, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.data_metadata_map_ = data_metadata_map;
  // @@protoc_insertion_point(field_set_allocated:TSP.PackageMetadata.data_metadata_map)
}

// repeated .TSP.ComponentInfo versioned_components = 11;
inline int PackageMetadata::_internal_versioned_components_size() const {
  return _impl_.versioned_components_.size();
}
inline int PackageMetadata::versioned_components_size() const {
  return _internal_versioned_components_size();
}
inline void PackageMetadata::clear_versioned_components() {
  _impl_.versioned_components_.Clear();
}
inline ::TSP::ComponentInfo* PackageMetadata::mutable_versioned_components(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.PackageMetadata.versioned_components)
  return _impl_.versioned_components_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentInfo >*
PackageMetadata::mutable_versioned_components() {
  // @@protoc_insertion_point(field_mutable_list:TSP.PackageMetadata.versioned_components)
  return &_impl_.versioned_components_;
}
inline const ::TSP::ComponentInfo& PackageMetadata::_internal_versioned_components(int index) const {
  return _impl_.versioned_components_.Get(index);
}
inline const ::TSP::ComponentInfo& PackageMetadata::versioned_components(int index) const {
  // @@protoc_insertion_point(field_get:TSP.PackageMetadata.versioned_components)
  return _internal_versioned_components(index);
}
inline ::TSP::ComponentInfo* PackageMetadata::_internal_add_versioned_components() {
  return _impl_.versioned_components_.Add();
}
inline ::TSP::ComponentInfo* PackageMetadata::add_versioned_components() {
  ::TSP::ComponentInfo* _add = _internal_add_versioned_components();
  // @@protoc_insertion_point(field_add:TSP.PackageMetadata.versioned_components)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ComponentInfo >&
PackageMetadata::versioned_components() const {
  // @@protoc_insertion_point(field_list:TSP.PackageMetadata.versioned_components)
  return _impl_.versioned_components_;
}

// -------------------------------------------------------------------

// DocumentRevision

// optional int32 sequence_32 = 3 [default = 0];
inline bool DocumentRevision::_internal_has_sequence_32() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool DocumentRevision::has_sequence_32() const {
  return _internal_has_sequence_32();
}
inline void DocumentRevision::clear_sequence_32() {
  _impl_.sequence_32_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t DocumentRevision::_internal_sequence_32() const {
  return _impl_.sequence_32_;
}
inline int32_t DocumentRevision::sequence_32() const {
  // @@protoc_insertion_point(field_get:TSP.DocumentRevision.sequence_32)
  return _internal_sequence_32();
}
inline void DocumentRevision::_internal_set_sequence_32(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.sequence_32_ = value;
}
inline void DocumentRevision::set_sequence_32(int32_t value) {
  _internal_set_sequence_32(value);
  // @@protoc_insertion_point(field_set:TSP.DocumentRevision.sequence_32)
}

// optional string identifier = 2;
inline bool DocumentRevision::_internal_has_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool DocumentRevision::has_identifier() const {
  return _internal_has_identifier();
}
inline void DocumentRevision::clear_identifier() {
  _impl_.identifier_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DocumentRevision::identifier() const {
  // @@protoc_insertion_point(field_get:TSP.DocumentRevision.identifier)
  return _internal_identifier();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DocumentRevision::set_identifier(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.identifier_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.DocumentRevision.identifier)
}
inline std::string* DocumentRevision::mutable_identifier() {
  std::string* _s = _internal_mutable_identifier();
  // @@protoc_insertion_point(field_mutable:TSP.DocumentRevision.identifier)
  return _s;
}
inline const std::string& DocumentRevision::_internal_identifier() const {
  return _impl_.identifier_.Get();
}
inline void DocumentRevision::_internal_set_identifier(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.identifier_.Set(value, GetArenaForAllocation());
}
inline std::string* DocumentRevision::_internal_mutable_identifier() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.identifier_.Mutable(GetArenaForAllocation());
}
inline std::string* DocumentRevision::release_identifier() {
  // @@protoc_insertion_point(field_release:TSP.DocumentRevision.identifier)
  if (!_internal_has_identifier()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.identifier_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.identifier_.IsDefault()) {
    _impl_.identifier_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void DocumentRevision::set_allocated_identifier(std::string* identifier) {
  if (identifier != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.identifier_.SetAllocated(identifier, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.identifier_.IsDefault()) {
    _impl_.identifier_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.DocumentRevision.identifier)
}

// optional uint64 sequence_64 = 1 [default = 0];
inline bool DocumentRevision::_internal_has_sequence_64() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DocumentRevision::has_sequence_64() const {
  return _internal_has_sequence_64();
}
inline void DocumentRevision::clear_sequence_64() {
  _impl_.sequence_64_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t DocumentRevision::_internal_sequence_64() const {
  return _impl_.sequence_64_;
}
inline uint64_t DocumentRevision::sequence_64() const {
  // @@protoc_insertion_point(field_get:TSP.DocumentRevision.sequence_64)
  return _internal_sequence_64();
}
inline void DocumentRevision::_internal_set_sequence_64(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.sequence_64_ = value;
}
inline void DocumentRevision::set_sequence_64(uint64_t value) {
  _internal_set_sequence_64(value);
  // @@protoc_insertion_point(field_set:TSP.DocumentRevision.sequence_64)
}

// -------------------------------------------------------------------

// PasteboardMetadata

// repeated uint32 version = 1 [packed = true];
inline int PasteboardMetadata::_internal_version_size() const {
  return _impl_.version_.size();
}
inline int PasteboardMetadata::version_size() const {
  return _internal_version_size();
}
inline void PasteboardMetadata::clear_version() {
  _impl_.version_.Clear();
}
inline uint32_t PasteboardMetadata::_internal_version(int index) const {
  return _impl_.version_.Get(index);
}
inline uint32_t PasteboardMetadata::version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.PasteboardMetadata.version)
  return _internal_version(index);
}
inline void PasteboardMetadata::set_version(int index, uint32_t value) {
  _impl_.version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.PasteboardMetadata.version)
}
inline void PasteboardMetadata::_internal_add_version(uint32_t value) {
  _impl_.version_.Add(value);
}
inline void PasteboardMetadata::add_version(uint32_t value) {
  _internal_add_version(value);
  // @@protoc_insertion_point(field_add:TSP.PasteboardMetadata.version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
PasteboardMetadata::_internal_version() const {
  return _impl_.version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
PasteboardMetadata::version() const {
  // @@protoc_insertion_point(field_list:TSP.PasteboardMetadata.version)
  return _internal_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
PasteboardMetadata::_internal_mutable_version() {
  return &_impl_.version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
PasteboardMetadata::mutable_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.PasteboardMetadata.version)
  return _internal_mutable_version();
}

// required string app_name = 2;
inline bool PasteboardMetadata::_internal_has_app_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PasteboardMetadata::has_app_name() const {
  return _internal_has_app_name();
}
inline void PasteboardMetadata::clear_app_name() {
  _impl_.app_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PasteboardMetadata::app_name() const {
  // @@protoc_insertion_point(field_get:TSP.PasteboardMetadata.app_name)
  return _internal_app_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PasteboardMetadata::set_app_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.app_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.PasteboardMetadata.app_name)
}
inline std::string* PasteboardMetadata::mutable_app_name() {
  std::string* _s = _internal_mutable_app_name();
  // @@protoc_insertion_point(field_mutable:TSP.PasteboardMetadata.app_name)
  return _s;
}
inline const std::string& PasteboardMetadata::_internal_app_name() const {
  return _impl_.app_name_.Get();
}
inline void PasteboardMetadata::_internal_set_app_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.app_name_.Set(value, GetArenaForAllocation());
}
inline std::string* PasteboardMetadata::_internal_mutable_app_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.app_name_.Mutable(GetArenaForAllocation());
}
inline std::string* PasteboardMetadata::release_app_name() {
  // @@protoc_insertion_point(field_release:TSP.PasteboardMetadata.app_name)
  if (!_internal_has_app_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.app_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.app_name_.IsDefault()) {
    _impl_.app_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PasteboardMetadata::set_allocated_app_name(std::string* app_name) {
  if (app_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.app_name_.SetAllocated(app_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.app_name_.IsDefault()) {
    _impl_.app_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.PasteboardMetadata.app_name)
}

// repeated .TSP.DataInfo datas = 3;
inline int PasteboardMetadata::_internal_datas_size() const {
  return _impl_.datas_.size();
}
inline int PasteboardMetadata::datas_size() const {
  return _internal_datas_size();
}
inline void PasteboardMetadata::clear_datas() {
  _impl_.datas_.Clear();
}
inline ::TSP::DataInfo* PasteboardMetadata::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.PasteboardMetadata.datas)
  return _impl_.datas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >*
PasteboardMetadata::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:TSP.PasteboardMetadata.datas)
  return &_impl_.datas_;
}
inline const ::TSP::DataInfo& PasteboardMetadata::_internal_datas(int index) const {
  return _impl_.datas_.Get(index);
}
inline const ::TSP::DataInfo& PasteboardMetadata::datas(int index) const {
  // @@protoc_insertion_point(field_get:TSP.PasteboardMetadata.datas)
  return _internal_datas(index);
}
inline ::TSP::DataInfo* PasteboardMetadata::_internal_add_datas() {
  return _impl_.datas_.Add();
}
inline ::TSP::DataInfo* PasteboardMetadata::add_datas() {
  ::TSP::DataInfo* _add = _internal_add_datas();
  // @@protoc_insertion_point(field_add:TSP.PasteboardMetadata.datas)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >&
PasteboardMetadata::datas() const {
  // @@protoc_insertion_point(field_list:TSP.PasteboardMetadata.datas)
  return _impl_.datas_;
}

// optional .TSP.UUID source_document_uuid = 5;
inline bool PasteboardMetadata::_internal_has_source_document_uuid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_document_uuid_ != nullptr);
  return value;
}
inline bool PasteboardMetadata::has_source_document_uuid() const {
  return _internal_has_source_document_uuid();
}
inline const ::TSP::UUID& PasteboardMetadata::_internal_source_document_uuid() const {
  const ::TSP::UUID* p = _impl_.source_document_uuid_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::UUID&>(
      ::TSP::_UUID_default_instance_);
}
inline const ::TSP::UUID& PasteboardMetadata::source_document_uuid() const {
  // @@protoc_insertion_point(field_get:TSP.PasteboardMetadata.source_document_uuid)
  return _internal_source_document_uuid();
}
inline void PasteboardMetadata::unsafe_arena_set_allocated_source_document_uuid(
    ::TSP::UUID* source_document_uuid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.source_document_uuid_);
  }
  _impl_.source_document_uuid_ = source_document_uuid;
  if (source_document_uuid) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.PasteboardMetadata.source_document_uuid)
}
inline ::TSP::UUID* PasteboardMetadata::release_source_document_uuid() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSP::UUID* temp = _impl_.source_document_uuid_;
  _impl_.source_document_uuid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::UUID* PasteboardMetadata::unsafe_arena_release_source_document_uuid() {
  // @@protoc_insertion_point(field_release:TSP.PasteboardMetadata.source_document_uuid)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSP::UUID* temp = _impl_.source_document_uuid_;
  _impl_.source_document_uuid_ = nullptr;
  return temp;
}
inline ::TSP::UUID* PasteboardMetadata::_internal_mutable_source_document_uuid() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.source_document_uuid_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::UUID>(GetArenaForAllocation());
    _impl_.source_document_uuid_ = p;
  }
  return _impl_.source_document_uuid_;
}
inline ::TSP::UUID* PasteboardMetadata::mutable_source_document_uuid() {
  ::TSP::UUID* _msg = _internal_mutable_source_document_uuid();
  // @@protoc_insertion_point(field_mutable:TSP.PasteboardMetadata.source_document_uuid)
  return _msg;
}
inline void PasteboardMetadata::set_allocated_source_document_uuid(::TSP::UUID* source_document_uuid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.source_document_uuid_);
  }
  if (source_document_uuid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(source_document_uuid));
    if (message_arena != submessage_arena) {
      source_document_uuid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, source_document_uuid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.source_document_uuid_ = source_document_uuid;
  // @@protoc_insertion_point(field_set_allocated:TSP.PasteboardMetadata.source_document_uuid)
}

// optional .TSP.Reference data_metadata_map = 6;
inline bool PasteboardMetadata::_internal_has_data_metadata_map() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_metadata_map_ != nullptr);
  return value;
}
inline bool PasteboardMetadata::has_data_metadata_map() const {
  return _internal_has_data_metadata_map();
}
inline const ::TSP::Reference& PasteboardMetadata::_internal_data_metadata_map() const {
  const ::TSP::Reference* p = _impl_.data_metadata_map_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::Reference&>(
      ::TSP::_Reference_default_instance_);
}
inline const ::TSP::Reference& PasteboardMetadata::data_metadata_map() const {
  // @@protoc_insertion_point(field_get:TSP.PasteboardMetadata.data_metadata_map)
  return _internal_data_metadata_map();
}
inline void PasteboardMetadata::unsafe_arena_set_allocated_data_metadata_map(
    ::TSP::Reference* data_metadata_map) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_metadata_map_);
  }
  _impl_.data_metadata_map_ = data_metadata_map;
  if (data_metadata_map) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.PasteboardMetadata.data_metadata_map)
}
inline ::TSP::Reference* PasteboardMetadata::release_data_metadata_map() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSP::Reference* temp = _impl_.data_metadata_map_;
  _impl_.data_metadata_map_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::Reference* PasteboardMetadata::unsafe_arena_release_data_metadata_map() {
  // @@protoc_insertion_point(field_release:TSP.PasteboardMetadata.data_metadata_map)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSP::Reference* temp = _impl_.data_metadata_map_;
  _impl_.data_metadata_map_ = nullptr;
  return temp;
}
inline ::TSP::Reference* PasteboardMetadata::_internal_mutable_data_metadata_map() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.data_metadata_map_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::Reference>(GetArenaForAllocation());
    _impl_.data_metadata_map_ = p;
  }
  return _impl_.data_metadata_map_;
}
inline ::TSP::Reference* PasteboardMetadata::mutable_data_metadata_map() {
  ::TSP::Reference* _msg = _internal_mutable_data_metadata_map();
  // @@protoc_insertion_point(field_mutable:TSP.PasteboardMetadata.data_metadata_map)
  return _msg;
}
inline void PasteboardMetadata::set_allocated_data_metadata_map(::TSP::Reference* data_metadata_map) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_metadata_map_);
  }
  if (data_metadata_map) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_metadata_map));
    if (message_arena != submessage_arena) {
      data_metadata_map = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_metadata_map, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.data_metadata_map_ = data_metadata_map;
  // @@protoc_insertion_point(field_set_allocated:TSP.PasteboardMetadata.data_metadata_map)
}

// repeated uint32 read_version = 7 [packed = true];
inline int PasteboardMetadata::_internal_read_version_size() const {
  return _impl_.read_version_.size();
}
inline int PasteboardMetadata::read_version_size() const {
  return _internal_read_version_size();
}
inline void PasteboardMetadata::clear_read_version() {
  _impl_.read_version_.Clear();
}
inline uint32_t PasteboardMetadata::_internal_read_version(int index) const {
  return _impl_.read_version_.Get(index);
}
inline uint32_t PasteboardMetadata::read_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.PasteboardMetadata.read_version)
  return _internal_read_version(index);
}
inline void PasteboardMetadata::set_read_version(int index, uint32_t value) {
  _impl_.read_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.PasteboardMetadata.read_version)
}
inline void PasteboardMetadata::_internal_add_read_version(uint32_t value) {
  _impl_.read_version_.Add(value);
}
inline void PasteboardMetadata::add_read_version(uint32_t value) {
  _internal_add_read_version(value);
  // @@protoc_insertion_point(field_add:TSP.PasteboardMetadata.read_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
PasteboardMetadata::_internal_read_version() const {
  return _impl_.read_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
PasteboardMetadata::read_version() const {
  // @@protoc_insertion_point(field_list:TSP.PasteboardMetadata.read_version)
  return _internal_read_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
PasteboardMetadata::_internal_mutable_read_version() {
  return &_impl_.read_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
PasteboardMetadata::mutable_read_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.PasteboardMetadata.read_version)
  return _internal_mutable_read_version();
}

// -------------------------------------------------------------------

// DataInfo

// required uint64 identifier = 1;
inline bool DataInfo::_internal_has_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool DataInfo::has_identifier() const {
  return _internal_has_identifier();
}
inline void DataInfo::clear_identifier() {
  _impl_.identifier_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline uint64_t DataInfo::_internal_identifier() const {
  return _impl_.identifier_;
}
inline uint64_t DataInfo::identifier() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.identifier)
  return _internal_identifier();
}
inline void DataInfo::_internal_set_identifier(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.identifier_ = value;
}
inline void DataInfo::set_identifier(uint64_t value) {
  _internal_set_identifier(value);
  // @@protoc_insertion_point(field_set:TSP.DataInfo.identifier)
}

// required bytes digest = 2;
inline bool DataInfo::_internal_has_digest() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool DataInfo::has_digest() const {
  return _internal_has_digest();
}
inline void DataInfo::clear_digest() {
  _impl_.digest_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DataInfo::digest() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.digest)
  return _internal_digest();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DataInfo::set_digest(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.digest_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.DataInfo.digest)
}
inline std::string* DataInfo::mutable_digest() {
  std::string* _s = _internal_mutable_digest();
  // @@protoc_insertion_point(field_mutable:TSP.DataInfo.digest)
  return _s;
}
inline const std::string& DataInfo::_internal_digest() const {
  return _impl_.digest_.Get();
}
inline void DataInfo::_internal_set_digest(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.digest_.Set(value, GetArenaForAllocation());
}
inline std::string* DataInfo::_internal_mutable_digest() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.digest_.Mutable(GetArenaForAllocation());
}
inline std::string* DataInfo::release_digest() {
  // @@protoc_insertion_point(field_release:TSP.DataInfo.digest)
  if (!_internal_has_digest()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.digest_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.digest_.IsDefault()) {
    _impl_.digest_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void DataInfo::set_allocated_digest(std::string* digest) {
  if (digest != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.digest_.SetAllocated(digest, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.digest_.IsDefault()) {
    _impl_.digest_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.DataInfo.digest)
}

// required string preferred_file_name = 3;
inline bool DataInfo::_internal_has_preferred_file_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DataInfo::has_preferred_file_name() const {
  return _internal_has_preferred_file_name();
}
inline void DataInfo::clear_preferred_file_name() {
  _impl_.preferred_file_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& DataInfo::preferred_file_name() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.preferred_file_name)
  return _internal_preferred_file_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DataInfo::set_preferred_file_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.preferred_file_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.DataInfo.preferred_file_name)
}
inline std::string* DataInfo::mutable_preferred_file_name() {
  std::string* _s = _internal_mutable_preferred_file_name();
  // @@protoc_insertion_point(field_mutable:TSP.DataInfo.preferred_file_name)
  return _s;
}
inline const std::string& DataInfo::_internal_preferred_file_name() const {
  return _impl_.preferred_file_name_.Get();
}
inline void DataInfo::_internal_set_preferred_file_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.preferred_file_name_.Set(value, GetArenaForAllocation());
}
inline std::string* DataInfo::_internal_mutable_preferred_file_name() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.preferred_file_name_.Mutable(GetArenaForAllocation());
}
inline std::string* DataInfo::release_preferred_file_name() {
  // @@protoc_insertion_point(field_release:TSP.DataInfo.preferred_file_name)
  if (!_internal_has_preferred_file_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.preferred_file_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.preferred_file_name_.IsDefault()) {
    _impl_.preferred_file_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void DataInfo::set_allocated_preferred_file_name(std::string* preferred_file_name) {
  if (preferred_file_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.preferred_file_name_.SetAllocated(preferred_file_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.preferred_file_name_.IsDefault()) {
    _impl_.preferred_file_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.DataInfo.preferred_file_name)
}

// optional string file_name = 4;
inline bool DataInfo::_internal_has_file_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool DataInfo::has_file_name() const {
  return _internal_has_file_name();
}
inline void DataInfo::clear_file_name() {
  _impl_.file_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& DataInfo::file_name() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.file_name)
  return _internal_file_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DataInfo::set_file_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000004u;
 _impl_.file_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.DataInfo.file_name)
}
inline std::string* DataInfo::mutable_file_name() {
  std::string* _s = _internal_mutable_file_name();
  // @@protoc_insertion_point(field_mutable:TSP.DataInfo.file_name)
  return _s;
}
inline const std::string& DataInfo::_internal_file_name() const {
  return _impl_.file_name_.Get();
}
inline void DataInfo::_internal_set_file_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.file_name_.Set(value, GetArenaForAllocation());
}
inline std::string* DataInfo::_internal_mutable_file_name() {
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.file_name_.Mutable(GetArenaForAllocation());
}
inline std::string* DataInfo::release_file_name() {
  // @@protoc_insertion_point(field_release:TSP.DataInfo.file_name)
  if (!_internal_has_file_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* p = _impl_.file_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.file_name_.IsDefault()) {
    _impl_.file_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void DataInfo::set_allocated_file_name(std::string* file_name) {
  if (file_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.file_name_.SetAllocated(file_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.file_name_.IsDefault()) {
    _impl_.file_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.DataInfo.file_name)
}

// optional string document_resource_locator = 5;
inline bool DataInfo::_internal_has_document_resource_locator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool DataInfo::has_document_resource_locator() const {
  return _internal_has_document_resource_locator();
}
inline void DataInfo::clear_document_resource_locator() {
  _impl_.document_resource_locator_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& DataInfo::document_resource_locator() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.document_resource_locator)
  return _internal_document_resource_locator();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DataInfo::set_document_resource_locator(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000008u;
 _impl_.document_resource_locator_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.DataInfo.document_resource_locator)
}
inline std::string* DataInfo::mutable_document_resource_locator() {
  std::string* _s = _internal_mutable_document_resource_locator();
  // @@protoc_insertion_point(field_mutable:TSP.DataInfo.document_resource_locator)
  return _s;
}
inline const std::string& DataInfo::_internal_document_resource_locator() const {
  return _impl_.document_resource_locator_.Get();
}
inline void DataInfo::_internal_set_document_resource_locator(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.document_resource_locator_.Set(value, GetArenaForAllocation());
}
inline std::string* DataInfo::_internal_mutable_document_resource_locator() {
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.document_resource_locator_.Mutable(GetArenaForAllocation());
}
inline std::string* DataInfo::release_document_resource_locator() {
  // @@protoc_insertion_point(field_release:TSP.DataInfo.document_resource_locator)
  if (!_internal_has_document_resource_locator()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* p = _impl_.document_resource_locator_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.document_resource_locator_.IsDefault()) {
    _impl_.document_resource_locator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void DataInfo::set_allocated_document_resource_locator(std::string* document_resource_locator) {
  if (document_resource_locator != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.document_resource_locator_.SetAllocated(document_resource_locator, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.document_resource_locator_.IsDefault()) {
    _impl_.document_resource_locator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.DataInfo.document_resource_locator)
}

// optional bytes source_bookmark_data = 6;
inline bool DataInfo::_internal_has_source_bookmark_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool DataInfo::has_source_bookmark_data() const {
  return _internal_has_source_bookmark_data();
}
inline void DataInfo::clear_source_bookmark_data() {
  _impl_.source_bookmark_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& DataInfo::source_bookmark_data() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.source_bookmark_data)
  return _internal_source_bookmark_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DataInfo::set_source_bookmark_data(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000010u;
 _impl_.source_bookmark_data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.DataInfo.source_bookmark_data)
}
inline std::string* DataInfo::mutable_source_bookmark_data() {
  std::string* _s = _internal_mutable_source_bookmark_data();
  // @@protoc_insertion_point(field_mutable:TSP.DataInfo.source_bookmark_data)
  return _s;
}
inline const std::string& DataInfo::_internal_source_bookmark_data() const {
  return _impl_.source_bookmark_data_.Get();
}
inline void DataInfo::_internal_set_source_bookmark_data(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.source_bookmark_data_.Set(value, GetArenaForAllocation());
}
inline std::string* DataInfo::_internal_mutable_source_bookmark_data() {
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.source_bookmark_data_.Mutable(GetArenaForAllocation());
}
inline std::string* DataInfo::release_source_bookmark_data() {
  // @@protoc_insertion_point(field_release:TSP.DataInfo.source_bookmark_data)
  if (!_internal_has_source_bookmark_data()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* p = _impl_.source_bookmark_data_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.source_bookmark_data_.IsDefault()) {
    _impl_.source_bookmark_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void DataInfo::set_allocated_source_bookmark_data(std::string* source_bookmark_data) {
  if (source_bookmark_data != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.source_bookmark_data_.SetAllocated(source_bookmark_data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.source_bookmark_data_.IsDefault()) {
    _impl_.source_bookmark_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.DataInfo.source_bookmark_data)
}

// optional string remote_url = 7;
inline bool DataInfo::_internal_has_remote_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool DataInfo::has_remote_url() const {
  return _internal_has_remote_url();
}
inline void DataInfo::clear_remote_url() {
  _impl_.remote_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& DataInfo::remote_url() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.remote_url)
  return _internal_remote_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DataInfo::set_remote_url(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000020u;
 _impl_.remote_url_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.DataInfo.remote_url)
}
inline std::string* DataInfo::mutable_remote_url() {
  std::string* _s = _internal_mutable_remote_url();
  // @@protoc_insertion_point(field_mutable:TSP.DataInfo.remote_url)
  return _s;
}
inline const std::string& DataInfo::_internal_remote_url() const {
  return _impl_.remote_url_.Get();
}
inline void DataInfo::_internal_set_remote_url(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.remote_url_.Set(value, GetArenaForAllocation());
}
inline std::string* DataInfo::_internal_mutable_remote_url() {
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.remote_url_.Mutable(GetArenaForAllocation());
}
inline std::string* DataInfo::release_remote_url() {
  // @@protoc_insertion_point(field_release:TSP.DataInfo.remote_url)
  if (!_internal_has_remote_url()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* p = _impl_.remote_url_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.remote_url_.IsDefault()) {
    _impl_.remote_url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void DataInfo::set_allocated_remote_url(std::string* remote_url) {
  if (remote_url != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.remote_url_.SetAllocated(remote_url, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.remote_url_.IsDefault()) {
    _impl_.remote_url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.DataInfo.remote_url)
}

// optional bool can_download = 8 [default = false];
inline bool DataInfo::_internal_has_can_download() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool DataInfo::has_can_download() const {
  return _internal_has_can_download();
}
inline void DataInfo::clear_can_download() {
  _impl_.can_download_ = false;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline bool DataInfo::_internal_can_download() const {
  return _impl_.can_download_;
}
inline bool DataInfo::can_download() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.can_download)
  return _internal_can_download();
}
inline void DataInfo::_internal_set_can_download(bool value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.can_download_ = value;
}
inline void DataInfo::set_can_download(bool value) {
  _internal_set_can_download(value);
  // @@protoc_insertion_point(field_set:TSP.DataInfo.can_download)
}

// optional .TSP.DataInfo.DownloadPriority download_priority = 9 [default = Default];
inline bool DataInfo::_internal_has_download_priority() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool DataInfo::has_download_priority() const {
  return _internal_has_download_priority();
}
inline void DataInfo::clear_download_priority() {
  _impl_.download_priority_ = 1;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::TSP::DataInfo_DownloadPriority DataInfo::_internal_download_priority() const {
  return static_cast< ::TSP::DataInfo_DownloadPriority >(_impl_.download_priority_);
}
inline ::TSP::DataInfo_DownloadPriority DataInfo::download_priority() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.download_priority)
  return _internal_download_priority();
}
inline void DataInfo::_internal_set_download_priority(::TSP::DataInfo_DownloadPriority value) {
  assert(::TSP::DataInfo_DownloadPriority_IsValid(value));
  _impl_._has_bits_[0] |= 0x00040000u;
  _impl_.download_priority_ = value;
}
inline void DataInfo::set_download_priority(::TSP::DataInfo_DownloadPriority value) {
  _internal_set_download_priority(value);
  // @@protoc_insertion_point(field_set:TSP.DataInfo.download_priority)
}

// optional .TSP.DataAttributes attributes = 10;
inline bool DataInfo::_internal_has_attributes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attributes_ != nullptr);
  return value;
}
inline bool DataInfo::has_attributes() const {
  return _internal_has_attributes();
}
inline const ::TSP::DataAttributes& DataInfo::_internal_attributes() const {
  const ::TSP::DataAttributes* p = _impl_.attributes_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::DataAttributes&>(
      ::TSP::_DataAttributes_default_instance_);
}
inline const ::TSP::DataAttributes& DataInfo::attributes() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.attributes)
  return _internal_attributes();
}
inline void DataInfo::unsafe_arena_set_allocated_attributes(
    ::TSP::DataAttributes* attributes) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.attributes_);
  }
  _impl_.attributes_ = attributes;
  if (attributes) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.DataInfo.attributes)
}
inline ::TSP::DataAttributes* DataInfo::release_attributes() {
  _impl_._has_bits_[0] &= ~0x00000100u;
  ::TSP::DataAttributes* temp = _impl_.attributes_;
  _impl_.attributes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::DataAttributes* DataInfo::unsafe_arena_release_attributes() {
  // @@protoc_insertion_point(field_release:TSP.DataInfo.attributes)
  _impl_._has_bits_[0] &= ~0x00000100u;
  ::TSP::DataAttributes* temp = _impl_.attributes_;
  _impl_.attributes_ = nullptr;
  return temp;
}
inline ::TSP::DataAttributes* DataInfo::_internal_mutable_attributes() {
  _impl_._has_bits_[0] |= 0x00000100u;
  if (_impl_.attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::DataAttributes>(GetArenaForAllocation());
    _impl_.attributes_ = p;
  }
  return _impl_.attributes_;
}
inline ::TSP::DataAttributes* DataInfo::mutable_attributes() {
  ::TSP::DataAttributes* _msg = _internal_mutable_attributes();
  // @@protoc_insertion_point(field_mutable:TSP.DataInfo.attributes)
  return _msg;
}
inline void DataInfo::set_allocated_attributes(::TSP::DataAttributes* attributes) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.attributes_);
  }
  if (attributes) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(attributes));
    if (message_arena != submessage_arena) {
      attributes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, attributes, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.attributes_ = attributes;
  // @@protoc_insertion_point(field_set_allocated:TSP.DataInfo.attributes)
}

// optional .TSP.EncryptionInfo encryption_info = 11;
inline bool DataInfo::_internal_has_encryption_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.encryption_info_ != nullptr);
  return value;
}
inline bool DataInfo::has_encryption_info() const {
  return _internal_has_encryption_info();
}
inline void DataInfo::clear_encryption_info() {
  if (_impl_.encryption_info_ != nullptr) _impl_.encryption_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const ::TSP::EncryptionInfo& DataInfo::_internal_encryption_info() const {
  const ::TSP::EncryptionInfo* p = _impl_.encryption_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::EncryptionInfo&>(
      ::TSP::_EncryptionInfo_default_instance_);
}
inline const ::TSP::EncryptionInfo& DataInfo::encryption_info() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.encryption_info)
  return _internal_encryption_info();
}
inline void DataInfo::unsafe_arena_set_allocated_encryption_info(
    ::TSP::EncryptionInfo* encryption_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.encryption_info_);
  }
  _impl_.encryption_info_ = encryption_info;
  if (encryption_info) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.DataInfo.encryption_info)
}
inline ::TSP::EncryptionInfo* DataInfo::release_encryption_info() {
  _impl_._has_bits_[0] &= ~0x00000200u;
  ::TSP::EncryptionInfo* temp = _impl_.encryption_info_;
  _impl_.encryption_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::EncryptionInfo* DataInfo::unsafe_arena_release_encryption_info() {
  // @@protoc_insertion_point(field_release:TSP.DataInfo.encryption_info)
  _impl_._has_bits_[0] &= ~0x00000200u;
  ::TSP::EncryptionInfo* temp = _impl_.encryption_info_;
  _impl_.encryption_info_ = nullptr;
  return temp;
}
inline ::TSP::EncryptionInfo* DataInfo::_internal_mutable_encryption_info() {
  _impl_._has_bits_[0] |= 0x00000200u;
  if (_impl_.encryption_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::EncryptionInfo>(GetArenaForAllocation());
    _impl_.encryption_info_ = p;
  }
  return _impl_.encryption_info_;
}
inline ::TSP::EncryptionInfo* DataInfo::mutable_encryption_info() {
  ::TSP::EncryptionInfo* _msg = _internal_mutable_encryption_info();
  // @@protoc_insertion_point(field_mutable:TSP.DataInfo.encryption_info)
  return _msg;
}
inline void DataInfo::set_allocated_encryption_info(::TSP::EncryptionInfo* encryption_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.encryption_info_;
  }
  if (encryption_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(encryption_info);
    if (message_arena != submessage_arena) {
      encryption_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, encryption_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  _impl_.encryption_info_ = encryption_info;
  // @@protoc_insertion_point(field_set_allocated:TSP.DataInfo.encryption_info)
}

// optional bytes last_mismatched_digest = 12;
inline bool DataInfo::_internal_has_last_mismatched_digest() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool DataInfo::has_last_mismatched_digest() const {
  return _internal_has_last_mismatched_digest();
}
inline void DataInfo::clear_last_mismatched_digest() {
  _impl_.last_mismatched_digest_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& DataInfo::last_mismatched_digest() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.last_mismatched_digest)
  return _internal_last_mismatched_digest();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DataInfo::set_last_mismatched_digest(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000040u;
 _impl_.last_mismatched_digest_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.DataInfo.last_mismatched_digest)
}
inline std::string* DataInfo::mutable_last_mismatched_digest() {
  std::string* _s = _internal_mutable_last_mismatched_digest();
  // @@protoc_insertion_point(field_mutable:TSP.DataInfo.last_mismatched_digest)
  return _s;
}
inline const std::string& DataInfo::_internal_last_mismatched_digest() const {
  return _impl_.last_mismatched_digest_.Get();
}
inline void DataInfo::_internal_set_last_mismatched_digest(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.last_mismatched_digest_.Set(value, GetArenaForAllocation());
}
inline std::string* DataInfo::_internal_mutable_last_mismatched_digest() {
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.last_mismatched_digest_.Mutable(GetArenaForAllocation());
}
inline std::string* DataInfo::release_last_mismatched_digest() {
  // @@protoc_insertion_point(field_release:TSP.DataInfo.last_mismatched_digest)
  if (!_internal_has_last_mismatched_digest()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* p = _impl_.last_mismatched_digest_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.last_mismatched_digest_.IsDefault()) {
    _impl_.last_mismatched_digest_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void DataInfo::set_allocated_last_mismatched_digest(std::string* last_mismatched_digest) {
  if (last_mismatched_digest != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.last_mismatched_digest_.SetAllocated(last_mismatched_digest, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.last_mismatched_digest_.IsDefault()) {
    _impl_.last_mismatched_digest_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.DataInfo.last_mismatched_digest)
}

// optional .TSP.IndexSet unmaterialized_ranges = 13;
inline bool DataInfo::_internal_has_unmaterialized_ranges() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.unmaterialized_ranges_ != nullptr);
  return value;
}
inline bool DataInfo::has_unmaterialized_ranges() const {
  return _internal_has_unmaterialized_ranges();
}
inline const ::TSP::IndexSet& DataInfo::_internal_unmaterialized_ranges() const {
  const ::TSP::IndexSet* p = _impl_.unmaterialized_ranges_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::IndexSet&>(
      ::TSP::_IndexSet_default_instance_);
}
inline const ::TSP::IndexSet& DataInfo::unmaterialized_ranges() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.unmaterialized_ranges)
  return _internal_unmaterialized_ranges();
}
inline void DataInfo::unsafe_arena_set_allocated_unmaterialized_ranges(
    ::TSP::IndexSet* unmaterialized_ranges) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.unmaterialized_ranges_);
  }
  _impl_.unmaterialized_ranges_ = unmaterialized_ranges;
  if (unmaterialized_ranges) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.DataInfo.unmaterialized_ranges)
}
inline ::TSP::IndexSet* DataInfo::release_unmaterialized_ranges() {
  _impl_._has_bits_[0] &= ~0x00000400u;
  ::TSP::IndexSet* temp = _impl_.unmaterialized_ranges_;
  _impl_.unmaterialized_ranges_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::IndexSet* DataInfo::unsafe_arena_release_unmaterialized_ranges() {
  // @@protoc_insertion_point(field_release:TSP.DataInfo.unmaterialized_ranges)
  _impl_._has_bits_[0] &= ~0x00000400u;
  ::TSP::IndexSet* temp = _impl_.unmaterialized_ranges_;
  _impl_.unmaterialized_ranges_ = nullptr;
  return temp;
}
inline ::TSP::IndexSet* DataInfo::_internal_mutable_unmaterialized_ranges() {
  _impl_._has_bits_[0] |= 0x00000400u;
  if (_impl_.unmaterialized_ranges_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::IndexSet>(GetArenaForAllocation());
    _impl_.unmaterialized_ranges_ = p;
  }
  return _impl_.unmaterialized_ranges_;
}
inline ::TSP::IndexSet* DataInfo::mutable_unmaterialized_ranges() {
  ::TSP::IndexSet* _msg = _internal_mutable_unmaterialized_ranges();
  // @@protoc_insertion_point(field_mutable:TSP.DataInfo.unmaterialized_ranges)
  return _msg;
}
inline void DataInfo::set_allocated_unmaterialized_ranges(::TSP::IndexSet* unmaterialized_ranges) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.unmaterialized_ranges_);
  }
  if (unmaterialized_ranges) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unmaterialized_ranges));
    if (message_arena != submessage_arena) {
      unmaterialized_ranges = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unmaterialized_ranges, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  _impl_.unmaterialized_ranges_ = unmaterialized_ranges;
  // @@protoc_insertion_point(field_set_allocated:TSP.DataInfo.unmaterialized_ranges)
}

// optional uint64 remote_data_length = 14;
inline bool DataInfo::_internal_has_remote_data_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool DataInfo::has_remote_data_length() const {
  return _internal_has_remote_data_length();
}
inline void DataInfo::clear_remote_data_length() {
  _impl_.remote_data_length_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline uint64_t DataInfo::_internal_remote_data_length() const {
  return _impl_.remote_data_length_;
}
inline uint64_t DataInfo::remote_data_length() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.remote_data_length)
  return _internal_remote_data_length();
}
inline void DataInfo::_internal_set_remote_data_length(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.remote_data_length_ = value;
}
inline void DataInfo::set_remote_data_length(uint64_t value) {
  _internal_set_remote_data_length(value);
  // @@protoc_insertion_point(field_set:TSP.DataInfo.remote_data_length)
}

// optional bool remote_data_has_package_storage = 15 [default = false];
inline bool DataInfo::_internal_has_remote_data_has_package_storage() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool DataInfo::has_remote_data_has_package_storage() const {
  return _internal_has_remote_data_has_package_storage();
}
inline void DataInfo::clear_remote_data_has_package_storage() {
  _impl_.remote_data_has_package_storage_ = false;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline bool DataInfo::_internal_remote_data_has_package_storage() const {
  return _impl_.remote_data_has_package_storage_;
}
inline bool DataInfo::remote_data_has_package_storage() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.remote_data_has_package_storage)
  return _internal_remote_data_has_package_storage();
}
inline void DataInfo::_internal_set_remote_data_has_package_storage(bool value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.remote_data_has_package_storage_ = value;
}
inline void DataInfo::set_remote_data_has_package_storage(bool value) {
  _internal_set_remote_data_has_package_storage(value);
  // @@protoc_insertion_point(field_set:TSP.DataInfo.remote_data_has_package_storage)
}

// optional .TSP.DataUploadStatus upload_status = 16 [default = DataUploadStatus_Pending];
inline bool DataInfo::_internal_has_upload_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool DataInfo::has_upload_status() const {
  return _internal_has_upload_status();
}
inline void DataInfo::clear_upload_status() {
  _impl_.upload_status_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::TSP::DataUploadStatus DataInfo::_internal_upload_status() const {
  return static_cast< ::TSP::DataUploadStatus >(_impl_.upload_status_);
}
inline ::TSP::DataUploadStatus DataInfo::upload_status() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.upload_status)
  return _internal_upload_status();
}
inline void DataInfo::_internal_set_upload_status(::TSP::DataUploadStatus value) {
  assert(::TSP::DataUploadStatus_IsValid(value));
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.upload_status_ = value;
}
inline void DataInfo::set_upload_status(::TSP::DataUploadStatus value) {
  _internal_set_upload_status(value);
  // @@protoc_insertion_point(field_set:TSP.DataInfo.upload_status)
}

// optional double remote_data_mtime = 17;
inline bool DataInfo::_internal_has_remote_data_mtime() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool DataInfo::has_remote_data_mtime() const {
  return _internal_has_remote_data_mtime();
}
inline void DataInfo::clear_remote_data_mtime() {
  _impl_.remote_data_mtime_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline double DataInfo::_internal_remote_data_mtime() const {
  return _impl_.remote_data_mtime_;
}
inline double DataInfo::remote_data_mtime() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.remote_data_mtime)
  return _internal_remote_data_mtime();
}
inline void DataInfo::_internal_set_remote_data_mtime(double value) {
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.remote_data_mtime_ = value;
}
inline void DataInfo::set_remote_data_mtime(double value) {
  _internal_set_remote_data_mtime(value);
  // @@protoc_insertion_point(field_set:TSP.DataInfo.remote_data_mtime)
}

// optional uint64 materialized_length = 18;
inline bool DataInfo::_internal_has_materialized_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool DataInfo::has_materialized_length() const {
  return _internal_has_materialized_length();
}
inline void DataInfo::clear_materialized_length() {
  _impl_.materialized_length_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline uint64_t DataInfo::_internal_materialized_length() const {
  return _impl_.materialized_length_;
}
inline uint64_t DataInfo::materialized_length() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.materialized_length)
  return _internal_materialized_length();
}
inline void DataInfo::_internal_set_materialized_length(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00020000u;
  _impl_.materialized_length_ = value;
}
inline void DataInfo::set_materialized_length(uint64_t value) {
  _internal_set_materialized_length(value);
  // @@protoc_insertion_point(field_set:TSP.DataInfo.materialized_length)
}

// optional string pasteboard_external_file_path = 99;
inline bool DataInfo::_internal_has_pasteboard_external_file_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool DataInfo::has_pasteboard_external_file_path() const {
  return _internal_has_pasteboard_external_file_path();
}
inline void DataInfo::clear_pasteboard_external_file_path() {
  _impl_.pasteboard_external_file_path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& DataInfo::pasteboard_external_file_path() const {
  // @@protoc_insertion_point(field_get:TSP.DataInfo.pasteboard_external_file_path)
  return _internal_pasteboard_external_file_path();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DataInfo::set_pasteboard_external_file_path(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000080u;
 _impl_.pasteboard_external_file_path_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.DataInfo.pasteboard_external_file_path)
}
inline std::string* DataInfo::mutable_pasteboard_external_file_path() {
  std::string* _s = _internal_mutable_pasteboard_external_file_path();
  // @@protoc_insertion_point(field_mutable:TSP.DataInfo.pasteboard_external_file_path)
  return _s;
}
inline const std::string& DataInfo::_internal_pasteboard_external_file_path() const {
  return _impl_.pasteboard_external_file_path_.Get();
}
inline void DataInfo::_internal_set_pasteboard_external_file_path(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.pasteboard_external_file_path_.Set(value, GetArenaForAllocation());
}
inline std::string* DataInfo::_internal_mutable_pasteboard_external_file_path() {
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.pasteboard_external_file_path_.Mutable(GetArenaForAllocation());
}
inline std::string* DataInfo::release_pasteboard_external_file_path() {
  // @@protoc_insertion_point(field_release:TSP.DataInfo.pasteboard_external_file_path)
  if (!_internal_has_pasteboard_external_file_path()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* p = _impl_.pasteboard_external_file_path_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.pasteboard_external_file_path_.IsDefault()) {
    _impl_.pasteboard_external_file_path_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void DataInfo::set_allocated_pasteboard_external_file_path(std::string* pasteboard_external_file_path) {
  if (pasteboard_external_file_path != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.pasteboard_external_file_path_.SetAllocated(pasteboard_external_file_path, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.pasteboard_external_file_path_.IsDefault()) {
    _impl_.pasteboard_external_file_path_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.DataInfo.pasteboard_external_file_path)
}

// -------------------------------------------------------------------

// DataMetadataMap_DataMetadataMapEntry

// required uint64 data_identifier = 1;
inline bool DataMetadataMap_DataMetadataMapEntry::_internal_has_data_identifier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DataMetadataMap_DataMetadataMapEntry::has_data_identifier() const {
  return _internal_has_data_identifier();
}
inline void DataMetadataMap_DataMetadataMapEntry::clear_data_identifier() {
  _impl_.data_identifier_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t DataMetadataMap_DataMetadataMapEntry::_internal_data_identifier() const {
  return _impl_.data_identifier_;
}
inline uint64_t DataMetadataMap_DataMetadataMapEntry::data_identifier() const {
  // @@protoc_insertion_point(field_get:TSP.DataMetadataMap.DataMetadataMapEntry.data_identifier)
  return _internal_data_identifier();
}
inline void DataMetadataMap_DataMetadataMapEntry::_internal_set_data_identifier(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.data_identifier_ = value;
}
inline void DataMetadataMap_DataMetadataMapEntry::set_data_identifier(uint64_t value) {
  _internal_set_data_identifier(value);
  // @@protoc_insertion_point(field_set:TSP.DataMetadataMap.DataMetadataMapEntry.data_identifier)
}

// required .TSP.Reference data_metadata = 2;
inline bool DataMetadataMap_DataMetadataMapEntry::_internal_has_data_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_metadata_ != nullptr);
  return value;
}
inline bool DataMetadataMap_DataMetadataMapEntry::has_data_metadata() const {
  return _internal_has_data_metadata();
}
inline const ::TSP::Reference& DataMetadataMap_DataMetadataMapEntry::_internal_data_metadata() const {
  const ::TSP::Reference* p = _impl_.data_metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::Reference&>(
      ::TSP::_Reference_default_instance_);
}
inline const ::TSP::Reference& DataMetadataMap_DataMetadataMapEntry::data_metadata() const {
  // @@protoc_insertion_point(field_get:TSP.DataMetadataMap.DataMetadataMapEntry.data_metadata)
  return _internal_data_metadata();
}
inline void DataMetadataMap_DataMetadataMapEntry::unsafe_arena_set_allocated_data_metadata(
    ::TSP::Reference* data_metadata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_metadata_);
  }
  _impl_.data_metadata_ = data_metadata;
  if (data_metadata) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.DataMetadataMap.DataMetadataMapEntry.data_metadata)
}
inline ::TSP::Reference* DataMetadataMap_DataMetadataMapEntry::release_data_metadata() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::Reference* temp = _impl_.data_metadata_;
  _impl_.data_metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::Reference* DataMetadataMap_DataMetadataMapEntry::unsafe_arena_release_data_metadata() {
  // @@protoc_insertion_point(field_release:TSP.DataMetadataMap.DataMetadataMapEntry.data_metadata)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::Reference* temp = _impl_.data_metadata_;
  _impl_.data_metadata_ = nullptr;
  return temp;
}
inline ::TSP::Reference* DataMetadataMap_DataMetadataMapEntry::_internal_mutable_data_metadata() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.data_metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::Reference>(GetArenaForAllocation());
    _impl_.data_metadata_ = p;
  }
  return _impl_.data_metadata_;
}
inline ::TSP::Reference* DataMetadataMap_DataMetadataMapEntry::mutable_data_metadata() {
  ::TSP::Reference* _msg = _internal_mutable_data_metadata();
  // @@protoc_insertion_point(field_mutable:TSP.DataMetadataMap.DataMetadataMapEntry.data_metadata)
  return _msg;
}
inline void DataMetadataMap_DataMetadataMapEntry::set_allocated_data_metadata(::TSP::Reference* data_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_metadata_);
  }
  if (data_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_metadata));
    if (message_arena != submessage_arena) {
      data_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_metadata, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_metadata_ = data_metadata;
  // @@protoc_insertion_point(field_set_allocated:TSP.DataMetadataMap.DataMetadataMapEntry.data_metadata)
}

// -------------------------------------------------------------------

// DataMetadataMap

// repeated .TSP.DataMetadataMap.DataMetadataMapEntry data_metadata_entries = 1;
inline int DataMetadataMap::_internal_data_metadata_entries_size() const {
  return _impl_.data_metadata_entries_.size();
}
inline int DataMetadataMap::data_metadata_entries_size() const {
  return _internal_data_metadata_entries_size();
}
inline void DataMetadataMap::clear_data_metadata_entries() {
  _impl_.data_metadata_entries_.Clear();
}
inline ::TSP::DataMetadataMap_DataMetadataMapEntry* DataMetadataMap::mutable_data_metadata_entries(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.DataMetadataMap.data_metadata_entries)
  return _impl_.data_metadata_entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataMetadataMap_DataMetadataMapEntry >*
DataMetadataMap::mutable_data_metadata_entries() {
  // @@protoc_insertion_point(field_mutable_list:TSP.DataMetadataMap.data_metadata_entries)
  return &_impl_.data_metadata_entries_;
}
inline const ::TSP::DataMetadataMap_DataMetadataMapEntry& DataMetadataMap::_internal_data_metadata_entries(int index) const {
  return _impl_.data_metadata_entries_.Get(index);
}
inline const ::TSP::DataMetadataMap_DataMetadataMapEntry& DataMetadataMap::data_metadata_entries(int index) const {
  // @@protoc_insertion_point(field_get:TSP.DataMetadataMap.data_metadata_entries)
  return _internal_data_metadata_entries(index);
}
inline ::TSP::DataMetadataMap_DataMetadataMapEntry* DataMetadataMap::_internal_add_data_metadata_entries() {
  return _impl_.data_metadata_entries_.Add();
}
inline ::TSP::DataMetadataMap_DataMetadataMapEntry* DataMetadataMap::add_data_metadata_entries() {
  ::TSP::DataMetadataMap_DataMetadataMapEntry* _add = _internal_add_data_metadata_entries();
  // @@protoc_insertion_point(field_add:TSP.DataMetadataMap.data_metadata_entries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataMetadataMap_DataMetadataMapEntry >&
DataMetadataMap::data_metadata_entries() const {
  // @@protoc_insertion_point(field_list:TSP.DataMetadataMap.data_metadata_entries)
  return _impl_.data_metadata_entries_;
}

// -------------------------------------------------------------------

// DataMetadata

// optional .TSP.Color fallback_color = 1;
inline bool DataMetadata::_internal_has_fallback_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fallback_color_ != nullptr);
  return value;
}
inline bool DataMetadata::has_fallback_color() const {
  return _internal_has_fallback_color();
}
inline const ::TSP::Color& DataMetadata::_internal_fallback_color() const {
  const ::TSP::Color* p = _impl_.fallback_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::Color&>(
      ::TSP::_Color_default_instance_);
}
inline const ::TSP::Color& DataMetadata::fallback_color() const {
  // @@protoc_insertion_point(field_get:TSP.DataMetadata.fallback_color)
  return _internal_fallback_color();
}
inline void DataMetadata::unsafe_arena_set_allocated_fallback_color(
    ::TSP::Color* fallback_color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.fallback_color_);
  }
  _impl_.fallback_color_ = fallback_color;
  if (fallback_color) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.DataMetadata.fallback_color)
}
inline ::TSP::Color* DataMetadata::release_fallback_color() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::Color* temp = _impl_.fallback_color_;
  _impl_.fallback_color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::Color* DataMetadata::unsafe_arena_release_fallback_color() {
  // @@protoc_insertion_point(field_release:TSP.DataMetadata.fallback_color)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::Color* temp = _impl_.fallback_color_;
  _impl_.fallback_color_ = nullptr;
  return temp;
}
inline ::TSP::Color* DataMetadata::_internal_mutable_fallback_color() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.fallback_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::Color>(GetArenaForAllocation());
    _impl_.fallback_color_ = p;
  }
  return _impl_.fallback_color_;
}
inline ::TSP::Color* DataMetadata::mutable_fallback_color() {
  ::TSP::Color* _msg = _internal_mutable_fallback_color();
  // @@protoc_insertion_point(field_mutable:TSP.DataMetadata.fallback_color)
  return _msg;
}
inline void DataMetadata::set_allocated_fallback_color(::TSP::Color* fallback_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.fallback_color_);
  }
  if (fallback_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fallback_color));
    if (message_arena != submessage_arena) {
      fallback_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fallback_color, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.fallback_color_ = fallback_color;
  // @@protoc_insertion_point(field_set_allocated:TSP.DataMetadata.fallback_color)
}

// -------------------------------------------------------------------

// EncryptionInfo

// optional uint64 decoded_length = 1;
inline bool EncryptionInfo::_internal_has_decoded_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool EncryptionInfo::has_decoded_length() const {
  return _internal_has_decoded_length();
}
inline void EncryptionInfo::clear_decoded_length() {
  _impl_.decoded_length_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t EncryptionInfo::_internal_decoded_length() const {
  return _impl_.decoded_length_;
}
inline uint64_t EncryptionInfo::decoded_length() const {
  // @@protoc_insertion_point(field_get:TSP.EncryptionInfo.decoded_length)
  return _internal_decoded_length();
}
inline void EncryptionInfo::_internal_set_decoded_length(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.decoded_length_ = value;
}
inline void EncryptionInfo::set_decoded_length(uint64_t value) {
  _internal_set_decoded_length(value);
  // @@protoc_insertion_point(field_set:TSP.EncryptionInfo.decoded_length)
}

// optional uint64 preferred_block_size = 2;
inline bool EncryptionInfo::_internal_has_preferred_block_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool EncryptionInfo::has_preferred_block_size() const {
  return _internal_has_preferred_block_size();
}
inline void EncryptionInfo::clear_preferred_block_size() {
  _impl_.preferred_block_size_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t EncryptionInfo::_internal_preferred_block_size() const {
  return _impl_.preferred_block_size_;
}
inline uint64_t EncryptionInfo::preferred_block_size() const {
  // @@protoc_insertion_point(field_get:TSP.EncryptionInfo.preferred_block_size)
  return _internal_preferred_block_size();
}
inline void EncryptionInfo::_internal_set_preferred_block_size(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.preferred_block_size_ = value;
}
inline void EncryptionInfo::set_preferred_block_size(uint64_t value) {
  _internal_set_preferred_block_size(value);
  // @@protoc_insertion_point(field_set:TSP.EncryptionInfo.preferred_block_size)
}

// repeated .TSP.EncryptionBlockInfo block_infos = 3;
inline int EncryptionInfo::_internal_block_infos_size() const {
  return _impl_.block_infos_.size();
}
inline int EncryptionInfo::block_infos_size() const {
  return _internal_block_infos_size();
}
inline void EncryptionInfo::clear_block_infos() {
  _impl_.block_infos_.Clear();
}
inline ::TSP::EncryptionBlockInfo* EncryptionInfo::mutable_block_infos(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.EncryptionInfo.block_infos)
  return _impl_.block_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::EncryptionBlockInfo >*
EncryptionInfo::mutable_block_infos() {
  // @@protoc_insertion_point(field_mutable_list:TSP.EncryptionInfo.block_infos)
  return &_impl_.block_infos_;
}
inline const ::TSP::EncryptionBlockInfo& EncryptionInfo::_internal_block_infos(int index) const {
  return _impl_.block_infos_.Get(index);
}
inline const ::TSP::EncryptionBlockInfo& EncryptionInfo::block_infos(int index) const {
  // @@protoc_insertion_point(field_get:TSP.EncryptionInfo.block_infos)
  return _internal_block_infos(index);
}
inline ::TSP::EncryptionBlockInfo* EncryptionInfo::_internal_add_block_infos() {
  return _impl_.block_infos_.Add();
}
inline ::TSP::EncryptionBlockInfo* EncryptionInfo::add_block_infos() {
  ::TSP::EncryptionBlockInfo* _add = _internal_add_block_infos();
  // @@protoc_insertion_point(field_add:TSP.EncryptionInfo.block_infos)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::EncryptionBlockInfo >&
EncryptionInfo::block_infos() const {
  // @@protoc_insertion_point(field_list:TSP.EncryptionInfo.block_infos)
  return _impl_.block_infos_;
}

// -------------------------------------------------------------------

// EncryptionBlockInfo

// required uint64 encoded_length = 1;
inline bool EncryptionBlockInfo::_internal_has_encoded_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool EncryptionBlockInfo::has_encoded_length() const {
  return _internal_has_encoded_length();
}
inline void EncryptionBlockInfo::clear_encoded_length() {
  _impl_.encoded_length_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t EncryptionBlockInfo::_internal_encoded_length() const {
  return _impl_.encoded_length_;
}
inline uint64_t EncryptionBlockInfo::encoded_length() const {
  // @@protoc_insertion_point(field_get:TSP.EncryptionBlockInfo.encoded_length)
  return _internal_encoded_length();
}
inline void EncryptionBlockInfo::_internal_set_encoded_length(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.encoded_length_ = value;
}
inline void EncryptionBlockInfo::set_encoded_length(uint64_t value) {
  _internal_set_encoded_length(value);
  // @@protoc_insertion_point(field_set:TSP.EncryptionBlockInfo.encoded_length)
}

// optional uint64 decoded_length = 2;
inline bool EncryptionBlockInfo::_internal_has_decoded_length() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool EncryptionBlockInfo::has_decoded_length() const {
  return _internal_has_decoded_length();
}
inline void EncryptionBlockInfo::clear_decoded_length() {
  _impl_.decoded_length_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t EncryptionBlockInfo::_internal_decoded_length() const {
  return _impl_.decoded_length_;
}
inline uint64_t EncryptionBlockInfo::decoded_length() const {
  // @@protoc_insertion_point(field_get:TSP.EncryptionBlockInfo.decoded_length)
  return _internal_decoded_length();
}
inline void EncryptionBlockInfo::_internal_set_decoded_length(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.decoded_length_ = value;
}
inline void EncryptionBlockInfo::set_decoded_length(uint64_t value) {
  _internal_set_decoded_length(value);
  // @@protoc_insertion_point(field_set:TSP.EncryptionBlockInfo.decoded_length)
}

// -------------------------------------------------------------------

// ViewStateMetadata

// repeated uint32 version = 1 [packed = true];
inline int ViewStateMetadata::_internal_version_size() const {
  return _impl_.version_.size();
}
inline int ViewStateMetadata::version_size() const {
  return _internal_version_size();
}
inline void ViewStateMetadata::clear_version() {
  _impl_.version_.Clear();
}
inline uint32_t ViewStateMetadata::_internal_version(int index) const {
  return _impl_.version_.Get(index);
}
inline uint32_t ViewStateMetadata::version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ViewStateMetadata.version)
  return _internal_version(index);
}
inline void ViewStateMetadata::set_version(int index, uint32_t value) {
  _impl_.version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.ViewStateMetadata.version)
}
inline void ViewStateMetadata::_internal_add_version(uint32_t value) {
  _impl_.version_.Add(value);
}
inline void ViewStateMetadata::add_version(uint32_t value) {
  _internal_add_version(value);
  // @@protoc_insertion_point(field_add:TSP.ViewStateMetadata.version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ViewStateMetadata::_internal_version() const {
  return _impl_.version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ViewStateMetadata::version() const {
  // @@protoc_insertion_point(field_list:TSP.ViewStateMetadata.version)
  return _internal_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ViewStateMetadata::_internal_mutable_version() {
  return &_impl_.version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ViewStateMetadata::mutable_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ViewStateMetadata.version)
  return _internal_mutable_version();
}

// optional .TSP.UUID version_uuid = 4;
inline bool ViewStateMetadata::_internal_has_version_uuid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.version_uuid_ != nullptr);
  return value;
}
inline bool ViewStateMetadata::has_version_uuid() const {
  return _internal_has_version_uuid();
}
inline const ::TSP::UUID& ViewStateMetadata::_internal_version_uuid() const {
  const ::TSP::UUID* p = _impl_.version_uuid_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::UUID&>(
      ::TSP::_UUID_default_instance_);
}
inline const ::TSP::UUID& ViewStateMetadata::version_uuid() const {
  // @@protoc_insertion_point(field_get:TSP.ViewStateMetadata.version_uuid)
  return _internal_version_uuid();
}
inline void ViewStateMetadata::unsafe_arena_set_allocated_version_uuid(
    ::TSP::UUID* version_uuid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.version_uuid_);
  }
  _impl_.version_uuid_ = version_uuid;
  if (version_uuid) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.ViewStateMetadata.version_uuid)
}
inline ::TSP::UUID* ViewStateMetadata::release_version_uuid() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSP::UUID* temp = _impl_.version_uuid_;
  _impl_.version_uuid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::UUID* ViewStateMetadata::unsafe_arena_release_version_uuid() {
  // @@protoc_insertion_point(field_release:TSP.ViewStateMetadata.version_uuid)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSP::UUID* temp = _impl_.version_uuid_;
  _impl_.version_uuid_ = nullptr;
  return temp;
}
inline ::TSP::UUID* ViewStateMetadata::_internal_mutable_version_uuid() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.version_uuid_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::UUID>(GetArenaForAllocation());
    _impl_.version_uuid_ = p;
  }
  return _impl_.version_uuid_;
}
inline ::TSP::UUID* ViewStateMetadata::mutable_version_uuid() {
  ::TSP::UUID* _msg = _internal_mutable_version_uuid();
  // @@protoc_insertion_point(field_mutable:TSP.ViewStateMetadata.version_uuid)
  return _msg;
}
inline void ViewStateMetadata::set_allocated_version_uuid(::TSP::UUID* version_uuid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.version_uuid_);
  }
  if (version_uuid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(version_uuid));
    if (message_arena != submessage_arena) {
      version_uuid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, version_uuid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.version_uuid_ = version_uuid;
  // @@protoc_insertion_point(field_set_allocated:TSP.ViewStateMetadata.version_uuid)
}

// required .TSP.ComponentInfo component = 3;
inline bool ViewStateMetadata::_internal_has_component() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.component_ != nullptr);
  return value;
}
inline bool ViewStateMetadata::has_component() const {
  return _internal_has_component();
}
inline void ViewStateMetadata::clear_component() {
  if (_impl_.component_ != nullptr) _impl_.component_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::TSP::ComponentInfo& ViewStateMetadata::_internal_component() const {
  const ::TSP::ComponentInfo* p = _impl_.component_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::ComponentInfo&>(
      ::TSP::_ComponentInfo_default_instance_);
}
inline const ::TSP::ComponentInfo& ViewStateMetadata::component() const {
  // @@protoc_insertion_point(field_get:TSP.ViewStateMetadata.component)
  return _internal_component();
}
inline void ViewStateMetadata::unsafe_arena_set_allocated_component(
    ::TSP::ComponentInfo* component) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.component_);
  }
  _impl_.component_ = component;
  if (component) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.ViewStateMetadata.component)
}
inline ::TSP::ComponentInfo* ViewStateMetadata::release_component() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::ComponentInfo* temp = _impl_.component_;
  _impl_.component_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::ComponentInfo* ViewStateMetadata::unsafe_arena_release_component() {
  // @@protoc_insertion_point(field_release:TSP.ViewStateMetadata.component)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::ComponentInfo* temp = _impl_.component_;
  _impl_.component_ = nullptr;
  return temp;
}
inline ::TSP::ComponentInfo* ViewStateMetadata::_internal_mutable_component() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.component_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::ComponentInfo>(GetArenaForAllocation());
    _impl_.component_ = p;
  }
  return _impl_.component_;
}
inline ::TSP::ComponentInfo* ViewStateMetadata::mutable_component() {
  ::TSP::ComponentInfo* _msg = _internal_mutable_component();
  // @@protoc_insertion_point(field_mutable:TSP.ViewStateMetadata.component)
  return _msg;
}
inline void ViewStateMetadata::set_allocated_component(::TSP::ComponentInfo* component) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.component_;
  }
  if (component) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(component);
    if (message_arena != submessage_arena) {
      component = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, component, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.component_ = component;
  // @@protoc_insertion_point(field_set_allocated:TSP.ViewStateMetadata.component)
}

// repeated .TSP.ObjectUUIDMapEntry external_object_uuid_map_entries = 5;
inline int ViewStateMetadata::_internal_external_object_uuid_map_entries_size() const {
  return _impl_.external_object_uuid_map_entries_.size();
}
inline int ViewStateMetadata::external_object_uuid_map_entries_size() const {
  return _internal_external_object_uuid_map_entries_size();
}
inline void ViewStateMetadata::clear_external_object_uuid_map_entries() {
  _impl_.external_object_uuid_map_entries_.Clear();
}
inline ::TSP::ObjectUUIDMapEntry* ViewStateMetadata::mutable_external_object_uuid_map_entries(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.ViewStateMetadata.external_object_uuid_map_entries)
  return _impl_.external_object_uuid_map_entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >*
ViewStateMetadata::mutable_external_object_uuid_map_entries() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ViewStateMetadata.external_object_uuid_map_entries)
  return &_impl_.external_object_uuid_map_entries_;
}
inline const ::TSP::ObjectUUIDMapEntry& ViewStateMetadata::_internal_external_object_uuid_map_entries(int index) const {
  return _impl_.external_object_uuid_map_entries_.Get(index);
}
inline const ::TSP::ObjectUUIDMapEntry& ViewStateMetadata::external_object_uuid_map_entries(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ViewStateMetadata.external_object_uuid_map_entries)
  return _internal_external_object_uuid_map_entries(index);
}
inline ::TSP::ObjectUUIDMapEntry* ViewStateMetadata::_internal_add_external_object_uuid_map_entries() {
  return _impl_.external_object_uuid_map_entries_.Add();
}
inline ::TSP::ObjectUUIDMapEntry* ViewStateMetadata::add_external_object_uuid_map_entries() {
  ::TSP::ObjectUUIDMapEntry* _add = _internal_add_external_object_uuid_map_entries();
  // @@protoc_insertion_point(field_add:TSP.ViewStateMetadata.external_object_uuid_map_entries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >&
ViewStateMetadata::external_object_uuid_map_entries() const {
  // @@protoc_insertion_point(field_list:TSP.ViewStateMetadata.external_object_uuid_map_entries)
  return _impl_.external_object_uuid_map_entries_;
}

// repeated uint32 read_version = 6 [packed = true];
inline int ViewStateMetadata::_internal_read_version_size() const {
  return _impl_.read_version_.size();
}
inline int ViewStateMetadata::read_version_size() const {
  return _internal_read_version_size();
}
inline void ViewStateMetadata::clear_read_version() {
  _impl_.read_version_.Clear();
}
inline uint32_t ViewStateMetadata::_internal_read_version(int index) const {
  return _impl_.read_version_.Get(index);
}
inline uint32_t ViewStateMetadata::read_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ViewStateMetadata.read_version)
  return _internal_read_version(index);
}
inline void ViewStateMetadata::set_read_version(int index, uint32_t value) {
  _impl_.read_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.ViewStateMetadata.read_version)
}
inline void ViewStateMetadata::_internal_add_read_version(uint32_t value) {
  _impl_.read_version_.Add(value);
}
inline void ViewStateMetadata::add_read_version(uint32_t value) {
  _internal_add_read_version(value);
  // @@protoc_insertion_point(field_add:TSP.ViewStateMetadata.read_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ViewStateMetadata::_internal_read_version() const {
  return _impl_.read_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ViewStateMetadata::read_version() const {
  // @@protoc_insertion_point(field_list:TSP.ViewStateMetadata.read_version)
  return _internal_read_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ViewStateMetadata::_internal_mutable_read_version() {
  return &_impl_.read_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ViewStateMetadata::mutable_read_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ViewStateMetadata.read_version)
  return _internal_mutable_read_version();
}

// -------------------------------------------------------------------

// ObjectSerializationMetadata

// repeated uint32 version = 1 [packed = true];
inline int ObjectSerializationMetadata::_internal_version_size() const {
  return _impl_.version_.size();
}
inline int ObjectSerializationMetadata::version_size() const {
  return _internal_version_size();
}
inline void ObjectSerializationMetadata::clear_version() {
  _impl_.version_.Clear();
}
inline uint32_t ObjectSerializationMetadata::_internal_version(int index) const {
  return _impl_.version_.Get(index);
}
inline uint32_t ObjectSerializationMetadata::version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationMetadata.version)
  return _internal_version(index);
}
inline void ObjectSerializationMetadata::set_version(int index, uint32_t value) {
  _impl_.version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.ObjectSerializationMetadata.version)
}
inline void ObjectSerializationMetadata::_internal_add_version(uint32_t value) {
  _impl_.version_.Add(value);
}
inline void ObjectSerializationMetadata::add_version(uint32_t value) {
  _internal_add_version(value);
  // @@protoc_insertion_point(field_add:TSP.ObjectSerializationMetadata.version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ObjectSerializationMetadata::_internal_version() const {
  return _impl_.version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ObjectSerializationMetadata::version() const {
  // @@protoc_insertion_point(field_list:TSP.ObjectSerializationMetadata.version)
  return _internal_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ObjectSerializationMetadata::_internal_mutable_version() {
  return &_impl_.version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ObjectSerializationMetadata::mutable_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ObjectSerializationMetadata.version)
  return _internal_mutable_version();
}

// optional .TSP.UUID source_document_uuid = 2;
inline bool ObjectSerializationMetadata::_internal_has_source_document_uuid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_document_uuid_ != nullptr);
  return value;
}
inline bool ObjectSerializationMetadata::has_source_document_uuid() const {
  return _internal_has_source_document_uuid();
}
inline const ::TSP::UUID& ObjectSerializationMetadata::_internal_source_document_uuid() const {
  const ::TSP::UUID* p = _impl_.source_document_uuid_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::UUID&>(
      ::TSP::_UUID_default_instance_);
}
inline const ::TSP::UUID& ObjectSerializationMetadata::source_document_uuid() const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationMetadata.source_document_uuid)
  return _internal_source_document_uuid();
}
inline void ObjectSerializationMetadata::unsafe_arena_set_allocated_source_document_uuid(
    ::TSP::UUID* source_document_uuid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.source_document_uuid_);
  }
  _impl_.source_document_uuid_ = source_document_uuid;
  if (source_document_uuid) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.ObjectSerializationMetadata.source_document_uuid)
}
inline ::TSP::UUID* ObjectSerializationMetadata::release_source_document_uuid() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::UUID* temp = _impl_.source_document_uuid_;
  _impl_.source_document_uuid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::UUID* ObjectSerializationMetadata::unsafe_arena_release_source_document_uuid() {
  // @@protoc_insertion_point(field_release:TSP.ObjectSerializationMetadata.source_document_uuid)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::UUID* temp = _impl_.source_document_uuid_;
  _impl_.source_document_uuid_ = nullptr;
  return temp;
}
inline ::TSP::UUID* ObjectSerializationMetadata::_internal_mutable_source_document_uuid() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.source_document_uuid_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::UUID>(GetArenaForAllocation());
    _impl_.source_document_uuid_ = p;
  }
  return _impl_.source_document_uuid_;
}
inline ::TSP::UUID* ObjectSerializationMetadata::mutable_source_document_uuid() {
  ::TSP::UUID* _msg = _internal_mutable_source_document_uuid();
  // @@protoc_insertion_point(field_mutable:TSP.ObjectSerializationMetadata.source_document_uuid)
  return _msg;
}
inline void ObjectSerializationMetadata::set_allocated_source_document_uuid(::TSP::UUID* source_document_uuid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.source_document_uuid_);
  }
  if (source_document_uuid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(source_document_uuid));
    if (message_arena != submessage_arena) {
      source_document_uuid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, source_document_uuid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.source_document_uuid_ = source_document_uuid;
  // @@protoc_insertion_point(field_set_allocated:TSP.ObjectSerializationMetadata.source_document_uuid)
}

// optional .TSP.UUID version_uuid = 3;
inline bool ObjectSerializationMetadata::_internal_has_version_uuid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.version_uuid_ != nullptr);
  return value;
}
inline bool ObjectSerializationMetadata::has_version_uuid() const {
  return _internal_has_version_uuid();
}
inline const ::TSP::UUID& ObjectSerializationMetadata::_internal_version_uuid() const {
  const ::TSP::UUID* p = _impl_.version_uuid_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::UUID&>(
      ::TSP::_UUID_default_instance_);
}
inline const ::TSP::UUID& ObjectSerializationMetadata::version_uuid() const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationMetadata.version_uuid)
  return _internal_version_uuid();
}
inline void ObjectSerializationMetadata::unsafe_arena_set_allocated_version_uuid(
    ::TSP::UUID* version_uuid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.version_uuid_);
  }
  _impl_.version_uuid_ = version_uuid;
  if (version_uuid) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.ObjectSerializationMetadata.version_uuid)
}
inline ::TSP::UUID* ObjectSerializationMetadata::release_version_uuid() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSP::UUID* temp = _impl_.version_uuid_;
  _impl_.version_uuid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::UUID* ObjectSerializationMetadata::unsafe_arena_release_version_uuid() {
  // @@protoc_insertion_point(field_release:TSP.ObjectSerializationMetadata.version_uuid)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSP::UUID* temp = _impl_.version_uuid_;
  _impl_.version_uuid_ = nullptr;
  return temp;
}
inline ::TSP::UUID* ObjectSerializationMetadata::_internal_mutable_version_uuid() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.version_uuid_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::UUID>(GetArenaForAllocation());
    _impl_.version_uuid_ = p;
  }
  return _impl_.version_uuid_;
}
inline ::TSP::UUID* ObjectSerializationMetadata::mutable_version_uuid() {
  ::TSP::UUID* _msg = _internal_mutable_version_uuid();
  // @@protoc_insertion_point(field_mutable:TSP.ObjectSerializationMetadata.version_uuid)
  return _msg;
}
inline void ObjectSerializationMetadata::set_allocated_version_uuid(::TSP::UUID* version_uuid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.version_uuid_);
  }
  if (version_uuid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(version_uuid));
    if (message_arena != submessage_arena) {
      version_uuid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, version_uuid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.version_uuid_ = version_uuid;
  // @@protoc_insertion_point(field_set_allocated:TSP.ObjectSerializationMetadata.version_uuid)
}

// required .TSP.ComponentInfo component = 4;
inline bool ObjectSerializationMetadata::_internal_has_component() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.component_ != nullptr);
  return value;
}
inline bool ObjectSerializationMetadata::has_component() const {
  return _internal_has_component();
}
inline void ObjectSerializationMetadata::clear_component() {
  if (_impl_.component_ != nullptr) _impl_.component_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::TSP::ComponentInfo& ObjectSerializationMetadata::_internal_component() const {
  const ::TSP::ComponentInfo* p = _impl_.component_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::ComponentInfo&>(
      ::TSP::_ComponentInfo_default_instance_);
}
inline const ::TSP::ComponentInfo& ObjectSerializationMetadata::component() const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationMetadata.component)
  return _internal_component();
}
inline void ObjectSerializationMetadata::unsafe_arena_set_allocated_component(
    ::TSP::ComponentInfo* component) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.component_);
  }
  _impl_.component_ = component;
  if (component) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.ObjectSerializationMetadata.component)
}
inline ::TSP::ComponentInfo* ObjectSerializationMetadata::release_component() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSP::ComponentInfo* temp = _impl_.component_;
  _impl_.component_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::ComponentInfo* ObjectSerializationMetadata::unsafe_arena_release_component() {
  // @@protoc_insertion_point(field_release:TSP.ObjectSerializationMetadata.component)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSP::ComponentInfo* temp = _impl_.component_;
  _impl_.component_ = nullptr;
  return temp;
}
inline ::TSP::ComponentInfo* ObjectSerializationMetadata::_internal_mutable_component() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.component_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::ComponentInfo>(GetArenaForAllocation());
    _impl_.component_ = p;
  }
  return _impl_.component_;
}
inline ::TSP::ComponentInfo* ObjectSerializationMetadata::mutable_component() {
  ::TSP::ComponentInfo* _msg = _internal_mutable_component();
  // @@protoc_insertion_point(field_mutable:TSP.ObjectSerializationMetadata.component)
  return _msg;
}
inline void ObjectSerializationMetadata::set_allocated_component(::TSP::ComponentInfo* component) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.component_;
  }
  if (component) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(component);
    if (message_arena != submessage_arena) {
      component = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, component, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.component_ = component;
  // @@protoc_insertion_point(field_set_allocated:TSP.ObjectSerializationMetadata.component)
}

// repeated .TSP.DataInfo datas = 5;
inline int ObjectSerializationMetadata::_internal_datas_size() const {
  return _impl_.datas_.size();
}
inline int ObjectSerializationMetadata::datas_size() const {
  return _internal_datas_size();
}
inline void ObjectSerializationMetadata::clear_datas() {
  _impl_.datas_.Clear();
}
inline ::TSP::DataInfo* ObjectSerializationMetadata::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.ObjectSerializationMetadata.datas)
  return _impl_.datas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >*
ObjectSerializationMetadata::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ObjectSerializationMetadata.datas)
  return &_impl_.datas_;
}
inline const ::TSP::DataInfo& ObjectSerializationMetadata::_internal_datas(int index) const {
  return _impl_.datas_.Get(index);
}
inline const ::TSP::DataInfo& ObjectSerializationMetadata::datas(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationMetadata.datas)
  return _internal_datas(index);
}
inline ::TSP::DataInfo* ObjectSerializationMetadata::_internal_add_datas() {
  return _impl_.datas_.Add();
}
inline ::TSP::DataInfo* ObjectSerializationMetadata::add_datas() {
  ::TSP::DataInfo* _add = _internal_add_datas();
  // @@protoc_insertion_point(field_add:TSP.ObjectSerializationMetadata.datas)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataInfo >&
ObjectSerializationMetadata::datas() const {
  // @@protoc_insertion_point(field_list:TSP.ObjectSerializationMetadata.datas)
  return _impl_.datas_;
}

// repeated .TSP.ObjectUUIDMapEntry external_object_uuid_map_entries = 6;
inline int ObjectSerializationMetadata::_internal_external_object_uuid_map_entries_size() const {
  return _impl_.external_object_uuid_map_entries_.size();
}
inline int ObjectSerializationMetadata::external_object_uuid_map_entries_size() const {
  return _internal_external_object_uuid_map_entries_size();
}
inline void ObjectSerializationMetadata::clear_external_object_uuid_map_entries() {
  _impl_.external_object_uuid_map_entries_.Clear();
}
inline ::TSP::ObjectUUIDMapEntry* ObjectSerializationMetadata::mutable_external_object_uuid_map_entries(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.ObjectSerializationMetadata.external_object_uuid_map_entries)
  return _impl_.external_object_uuid_map_entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >*
ObjectSerializationMetadata::mutable_external_object_uuid_map_entries() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ObjectSerializationMetadata.external_object_uuid_map_entries)
  return &_impl_.external_object_uuid_map_entries_;
}
inline const ::TSP::ObjectUUIDMapEntry& ObjectSerializationMetadata::_internal_external_object_uuid_map_entries(int index) const {
  return _impl_.external_object_uuid_map_entries_.Get(index);
}
inline const ::TSP::ObjectUUIDMapEntry& ObjectSerializationMetadata::external_object_uuid_map_entries(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationMetadata.external_object_uuid_map_entries)
  return _internal_external_object_uuid_map_entries(index);
}
inline ::TSP::ObjectUUIDMapEntry* ObjectSerializationMetadata::_internal_add_external_object_uuid_map_entries() {
  return _impl_.external_object_uuid_map_entries_.Add();
}
inline ::TSP::ObjectUUIDMapEntry* ObjectSerializationMetadata::add_external_object_uuid_map_entries() {
  ::TSP::ObjectUUIDMapEntry* _add = _internal_add_external_object_uuid_map_entries();
  // @@protoc_insertion_point(field_add:TSP.ObjectSerializationMetadata.external_object_uuid_map_entries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectUUIDMapEntry >&
ObjectSerializationMetadata::external_object_uuid_map_entries() const {
  // @@protoc_insertion_point(field_list:TSP.ObjectSerializationMetadata.external_object_uuid_map_entries)
  return _impl_.external_object_uuid_map_entries_;
}

// optional .TSP.Reference data_metadata_map = 7;
inline bool ObjectSerializationMetadata::_internal_has_data_metadata_map() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_metadata_map_ != nullptr);
  return value;
}
inline bool ObjectSerializationMetadata::has_data_metadata_map() const {
  return _internal_has_data_metadata_map();
}
inline const ::TSP::Reference& ObjectSerializationMetadata::_internal_data_metadata_map() const {
  const ::TSP::Reference* p = _impl_.data_metadata_map_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::Reference&>(
      ::TSP::_Reference_default_instance_);
}
inline const ::TSP::Reference& ObjectSerializationMetadata::data_metadata_map() const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationMetadata.data_metadata_map)
  return _internal_data_metadata_map();
}
inline void ObjectSerializationMetadata::unsafe_arena_set_allocated_data_metadata_map(
    ::TSP::Reference* data_metadata_map) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_metadata_map_);
  }
  _impl_.data_metadata_map_ = data_metadata_map;
  if (data_metadata_map) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.ObjectSerializationMetadata.data_metadata_map)
}
inline ::TSP::Reference* ObjectSerializationMetadata::release_data_metadata_map() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSP::Reference* temp = _impl_.data_metadata_map_;
  _impl_.data_metadata_map_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::Reference* ObjectSerializationMetadata::unsafe_arena_release_data_metadata_map() {
  // @@protoc_insertion_point(field_release:TSP.ObjectSerializationMetadata.data_metadata_map)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSP::Reference* temp = _impl_.data_metadata_map_;
  _impl_.data_metadata_map_ = nullptr;
  return temp;
}
inline ::TSP::Reference* ObjectSerializationMetadata::_internal_mutable_data_metadata_map() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.data_metadata_map_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::Reference>(GetArenaForAllocation());
    _impl_.data_metadata_map_ = p;
  }
  return _impl_.data_metadata_map_;
}
inline ::TSP::Reference* ObjectSerializationMetadata::mutable_data_metadata_map() {
  ::TSP::Reference* _msg = _internal_mutable_data_metadata_map();
  // @@protoc_insertion_point(field_mutable:TSP.ObjectSerializationMetadata.data_metadata_map)
  return _msg;
}
inline void ObjectSerializationMetadata::set_allocated_data_metadata_map(::TSP::Reference* data_metadata_map) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_metadata_map_);
  }
  if (data_metadata_map) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_metadata_map));
    if (message_arena != submessage_arena) {
      data_metadata_map = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_metadata_map, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.data_metadata_map_ = data_metadata_map;
  // @@protoc_insertion_point(field_set_allocated:TSP.ObjectSerializationMetadata.data_metadata_map)
}

// repeated uint32 read_version = 8 [packed = true];
inline int ObjectSerializationMetadata::_internal_read_version_size() const {
  return _impl_.read_version_.size();
}
inline int ObjectSerializationMetadata::read_version_size() const {
  return _internal_read_version_size();
}
inline void ObjectSerializationMetadata::clear_read_version() {
  _impl_.read_version_.Clear();
}
inline uint32_t ObjectSerializationMetadata::_internal_read_version(int index) const {
  return _impl_.read_version_.Get(index);
}
inline uint32_t ObjectSerializationMetadata::read_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationMetadata.read_version)
  return _internal_read_version(index);
}
inline void ObjectSerializationMetadata::set_read_version(int index, uint32_t value) {
  _impl_.read_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.ObjectSerializationMetadata.read_version)
}
inline void ObjectSerializationMetadata::_internal_add_read_version(uint32_t value) {
  _impl_.read_version_.Add(value);
}
inline void ObjectSerializationMetadata::add_read_version(uint32_t value) {
  _internal_add_read_version(value);
  // @@protoc_insertion_point(field_add:TSP.ObjectSerializationMetadata.read_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ObjectSerializationMetadata::_internal_read_version() const {
  return _impl_.read_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
ObjectSerializationMetadata::read_version() const {
  // @@protoc_insertion_point(field_list:TSP.ObjectSerializationMetadata.read_version)
  return _internal_read_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ObjectSerializationMetadata::_internal_mutable_read_version() {
  return &_impl_.read_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
ObjectSerializationMetadata::mutable_read_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ObjectSerializationMetadata.read_version)
  return _internal_mutable_read_version();
}

// -------------------------------------------------------------------

// ObjectSerializationDirectory_Entry

// required string locator = 1;
inline bool ObjectSerializationDirectory_Entry::_internal_has_locator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ObjectSerializationDirectory_Entry::has_locator() const {
  return _internal_has_locator();
}
inline void ObjectSerializationDirectory_Entry::clear_locator() {
  _impl_.locator_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ObjectSerializationDirectory_Entry::locator() const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationDirectory.Entry.locator)
  return _internal_locator();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ObjectSerializationDirectory_Entry::set_locator(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.locator_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.ObjectSerializationDirectory.Entry.locator)
}
inline std::string* ObjectSerializationDirectory_Entry::mutable_locator() {
  std::string* _s = _internal_mutable_locator();
  // @@protoc_insertion_point(field_mutable:TSP.ObjectSerializationDirectory.Entry.locator)
  return _s;
}
inline const std::string& ObjectSerializationDirectory_Entry::_internal_locator() const {
  return _impl_.locator_.Get();
}
inline void ObjectSerializationDirectory_Entry::_internal_set_locator(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.locator_.Set(value, GetArenaForAllocation());
}
inline std::string* ObjectSerializationDirectory_Entry::_internal_mutable_locator() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.locator_.Mutable(GetArenaForAllocation());
}
inline std::string* ObjectSerializationDirectory_Entry::release_locator() {
  // @@protoc_insertion_point(field_release:TSP.ObjectSerializationDirectory.Entry.locator)
  if (!_internal_has_locator()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.locator_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.locator_.IsDefault()) {
    _impl_.locator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void ObjectSerializationDirectory_Entry::set_allocated_locator(std::string* locator) {
  if (locator != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.locator_.SetAllocated(locator, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.locator_.IsDefault()) {
    _impl_.locator_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.ObjectSerializationDirectory.Entry.locator)
}

// required uint64 offset = 2;
inline bool ObjectSerializationDirectory_Entry::_internal_has_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ObjectSerializationDirectory_Entry::has_offset() const {
  return _internal_has_offset();
}
inline void ObjectSerializationDirectory_Entry::clear_offset() {
  _impl_.offset_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t ObjectSerializationDirectory_Entry::_internal_offset() const {
  return _impl_.offset_;
}
inline uint64_t ObjectSerializationDirectory_Entry::offset() const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationDirectory.Entry.offset)
  return _internal_offset();
}
inline void ObjectSerializationDirectory_Entry::_internal_set_offset(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.offset_ = value;
}
inline void ObjectSerializationDirectory_Entry::set_offset(uint64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:TSP.ObjectSerializationDirectory.Entry.offset)
}

// required uint64 size = 3;
inline bool ObjectSerializationDirectory_Entry::_internal_has_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ObjectSerializationDirectory_Entry::has_size() const {
  return _internal_has_size();
}
inline void ObjectSerializationDirectory_Entry::clear_size() {
  _impl_.size_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t ObjectSerializationDirectory_Entry::_internal_size() const {
  return _impl_.size_;
}
inline uint64_t ObjectSerializationDirectory_Entry::size() const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationDirectory.Entry.size)
  return _internal_size();
}
inline void ObjectSerializationDirectory_Entry::_internal_set_size(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.size_ = value;
}
inline void ObjectSerializationDirectory_Entry::set_size(uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:TSP.ObjectSerializationDirectory.Entry.size)
}

// -------------------------------------------------------------------

// ObjectSerializationDirectory

// repeated .TSP.ObjectSerializationDirectory.Entry entries = 1;
inline int ObjectSerializationDirectory::_internal_entries_size() const {
  return _impl_.entries_.size();
}
inline int ObjectSerializationDirectory::entries_size() const {
  return _internal_entries_size();
}
inline void ObjectSerializationDirectory::clear_entries() {
  _impl_.entries_.Clear();
}
inline ::TSP::ObjectSerializationDirectory_Entry* ObjectSerializationDirectory::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.ObjectSerializationDirectory.entries)
  return _impl_.entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectSerializationDirectory_Entry >*
ObjectSerializationDirectory::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:TSP.ObjectSerializationDirectory.entries)
  return &_impl_.entries_;
}
inline const ::TSP::ObjectSerializationDirectory_Entry& ObjectSerializationDirectory::_internal_entries(int index) const {
  return _impl_.entries_.Get(index);
}
inline const ::TSP::ObjectSerializationDirectory_Entry& ObjectSerializationDirectory::entries(int index) const {
  // @@protoc_insertion_point(field_get:TSP.ObjectSerializationDirectory.entries)
  return _internal_entries(index);
}
inline ::TSP::ObjectSerializationDirectory_Entry* ObjectSerializationDirectory::_internal_add_entries() {
  return _impl_.entries_.Add();
}
inline ::TSP::ObjectSerializationDirectory_Entry* ObjectSerializationDirectory::add_entries() {
  ::TSP::ObjectSerializationDirectory_Entry* _add = _internal_add_entries();
  // @@protoc_insertion_point(field_add:TSP.ObjectSerializationDirectory.entries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::ObjectSerializationDirectory_Entry >&
ObjectSerializationDirectory::entries() const {
  // @@protoc_insertion_point(field_list:TSP.ObjectSerializationDirectory.entries)
  return _impl_.entries_;
}

// -------------------------------------------------------------------

// DataPropertiesEntryV1

// required bytes digest = 1;
inline bool DataPropertiesEntryV1::_internal_has_digest() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool DataPropertiesEntryV1::has_digest() const {
  return _internal_has_digest();
}
inline void DataPropertiesEntryV1::clear_digest() {
  _impl_.digest_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DataPropertiesEntryV1::digest() const {
  // @@protoc_insertion_point(field_get:TSP.DataPropertiesEntryV1.digest)
  return _internal_digest();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DataPropertiesEntryV1::set_digest(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.digest_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.DataPropertiesEntryV1.digest)
}
inline std::string* DataPropertiesEntryV1::mutable_digest() {
  std::string* _s = _internal_mutable_digest();
  // @@protoc_insertion_point(field_mutable:TSP.DataPropertiesEntryV1.digest)
  return _s;
}
inline const std::string& DataPropertiesEntryV1::_internal_digest() const {
  return _impl_.digest_.Get();
}
inline void DataPropertiesEntryV1::_internal_set_digest(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.digest_.Set(value, GetArenaForAllocation());
}
inline std::string* DataPropertiesEntryV1::_internal_mutable_digest() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.digest_.Mutable(GetArenaForAllocation());
}
inline std::string* DataPropertiesEntryV1::release_digest() {
  // @@protoc_insertion_point(field_release:TSP.DataPropertiesEntryV1.digest)
  if (!_internal_has_digest()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.digest_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.digest_.IsDefault()) {
    _impl_.digest_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void DataPropertiesEntryV1::set_allocated_digest(std::string* digest) {
  if (digest != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.digest_.SetAllocated(digest, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.digest_.IsDefault()) {
    _impl_.digest_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.DataPropertiesEntryV1.digest)
}

// optional bool expects_matched_digest = 2;
inline bool DataPropertiesEntryV1::_internal_has_expects_matched_digest() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool DataPropertiesEntryV1::has_expects_matched_digest() const {
  return _internal_has_expects_matched_digest();
}
inline void DataPropertiesEntryV1::clear_expects_matched_digest() {
  _impl_.expects_matched_digest_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool DataPropertiesEntryV1::_internal_expects_matched_digest() const {
  return _impl_.expects_matched_digest_;
}
inline bool DataPropertiesEntryV1::expects_matched_digest() const {
  // @@protoc_insertion_point(field_get:TSP.DataPropertiesEntryV1.expects_matched_digest)
  return _internal_expects_matched_digest();
}
inline void DataPropertiesEntryV1::_internal_set_expects_matched_digest(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.expects_matched_digest_ = value;
}
inline void DataPropertiesEntryV1::set_expects_matched_digest(bool value) {
  _internal_set_expects_matched_digest(value);
  // @@protoc_insertion_point(field_set:TSP.DataPropertiesEntryV1.expects_matched_digest)
}

// optional double creation_time_interval_since_1970 = 3;
inline bool DataPropertiesEntryV1::_internal_has_creation_time_interval_since_1970() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool DataPropertiesEntryV1::has_creation_time_interval_since_1970() const {
  return _internal_has_creation_time_interval_since_1970();
}
inline void DataPropertiesEntryV1::clear_creation_time_interval_since_1970() {
  _impl_.creation_time_interval_since_1970_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double DataPropertiesEntryV1::_internal_creation_time_interval_since_1970() const {
  return _impl_.creation_time_interval_since_1970_;
}
inline double DataPropertiesEntryV1::creation_time_interval_since_1970() const {
  // @@protoc_insertion_point(field_get:TSP.DataPropertiesEntryV1.creation_time_interval_since_1970)
  return _internal_creation_time_interval_since_1970();
}
inline void DataPropertiesEntryV1::_internal_set_creation_time_interval_since_1970(double value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.creation_time_interval_since_1970_ = value;
}
inline void DataPropertiesEntryV1::set_creation_time_interval_since_1970(double value) {
  _internal_set_creation_time_interval_since_1970(value);
  // @@protoc_insertion_point(field_set:TSP.DataPropertiesEntryV1.creation_time_interval_since_1970)
}

// repeated uint32 creation_version = 4 [packed = true];
inline int DataPropertiesEntryV1::_internal_creation_version_size() const {
  return _impl_.creation_version_.size();
}
inline int DataPropertiesEntryV1::creation_version_size() const {
  return _internal_creation_version_size();
}
inline void DataPropertiesEntryV1::clear_creation_version() {
  _impl_.creation_version_.Clear();
}
inline uint32_t DataPropertiesEntryV1::_internal_creation_version(int index) const {
  return _impl_.creation_version_.Get(index);
}
inline uint32_t DataPropertiesEntryV1::creation_version(int index) const {
  // @@protoc_insertion_point(field_get:TSP.DataPropertiesEntryV1.creation_version)
  return _internal_creation_version(index);
}
inline void DataPropertiesEntryV1::set_creation_version(int index, uint32_t value) {
  _impl_.creation_version_.Set(index, value);
  // @@protoc_insertion_point(field_set:TSP.DataPropertiesEntryV1.creation_version)
}
inline void DataPropertiesEntryV1::_internal_add_creation_version(uint32_t value) {
  _impl_.creation_version_.Add(value);
}
inline void DataPropertiesEntryV1::add_creation_version(uint32_t value) {
  _internal_add_creation_version(value);
  // @@protoc_insertion_point(field_add:TSP.DataPropertiesEntryV1.creation_version)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
DataPropertiesEntryV1::_internal_creation_version() const {
  return _impl_.creation_version_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
DataPropertiesEntryV1::creation_version() const {
  // @@protoc_insertion_point(field_list:TSP.DataPropertiesEntryV1.creation_version)
  return _internal_creation_version();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
DataPropertiesEntryV1::_internal_mutable_creation_version() {
  return &_impl_.creation_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
DataPropertiesEntryV1::mutable_creation_version() {
  // @@protoc_insertion_point(field_mutable_list:TSP.DataPropertiesEntryV1.creation_version)
  return _internal_mutable_creation_version();
}

// optional bytes last_mismatched_digest = 5;
inline bool DataPropertiesEntryV1::_internal_has_last_mismatched_digest() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DataPropertiesEntryV1::has_last_mismatched_digest() const {
  return _internal_has_last_mismatched_digest();
}
inline void DataPropertiesEntryV1::clear_last_mismatched_digest() {
  _impl_.last_mismatched_digest_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& DataPropertiesEntryV1::last_mismatched_digest() const {
  // @@protoc_insertion_point(field_get:TSP.DataPropertiesEntryV1.last_mismatched_digest)
  return _internal_last_mismatched_digest();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void DataPropertiesEntryV1::set_last_mismatched_digest(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.last_mismatched_digest_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.DataPropertiesEntryV1.last_mismatched_digest)
}
inline std::string* DataPropertiesEntryV1::mutable_last_mismatched_digest() {
  std::string* _s = _internal_mutable_last_mismatched_digest();
  // @@protoc_insertion_point(field_mutable:TSP.DataPropertiesEntryV1.last_mismatched_digest)
  return _s;
}
inline const std::string& DataPropertiesEntryV1::_internal_last_mismatched_digest() const {
  return _impl_.last_mismatched_digest_.Get();
}
inline void DataPropertiesEntryV1::_internal_set_last_mismatched_digest(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.last_mismatched_digest_.Set(value, GetArenaForAllocation());
}
inline std::string* DataPropertiesEntryV1::_internal_mutable_last_mismatched_digest() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.last_mismatched_digest_.Mutable(GetArenaForAllocation());
}
inline std::string* DataPropertiesEntryV1::release_last_mismatched_digest() {
  // @@protoc_insertion_point(field_release:TSP.DataPropertiesEntryV1.last_mismatched_digest)
  if (!_internal_has_last_mismatched_digest()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.last_mismatched_digest_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.last_mismatched_digest_.IsDefault()) {
    _impl_.last_mismatched_digest_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void DataPropertiesEntryV1::set_allocated_last_mismatched_digest(std::string* last_mismatched_digest) {
  if (last_mismatched_digest != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.last_mismatched_digest_.SetAllocated(last_mismatched_digest, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.last_mismatched_digest_.IsDefault()) {
    _impl_.last_mismatched_digest_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.DataPropertiesEntryV1.last_mismatched_digest)
}

// -------------------------------------------------------------------

// DataPropertiesV1

// repeated .TSP.DataPropertiesEntryV1 properties = 1;
inline int DataPropertiesV1::_internal_properties_size() const {
  return _impl_.properties_.size();
}
inline int DataPropertiesV1::properties_size() const {
  return _internal_properties_size();
}
inline void DataPropertiesV1::clear_properties() {
  _impl_.properties_.Clear();
}
inline ::TSP::DataPropertiesEntryV1* DataPropertiesV1::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.DataPropertiesV1.properties)
  return _impl_.properties_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataPropertiesEntryV1 >*
DataPropertiesV1::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:TSP.DataPropertiesV1.properties)
  return &_impl_.properties_;
}
inline const ::TSP::DataPropertiesEntryV1& DataPropertiesV1::_internal_properties(int index) const {
  return _impl_.properties_.Get(index);
}
inline const ::TSP::DataPropertiesEntryV1& DataPropertiesV1::properties(int index) const {
  // @@protoc_insertion_point(field_get:TSP.DataPropertiesV1.properties)
  return _internal_properties(index);
}
inline ::TSP::DataPropertiesEntryV1* DataPropertiesV1::_internal_add_properties() {
  return _impl_.properties_.Add();
}
inline ::TSP::DataPropertiesEntryV1* DataPropertiesV1::add_properties() {
  ::TSP::DataPropertiesEntryV1* _add = _internal_add_properties();
  // @@protoc_insertion_point(field_add:TSP.DataPropertiesV1.properties)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::DataPropertiesEntryV1 >&
DataPropertiesV1::properties() const {
  // @@protoc_insertion_point(field_list:TSP.DataPropertiesV1.properties)
  return _impl_.properties_;
}

// -------------------------------------------------------------------

// DocumentMetadata

// optional bool is_in_collaboration_mode = 1;
inline bool DocumentMetadata::_internal_has_is_in_collaboration_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DocumentMetadata::has_is_in_collaboration_mode() const {
  return _internal_has_is_in_collaboration_mode();
}
inline void DocumentMetadata::clear_is_in_collaboration_mode() {
  _impl_.is_in_collaboration_mode_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool DocumentMetadata::_internal_is_in_collaboration_mode() const {
  return _impl_.is_in_collaboration_mode_;
}
inline bool DocumentMetadata::is_in_collaboration_mode() const {
  // @@protoc_insertion_point(field_get:TSP.DocumentMetadata.is_in_collaboration_mode)
  return _internal_is_in_collaboration_mode();
}
inline void DocumentMetadata::_internal_set_is_in_collaboration_mode(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.is_in_collaboration_mode_ = value;
}
inline void DocumentMetadata::set_is_in_collaboration_mode(bool value) {
  _internal_set_is_in_collaboration_mode(value);
  // @@protoc_insertion_point(field_set:TSP.DocumentMetadata.is_in_collaboration_mode)
}

// optional .TSP.DataPropertiesV1 data_properties_v1 = 3;
inline bool DocumentMetadata::_internal_has_data_properties_v1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_properties_v1_ != nullptr);
  return value;
}
inline bool DocumentMetadata::has_data_properties_v1() const {
  return _internal_has_data_properties_v1();
}
inline void DocumentMetadata::clear_data_properties_v1() {
  if (_impl_.data_properties_v1_ != nullptr) _impl_.data_properties_v1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::TSP::DataPropertiesV1& DocumentMetadata::_internal_data_properties_v1() const {
  const ::TSP::DataPropertiesV1* p = _impl_.data_properties_v1_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSP::DataPropertiesV1&>(
      ::TSP::_DataPropertiesV1_default_instance_);
}
inline const ::TSP::DataPropertiesV1& DocumentMetadata::data_properties_v1() const {
  // @@protoc_insertion_point(field_get:TSP.DocumentMetadata.data_properties_v1)
  return _internal_data_properties_v1();
}
inline void DocumentMetadata::unsafe_arena_set_allocated_data_properties_v1(
    ::TSP::DataPropertiesV1* data_properties_v1) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_properties_v1_);
  }
  _impl_.data_properties_v1_ = data_properties_v1;
  if (data_properties_v1) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSP.DocumentMetadata.data_properties_v1)
}
inline ::TSP::DataPropertiesV1* DocumentMetadata::release_data_properties_v1() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::DataPropertiesV1* temp = _impl_.data_properties_v1_;
  _impl_.data_properties_v1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSP::DataPropertiesV1* DocumentMetadata::unsafe_arena_release_data_properties_v1() {
  // @@protoc_insertion_point(field_release:TSP.DocumentMetadata.data_properties_v1)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSP::DataPropertiesV1* temp = _impl_.data_properties_v1_;
  _impl_.data_properties_v1_ = nullptr;
  return temp;
}
inline ::TSP::DataPropertiesV1* DocumentMetadata::_internal_mutable_data_properties_v1() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.data_properties_v1_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSP::DataPropertiesV1>(GetArenaForAllocation());
    _impl_.data_properties_v1_ = p;
  }
  return _impl_.data_properties_v1_;
}
inline ::TSP::DataPropertiesV1* DocumentMetadata::mutable_data_properties_v1() {
  ::TSP::DataPropertiesV1* _msg = _internal_mutable_data_properties_v1();
  // @@protoc_insertion_point(field_mutable:TSP.DocumentMetadata.data_properties_v1)
  return _msg;
}
inline void DocumentMetadata::set_allocated_data_properties_v1(::TSP::DataPropertiesV1* data_properties_v1) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.data_properties_v1_;
  }
  if (data_properties_v1) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(data_properties_v1);
    if (message_arena != submessage_arena) {
      data_properties_v1 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data_properties_v1, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_properties_v1_ = data_properties_v1;
  // @@protoc_insertion_point(field_set_allocated:TSP.DocumentMetadata.data_properties_v1)
}

// -------------------------------------------------------------------

// SupportMetadata_DataCollaborationProperties

// required bytes digest = 1;
inline bool SupportMetadata_DataCollaborationProperties::_internal_has_digest() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SupportMetadata_DataCollaborationProperties::has_digest() const {
  return _internal_has_digest();
}
inline void SupportMetadata_DataCollaborationProperties::clear_digest() {
  _impl_.digest_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SupportMetadata_DataCollaborationProperties::digest() const {
  // @@protoc_insertion_point(field_get:TSP.SupportMetadata.DataCollaborationProperties.digest)
  return _internal_digest();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SupportMetadata_DataCollaborationProperties::set_digest(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.digest_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TSP.SupportMetadata.DataCollaborationProperties.digest)
}
inline std::string* SupportMetadata_DataCollaborationProperties::mutable_digest() {
  std::string* _s = _internal_mutable_digest();
  // @@protoc_insertion_point(field_mutable:TSP.SupportMetadata.DataCollaborationProperties.digest)
  return _s;
}
inline const std::string& SupportMetadata_DataCollaborationProperties::_internal_digest() const {
  return _impl_.digest_.Get();
}
inline void SupportMetadata_DataCollaborationProperties::_internal_set_digest(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.digest_.Set(value, GetArenaForAllocation());
}
inline std::string* SupportMetadata_DataCollaborationProperties::_internal_mutable_digest() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.digest_.Mutable(GetArenaForAllocation());
}
inline std::string* SupportMetadata_DataCollaborationProperties::release_digest() {
  // @@protoc_insertion_point(field_release:TSP.SupportMetadata.DataCollaborationProperties.digest)
  if (!_internal_has_digest()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.digest_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.digest_.IsDefault()) {
    _impl_.digest_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SupportMetadata_DataCollaborationProperties::set_allocated_digest(std::string* digest) {
  if (digest != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.digest_.SetAllocated(digest, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.digest_.IsDefault()) {
    _impl_.digest_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TSP.SupportMetadata.DataCollaborationProperties.digest)
}

// optional bool acknowledged_by_server = 2 [default = false];
inline bool SupportMetadata_DataCollaborationProperties::_internal_has_acknowledged_by_server() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SupportMetadata_DataCollaborationProperties::has_acknowledged_by_server() const {
  return _internal_has_acknowledged_by_server();
}
inline void SupportMetadata_DataCollaborationProperties::clear_acknowledged_by_server() {
  _impl_.acknowledged_by_server_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool SupportMetadata_DataCollaborationProperties::_internal_acknowledged_by_server() const {
  return _impl_.acknowledged_by_server_;
}
inline bool SupportMetadata_DataCollaborationProperties::acknowledged_by_server() const {
  // @@protoc_insertion_point(field_get:TSP.SupportMetadata.DataCollaborationProperties.acknowledged_by_server)
  return _internal_acknowledged_by_server();
}
inline void SupportMetadata_DataCollaborationProperties::_internal_set_acknowledged_by_server(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.acknowledged_by_server_ = value;
}
inline void SupportMetadata_DataCollaborationProperties::set_acknowledged_by_server(bool value) {
  _internal_set_acknowledged_by_server(value);
  // @@protoc_insertion_point(field_set:TSP.SupportMetadata.DataCollaborationProperties.acknowledged_by_server)
}

// optional bool materialized_on_server = 3 [default = false];
inline bool SupportMetadata_DataCollaborationProperties::_internal_has_materialized_on_server() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SupportMetadata_DataCollaborationProperties::has_materialized_on_server() const {
  return _internal_has_materialized_on_server();
}
inline void SupportMetadata_DataCollaborationProperties::clear_materialized_on_server() {
  _impl_.materialized_on_server_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool SupportMetadata_DataCollaborationProperties::_internal_materialized_on_server() const {
  return _impl_.materialized_on_server_;
}
inline bool SupportMetadata_DataCollaborationProperties::materialized_on_server() const {
  // @@protoc_insertion_point(field_get:TSP.SupportMetadata.DataCollaborationProperties.materialized_on_server)
  return _internal_materialized_on_server();
}
inline void SupportMetadata_DataCollaborationProperties::_internal_set_materialized_on_server(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.materialized_on_server_ = value;
}
inline void SupportMetadata_DataCollaborationProperties::set_materialized_on_server(bool value) {
  _internal_set_materialized_on_server(value);
  // @@protoc_insertion_point(field_set:TSP.SupportMetadata.DataCollaborationProperties.materialized_on_server)
}

// optional int32 revision_sequence_for_materialized_on_server = 5 [default = 0];
inline bool SupportMetadata_DataCollaborationProperties::_internal_has_revision_sequence_for_materialized_on_server() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool SupportMetadata_DataCollaborationProperties::has_revision_sequence_for_materialized_on_server() const {
  return _internal_has_revision_sequence_for_materialized_on_server();
}
inline void SupportMetadata_DataCollaborationProperties::clear_revision_sequence_for_materialized_on_server() {
  _impl_.revision_sequence_for_materialized_on_server_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline int32_t SupportMetadata_DataCollaborationProperties::_internal_revision_sequence_for_materialized_on_server() const {
  return _impl_.revision_sequence_for_materialized_on_server_;
}
inline int32_t SupportMetadata_DataCollaborationProperties::revision_sequence_for_materialized_on_server() const {
  // @@protoc_insertion_point(field_get:TSP.SupportMetadata.DataCollaborationProperties.revision_sequence_for_materialized_on_server)
  return _internal_revision_sequence_for_materialized_on_server();
}
inline void SupportMetadata_DataCollaborationProperties::_internal_set_revision_sequence_for_materialized_on_server(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.revision_sequence_for_materialized_on_server_ = value;
}
inline void SupportMetadata_DataCollaborationProperties::set_revision_sequence_for_materialized_on_server(int32_t value) {
  _internal_set_revision_sequence_for_materialized_on_server(value);
  // @@protoc_insertion_point(field_set:TSP.SupportMetadata.DataCollaborationProperties.revision_sequence_for_materialized_on_server)
}

// optional .TSP.DataUploadStatus upload_status = 4 [default = DataUploadStatus_Pending];
inline bool SupportMetadata_DataCollaborationProperties::_internal_has_upload_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool SupportMetadata_DataCollaborationProperties::has_upload_status() const {
  return _internal_has_upload_status();
}
inline void SupportMetadata_DataCollaborationProperties::clear_upload_status() {
  _impl_.upload_status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::TSP::DataUploadStatus SupportMetadata_DataCollaborationProperties::_internal_upload_status() const {
  return static_cast< ::TSP::DataUploadStatus >(_impl_.upload_status_);
}
inline ::TSP::DataUploadStatus SupportMetadata_DataCollaborationProperties::upload_status() const {
  // @@protoc_insertion_point(field_get:TSP.SupportMetadata.DataCollaborationProperties.upload_status)
  return _internal_upload_status();
}
inline void SupportMetadata_DataCollaborationProperties::_internal_set_upload_status(::TSP::DataUploadStatus value) {
  assert(::TSP::DataUploadStatus_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.upload_status_ = value;
}
inline void SupportMetadata_DataCollaborationProperties::set_upload_status(::TSP::DataUploadStatus value) {
  _internal_set_upload_status(value);
  // @@protoc_insertion_point(field_set:TSP.SupportMetadata.DataCollaborationProperties.upload_status)
}

// optional bool is_remote_data_ever = 6 [default = false];
inline bool SupportMetadata_DataCollaborationProperties::_internal_has_is_remote_data_ever() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SupportMetadata_DataCollaborationProperties::has_is_remote_data_ever() const {
  return _internal_has_is_remote_data_ever();
}
inline void SupportMetadata_DataCollaborationProperties::clear_is_remote_data_ever() {
  _impl_.is_remote_data_ever_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool SupportMetadata_DataCollaborationProperties::_internal_is_remote_data_ever() const {
  return _impl_.is_remote_data_ever_;
}
inline bool SupportMetadata_DataCollaborationProperties::is_remote_data_ever() const {
  // @@protoc_insertion_point(field_get:TSP.SupportMetadata.DataCollaborationProperties.is_remote_data_ever)
  return _internal_is_remote_data_ever();
}
inline void SupportMetadata_DataCollaborationProperties::_internal_set_is_remote_data_ever(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.is_remote_data_ever_ = value;
}
inline void SupportMetadata_DataCollaborationProperties::set_is_remote_data_ever(bool value) {
  _internal_set_is_remote_data_ever(value);
  // @@protoc_insertion_point(field_set:TSP.SupportMetadata.DataCollaborationProperties.is_remote_data_ever)
}

// optional int32 revision_sequence_for_acknowledged_by_server = 7 [default = 0];
inline bool SupportMetadata_DataCollaborationProperties::_internal_has_revision_sequence_for_acknowledged_by_server() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool SupportMetadata_DataCollaborationProperties::has_revision_sequence_for_acknowledged_by_server() const {
  return _internal_has_revision_sequence_for_acknowledged_by_server();
}
inline void SupportMetadata_DataCollaborationProperties::clear_revision_sequence_for_acknowledged_by_server() {
  _impl_.revision_sequence_for_acknowledged_by_server_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int32_t SupportMetadata_DataCollaborationProperties::_internal_revision_sequence_for_acknowledged_by_server() const {
  return _impl_.revision_sequence_for_acknowledged_by_server_;
}
inline int32_t SupportMetadata_DataCollaborationProperties::revision_sequence_for_acknowledged_by_server() const {
  // @@protoc_insertion_point(field_get:TSP.SupportMetadata.DataCollaborationProperties.revision_sequence_for_acknowledged_by_server)
  return _internal_revision_sequence_for_acknowledged_by_server();
}
inline void SupportMetadata_DataCollaborationProperties::_internal_set_revision_sequence_for_acknowledged_by_server(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.revision_sequence_for_acknowledged_by_server_ = value;
}
inline void SupportMetadata_DataCollaborationProperties::set_revision_sequence_for_acknowledged_by_server(int32_t value) {
  _internal_set_revision_sequence_for_acknowledged_by_server(value);
  // @@protoc_insertion_point(field_set:TSP.SupportMetadata.DataCollaborationProperties.revision_sequence_for_acknowledged_by_server)
}

// -------------------------------------------------------------------

// SupportMetadata

// optional bool is_in_collaboration_mode = 1;
inline bool SupportMetadata::_internal_has_is_in_collaboration_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SupportMetadata::has_is_in_collaboration_mode() const {
  return _internal_has_is_in_collaboration_mode();
}
inline void SupportMetadata::clear_is_in_collaboration_mode() {
  _impl_.is_in_collaboration_mode_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool SupportMetadata::_internal_is_in_collaboration_mode() const {
  return _impl_.is_in_collaboration_mode_;
}
inline bool SupportMetadata::is_in_collaboration_mode() const {
  // @@protoc_insertion_point(field_get:TSP.SupportMetadata.is_in_collaboration_mode)
  return _internal_is_in_collaboration_mode();
}
inline void SupportMetadata::_internal_set_is_in_collaboration_mode(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.is_in_collaboration_mode_ = value;
}
inline void SupportMetadata::set_is_in_collaboration_mode(bool value) {
  _internal_set_is_in_collaboration_mode(value);
  // @@protoc_insertion_point(field_set:TSP.SupportMetadata.is_in_collaboration_mode)
}

// repeated .TSP.SupportMetadata.DataCollaborationProperties data_collaboration_properties = 2;
inline int SupportMetadata::_internal_data_collaboration_properties_size() const {
  return _impl_.data_collaboration_properties_.size();
}
inline int SupportMetadata::data_collaboration_properties_size() const {
  return _internal_data_collaboration_properties_size();
}
inline void SupportMetadata::clear_data_collaboration_properties() {
  _impl_.data_collaboration_properties_.Clear();
}
inline ::TSP::SupportMetadata_DataCollaborationProperties* SupportMetadata::mutable_data_collaboration_properties(int index) {
  // @@protoc_insertion_point(field_mutable:TSP.SupportMetadata.data_collaboration_properties)
  return _impl_.data_collaboration_properties_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::SupportMetadata_DataCollaborationProperties >*
SupportMetadata::mutable_data_collaboration_properties() {
  // @@protoc_insertion_point(field_mutable_list:TSP.SupportMetadata.data_collaboration_properties)
  return &_impl_.data_collaboration_properties_;
}
inline const ::TSP::SupportMetadata_DataCollaborationProperties& SupportMetadata::_internal_data_collaboration_properties(int index) const {
  return _impl_.data_collaboration_properties_.Get(index);
}
inline const ::TSP::SupportMetadata_DataCollaborationProperties& SupportMetadata::data_collaboration_properties(int index) const {
  // @@protoc_insertion_point(field_get:TSP.SupportMetadata.data_collaboration_properties)
  return _internal_data_collaboration_properties(index);
}
inline ::TSP::SupportMetadata_DataCollaborationProperties* SupportMetadata::_internal_add_data_collaboration_properties() {
  return _impl_.data_collaboration_properties_.Add();
}
inline ::TSP::SupportMetadata_DataCollaborationProperties* SupportMetadata::add_data_collaboration_properties() {
  ::TSP::SupportMetadata_DataCollaborationProperties* _add = _internal_add_data_collaboration_properties();
  // @@protoc_insertion_point(field_add:TSP.SupportMetadata.data_collaboration_properties)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TSP::SupportMetadata_DataCollaborationProperties >&
SupportMetadata::data_collaboration_properties() const {
  // @@protoc_insertion_point(field_list:TSP.SupportMetadata.data_collaboration_properties)
  return _impl_.data_collaboration_properties_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TSP

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::TSP::FieldInfo_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSP::FieldInfo_Type>() {
  return ::TSP::FieldInfo_Type_descriptor();
}
template <> struct is_proto_enum< ::TSP::FieldInfo_UnknownFieldRule> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSP::FieldInfo_UnknownFieldRule>() {
  return ::TSP::FieldInfo_UnknownFieldRule_descriptor();
}
template <> struct is_proto_enum< ::TSP::FieldInfo_KnownFieldRule> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSP::FieldInfo_KnownFieldRule>() {
  return ::TSP::FieldInfo_KnownFieldRule_descriptor();
}
template <> struct is_proto_enum< ::TSP::PackageMetadata_PackageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSP::PackageMetadata_PackageType>() {
  return ::TSP::PackageMetadata_PackageType_descriptor();
}
template <> struct is_proto_enum< ::TSP::DataInfo_DownloadPriority> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TSP::DataInfo_DownloadPriority>() {
  return ::TSP::DataInfo_DownloadPriority_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_TSPArchiveMessages_2eproto
