// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSDArchives.sos.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_TSDArchives_2esos_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_TSDArchives_2esos_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "TSDArchives.pb.h"
#include "TSSArchives.sos.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_TSDArchives_2esos_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_TSDArchives_2esos_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TSDArchives_2esos_2eproto;
namespace TSDSOS {
class BaseShapeStylePropertyChangeSetArchive;
struct BaseShapeStylePropertyChangeSetArchiveDefaultTypeInternal;
extern BaseShapeStylePropertyChangeSetArchiveDefaultTypeInternal _BaseShapeStylePropertyChangeSetArchive_default_instance_;
class MediaStylePropertyChangeSetArchive;
struct MediaStylePropertyChangeSetArchiveDefaultTypeInternal;
extern MediaStylePropertyChangeSetArchiveDefaultTypeInternal _MediaStylePropertyChangeSetArchive_default_instance_;
class SpecFillArchive;
struct SpecFillArchiveDefaultTypeInternal;
extern SpecFillArchiveDefaultTypeInternal _SpecFillArchive_default_instance_;
class SpecLineEndArchive;
struct SpecLineEndArchiveDefaultTypeInternal;
extern SpecLineEndArchiveDefaultTypeInternal _SpecLineEndArchive_default_instance_;
class SpecReflectionArchive;
struct SpecReflectionArchiveDefaultTypeInternal;
extern SpecReflectionArchiveDefaultTypeInternal _SpecReflectionArchive_default_instance_;
class SpecSetFillArchive;
struct SpecSetFillArchiveDefaultTypeInternal;
extern SpecSetFillArchiveDefaultTypeInternal _SpecSetFillArchive_default_instance_;
class SpecSetLineEndArchive;
struct SpecSetLineEndArchiveDefaultTypeInternal;
extern SpecSetLineEndArchiveDefaultTypeInternal _SpecSetLineEndArchive_default_instance_;
class SpecSetReflectionArchive;
struct SpecSetReflectionArchiveDefaultTypeInternal;
extern SpecSetReflectionArchiveDefaultTypeInternal _SpecSetReflectionArchive_default_instance_;
class SpecSetShadowArchive;
struct SpecSetShadowArchiveDefaultTypeInternal;
extern SpecSetShadowArchiveDefaultTypeInternal _SpecSetShadowArchive_default_instance_;
class SpecSetStrokeArchive;
struct SpecSetStrokeArchiveDefaultTypeInternal;
extern SpecSetStrokeArchiveDefaultTypeInternal _SpecSetStrokeArchive_default_instance_;
class SpecShadowArchive;
struct SpecShadowArchiveDefaultTypeInternal;
extern SpecShadowArchiveDefaultTypeInternal _SpecShadowArchive_default_instance_;
class SpecStrokeArchive;
struct SpecStrokeArchiveDefaultTypeInternal;
extern SpecStrokeArchiveDefaultTypeInternal _SpecStrokeArchive_default_instance_;
}  // namespace TSDSOS
PROTOBUF_NAMESPACE_OPEN
template<> ::TSDSOS::BaseShapeStylePropertyChangeSetArchive* Arena::CreateMaybeMessage<::TSDSOS::BaseShapeStylePropertyChangeSetArchive>(Arena*);
template<> ::TSDSOS::MediaStylePropertyChangeSetArchive* Arena::CreateMaybeMessage<::TSDSOS::MediaStylePropertyChangeSetArchive>(Arena*);
template<> ::TSDSOS::SpecFillArchive* Arena::CreateMaybeMessage<::TSDSOS::SpecFillArchive>(Arena*);
template<> ::TSDSOS::SpecLineEndArchive* Arena::CreateMaybeMessage<::TSDSOS::SpecLineEndArchive>(Arena*);
template<> ::TSDSOS::SpecReflectionArchive* Arena::CreateMaybeMessage<::TSDSOS::SpecReflectionArchive>(Arena*);
template<> ::TSDSOS::SpecSetFillArchive* Arena::CreateMaybeMessage<::TSDSOS::SpecSetFillArchive>(Arena*);
template<> ::TSDSOS::SpecSetLineEndArchive* Arena::CreateMaybeMessage<::TSDSOS::SpecSetLineEndArchive>(Arena*);
template<> ::TSDSOS::SpecSetReflectionArchive* Arena::CreateMaybeMessage<::TSDSOS::SpecSetReflectionArchive>(Arena*);
template<> ::TSDSOS::SpecSetShadowArchive* Arena::CreateMaybeMessage<::TSDSOS::SpecSetShadowArchive>(Arena*);
template<> ::TSDSOS::SpecSetStrokeArchive* Arena::CreateMaybeMessage<::TSDSOS::SpecSetStrokeArchive>(Arena*);
template<> ::TSDSOS::SpecShadowArchive* Arena::CreateMaybeMessage<::TSDSOS::SpecShadowArchive>(Arena*);
template<> ::TSDSOS::SpecStrokeArchive* Arena::CreateMaybeMessage<::TSDSOS::SpecStrokeArchive>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace TSDSOS {

// ===================================================================

class SpecSetFillArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.SpecSetFillArchive) */ {
 public:
  inline SpecSetFillArchive() : SpecSetFillArchive(nullptr) {}
  ~SpecSetFillArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecSetFillArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetFillArchive(const SpecSetFillArchive& from);
  SpecSetFillArchive(SpecSetFillArchive&& from) noexcept
    : SpecSetFillArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetFillArchive& operator=(const SpecSetFillArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetFillArchive& operator=(SpecSetFillArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetFillArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetFillArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetFillArchive*>(
               &_SpecSetFillArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SpecSetFillArchive& a, SpecSetFillArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetFillArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetFillArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecSetFillArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecSetFillArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetFillArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecSetFillArchive& from) {
    SpecSetFillArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetFillArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.SpecSetFillArchive";
  }
  protected:
  explicit SpecSetFillArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFillFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // optional .TSD.FillArchive fill = 1;
  bool has_fill() const;
  private:
  bool _internal_has_fill() const;
  public:
  void clear_fill();
  const ::TSD::FillArchive& fill() const;
  PROTOBUF_NODISCARD ::TSD::FillArchive* release_fill();
  ::TSD::FillArchive* mutable_fill();
  void set_allocated_fill(::TSD::FillArchive* fill);
  private:
  const ::TSD::FillArchive& _internal_fill() const;
  ::TSD::FillArchive* _internal_mutable_fill();
  public:
  void unsafe_arena_set_allocated_fill(
      ::TSD::FillArchive* fill);
  ::TSD::FillArchive* unsafe_arena_release_fill();

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSDSOS.SpecSetFillArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSD::FillArchive* fill_;
    bool unset_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecSetLineEndArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.SpecSetLineEndArchive) */ {
 public:
  inline SpecSetLineEndArchive() : SpecSetLineEndArchive(nullptr) {}
  ~SpecSetLineEndArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecSetLineEndArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetLineEndArchive(const SpecSetLineEndArchive& from);
  SpecSetLineEndArchive(SpecSetLineEndArchive&& from) noexcept
    : SpecSetLineEndArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetLineEndArchive& operator=(const SpecSetLineEndArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetLineEndArchive& operator=(SpecSetLineEndArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetLineEndArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetLineEndArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetLineEndArchive*>(
               &_SpecSetLineEndArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SpecSetLineEndArchive& a, SpecSetLineEndArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetLineEndArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetLineEndArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecSetLineEndArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecSetLineEndArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetLineEndArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecSetLineEndArchive& from) {
    SpecSetLineEndArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetLineEndArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.SpecSetLineEndArchive";
  }
  protected:
  explicit SpecSetLineEndArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLineEndFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // optional .TSD.LineEndArchive line_end = 1;
  bool has_line_end() const;
  private:
  bool _internal_has_line_end() const;
  public:
  void clear_line_end();
  const ::TSD::LineEndArchive& line_end() const;
  PROTOBUF_NODISCARD ::TSD::LineEndArchive* release_line_end();
  ::TSD::LineEndArchive* mutable_line_end();
  void set_allocated_line_end(::TSD::LineEndArchive* line_end);
  private:
  const ::TSD::LineEndArchive& _internal_line_end() const;
  ::TSD::LineEndArchive* _internal_mutable_line_end();
  public:
  void unsafe_arena_set_allocated_line_end(
      ::TSD::LineEndArchive* line_end);
  ::TSD::LineEndArchive* unsafe_arena_release_line_end();

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSDSOS.SpecSetLineEndArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSD::LineEndArchive* line_end_;
    bool unset_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecSetReflectionArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.SpecSetReflectionArchive) */ {
 public:
  inline SpecSetReflectionArchive() : SpecSetReflectionArchive(nullptr) {}
  ~SpecSetReflectionArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecSetReflectionArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetReflectionArchive(const SpecSetReflectionArchive& from);
  SpecSetReflectionArchive(SpecSetReflectionArchive&& from) noexcept
    : SpecSetReflectionArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetReflectionArchive& operator=(const SpecSetReflectionArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetReflectionArchive& operator=(SpecSetReflectionArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetReflectionArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetReflectionArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetReflectionArchive*>(
               &_SpecSetReflectionArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SpecSetReflectionArchive& a, SpecSetReflectionArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetReflectionArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetReflectionArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecSetReflectionArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecSetReflectionArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetReflectionArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecSetReflectionArchive& from) {
    SpecSetReflectionArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetReflectionArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.SpecSetReflectionArchive";
  }
  protected:
  explicit SpecSetReflectionArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReflectionFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // optional .TSD.ReflectionArchive reflection = 1;
  bool has_reflection() const;
  private:
  bool _internal_has_reflection() const;
  public:
  void clear_reflection();
  const ::TSD::ReflectionArchive& reflection() const;
  PROTOBUF_NODISCARD ::TSD::ReflectionArchive* release_reflection();
  ::TSD::ReflectionArchive* mutable_reflection();
  void set_allocated_reflection(::TSD::ReflectionArchive* reflection);
  private:
  const ::TSD::ReflectionArchive& _internal_reflection() const;
  ::TSD::ReflectionArchive* _internal_mutable_reflection();
  public:
  void unsafe_arena_set_allocated_reflection(
      ::TSD::ReflectionArchive* reflection);
  ::TSD::ReflectionArchive* unsafe_arena_release_reflection();

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSDSOS.SpecSetReflectionArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSD::ReflectionArchive* reflection_;
    bool unset_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecSetShadowArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.SpecSetShadowArchive) */ {
 public:
  inline SpecSetShadowArchive() : SpecSetShadowArchive(nullptr) {}
  ~SpecSetShadowArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecSetShadowArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetShadowArchive(const SpecSetShadowArchive& from);
  SpecSetShadowArchive(SpecSetShadowArchive&& from) noexcept
    : SpecSetShadowArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetShadowArchive& operator=(const SpecSetShadowArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetShadowArchive& operator=(SpecSetShadowArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetShadowArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetShadowArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetShadowArchive*>(
               &_SpecSetShadowArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SpecSetShadowArchive& a, SpecSetShadowArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetShadowArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetShadowArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecSetShadowArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecSetShadowArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetShadowArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecSetShadowArchive& from) {
    SpecSetShadowArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetShadowArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.SpecSetShadowArchive";
  }
  protected:
  explicit SpecSetShadowArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShadowFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // optional .TSD.ShadowArchive shadow = 1;
  bool has_shadow() const;
  private:
  bool _internal_has_shadow() const;
  public:
  void clear_shadow();
  const ::TSD::ShadowArchive& shadow() const;
  PROTOBUF_NODISCARD ::TSD::ShadowArchive* release_shadow();
  ::TSD::ShadowArchive* mutable_shadow();
  void set_allocated_shadow(::TSD::ShadowArchive* shadow);
  private:
  const ::TSD::ShadowArchive& _internal_shadow() const;
  ::TSD::ShadowArchive* _internal_mutable_shadow();
  public:
  void unsafe_arena_set_allocated_shadow(
      ::TSD::ShadowArchive* shadow);
  ::TSD::ShadowArchive* unsafe_arena_release_shadow();

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSDSOS.SpecSetShadowArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSD::ShadowArchive* shadow_;
    bool unset_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecSetStrokeArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.SpecSetStrokeArchive) */ {
 public:
  inline SpecSetStrokeArchive() : SpecSetStrokeArchive(nullptr) {}
  ~SpecSetStrokeArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecSetStrokeArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecSetStrokeArchive(const SpecSetStrokeArchive& from);
  SpecSetStrokeArchive(SpecSetStrokeArchive&& from) noexcept
    : SpecSetStrokeArchive() {
    *this = ::std::move(from);
  }

  inline SpecSetStrokeArchive& operator=(const SpecSetStrokeArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecSetStrokeArchive& operator=(SpecSetStrokeArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecSetStrokeArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecSetStrokeArchive* internal_default_instance() {
    return reinterpret_cast<const SpecSetStrokeArchive*>(
               &_SpecSetStrokeArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SpecSetStrokeArchive& a, SpecSetStrokeArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecSetStrokeArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecSetStrokeArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecSetStrokeArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecSetStrokeArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecSetStrokeArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecSetStrokeArchive& from) {
    SpecSetStrokeArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecSetStrokeArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.SpecSetStrokeArchive";
  }
  protected:
  explicit SpecSetStrokeArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrokeFieldNumber = 1,
    kUnsetFieldNumber = 2,
  };
  // optional .TSD.StrokeArchive stroke = 1;
  bool has_stroke() const;
  private:
  bool _internal_has_stroke() const;
  public:
  void clear_stroke();
  const ::TSD::StrokeArchive& stroke() const;
  PROTOBUF_NODISCARD ::TSD::StrokeArchive* release_stroke();
  ::TSD::StrokeArchive* mutable_stroke();
  void set_allocated_stroke(::TSD::StrokeArchive* stroke);
  private:
  const ::TSD::StrokeArchive& _internal_stroke() const;
  ::TSD::StrokeArchive* _internal_mutable_stroke();
  public:
  void unsafe_arena_set_allocated_stroke(
      ::TSD::StrokeArchive* stroke);
  ::TSD::StrokeArchive* unsafe_arena_release_stroke();

  // required bool unset = 2;
  bool has_unset() const;
  private:
  bool _internal_has_unset() const;
  public:
  void clear_unset();
  bool unset() const;
  void set_unset(bool value);
  private:
  bool _internal_unset() const;
  void _internal_set_unset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSDSOS.SpecSetStrokeArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSD::StrokeArchive* stroke_;
    bool unset_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecFillArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.SpecFillArchive) */ {
 public:
  inline SpecFillArchive() : SpecFillArchive(nullptr) {}
  ~SpecFillArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecFillArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecFillArchive(const SpecFillArchive& from);
  SpecFillArchive(SpecFillArchive&& from) noexcept
    : SpecFillArchive() {
    *this = ::std::move(from);
  }

  inline SpecFillArchive& operator=(const SpecFillArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecFillArchive& operator=(SpecFillArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecFillArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecFillArchive* internal_default_instance() {
    return reinterpret_cast<const SpecFillArchive*>(
               &_SpecFillArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SpecFillArchive& a, SpecFillArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecFillArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecFillArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecFillArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecFillArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecFillArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecFillArchive& from) {
    SpecFillArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecFillArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.SpecFillArchive";
  }
  protected:
  explicit SpecFillArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecColorFillSetColorFieldNumber = 1,
    kSpecGradientFillSetAngleFieldNumber = 2,
    kSpecImageFillSetTechniqueFieldNumber = 3,
    kSpecSetFillFieldNumber = 4,
  };
  // optional .TSD.SpecColorFillSetColorArchive spec_color_fill_set_color = 1;
  bool has_spec_color_fill_set_color() const;
  private:
  bool _internal_has_spec_color_fill_set_color() const;
  public:
  void clear_spec_color_fill_set_color();
  const ::TSD::SpecColorFillSetColorArchive& spec_color_fill_set_color() const;
  PROTOBUF_NODISCARD ::TSD::SpecColorFillSetColorArchive* release_spec_color_fill_set_color();
  ::TSD::SpecColorFillSetColorArchive* mutable_spec_color_fill_set_color();
  void set_allocated_spec_color_fill_set_color(::TSD::SpecColorFillSetColorArchive* spec_color_fill_set_color);
  private:
  const ::TSD::SpecColorFillSetColorArchive& _internal_spec_color_fill_set_color() const;
  ::TSD::SpecColorFillSetColorArchive* _internal_mutable_spec_color_fill_set_color();
  public:
  void unsafe_arena_set_allocated_spec_color_fill_set_color(
      ::TSD::SpecColorFillSetColorArchive* spec_color_fill_set_color);
  ::TSD::SpecColorFillSetColorArchive* unsafe_arena_release_spec_color_fill_set_color();

  // optional .TSD.SpecGradientFillSetAngleArchive spec_gradient_fill_set_angle = 2;
  bool has_spec_gradient_fill_set_angle() const;
  private:
  bool _internal_has_spec_gradient_fill_set_angle() const;
  public:
  void clear_spec_gradient_fill_set_angle();
  const ::TSD::SpecGradientFillSetAngleArchive& spec_gradient_fill_set_angle() const;
  PROTOBUF_NODISCARD ::TSD::SpecGradientFillSetAngleArchive* release_spec_gradient_fill_set_angle();
  ::TSD::SpecGradientFillSetAngleArchive* mutable_spec_gradient_fill_set_angle();
  void set_allocated_spec_gradient_fill_set_angle(::TSD::SpecGradientFillSetAngleArchive* spec_gradient_fill_set_angle);
  private:
  const ::TSD::SpecGradientFillSetAngleArchive& _internal_spec_gradient_fill_set_angle() const;
  ::TSD::SpecGradientFillSetAngleArchive* _internal_mutable_spec_gradient_fill_set_angle();
  public:
  void unsafe_arena_set_allocated_spec_gradient_fill_set_angle(
      ::TSD::SpecGradientFillSetAngleArchive* spec_gradient_fill_set_angle);
  ::TSD::SpecGradientFillSetAngleArchive* unsafe_arena_release_spec_gradient_fill_set_angle();

  // optional .TSD.SpecImageFillSetTechniqueArchive spec_image_fill_set_technique = 3;
  bool has_spec_image_fill_set_technique() const;
  private:
  bool _internal_has_spec_image_fill_set_technique() const;
  public:
  void clear_spec_image_fill_set_technique();
  const ::TSD::SpecImageFillSetTechniqueArchive& spec_image_fill_set_technique() const;
  PROTOBUF_NODISCARD ::TSD::SpecImageFillSetTechniqueArchive* release_spec_image_fill_set_technique();
  ::TSD::SpecImageFillSetTechniqueArchive* mutable_spec_image_fill_set_technique();
  void set_allocated_spec_image_fill_set_technique(::TSD::SpecImageFillSetTechniqueArchive* spec_image_fill_set_technique);
  private:
  const ::TSD::SpecImageFillSetTechniqueArchive& _internal_spec_image_fill_set_technique() const;
  ::TSD::SpecImageFillSetTechniqueArchive* _internal_mutable_spec_image_fill_set_technique();
  public:
  void unsafe_arena_set_allocated_spec_image_fill_set_technique(
      ::TSD::SpecImageFillSetTechniqueArchive* spec_image_fill_set_technique);
  ::TSD::SpecImageFillSetTechniqueArchive* unsafe_arena_release_spec_image_fill_set_technique();

  // optional .TSDSOS.SpecSetFillArchive spec_set_fill = 4;
  bool has_spec_set_fill() const;
  private:
  bool _internal_has_spec_set_fill() const;
  public:
  void clear_spec_set_fill();
  const ::TSDSOS::SpecSetFillArchive& spec_set_fill() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecSetFillArchive* release_spec_set_fill();
  ::TSDSOS::SpecSetFillArchive* mutable_spec_set_fill();
  void set_allocated_spec_set_fill(::TSDSOS::SpecSetFillArchive* spec_set_fill);
  private:
  const ::TSDSOS::SpecSetFillArchive& _internal_spec_set_fill() const;
  ::TSDSOS::SpecSetFillArchive* _internal_mutable_spec_set_fill();
  public:
  void unsafe_arena_set_allocated_spec_set_fill(
      ::TSDSOS::SpecSetFillArchive* spec_set_fill);
  ::TSDSOS::SpecSetFillArchive* unsafe_arena_release_spec_set_fill();

  // @@protoc_insertion_point(class_scope:TSDSOS.SpecFillArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSD::SpecColorFillSetColorArchive* spec_color_fill_set_color_;
    ::TSD::SpecGradientFillSetAngleArchive* spec_gradient_fill_set_angle_;
    ::TSD::SpecImageFillSetTechniqueArchive* spec_image_fill_set_technique_;
    ::TSDSOS::SpecSetFillArchive* spec_set_fill_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecLineEndArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.SpecLineEndArchive) */ {
 public:
  inline SpecLineEndArchive() : SpecLineEndArchive(nullptr) {}
  ~SpecLineEndArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecLineEndArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecLineEndArchive(const SpecLineEndArchive& from);
  SpecLineEndArchive(SpecLineEndArchive&& from) noexcept
    : SpecLineEndArchive() {
    *this = ::std::move(from);
  }

  inline SpecLineEndArchive& operator=(const SpecLineEndArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecLineEndArchive& operator=(SpecLineEndArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecLineEndArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecLineEndArchive* internal_default_instance() {
    return reinterpret_cast<const SpecLineEndArchive*>(
               &_SpecLineEndArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SpecLineEndArchive& a, SpecLineEndArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecLineEndArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecLineEndArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecLineEndArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecLineEndArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecLineEndArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecLineEndArchive& from) {
    SpecLineEndArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecLineEndArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.SpecLineEndArchive";
  }
  protected:
  explicit SpecLineEndArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecSetLineEndFieldNumber = 1,
  };
  // optional .TSDSOS.SpecSetLineEndArchive spec_set_line_end = 1;
  bool has_spec_set_line_end() const;
  private:
  bool _internal_has_spec_set_line_end() const;
  public:
  void clear_spec_set_line_end();
  const ::TSDSOS::SpecSetLineEndArchive& spec_set_line_end() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecSetLineEndArchive* release_spec_set_line_end();
  ::TSDSOS::SpecSetLineEndArchive* mutable_spec_set_line_end();
  void set_allocated_spec_set_line_end(::TSDSOS::SpecSetLineEndArchive* spec_set_line_end);
  private:
  const ::TSDSOS::SpecSetLineEndArchive& _internal_spec_set_line_end() const;
  ::TSDSOS::SpecSetLineEndArchive* _internal_mutable_spec_set_line_end();
  public:
  void unsafe_arena_set_allocated_spec_set_line_end(
      ::TSDSOS::SpecSetLineEndArchive* spec_set_line_end);
  ::TSDSOS::SpecSetLineEndArchive* unsafe_arena_release_spec_set_line_end();

  // @@protoc_insertion_point(class_scope:TSDSOS.SpecLineEndArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSDSOS::SpecSetLineEndArchive* spec_set_line_end_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecReflectionArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.SpecReflectionArchive) */ {
 public:
  inline SpecReflectionArchive() : SpecReflectionArchive(nullptr) {}
  ~SpecReflectionArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecReflectionArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecReflectionArchive(const SpecReflectionArchive& from);
  SpecReflectionArchive(SpecReflectionArchive&& from) noexcept
    : SpecReflectionArchive() {
    *this = ::std::move(from);
  }

  inline SpecReflectionArchive& operator=(const SpecReflectionArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecReflectionArchive& operator=(SpecReflectionArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecReflectionArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecReflectionArchive* internal_default_instance() {
    return reinterpret_cast<const SpecReflectionArchive*>(
               &_SpecReflectionArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SpecReflectionArchive& a, SpecReflectionArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecReflectionArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecReflectionArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecReflectionArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecReflectionArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecReflectionArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecReflectionArchive& from) {
    SpecReflectionArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecReflectionArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.SpecReflectionArchive";
  }
  protected:
  explicit SpecReflectionArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecReflectionSetOpacityFieldNumber = 1,
    kSpecSetReflectionFieldNumber = 2,
  };
  // optional .TSD.SpecReflectionSetOpacityArchive spec_reflection_set_opacity = 1;
  bool has_spec_reflection_set_opacity() const;
  private:
  bool _internal_has_spec_reflection_set_opacity() const;
  public:
  void clear_spec_reflection_set_opacity();
  const ::TSD::SpecReflectionSetOpacityArchive& spec_reflection_set_opacity() const;
  PROTOBUF_NODISCARD ::TSD::SpecReflectionSetOpacityArchive* release_spec_reflection_set_opacity();
  ::TSD::SpecReflectionSetOpacityArchive* mutable_spec_reflection_set_opacity();
  void set_allocated_spec_reflection_set_opacity(::TSD::SpecReflectionSetOpacityArchive* spec_reflection_set_opacity);
  private:
  const ::TSD::SpecReflectionSetOpacityArchive& _internal_spec_reflection_set_opacity() const;
  ::TSD::SpecReflectionSetOpacityArchive* _internal_mutable_spec_reflection_set_opacity();
  public:
  void unsafe_arena_set_allocated_spec_reflection_set_opacity(
      ::TSD::SpecReflectionSetOpacityArchive* spec_reflection_set_opacity);
  ::TSD::SpecReflectionSetOpacityArchive* unsafe_arena_release_spec_reflection_set_opacity();

  // optional .TSDSOS.SpecSetReflectionArchive spec_set_reflection = 2;
  bool has_spec_set_reflection() const;
  private:
  bool _internal_has_spec_set_reflection() const;
  public:
  void clear_spec_set_reflection();
  const ::TSDSOS::SpecSetReflectionArchive& spec_set_reflection() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecSetReflectionArchive* release_spec_set_reflection();
  ::TSDSOS::SpecSetReflectionArchive* mutable_spec_set_reflection();
  void set_allocated_spec_set_reflection(::TSDSOS::SpecSetReflectionArchive* spec_set_reflection);
  private:
  const ::TSDSOS::SpecSetReflectionArchive& _internal_spec_set_reflection() const;
  ::TSDSOS::SpecSetReflectionArchive* _internal_mutable_spec_set_reflection();
  public:
  void unsafe_arena_set_allocated_spec_set_reflection(
      ::TSDSOS::SpecSetReflectionArchive* spec_set_reflection);
  ::TSDSOS::SpecSetReflectionArchive* unsafe_arena_release_spec_set_reflection();

  // @@protoc_insertion_point(class_scope:TSDSOS.SpecReflectionArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSD::SpecReflectionSetOpacityArchive* spec_reflection_set_opacity_;
    ::TSDSOS::SpecSetReflectionArchive* spec_set_reflection_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecShadowArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.SpecShadowArchive) */ {
 public:
  inline SpecShadowArchive() : SpecShadowArchive(nullptr) {}
  ~SpecShadowArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecShadowArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecShadowArchive(const SpecShadowArchive& from);
  SpecShadowArchive(SpecShadowArchive&& from) noexcept
    : SpecShadowArchive() {
    *this = ::std::move(from);
  }

  inline SpecShadowArchive& operator=(const SpecShadowArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecShadowArchive& operator=(SpecShadowArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecShadowArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecShadowArchive* internal_default_instance() {
    return reinterpret_cast<const SpecShadowArchive*>(
               &_SpecShadowArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SpecShadowArchive& a, SpecShadowArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecShadowArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecShadowArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecShadowArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecShadowArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecShadowArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecShadowArchive& from) {
    SpecShadowArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecShadowArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.SpecShadowArchive";
  }
  protected:
  explicit SpecShadowArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecSetShadowFieldNumber = 1,
    kSpecShadowSetAngleFieldNumber = 2,
    kSpecShadowSetColorFieldNumber = 3,
    kSpecShadowSetOffsetFieldNumber = 4,
    kSpecShadowSetOpacityFieldNumber = 5,
    kSpecShadowSetRadiusFieldNumber = 6,
  };
  // optional .TSDSOS.SpecSetShadowArchive spec_set_shadow = 1;
  bool has_spec_set_shadow() const;
  private:
  bool _internal_has_spec_set_shadow() const;
  public:
  void clear_spec_set_shadow();
  const ::TSDSOS::SpecSetShadowArchive& spec_set_shadow() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecSetShadowArchive* release_spec_set_shadow();
  ::TSDSOS::SpecSetShadowArchive* mutable_spec_set_shadow();
  void set_allocated_spec_set_shadow(::TSDSOS::SpecSetShadowArchive* spec_set_shadow);
  private:
  const ::TSDSOS::SpecSetShadowArchive& _internal_spec_set_shadow() const;
  ::TSDSOS::SpecSetShadowArchive* _internal_mutable_spec_set_shadow();
  public:
  void unsafe_arena_set_allocated_spec_set_shadow(
      ::TSDSOS::SpecSetShadowArchive* spec_set_shadow);
  ::TSDSOS::SpecSetShadowArchive* unsafe_arena_release_spec_set_shadow();

  // optional .TSD.SpecShadowSetAngleArchive spec_shadow_set_angle = 2;
  bool has_spec_shadow_set_angle() const;
  private:
  bool _internal_has_spec_shadow_set_angle() const;
  public:
  void clear_spec_shadow_set_angle();
  const ::TSD::SpecShadowSetAngleArchive& spec_shadow_set_angle() const;
  PROTOBUF_NODISCARD ::TSD::SpecShadowSetAngleArchive* release_spec_shadow_set_angle();
  ::TSD::SpecShadowSetAngleArchive* mutable_spec_shadow_set_angle();
  void set_allocated_spec_shadow_set_angle(::TSD::SpecShadowSetAngleArchive* spec_shadow_set_angle);
  private:
  const ::TSD::SpecShadowSetAngleArchive& _internal_spec_shadow_set_angle() const;
  ::TSD::SpecShadowSetAngleArchive* _internal_mutable_spec_shadow_set_angle();
  public:
  void unsafe_arena_set_allocated_spec_shadow_set_angle(
      ::TSD::SpecShadowSetAngleArchive* spec_shadow_set_angle);
  ::TSD::SpecShadowSetAngleArchive* unsafe_arena_release_spec_shadow_set_angle();

  // optional .TSD.SpecShadowSetColorArchive spec_shadow_set_color = 3;
  bool has_spec_shadow_set_color() const;
  private:
  bool _internal_has_spec_shadow_set_color() const;
  public:
  void clear_spec_shadow_set_color();
  const ::TSD::SpecShadowSetColorArchive& spec_shadow_set_color() const;
  PROTOBUF_NODISCARD ::TSD::SpecShadowSetColorArchive* release_spec_shadow_set_color();
  ::TSD::SpecShadowSetColorArchive* mutable_spec_shadow_set_color();
  void set_allocated_spec_shadow_set_color(::TSD::SpecShadowSetColorArchive* spec_shadow_set_color);
  private:
  const ::TSD::SpecShadowSetColorArchive& _internal_spec_shadow_set_color() const;
  ::TSD::SpecShadowSetColorArchive* _internal_mutable_spec_shadow_set_color();
  public:
  void unsafe_arena_set_allocated_spec_shadow_set_color(
      ::TSD::SpecShadowSetColorArchive* spec_shadow_set_color);
  ::TSD::SpecShadowSetColorArchive* unsafe_arena_release_spec_shadow_set_color();

  // optional .TSD.SpecShadowSetOffsetArchive spec_shadow_set_offset = 4;
  bool has_spec_shadow_set_offset() const;
  private:
  bool _internal_has_spec_shadow_set_offset() const;
  public:
  void clear_spec_shadow_set_offset();
  const ::TSD::SpecShadowSetOffsetArchive& spec_shadow_set_offset() const;
  PROTOBUF_NODISCARD ::TSD::SpecShadowSetOffsetArchive* release_spec_shadow_set_offset();
  ::TSD::SpecShadowSetOffsetArchive* mutable_spec_shadow_set_offset();
  void set_allocated_spec_shadow_set_offset(::TSD::SpecShadowSetOffsetArchive* spec_shadow_set_offset);
  private:
  const ::TSD::SpecShadowSetOffsetArchive& _internal_spec_shadow_set_offset() const;
  ::TSD::SpecShadowSetOffsetArchive* _internal_mutable_spec_shadow_set_offset();
  public:
  void unsafe_arena_set_allocated_spec_shadow_set_offset(
      ::TSD::SpecShadowSetOffsetArchive* spec_shadow_set_offset);
  ::TSD::SpecShadowSetOffsetArchive* unsafe_arena_release_spec_shadow_set_offset();

  // optional .TSD.SpecShadowSetOpacityArchive spec_shadow_set_opacity = 5;
  bool has_spec_shadow_set_opacity() const;
  private:
  bool _internal_has_spec_shadow_set_opacity() const;
  public:
  void clear_spec_shadow_set_opacity();
  const ::TSD::SpecShadowSetOpacityArchive& spec_shadow_set_opacity() const;
  PROTOBUF_NODISCARD ::TSD::SpecShadowSetOpacityArchive* release_spec_shadow_set_opacity();
  ::TSD::SpecShadowSetOpacityArchive* mutable_spec_shadow_set_opacity();
  void set_allocated_spec_shadow_set_opacity(::TSD::SpecShadowSetOpacityArchive* spec_shadow_set_opacity);
  private:
  const ::TSD::SpecShadowSetOpacityArchive& _internal_spec_shadow_set_opacity() const;
  ::TSD::SpecShadowSetOpacityArchive* _internal_mutable_spec_shadow_set_opacity();
  public:
  void unsafe_arena_set_allocated_spec_shadow_set_opacity(
      ::TSD::SpecShadowSetOpacityArchive* spec_shadow_set_opacity);
  ::TSD::SpecShadowSetOpacityArchive* unsafe_arena_release_spec_shadow_set_opacity();

  // optional .TSD.SpecShadowSetRadiusArchive spec_shadow_set_radius = 6;
  bool has_spec_shadow_set_radius() const;
  private:
  bool _internal_has_spec_shadow_set_radius() const;
  public:
  void clear_spec_shadow_set_radius();
  const ::TSD::SpecShadowSetRadiusArchive& spec_shadow_set_radius() const;
  PROTOBUF_NODISCARD ::TSD::SpecShadowSetRadiusArchive* release_spec_shadow_set_radius();
  ::TSD::SpecShadowSetRadiusArchive* mutable_spec_shadow_set_radius();
  void set_allocated_spec_shadow_set_radius(::TSD::SpecShadowSetRadiusArchive* spec_shadow_set_radius);
  private:
  const ::TSD::SpecShadowSetRadiusArchive& _internal_spec_shadow_set_radius() const;
  ::TSD::SpecShadowSetRadiusArchive* _internal_mutable_spec_shadow_set_radius();
  public:
  void unsafe_arena_set_allocated_spec_shadow_set_radius(
      ::TSD::SpecShadowSetRadiusArchive* spec_shadow_set_radius);
  ::TSD::SpecShadowSetRadiusArchive* unsafe_arena_release_spec_shadow_set_radius();

  // @@protoc_insertion_point(class_scope:TSDSOS.SpecShadowArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSDSOS::SpecSetShadowArchive* spec_set_shadow_;
    ::TSD::SpecShadowSetAngleArchive* spec_shadow_set_angle_;
    ::TSD::SpecShadowSetColorArchive* spec_shadow_set_color_;
    ::TSD::SpecShadowSetOffsetArchive* spec_shadow_set_offset_;
    ::TSD::SpecShadowSetOpacityArchive* spec_shadow_set_opacity_;
    ::TSD::SpecShadowSetRadiusArchive* spec_shadow_set_radius_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class SpecStrokeArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.SpecStrokeArchive) */ {
 public:
  inline SpecStrokeArchive() : SpecStrokeArchive(nullptr) {}
  ~SpecStrokeArchive() override;
  explicit PROTOBUF_CONSTEXPR SpecStrokeArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SpecStrokeArchive(const SpecStrokeArchive& from);
  SpecStrokeArchive(SpecStrokeArchive&& from) noexcept
    : SpecStrokeArchive() {
    *this = ::std::move(from);
  }

  inline SpecStrokeArchive& operator=(const SpecStrokeArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpecStrokeArchive& operator=(SpecStrokeArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpecStrokeArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpecStrokeArchive* internal_default_instance() {
    return reinterpret_cast<const SpecStrokeArchive*>(
               &_SpecStrokeArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SpecStrokeArchive& a, SpecStrokeArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(SpecStrokeArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpecStrokeArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpecStrokeArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SpecStrokeArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SpecStrokeArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SpecStrokeArchive& from) {
    SpecStrokeArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpecStrokeArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.SpecStrokeArchive";
  }
  protected:
  explicit SpecStrokeArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpecFrameSetAssetScaleFieldNumber = 1,
    kSpecSetStrokeFieldNumber = 2,
    kSpecStrokeSetColorFieldNumber = 3,
    kSpecStrokeSetPatternFieldNumber = 4,
    kSpecStrokeSetWidthFieldNumber = 5,
  };
  // optional .TSD.SpecFrameSetAssetScaleArchive spec_frame_set_asset_scale = 1;
  bool has_spec_frame_set_asset_scale() const;
  private:
  bool _internal_has_spec_frame_set_asset_scale() const;
  public:
  void clear_spec_frame_set_asset_scale();
  const ::TSD::SpecFrameSetAssetScaleArchive& spec_frame_set_asset_scale() const;
  PROTOBUF_NODISCARD ::TSD::SpecFrameSetAssetScaleArchive* release_spec_frame_set_asset_scale();
  ::TSD::SpecFrameSetAssetScaleArchive* mutable_spec_frame_set_asset_scale();
  void set_allocated_spec_frame_set_asset_scale(::TSD::SpecFrameSetAssetScaleArchive* spec_frame_set_asset_scale);
  private:
  const ::TSD::SpecFrameSetAssetScaleArchive& _internal_spec_frame_set_asset_scale() const;
  ::TSD::SpecFrameSetAssetScaleArchive* _internal_mutable_spec_frame_set_asset_scale();
  public:
  void unsafe_arena_set_allocated_spec_frame_set_asset_scale(
      ::TSD::SpecFrameSetAssetScaleArchive* spec_frame_set_asset_scale);
  ::TSD::SpecFrameSetAssetScaleArchive* unsafe_arena_release_spec_frame_set_asset_scale();

  // optional .TSDSOS.SpecSetStrokeArchive spec_set_stroke = 2;
  bool has_spec_set_stroke() const;
  private:
  bool _internal_has_spec_set_stroke() const;
  public:
  void clear_spec_set_stroke();
  const ::TSDSOS::SpecSetStrokeArchive& spec_set_stroke() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecSetStrokeArchive* release_spec_set_stroke();
  ::TSDSOS::SpecSetStrokeArchive* mutable_spec_set_stroke();
  void set_allocated_spec_set_stroke(::TSDSOS::SpecSetStrokeArchive* spec_set_stroke);
  private:
  const ::TSDSOS::SpecSetStrokeArchive& _internal_spec_set_stroke() const;
  ::TSDSOS::SpecSetStrokeArchive* _internal_mutable_spec_set_stroke();
  public:
  void unsafe_arena_set_allocated_spec_set_stroke(
      ::TSDSOS::SpecSetStrokeArchive* spec_set_stroke);
  ::TSDSOS::SpecSetStrokeArchive* unsafe_arena_release_spec_set_stroke();

  // optional .TSD.SpecStrokeSetColorArchive spec_stroke_set_color = 3;
  bool has_spec_stroke_set_color() const;
  private:
  bool _internal_has_spec_stroke_set_color() const;
  public:
  void clear_spec_stroke_set_color();
  const ::TSD::SpecStrokeSetColorArchive& spec_stroke_set_color() const;
  PROTOBUF_NODISCARD ::TSD::SpecStrokeSetColorArchive* release_spec_stroke_set_color();
  ::TSD::SpecStrokeSetColorArchive* mutable_spec_stroke_set_color();
  void set_allocated_spec_stroke_set_color(::TSD::SpecStrokeSetColorArchive* spec_stroke_set_color);
  private:
  const ::TSD::SpecStrokeSetColorArchive& _internal_spec_stroke_set_color() const;
  ::TSD::SpecStrokeSetColorArchive* _internal_mutable_spec_stroke_set_color();
  public:
  void unsafe_arena_set_allocated_spec_stroke_set_color(
      ::TSD::SpecStrokeSetColorArchive* spec_stroke_set_color);
  ::TSD::SpecStrokeSetColorArchive* unsafe_arena_release_spec_stroke_set_color();

  // optional .TSD.SpecStrokeSetPatternArchive spec_stroke_set_pattern = 4;
  bool has_spec_stroke_set_pattern() const;
  private:
  bool _internal_has_spec_stroke_set_pattern() const;
  public:
  void clear_spec_stroke_set_pattern();
  const ::TSD::SpecStrokeSetPatternArchive& spec_stroke_set_pattern() const;
  PROTOBUF_NODISCARD ::TSD::SpecStrokeSetPatternArchive* release_spec_stroke_set_pattern();
  ::TSD::SpecStrokeSetPatternArchive* mutable_spec_stroke_set_pattern();
  void set_allocated_spec_stroke_set_pattern(::TSD::SpecStrokeSetPatternArchive* spec_stroke_set_pattern);
  private:
  const ::TSD::SpecStrokeSetPatternArchive& _internal_spec_stroke_set_pattern() const;
  ::TSD::SpecStrokeSetPatternArchive* _internal_mutable_spec_stroke_set_pattern();
  public:
  void unsafe_arena_set_allocated_spec_stroke_set_pattern(
      ::TSD::SpecStrokeSetPatternArchive* spec_stroke_set_pattern);
  ::TSD::SpecStrokeSetPatternArchive* unsafe_arena_release_spec_stroke_set_pattern();

  // optional .TSD.SpecStrokeSetWidthArchive spec_stroke_set_width = 5;
  bool has_spec_stroke_set_width() const;
  private:
  bool _internal_has_spec_stroke_set_width() const;
  public:
  void clear_spec_stroke_set_width();
  const ::TSD::SpecStrokeSetWidthArchive& spec_stroke_set_width() const;
  PROTOBUF_NODISCARD ::TSD::SpecStrokeSetWidthArchive* release_spec_stroke_set_width();
  ::TSD::SpecStrokeSetWidthArchive* mutable_spec_stroke_set_width();
  void set_allocated_spec_stroke_set_width(::TSD::SpecStrokeSetWidthArchive* spec_stroke_set_width);
  private:
  const ::TSD::SpecStrokeSetWidthArchive& _internal_spec_stroke_set_width() const;
  ::TSD::SpecStrokeSetWidthArchive* _internal_mutable_spec_stroke_set_width();
  public:
  void unsafe_arena_set_allocated_spec_stroke_set_width(
      ::TSD::SpecStrokeSetWidthArchive* spec_stroke_set_width);
  ::TSD::SpecStrokeSetWidthArchive* unsafe_arena_release_spec_stroke_set_width();

  // @@protoc_insertion_point(class_scope:TSDSOS.SpecStrokeArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSD::SpecFrameSetAssetScaleArchive* spec_frame_set_asset_scale_;
    ::TSDSOS::SpecSetStrokeArchive* spec_set_stroke_;
    ::TSD::SpecStrokeSetColorArchive* spec_stroke_set_color_;
    ::TSD::SpecStrokeSetPatternArchive* spec_stroke_set_pattern_;
    ::TSD::SpecStrokeSetWidthArchive* spec_stroke_set_width_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class BaseShapeStylePropertyChangeSetArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.BaseShapeStylePropertyChangeSetArchive) */ {
 public:
  inline BaseShapeStylePropertyChangeSetArchive() : BaseShapeStylePropertyChangeSetArchive(nullptr) {}
  ~BaseShapeStylePropertyChangeSetArchive() override;
  explicit PROTOBUF_CONSTEXPR BaseShapeStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BaseShapeStylePropertyChangeSetArchive(const BaseShapeStylePropertyChangeSetArchive& from);
  BaseShapeStylePropertyChangeSetArchive(BaseShapeStylePropertyChangeSetArchive&& from) noexcept
    : BaseShapeStylePropertyChangeSetArchive() {
    *this = ::std::move(from);
  }

  inline BaseShapeStylePropertyChangeSetArchive& operator=(const BaseShapeStylePropertyChangeSetArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline BaseShapeStylePropertyChangeSetArchive& operator=(BaseShapeStylePropertyChangeSetArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BaseShapeStylePropertyChangeSetArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const BaseShapeStylePropertyChangeSetArchive* internal_default_instance() {
    return reinterpret_cast<const BaseShapeStylePropertyChangeSetArchive*>(
               &_BaseShapeStylePropertyChangeSetArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(BaseShapeStylePropertyChangeSetArchive& a, BaseShapeStylePropertyChangeSetArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(BaseShapeStylePropertyChangeSetArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BaseShapeStylePropertyChangeSetArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BaseShapeStylePropertyChangeSetArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BaseShapeStylePropertyChangeSetArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BaseShapeStylePropertyChangeSetArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BaseShapeStylePropertyChangeSetArchive& from) {
    BaseShapeStylePropertyChangeSetArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BaseShapeStylePropertyChangeSetArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.BaseShapeStylePropertyChangeSetArchive";
  }
  protected:
  explicit BaseShapeStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFillFieldNumber = 1,
    kStrokeFieldNumber = 3,
    kOpacityFieldNumber = 5,
    kShadowFieldNumber = 7,
    kReflectionFieldNumber = 9,
    kHeadLineEndFieldNumber = 11,
    kTailLineEndFieldNumber = 13,
    kFillUndefinedFieldNumber = 2,
    kStrokeUndefinedFieldNumber = 4,
    kOpacityUndefinedFieldNumber = 6,
    kShadowUndefinedFieldNumber = 8,
    kReflectionUndefinedFieldNumber = 10,
    kHeadLineEndUndefinedFieldNumber = 12,
    kTailLineEndUndefinedFieldNumber = 14,
  };
  // optional .TSDSOS.SpecFillArchive fill = 1;
  bool has_fill() const;
  private:
  bool _internal_has_fill() const;
  public:
  void clear_fill();
  const ::TSDSOS::SpecFillArchive& fill() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecFillArchive* release_fill();
  ::TSDSOS::SpecFillArchive* mutable_fill();
  void set_allocated_fill(::TSDSOS::SpecFillArchive* fill);
  private:
  const ::TSDSOS::SpecFillArchive& _internal_fill() const;
  ::TSDSOS::SpecFillArchive* _internal_mutable_fill();
  public:
  void unsafe_arena_set_allocated_fill(
      ::TSDSOS::SpecFillArchive* fill);
  ::TSDSOS::SpecFillArchive* unsafe_arena_release_fill();

  // optional .TSDSOS.SpecStrokeArchive stroke = 3;
  bool has_stroke() const;
  private:
  bool _internal_has_stroke() const;
  public:
  void clear_stroke();
  const ::TSDSOS::SpecStrokeArchive& stroke() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecStrokeArchive* release_stroke();
  ::TSDSOS::SpecStrokeArchive* mutable_stroke();
  void set_allocated_stroke(::TSDSOS::SpecStrokeArchive* stroke);
  private:
  const ::TSDSOS::SpecStrokeArchive& _internal_stroke() const;
  ::TSDSOS::SpecStrokeArchive* _internal_mutable_stroke();
  public:
  void unsafe_arena_set_allocated_stroke(
      ::TSDSOS::SpecStrokeArchive* stroke);
  ::TSDSOS::SpecStrokeArchive* unsafe_arena_release_stroke();

  // optional .TSSSOS.SpecDoubleArchive opacity = 5;
  bool has_opacity() const;
  private:
  bool _internal_has_opacity() const;
  public:
  void clear_opacity();
  const ::TSSSOS::SpecDoubleArchive& opacity() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_opacity();
  ::TSSSOS::SpecDoubleArchive* mutable_opacity();
  void set_allocated_opacity(::TSSSOS::SpecDoubleArchive* opacity);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_opacity() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_opacity();
  public:
  void unsafe_arena_set_allocated_opacity(
      ::TSSSOS::SpecDoubleArchive* opacity);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_opacity();

  // optional .TSDSOS.SpecShadowArchive shadow = 7;
  bool has_shadow() const;
  private:
  bool _internal_has_shadow() const;
  public:
  void clear_shadow();
  const ::TSDSOS::SpecShadowArchive& shadow() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecShadowArchive* release_shadow();
  ::TSDSOS::SpecShadowArchive* mutable_shadow();
  void set_allocated_shadow(::TSDSOS::SpecShadowArchive* shadow);
  private:
  const ::TSDSOS::SpecShadowArchive& _internal_shadow() const;
  ::TSDSOS::SpecShadowArchive* _internal_mutable_shadow();
  public:
  void unsafe_arena_set_allocated_shadow(
      ::TSDSOS::SpecShadowArchive* shadow);
  ::TSDSOS::SpecShadowArchive* unsafe_arena_release_shadow();

  // optional .TSDSOS.SpecReflectionArchive reflection = 9;
  bool has_reflection() const;
  private:
  bool _internal_has_reflection() const;
  public:
  void clear_reflection();
  const ::TSDSOS::SpecReflectionArchive& reflection() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecReflectionArchive* release_reflection();
  ::TSDSOS::SpecReflectionArchive* mutable_reflection();
  void set_allocated_reflection(::TSDSOS::SpecReflectionArchive* reflection);
  private:
  const ::TSDSOS::SpecReflectionArchive& _internal_reflection() const;
  ::TSDSOS::SpecReflectionArchive* _internal_mutable_reflection();
  public:
  void unsafe_arena_set_allocated_reflection(
      ::TSDSOS::SpecReflectionArchive* reflection);
  ::TSDSOS::SpecReflectionArchive* unsafe_arena_release_reflection();

  // optional .TSDSOS.SpecLineEndArchive head_line_end = 11;
  bool has_head_line_end() const;
  private:
  bool _internal_has_head_line_end() const;
  public:
  void clear_head_line_end();
  const ::TSDSOS::SpecLineEndArchive& head_line_end() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecLineEndArchive* release_head_line_end();
  ::TSDSOS::SpecLineEndArchive* mutable_head_line_end();
  void set_allocated_head_line_end(::TSDSOS::SpecLineEndArchive* head_line_end);
  private:
  const ::TSDSOS::SpecLineEndArchive& _internal_head_line_end() const;
  ::TSDSOS::SpecLineEndArchive* _internal_mutable_head_line_end();
  public:
  void unsafe_arena_set_allocated_head_line_end(
      ::TSDSOS::SpecLineEndArchive* head_line_end);
  ::TSDSOS::SpecLineEndArchive* unsafe_arena_release_head_line_end();

  // optional .TSDSOS.SpecLineEndArchive tail_line_end = 13;
  bool has_tail_line_end() const;
  private:
  bool _internal_has_tail_line_end() const;
  public:
  void clear_tail_line_end();
  const ::TSDSOS::SpecLineEndArchive& tail_line_end() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecLineEndArchive* release_tail_line_end();
  ::TSDSOS::SpecLineEndArchive* mutable_tail_line_end();
  void set_allocated_tail_line_end(::TSDSOS::SpecLineEndArchive* tail_line_end);
  private:
  const ::TSDSOS::SpecLineEndArchive& _internal_tail_line_end() const;
  ::TSDSOS::SpecLineEndArchive* _internal_mutable_tail_line_end();
  public:
  void unsafe_arena_set_allocated_tail_line_end(
      ::TSDSOS::SpecLineEndArchive* tail_line_end);
  ::TSDSOS::SpecLineEndArchive* unsafe_arena_release_tail_line_end();

  // optional bool fill_undefined = 2;
  bool has_fill_undefined() const;
  private:
  bool _internal_has_fill_undefined() const;
  public:
  void clear_fill_undefined();
  bool fill_undefined() const;
  void set_fill_undefined(bool value);
  private:
  bool _internal_fill_undefined() const;
  void _internal_set_fill_undefined(bool value);
  public:

  // optional bool stroke_undefined = 4;
  bool has_stroke_undefined() const;
  private:
  bool _internal_has_stroke_undefined() const;
  public:
  void clear_stroke_undefined();
  bool stroke_undefined() const;
  void set_stroke_undefined(bool value);
  private:
  bool _internal_stroke_undefined() const;
  void _internal_set_stroke_undefined(bool value);
  public:

  // optional bool opacity_undefined = 6;
  bool has_opacity_undefined() const;
  private:
  bool _internal_has_opacity_undefined() const;
  public:
  void clear_opacity_undefined();
  bool opacity_undefined() const;
  void set_opacity_undefined(bool value);
  private:
  bool _internal_opacity_undefined() const;
  void _internal_set_opacity_undefined(bool value);
  public:

  // optional bool shadow_undefined = 8;
  bool has_shadow_undefined() const;
  private:
  bool _internal_has_shadow_undefined() const;
  public:
  void clear_shadow_undefined();
  bool shadow_undefined() const;
  void set_shadow_undefined(bool value);
  private:
  bool _internal_shadow_undefined() const;
  void _internal_set_shadow_undefined(bool value);
  public:

  // optional bool reflection_undefined = 10;
  bool has_reflection_undefined() const;
  private:
  bool _internal_has_reflection_undefined() const;
  public:
  void clear_reflection_undefined();
  bool reflection_undefined() const;
  void set_reflection_undefined(bool value);
  private:
  bool _internal_reflection_undefined() const;
  void _internal_set_reflection_undefined(bool value);
  public:

  // optional bool head_line_end_undefined = 12;
  bool has_head_line_end_undefined() const;
  private:
  bool _internal_has_head_line_end_undefined() const;
  public:
  void clear_head_line_end_undefined();
  bool head_line_end_undefined() const;
  void set_head_line_end_undefined(bool value);
  private:
  bool _internal_head_line_end_undefined() const;
  void _internal_set_head_line_end_undefined(bool value);
  public:

  // optional bool tail_line_end_undefined = 14;
  bool has_tail_line_end_undefined() const;
  private:
  bool _internal_has_tail_line_end_undefined() const;
  public:
  void clear_tail_line_end_undefined();
  bool tail_line_end_undefined() const;
  void set_tail_line_end_undefined(bool value);
  private:
  bool _internal_tail_line_end_undefined() const;
  void _internal_set_tail_line_end_undefined(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSDSOS.BaseShapeStylePropertyChangeSetArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSDSOS::SpecFillArchive* fill_;
    ::TSDSOS::SpecStrokeArchive* stroke_;
    ::TSSSOS::SpecDoubleArchive* opacity_;
    ::TSDSOS::SpecShadowArchive* shadow_;
    ::TSDSOS::SpecReflectionArchive* reflection_;
    ::TSDSOS::SpecLineEndArchive* head_line_end_;
    ::TSDSOS::SpecLineEndArchive* tail_line_end_;
    bool fill_undefined_;
    bool stroke_undefined_;
    bool opacity_undefined_;
    bool shadow_undefined_;
    bool reflection_undefined_;
    bool head_line_end_undefined_;
    bool tail_line_end_undefined_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// -------------------------------------------------------------------

class MediaStylePropertyChangeSetArchive final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TSDSOS.MediaStylePropertyChangeSetArchive) */ {
 public:
  inline MediaStylePropertyChangeSetArchive() : MediaStylePropertyChangeSetArchive(nullptr) {}
  ~MediaStylePropertyChangeSetArchive() override;
  explicit PROTOBUF_CONSTEXPR MediaStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MediaStylePropertyChangeSetArchive(const MediaStylePropertyChangeSetArchive& from);
  MediaStylePropertyChangeSetArchive(MediaStylePropertyChangeSetArchive&& from) noexcept
    : MediaStylePropertyChangeSetArchive() {
    *this = ::std::move(from);
  }

  inline MediaStylePropertyChangeSetArchive& operator=(const MediaStylePropertyChangeSetArchive& from) {
    CopyFrom(from);
    return *this;
  }
  inline MediaStylePropertyChangeSetArchive& operator=(MediaStylePropertyChangeSetArchive&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MediaStylePropertyChangeSetArchive& default_instance() {
    return *internal_default_instance();
  }
  static inline const MediaStylePropertyChangeSetArchive* internal_default_instance() {
    return reinterpret_cast<const MediaStylePropertyChangeSetArchive*>(
               &_MediaStylePropertyChangeSetArchive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MediaStylePropertyChangeSetArchive& a, MediaStylePropertyChangeSetArchive& b) {
    a.Swap(&b);
  }
  inline void Swap(MediaStylePropertyChangeSetArchive* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MediaStylePropertyChangeSetArchive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MediaStylePropertyChangeSetArchive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MediaStylePropertyChangeSetArchive>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MediaStylePropertyChangeSetArchive& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MediaStylePropertyChangeSetArchive& from) {
    MediaStylePropertyChangeSetArchive::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MediaStylePropertyChangeSetArchive* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TSDSOS.MediaStylePropertyChangeSetArchive";
  }
  protected:
  explicit MediaStylePropertyChangeSetArchive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrokeFieldNumber = 1,
    kOpacityFieldNumber = 3,
    kShadowFieldNumber = 5,
    kReflectionFieldNumber = 7,
    kStrokeUndefinedFieldNumber = 2,
    kOpacityUndefinedFieldNumber = 4,
    kShadowUndefinedFieldNumber = 6,
    kReflectionUndefinedFieldNumber = 8,
  };
  // optional .TSDSOS.SpecStrokeArchive stroke = 1;
  bool has_stroke() const;
  private:
  bool _internal_has_stroke() const;
  public:
  void clear_stroke();
  const ::TSDSOS::SpecStrokeArchive& stroke() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecStrokeArchive* release_stroke();
  ::TSDSOS::SpecStrokeArchive* mutable_stroke();
  void set_allocated_stroke(::TSDSOS::SpecStrokeArchive* stroke);
  private:
  const ::TSDSOS::SpecStrokeArchive& _internal_stroke() const;
  ::TSDSOS::SpecStrokeArchive* _internal_mutable_stroke();
  public:
  void unsafe_arena_set_allocated_stroke(
      ::TSDSOS::SpecStrokeArchive* stroke);
  ::TSDSOS::SpecStrokeArchive* unsafe_arena_release_stroke();

  // optional .TSSSOS.SpecDoubleArchive opacity = 3;
  bool has_opacity() const;
  private:
  bool _internal_has_opacity() const;
  public:
  void clear_opacity();
  const ::TSSSOS::SpecDoubleArchive& opacity() const;
  PROTOBUF_NODISCARD ::TSSSOS::SpecDoubleArchive* release_opacity();
  ::TSSSOS::SpecDoubleArchive* mutable_opacity();
  void set_allocated_opacity(::TSSSOS::SpecDoubleArchive* opacity);
  private:
  const ::TSSSOS::SpecDoubleArchive& _internal_opacity() const;
  ::TSSSOS::SpecDoubleArchive* _internal_mutable_opacity();
  public:
  void unsafe_arena_set_allocated_opacity(
      ::TSSSOS::SpecDoubleArchive* opacity);
  ::TSSSOS::SpecDoubleArchive* unsafe_arena_release_opacity();

  // optional .TSDSOS.SpecShadowArchive shadow = 5;
  bool has_shadow() const;
  private:
  bool _internal_has_shadow() const;
  public:
  void clear_shadow();
  const ::TSDSOS::SpecShadowArchive& shadow() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecShadowArchive* release_shadow();
  ::TSDSOS::SpecShadowArchive* mutable_shadow();
  void set_allocated_shadow(::TSDSOS::SpecShadowArchive* shadow);
  private:
  const ::TSDSOS::SpecShadowArchive& _internal_shadow() const;
  ::TSDSOS::SpecShadowArchive* _internal_mutable_shadow();
  public:
  void unsafe_arena_set_allocated_shadow(
      ::TSDSOS::SpecShadowArchive* shadow);
  ::TSDSOS::SpecShadowArchive* unsafe_arena_release_shadow();

  // optional .TSDSOS.SpecReflectionArchive reflection = 7;
  bool has_reflection() const;
  private:
  bool _internal_has_reflection() const;
  public:
  void clear_reflection();
  const ::TSDSOS::SpecReflectionArchive& reflection() const;
  PROTOBUF_NODISCARD ::TSDSOS::SpecReflectionArchive* release_reflection();
  ::TSDSOS::SpecReflectionArchive* mutable_reflection();
  void set_allocated_reflection(::TSDSOS::SpecReflectionArchive* reflection);
  private:
  const ::TSDSOS::SpecReflectionArchive& _internal_reflection() const;
  ::TSDSOS::SpecReflectionArchive* _internal_mutable_reflection();
  public:
  void unsafe_arena_set_allocated_reflection(
      ::TSDSOS::SpecReflectionArchive* reflection);
  ::TSDSOS::SpecReflectionArchive* unsafe_arena_release_reflection();

  // optional bool stroke_undefined = 2;
  bool has_stroke_undefined() const;
  private:
  bool _internal_has_stroke_undefined() const;
  public:
  void clear_stroke_undefined();
  bool stroke_undefined() const;
  void set_stroke_undefined(bool value);
  private:
  bool _internal_stroke_undefined() const;
  void _internal_set_stroke_undefined(bool value);
  public:

  // optional bool opacity_undefined = 4;
  bool has_opacity_undefined() const;
  private:
  bool _internal_has_opacity_undefined() const;
  public:
  void clear_opacity_undefined();
  bool opacity_undefined() const;
  void set_opacity_undefined(bool value);
  private:
  bool _internal_opacity_undefined() const;
  void _internal_set_opacity_undefined(bool value);
  public:

  // optional bool shadow_undefined = 6;
  bool has_shadow_undefined() const;
  private:
  bool _internal_has_shadow_undefined() const;
  public:
  void clear_shadow_undefined();
  bool shadow_undefined() const;
  void set_shadow_undefined(bool value);
  private:
  bool _internal_shadow_undefined() const;
  void _internal_set_shadow_undefined(bool value);
  public:

  // optional bool reflection_undefined = 8;
  bool has_reflection_undefined() const;
  private:
  bool _internal_has_reflection_undefined() const;
  public:
  void clear_reflection_undefined();
  bool reflection_undefined() const;
  void set_reflection_undefined(bool value);
  private:
  bool _internal_reflection_undefined() const;
  void _internal_set_reflection_undefined(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TSDSOS.MediaStylePropertyChangeSetArchive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::TSDSOS::SpecStrokeArchive* stroke_;
    ::TSSSOS::SpecDoubleArchive* opacity_;
    ::TSDSOS::SpecShadowArchive* shadow_;
    ::TSDSOS::SpecReflectionArchive* reflection_;
    bool stroke_undefined_;
    bool opacity_undefined_;
    bool shadow_undefined_;
    bool reflection_undefined_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TSDArchives_2esos_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SpecSetFillArchive

// optional .TSD.FillArchive fill = 1;
inline bool SpecSetFillArchive::_internal_has_fill() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fill_ != nullptr);
  return value;
}
inline bool SpecSetFillArchive::has_fill() const {
  return _internal_has_fill();
}
inline const ::TSD::FillArchive& SpecSetFillArchive::_internal_fill() const {
  const ::TSD::FillArchive* p = _impl_.fill_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::FillArchive&>(
      ::TSD::_FillArchive_default_instance_);
}
inline const ::TSD::FillArchive& SpecSetFillArchive::fill() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecSetFillArchive.fill)
  return _internal_fill();
}
inline void SpecSetFillArchive::unsafe_arena_set_allocated_fill(
    ::TSD::FillArchive* fill) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.fill_);
  }
  _impl_.fill_ = fill;
  if (fill) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecSetFillArchive.fill)
}
inline ::TSD::FillArchive* SpecSetFillArchive::release_fill() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::FillArchive* temp = _impl_.fill_;
  _impl_.fill_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::FillArchive* SpecSetFillArchive::unsafe_arena_release_fill() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecSetFillArchive.fill)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::FillArchive* temp = _impl_.fill_;
  _impl_.fill_ = nullptr;
  return temp;
}
inline ::TSD::FillArchive* SpecSetFillArchive::_internal_mutable_fill() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.fill_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::FillArchive>(GetArenaForAllocation());
    _impl_.fill_ = p;
  }
  return _impl_.fill_;
}
inline ::TSD::FillArchive* SpecSetFillArchive::mutable_fill() {
  ::TSD::FillArchive* _msg = _internal_mutable_fill();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecSetFillArchive.fill)
  return _msg;
}
inline void SpecSetFillArchive::set_allocated_fill(::TSD::FillArchive* fill) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.fill_);
  }
  if (fill) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fill));
    if (message_arena != submessage_arena) {
      fill = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fill, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.fill_ = fill;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecSetFillArchive.fill)
}

// required bool unset = 2;
inline bool SpecSetFillArchive::_internal_has_unset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetFillArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetFillArchive::clear_unset() {
  _impl_.unset_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetFillArchive::_internal_unset() const {
  return _impl_.unset_;
}
inline bool SpecSetFillArchive::unset() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecSetFillArchive.unset)
  return _internal_unset();
}
inline void SpecSetFillArchive::_internal_set_unset(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unset_ = value;
}
inline void SpecSetFillArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:TSDSOS.SpecSetFillArchive.unset)
}

// -------------------------------------------------------------------

// SpecSetLineEndArchive

// optional .TSD.LineEndArchive line_end = 1;
inline bool SpecSetLineEndArchive::_internal_has_line_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.line_end_ != nullptr);
  return value;
}
inline bool SpecSetLineEndArchive::has_line_end() const {
  return _internal_has_line_end();
}
inline const ::TSD::LineEndArchive& SpecSetLineEndArchive::_internal_line_end() const {
  const ::TSD::LineEndArchive* p = _impl_.line_end_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::LineEndArchive&>(
      ::TSD::_LineEndArchive_default_instance_);
}
inline const ::TSD::LineEndArchive& SpecSetLineEndArchive::line_end() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecSetLineEndArchive.line_end)
  return _internal_line_end();
}
inline void SpecSetLineEndArchive::unsafe_arena_set_allocated_line_end(
    ::TSD::LineEndArchive* line_end) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_end_);
  }
  _impl_.line_end_ = line_end;
  if (line_end) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecSetLineEndArchive.line_end)
}
inline ::TSD::LineEndArchive* SpecSetLineEndArchive::release_line_end() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::LineEndArchive* temp = _impl_.line_end_;
  _impl_.line_end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::LineEndArchive* SpecSetLineEndArchive::unsafe_arena_release_line_end() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecSetLineEndArchive.line_end)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::LineEndArchive* temp = _impl_.line_end_;
  _impl_.line_end_ = nullptr;
  return temp;
}
inline ::TSD::LineEndArchive* SpecSetLineEndArchive::_internal_mutable_line_end() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.line_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::LineEndArchive>(GetArenaForAllocation());
    _impl_.line_end_ = p;
  }
  return _impl_.line_end_;
}
inline ::TSD::LineEndArchive* SpecSetLineEndArchive::mutable_line_end() {
  ::TSD::LineEndArchive* _msg = _internal_mutable_line_end();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecSetLineEndArchive.line_end)
  return _msg;
}
inline void SpecSetLineEndArchive::set_allocated_line_end(::TSD::LineEndArchive* line_end) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.line_end_);
  }
  if (line_end) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(line_end));
    if (message_arena != submessage_arena) {
      line_end = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, line_end, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.line_end_ = line_end;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecSetLineEndArchive.line_end)
}

// required bool unset = 2;
inline bool SpecSetLineEndArchive::_internal_has_unset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetLineEndArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetLineEndArchive::clear_unset() {
  _impl_.unset_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetLineEndArchive::_internal_unset() const {
  return _impl_.unset_;
}
inline bool SpecSetLineEndArchive::unset() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecSetLineEndArchive.unset)
  return _internal_unset();
}
inline void SpecSetLineEndArchive::_internal_set_unset(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unset_ = value;
}
inline void SpecSetLineEndArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:TSDSOS.SpecSetLineEndArchive.unset)
}

// -------------------------------------------------------------------

// SpecSetReflectionArchive

// optional .TSD.ReflectionArchive reflection = 1;
inline bool SpecSetReflectionArchive::_internal_has_reflection() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.reflection_ != nullptr);
  return value;
}
inline bool SpecSetReflectionArchive::has_reflection() const {
  return _internal_has_reflection();
}
inline const ::TSD::ReflectionArchive& SpecSetReflectionArchive::_internal_reflection() const {
  const ::TSD::ReflectionArchive* p = _impl_.reflection_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::ReflectionArchive&>(
      ::TSD::_ReflectionArchive_default_instance_);
}
inline const ::TSD::ReflectionArchive& SpecSetReflectionArchive::reflection() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecSetReflectionArchive.reflection)
  return _internal_reflection();
}
inline void SpecSetReflectionArchive::unsafe_arena_set_allocated_reflection(
    ::TSD::ReflectionArchive* reflection) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reflection_);
  }
  _impl_.reflection_ = reflection;
  if (reflection) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecSetReflectionArchive.reflection)
}
inline ::TSD::ReflectionArchive* SpecSetReflectionArchive::release_reflection() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::ReflectionArchive* temp = _impl_.reflection_;
  _impl_.reflection_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::ReflectionArchive* SpecSetReflectionArchive::unsafe_arena_release_reflection() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecSetReflectionArchive.reflection)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::ReflectionArchive* temp = _impl_.reflection_;
  _impl_.reflection_ = nullptr;
  return temp;
}
inline ::TSD::ReflectionArchive* SpecSetReflectionArchive::_internal_mutable_reflection() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.reflection_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::ReflectionArchive>(GetArenaForAllocation());
    _impl_.reflection_ = p;
  }
  return _impl_.reflection_;
}
inline ::TSD::ReflectionArchive* SpecSetReflectionArchive::mutable_reflection() {
  ::TSD::ReflectionArchive* _msg = _internal_mutable_reflection();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecSetReflectionArchive.reflection)
  return _msg;
}
inline void SpecSetReflectionArchive::set_allocated_reflection(::TSD::ReflectionArchive* reflection) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reflection_);
  }
  if (reflection) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reflection));
    if (message_arena != submessage_arena) {
      reflection = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reflection, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.reflection_ = reflection;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecSetReflectionArchive.reflection)
}

// required bool unset = 2;
inline bool SpecSetReflectionArchive::_internal_has_unset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetReflectionArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetReflectionArchive::clear_unset() {
  _impl_.unset_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetReflectionArchive::_internal_unset() const {
  return _impl_.unset_;
}
inline bool SpecSetReflectionArchive::unset() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecSetReflectionArchive.unset)
  return _internal_unset();
}
inline void SpecSetReflectionArchive::_internal_set_unset(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unset_ = value;
}
inline void SpecSetReflectionArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:TSDSOS.SpecSetReflectionArchive.unset)
}

// -------------------------------------------------------------------

// SpecSetShadowArchive

// optional .TSD.ShadowArchive shadow = 1;
inline bool SpecSetShadowArchive::_internal_has_shadow() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_ != nullptr);
  return value;
}
inline bool SpecSetShadowArchive::has_shadow() const {
  return _internal_has_shadow();
}
inline const ::TSD::ShadowArchive& SpecSetShadowArchive::_internal_shadow() const {
  const ::TSD::ShadowArchive* p = _impl_.shadow_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::ShadowArchive&>(
      ::TSD::_ShadowArchive_default_instance_);
}
inline const ::TSD::ShadowArchive& SpecSetShadowArchive::shadow() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecSetShadowArchive.shadow)
  return _internal_shadow();
}
inline void SpecSetShadowArchive::unsafe_arena_set_allocated_shadow(
    ::TSD::ShadowArchive* shadow) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_);
  }
  _impl_.shadow_ = shadow;
  if (shadow) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecSetShadowArchive.shadow)
}
inline ::TSD::ShadowArchive* SpecSetShadowArchive::release_shadow() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::ShadowArchive* temp = _impl_.shadow_;
  _impl_.shadow_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::ShadowArchive* SpecSetShadowArchive::unsafe_arena_release_shadow() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecSetShadowArchive.shadow)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::ShadowArchive* temp = _impl_.shadow_;
  _impl_.shadow_ = nullptr;
  return temp;
}
inline ::TSD::ShadowArchive* SpecSetShadowArchive::_internal_mutable_shadow() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.shadow_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::ShadowArchive>(GetArenaForAllocation());
    _impl_.shadow_ = p;
  }
  return _impl_.shadow_;
}
inline ::TSD::ShadowArchive* SpecSetShadowArchive::mutable_shadow() {
  ::TSD::ShadowArchive* _msg = _internal_mutable_shadow();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecSetShadowArchive.shadow)
  return _msg;
}
inline void SpecSetShadowArchive::set_allocated_shadow(::TSD::ShadowArchive* shadow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_);
  }
  if (shadow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shadow));
    if (message_arena != submessage_arena) {
      shadow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.shadow_ = shadow;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecSetShadowArchive.shadow)
}

// required bool unset = 2;
inline bool SpecSetShadowArchive::_internal_has_unset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetShadowArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetShadowArchive::clear_unset() {
  _impl_.unset_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetShadowArchive::_internal_unset() const {
  return _impl_.unset_;
}
inline bool SpecSetShadowArchive::unset() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecSetShadowArchive.unset)
  return _internal_unset();
}
inline void SpecSetShadowArchive::_internal_set_unset(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unset_ = value;
}
inline void SpecSetShadowArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:TSDSOS.SpecSetShadowArchive.unset)
}

// -------------------------------------------------------------------

// SpecSetStrokeArchive

// optional .TSD.StrokeArchive stroke = 1;
inline bool SpecSetStrokeArchive::_internal_has_stroke() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stroke_ != nullptr);
  return value;
}
inline bool SpecSetStrokeArchive::has_stroke() const {
  return _internal_has_stroke();
}
inline const ::TSD::StrokeArchive& SpecSetStrokeArchive::_internal_stroke() const {
  const ::TSD::StrokeArchive* p = _impl_.stroke_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::StrokeArchive&>(
      ::TSD::_StrokeArchive_default_instance_);
}
inline const ::TSD::StrokeArchive& SpecSetStrokeArchive::stroke() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecSetStrokeArchive.stroke)
  return _internal_stroke();
}
inline void SpecSetStrokeArchive::unsafe_arena_set_allocated_stroke(
    ::TSD::StrokeArchive* stroke) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stroke_);
  }
  _impl_.stroke_ = stroke;
  if (stroke) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecSetStrokeArchive.stroke)
}
inline ::TSD::StrokeArchive* SpecSetStrokeArchive::release_stroke() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::StrokeArchive* temp = _impl_.stroke_;
  _impl_.stroke_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::StrokeArchive* SpecSetStrokeArchive::unsafe_arena_release_stroke() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecSetStrokeArchive.stroke)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::StrokeArchive* temp = _impl_.stroke_;
  _impl_.stroke_ = nullptr;
  return temp;
}
inline ::TSD::StrokeArchive* SpecSetStrokeArchive::_internal_mutable_stroke() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.stroke_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::StrokeArchive>(GetArenaForAllocation());
    _impl_.stroke_ = p;
  }
  return _impl_.stroke_;
}
inline ::TSD::StrokeArchive* SpecSetStrokeArchive::mutable_stroke() {
  ::TSD::StrokeArchive* _msg = _internal_mutable_stroke();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecSetStrokeArchive.stroke)
  return _msg;
}
inline void SpecSetStrokeArchive::set_allocated_stroke(::TSD::StrokeArchive* stroke) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stroke_);
  }
  if (stroke) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stroke));
    if (message_arena != submessage_arena) {
      stroke = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stroke, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.stroke_ = stroke;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecSetStrokeArchive.stroke)
}

// required bool unset = 2;
inline bool SpecSetStrokeArchive::_internal_has_unset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpecSetStrokeArchive::has_unset() const {
  return _internal_has_unset();
}
inline void SpecSetStrokeArchive::clear_unset() {
  _impl_.unset_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool SpecSetStrokeArchive::_internal_unset() const {
  return _impl_.unset_;
}
inline bool SpecSetStrokeArchive::unset() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecSetStrokeArchive.unset)
  return _internal_unset();
}
inline void SpecSetStrokeArchive::_internal_set_unset(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unset_ = value;
}
inline void SpecSetStrokeArchive::set_unset(bool value) {
  _internal_set_unset(value);
  // @@protoc_insertion_point(field_set:TSDSOS.SpecSetStrokeArchive.unset)
}

// -------------------------------------------------------------------

// SpecFillArchive

// optional .TSD.SpecColorFillSetColorArchive spec_color_fill_set_color = 1;
inline bool SpecFillArchive::_internal_has_spec_color_fill_set_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_color_fill_set_color_ != nullptr);
  return value;
}
inline bool SpecFillArchive::has_spec_color_fill_set_color() const {
  return _internal_has_spec_color_fill_set_color();
}
inline const ::TSD::SpecColorFillSetColorArchive& SpecFillArchive::_internal_spec_color_fill_set_color() const {
  const ::TSD::SpecColorFillSetColorArchive* p = _impl_.spec_color_fill_set_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecColorFillSetColorArchive&>(
      ::TSD::_SpecColorFillSetColorArchive_default_instance_);
}
inline const ::TSD::SpecColorFillSetColorArchive& SpecFillArchive::spec_color_fill_set_color() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecFillArchive.spec_color_fill_set_color)
  return _internal_spec_color_fill_set_color();
}
inline void SpecFillArchive::unsafe_arena_set_allocated_spec_color_fill_set_color(
    ::TSD::SpecColorFillSetColorArchive* spec_color_fill_set_color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_color_fill_set_color_);
  }
  _impl_.spec_color_fill_set_color_ = spec_color_fill_set_color;
  if (spec_color_fill_set_color) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecFillArchive.spec_color_fill_set_color)
}
inline ::TSD::SpecColorFillSetColorArchive* SpecFillArchive::release_spec_color_fill_set_color() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::SpecColorFillSetColorArchive* temp = _impl_.spec_color_fill_set_color_;
  _impl_.spec_color_fill_set_color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecColorFillSetColorArchive* SpecFillArchive::unsafe_arena_release_spec_color_fill_set_color() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecFillArchive.spec_color_fill_set_color)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::SpecColorFillSetColorArchive* temp = _impl_.spec_color_fill_set_color_;
  _impl_.spec_color_fill_set_color_ = nullptr;
  return temp;
}
inline ::TSD::SpecColorFillSetColorArchive* SpecFillArchive::_internal_mutable_spec_color_fill_set_color() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.spec_color_fill_set_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecColorFillSetColorArchive>(GetArenaForAllocation());
    _impl_.spec_color_fill_set_color_ = p;
  }
  return _impl_.spec_color_fill_set_color_;
}
inline ::TSD::SpecColorFillSetColorArchive* SpecFillArchive::mutable_spec_color_fill_set_color() {
  ::TSD::SpecColorFillSetColorArchive* _msg = _internal_mutable_spec_color_fill_set_color();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecFillArchive.spec_color_fill_set_color)
  return _msg;
}
inline void SpecFillArchive::set_allocated_spec_color_fill_set_color(::TSD::SpecColorFillSetColorArchive* spec_color_fill_set_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_color_fill_set_color_);
  }
  if (spec_color_fill_set_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_color_fill_set_color));
    if (message_arena != submessage_arena) {
      spec_color_fill_set_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_color_fill_set_color, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.spec_color_fill_set_color_ = spec_color_fill_set_color;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecFillArchive.spec_color_fill_set_color)
}

// optional .TSD.SpecGradientFillSetAngleArchive spec_gradient_fill_set_angle = 2;
inline bool SpecFillArchive::_internal_has_spec_gradient_fill_set_angle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_gradient_fill_set_angle_ != nullptr);
  return value;
}
inline bool SpecFillArchive::has_spec_gradient_fill_set_angle() const {
  return _internal_has_spec_gradient_fill_set_angle();
}
inline const ::TSD::SpecGradientFillSetAngleArchive& SpecFillArchive::_internal_spec_gradient_fill_set_angle() const {
  const ::TSD::SpecGradientFillSetAngleArchive* p = _impl_.spec_gradient_fill_set_angle_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecGradientFillSetAngleArchive&>(
      ::TSD::_SpecGradientFillSetAngleArchive_default_instance_);
}
inline const ::TSD::SpecGradientFillSetAngleArchive& SpecFillArchive::spec_gradient_fill_set_angle() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecFillArchive.spec_gradient_fill_set_angle)
  return _internal_spec_gradient_fill_set_angle();
}
inline void SpecFillArchive::unsafe_arena_set_allocated_spec_gradient_fill_set_angle(
    ::TSD::SpecGradientFillSetAngleArchive* spec_gradient_fill_set_angle) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_gradient_fill_set_angle_);
  }
  _impl_.spec_gradient_fill_set_angle_ = spec_gradient_fill_set_angle;
  if (spec_gradient_fill_set_angle) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecFillArchive.spec_gradient_fill_set_angle)
}
inline ::TSD::SpecGradientFillSetAngleArchive* SpecFillArchive::release_spec_gradient_fill_set_angle() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSD::SpecGradientFillSetAngleArchive* temp = _impl_.spec_gradient_fill_set_angle_;
  _impl_.spec_gradient_fill_set_angle_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecGradientFillSetAngleArchive* SpecFillArchive::unsafe_arena_release_spec_gradient_fill_set_angle() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecFillArchive.spec_gradient_fill_set_angle)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSD::SpecGradientFillSetAngleArchive* temp = _impl_.spec_gradient_fill_set_angle_;
  _impl_.spec_gradient_fill_set_angle_ = nullptr;
  return temp;
}
inline ::TSD::SpecGradientFillSetAngleArchive* SpecFillArchive::_internal_mutable_spec_gradient_fill_set_angle() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.spec_gradient_fill_set_angle_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecGradientFillSetAngleArchive>(GetArenaForAllocation());
    _impl_.spec_gradient_fill_set_angle_ = p;
  }
  return _impl_.spec_gradient_fill_set_angle_;
}
inline ::TSD::SpecGradientFillSetAngleArchive* SpecFillArchive::mutable_spec_gradient_fill_set_angle() {
  ::TSD::SpecGradientFillSetAngleArchive* _msg = _internal_mutable_spec_gradient_fill_set_angle();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecFillArchive.spec_gradient_fill_set_angle)
  return _msg;
}
inline void SpecFillArchive::set_allocated_spec_gradient_fill_set_angle(::TSD::SpecGradientFillSetAngleArchive* spec_gradient_fill_set_angle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_gradient_fill_set_angle_);
  }
  if (spec_gradient_fill_set_angle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_gradient_fill_set_angle));
    if (message_arena != submessage_arena) {
      spec_gradient_fill_set_angle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_gradient_fill_set_angle, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.spec_gradient_fill_set_angle_ = spec_gradient_fill_set_angle;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecFillArchive.spec_gradient_fill_set_angle)
}

// optional .TSD.SpecImageFillSetTechniqueArchive spec_image_fill_set_technique = 3;
inline bool SpecFillArchive::_internal_has_spec_image_fill_set_technique() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_image_fill_set_technique_ != nullptr);
  return value;
}
inline bool SpecFillArchive::has_spec_image_fill_set_technique() const {
  return _internal_has_spec_image_fill_set_technique();
}
inline const ::TSD::SpecImageFillSetTechniqueArchive& SpecFillArchive::_internal_spec_image_fill_set_technique() const {
  const ::TSD::SpecImageFillSetTechniqueArchive* p = _impl_.spec_image_fill_set_technique_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecImageFillSetTechniqueArchive&>(
      ::TSD::_SpecImageFillSetTechniqueArchive_default_instance_);
}
inline const ::TSD::SpecImageFillSetTechniqueArchive& SpecFillArchive::spec_image_fill_set_technique() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecFillArchive.spec_image_fill_set_technique)
  return _internal_spec_image_fill_set_technique();
}
inline void SpecFillArchive::unsafe_arena_set_allocated_spec_image_fill_set_technique(
    ::TSD::SpecImageFillSetTechniqueArchive* spec_image_fill_set_technique) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_image_fill_set_technique_);
  }
  _impl_.spec_image_fill_set_technique_ = spec_image_fill_set_technique;
  if (spec_image_fill_set_technique) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecFillArchive.spec_image_fill_set_technique)
}
inline ::TSD::SpecImageFillSetTechniqueArchive* SpecFillArchive::release_spec_image_fill_set_technique() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSD::SpecImageFillSetTechniqueArchive* temp = _impl_.spec_image_fill_set_technique_;
  _impl_.spec_image_fill_set_technique_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecImageFillSetTechniqueArchive* SpecFillArchive::unsafe_arena_release_spec_image_fill_set_technique() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecFillArchive.spec_image_fill_set_technique)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSD::SpecImageFillSetTechniqueArchive* temp = _impl_.spec_image_fill_set_technique_;
  _impl_.spec_image_fill_set_technique_ = nullptr;
  return temp;
}
inline ::TSD::SpecImageFillSetTechniqueArchive* SpecFillArchive::_internal_mutable_spec_image_fill_set_technique() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.spec_image_fill_set_technique_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecImageFillSetTechniqueArchive>(GetArenaForAllocation());
    _impl_.spec_image_fill_set_technique_ = p;
  }
  return _impl_.spec_image_fill_set_technique_;
}
inline ::TSD::SpecImageFillSetTechniqueArchive* SpecFillArchive::mutable_spec_image_fill_set_technique() {
  ::TSD::SpecImageFillSetTechniqueArchive* _msg = _internal_mutable_spec_image_fill_set_technique();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecFillArchive.spec_image_fill_set_technique)
  return _msg;
}
inline void SpecFillArchive::set_allocated_spec_image_fill_set_technique(::TSD::SpecImageFillSetTechniqueArchive* spec_image_fill_set_technique) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_image_fill_set_technique_);
  }
  if (spec_image_fill_set_technique) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_image_fill_set_technique));
    if (message_arena != submessage_arena) {
      spec_image_fill_set_technique = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_image_fill_set_technique, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.spec_image_fill_set_technique_ = spec_image_fill_set_technique;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecFillArchive.spec_image_fill_set_technique)
}

// optional .TSDSOS.SpecSetFillArchive spec_set_fill = 4;
inline bool SpecFillArchive::_internal_has_spec_set_fill() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_set_fill_ != nullptr);
  return value;
}
inline bool SpecFillArchive::has_spec_set_fill() const {
  return _internal_has_spec_set_fill();
}
inline void SpecFillArchive::clear_spec_set_fill() {
  if (_impl_.spec_set_fill_ != nullptr) _impl_.spec_set_fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::TSDSOS::SpecSetFillArchive& SpecFillArchive::_internal_spec_set_fill() const {
  const ::TSDSOS::SpecSetFillArchive* p = _impl_.spec_set_fill_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecSetFillArchive&>(
      ::TSDSOS::_SpecSetFillArchive_default_instance_);
}
inline const ::TSDSOS::SpecSetFillArchive& SpecFillArchive::spec_set_fill() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecFillArchive.spec_set_fill)
  return _internal_spec_set_fill();
}
inline void SpecFillArchive::unsafe_arena_set_allocated_spec_set_fill(
    ::TSDSOS::SpecSetFillArchive* spec_set_fill) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_set_fill_);
  }
  _impl_.spec_set_fill_ = spec_set_fill;
  if (spec_set_fill) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecFillArchive.spec_set_fill)
}
inline ::TSDSOS::SpecSetFillArchive* SpecFillArchive::release_spec_set_fill() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSDSOS::SpecSetFillArchive* temp = _impl_.spec_set_fill_;
  _impl_.spec_set_fill_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecSetFillArchive* SpecFillArchive::unsafe_arena_release_spec_set_fill() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecFillArchive.spec_set_fill)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSDSOS::SpecSetFillArchive* temp = _impl_.spec_set_fill_;
  _impl_.spec_set_fill_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecSetFillArchive* SpecFillArchive::_internal_mutable_spec_set_fill() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.spec_set_fill_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecSetFillArchive>(GetArenaForAllocation());
    _impl_.spec_set_fill_ = p;
  }
  return _impl_.spec_set_fill_;
}
inline ::TSDSOS::SpecSetFillArchive* SpecFillArchive::mutable_spec_set_fill() {
  ::TSDSOS::SpecSetFillArchive* _msg = _internal_mutable_spec_set_fill();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecFillArchive.spec_set_fill)
  return _msg;
}
inline void SpecFillArchive::set_allocated_spec_set_fill(::TSDSOS::SpecSetFillArchive* spec_set_fill) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.spec_set_fill_;
  }
  if (spec_set_fill) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(spec_set_fill);
    if (message_arena != submessage_arena) {
      spec_set_fill = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_fill, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.spec_set_fill_ = spec_set_fill;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecFillArchive.spec_set_fill)
}

// -------------------------------------------------------------------

// SpecLineEndArchive

// optional .TSDSOS.SpecSetLineEndArchive spec_set_line_end = 1;
inline bool SpecLineEndArchive::_internal_has_spec_set_line_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_set_line_end_ != nullptr);
  return value;
}
inline bool SpecLineEndArchive::has_spec_set_line_end() const {
  return _internal_has_spec_set_line_end();
}
inline void SpecLineEndArchive::clear_spec_set_line_end() {
  if (_impl_.spec_set_line_end_ != nullptr) _impl_.spec_set_line_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::TSDSOS::SpecSetLineEndArchive& SpecLineEndArchive::_internal_spec_set_line_end() const {
  const ::TSDSOS::SpecSetLineEndArchive* p = _impl_.spec_set_line_end_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecSetLineEndArchive&>(
      ::TSDSOS::_SpecSetLineEndArchive_default_instance_);
}
inline const ::TSDSOS::SpecSetLineEndArchive& SpecLineEndArchive::spec_set_line_end() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecLineEndArchive.spec_set_line_end)
  return _internal_spec_set_line_end();
}
inline void SpecLineEndArchive::unsafe_arena_set_allocated_spec_set_line_end(
    ::TSDSOS::SpecSetLineEndArchive* spec_set_line_end) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_set_line_end_);
  }
  _impl_.spec_set_line_end_ = spec_set_line_end;
  if (spec_set_line_end) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecLineEndArchive.spec_set_line_end)
}
inline ::TSDSOS::SpecSetLineEndArchive* SpecLineEndArchive::release_spec_set_line_end() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecSetLineEndArchive* temp = _impl_.spec_set_line_end_;
  _impl_.spec_set_line_end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecSetLineEndArchive* SpecLineEndArchive::unsafe_arena_release_spec_set_line_end() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecLineEndArchive.spec_set_line_end)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecSetLineEndArchive* temp = _impl_.spec_set_line_end_;
  _impl_.spec_set_line_end_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecSetLineEndArchive* SpecLineEndArchive::_internal_mutable_spec_set_line_end() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.spec_set_line_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecSetLineEndArchive>(GetArenaForAllocation());
    _impl_.spec_set_line_end_ = p;
  }
  return _impl_.spec_set_line_end_;
}
inline ::TSDSOS::SpecSetLineEndArchive* SpecLineEndArchive::mutable_spec_set_line_end() {
  ::TSDSOS::SpecSetLineEndArchive* _msg = _internal_mutable_spec_set_line_end();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecLineEndArchive.spec_set_line_end)
  return _msg;
}
inline void SpecLineEndArchive::set_allocated_spec_set_line_end(::TSDSOS::SpecSetLineEndArchive* spec_set_line_end) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.spec_set_line_end_;
  }
  if (spec_set_line_end) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(spec_set_line_end);
    if (message_arena != submessage_arena) {
      spec_set_line_end = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_line_end, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.spec_set_line_end_ = spec_set_line_end;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecLineEndArchive.spec_set_line_end)
}

// -------------------------------------------------------------------

// SpecReflectionArchive

// optional .TSD.SpecReflectionSetOpacityArchive spec_reflection_set_opacity = 1;
inline bool SpecReflectionArchive::_internal_has_spec_reflection_set_opacity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_reflection_set_opacity_ != nullptr);
  return value;
}
inline bool SpecReflectionArchive::has_spec_reflection_set_opacity() const {
  return _internal_has_spec_reflection_set_opacity();
}
inline const ::TSD::SpecReflectionSetOpacityArchive& SpecReflectionArchive::_internal_spec_reflection_set_opacity() const {
  const ::TSD::SpecReflectionSetOpacityArchive* p = _impl_.spec_reflection_set_opacity_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecReflectionSetOpacityArchive&>(
      ::TSD::_SpecReflectionSetOpacityArchive_default_instance_);
}
inline const ::TSD::SpecReflectionSetOpacityArchive& SpecReflectionArchive::spec_reflection_set_opacity() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecReflectionArchive.spec_reflection_set_opacity)
  return _internal_spec_reflection_set_opacity();
}
inline void SpecReflectionArchive::unsafe_arena_set_allocated_spec_reflection_set_opacity(
    ::TSD::SpecReflectionSetOpacityArchive* spec_reflection_set_opacity) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_reflection_set_opacity_);
  }
  _impl_.spec_reflection_set_opacity_ = spec_reflection_set_opacity;
  if (spec_reflection_set_opacity) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecReflectionArchive.spec_reflection_set_opacity)
}
inline ::TSD::SpecReflectionSetOpacityArchive* SpecReflectionArchive::release_spec_reflection_set_opacity() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::SpecReflectionSetOpacityArchive* temp = _impl_.spec_reflection_set_opacity_;
  _impl_.spec_reflection_set_opacity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecReflectionSetOpacityArchive* SpecReflectionArchive::unsafe_arena_release_spec_reflection_set_opacity() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecReflectionArchive.spec_reflection_set_opacity)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::SpecReflectionSetOpacityArchive* temp = _impl_.spec_reflection_set_opacity_;
  _impl_.spec_reflection_set_opacity_ = nullptr;
  return temp;
}
inline ::TSD::SpecReflectionSetOpacityArchive* SpecReflectionArchive::_internal_mutable_spec_reflection_set_opacity() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.spec_reflection_set_opacity_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecReflectionSetOpacityArchive>(GetArenaForAllocation());
    _impl_.spec_reflection_set_opacity_ = p;
  }
  return _impl_.spec_reflection_set_opacity_;
}
inline ::TSD::SpecReflectionSetOpacityArchive* SpecReflectionArchive::mutable_spec_reflection_set_opacity() {
  ::TSD::SpecReflectionSetOpacityArchive* _msg = _internal_mutable_spec_reflection_set_opacity();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecReflectionArchive.spec_reflection_set_opacity)
  return _msg;
}
inline void SpecReflectionArchive::set_allocated_spec_reflection_set_opacity(::TSD::SpecReflectionSetOpacityArchive* spec_reflection_set_opacity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_reflection_set_opacity_);
  }
  if (spec_reflection_set_opacity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_reflection_set_opacity));
    if (message_arena != submessage_arena) {
      spec_reflection_set_opacity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_reflection_set_opacity, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.spec_reflection_set_opacity_ = spec_reflection_set_opacity;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecReflectionArchive.spec_reflection_set_opacity)
}

// optional .TSDSOS.SpecSetReflectionArchive spec_set_reflection = 2;
inline bool SpecReflectionArchive::_internal_has_spec_set_reflection() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_set_reflection_ != nullptr);
  return value;
}
inline bool SpecReflectionArchive::has_spec_set_reflection() const {
  return _internal_has_spec_set_reflection();
}
inline void SpecReflectionArchive::clear_spec_set_reflection() {
  if (_impl_.spec_set_reflection_ != nullptr) _impl_.spec_set_reflection_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::TSDSOS::SpecSetReflectionArchive& SpecReflectionArchive::_internal_spec_set_reflection() const {
  const ::TSDSOS::SpecSetReflectionArchive* p = _impl_.spec_set_reflection_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecSetReflectionArchive&>(
      ::TSDSOS::_SpecSetReflectionArchive_default_instance_);
}
inline const ::TSDSOS::SpecSetReflectionArchive& SpecReflectionArchive::spec_set_reflection() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecReflectionArchive.spec_set_reflection)
  return _internal_spec_set_reflection();
}
inline void SpecReflectionArchive::unsafe_arena_set_allocated_spec_set_reflection(
    ::TSDSOS::SpecSetReflectionArchive* spec_set_reflection) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_set_reflection_);
  }
  _impl_.spec_set_reflection_ = spec_set_reflection;
  if (spec_set_reflection) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecReflectionArchive.spec_set_reflection)
}
inline ::TSDSOS::SpecSetReflectionArchive* SpecReflectionArchive::release_spec_set_reflection() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSDSOS::SpecSetReflectionArchive* temp = _impl_.spec_set_reflection_;
  _impl_.spec_set_reflection_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecSetReflectionArchive* SpecReflectionArchive::unsafe_arena_release_spec_set_reflection() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecReflectionArchive.spec_set_reflection)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSDSOS::SpecSetReflectionArchive* temp = _impl_.spec_set_reflection_;
  _impl_.spec_set_reflection_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecSetReflectionArchive* SpecReflectionArchive::_internal_mutable_spec_set_reflection() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.spec_set_reflection_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecSetReflectionArchive>(GetArenaForAllocation());
    _impl_.spec_set_reflection_ = p;
  }
  return _impl_.spec_set_reflection_;
}
inline ::TSDSOS::SpecSetReflectionArchive* SpecReflectionArchive::mutable_spec_set_reflection() {
  ::TSDSOS::SpecSetReflectionArchive* _msg = _internal_mutable_spec_set_reflection();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecReflectionArchive.spec_set_reflection)
  return _msg;
}
inline void SpecReflectionArchive::set_allocated_spec_set_reflection(::TSDSOS::SpecSetReflectionArchive* spec_set_reflection) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.spec_set_reflection_;
  }
  if (spec_set_reflection) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(spec_set_reflection);
    if (message_arena != submessage_arena) {
      spec_set_reflection = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_reflection, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.spec_set_reflection_ = spec_set_reflection;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecReflectionArchive.spec_set_reflection)
}

// -------------------------------------------------------------------

// SpecShadowArchive

// optional .TSDSOS.SpecSetShadowArchive spec_set_shadow = 1;
inline bool SpecShadowArchive::_internal_has_spec_set_shadow() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_set_shadow_ != nullptr);
  return value;
}
inline bool SpecShadowArchive::has_spec_set_shadow() const {
  return _internal_has_spec_set_shadow();
}
inline void SpecShadowArchive::clear_spec_set_shadow() {
  if (_impl_.spec_set_shadow_ != nullptr) _impl_.spec_set_shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::TSDSOS::SpecSetShadowArchive& SpecShadowArchive::_internal_spec_set_shadow() const {
  const ::TSDSOS::SpecSetShadowArchive* p = _impl_.spec_set_shadow_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecSetShadowArchive&>(
      ::TSDSOS::_SpecSetShadowArchive_default_instance_);
}
inline const ::TSDSOS::SpecSetShadowArchive& SpecShadowArchive::spec_set_shadow() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecShadowArchive.spec_set_shadow)
  return _internal_spec_set_shadow();
}
inline void SpecShadowArchive::unsafe_arena_set_allocated_spec_set_shadow(
    ::TSDSOS::SpecSetShadowArchive* spec_set_shadow) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_set_shadow_);
  }
  _impl_.spec_set_shadow_ = spec_set_shadow;
  if (spec_set_shadow) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecShadowArchive.spec_set_shadow)
}
inline ::TSDSOS::SpecSetShadowArchive* SpecShadowArchive::release_spec_set_shadow() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecSetShadowArchive* temp = _impl_.spec_set_shadow_;
  _impl_.spec_set_shadow_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecSetShadowArchive* SpecShadowArchive::unsafe_arena_release_spec_set_shadow() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecShadowArchive.spec_set_shadow)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecSetShadowArchive* temp = _impl_.spec_set_shadow_;
  _impl_.spec_set_shadow_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecSetShadowArchive* SpecShadowArchive::_internal_mutable_spec_set_shadow() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.spec_set_shadow_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecSetShadowArchive>(GetArenaForAllocation());
    _impl_.spec_set_shadow_ = p;
  }
  return _impl_.spec_set_shadow_;
}
inline ::TSDSOS::SpecSetShadowArchive* SpecShadowArchive::mutable_spec_set_shadow() {
  ::TSDSOS::SpecSetShadowArchive* _msg = _internal_mutable_spec_set_shadow();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecShadowArchive.spec_set_shadow)
  return _msg;
}
inline void SpecShadowArchive::set_allocated_spec_set_shadow(::TSDSOS::SpecSetShadowArchive* spec_set_shadow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.spec_set_shadow_;
  }
  if (spec_set_shadow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(spec_set_shadow);
    if (message_arena != submessage_arena) {
      spec_set_shadow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_shadow, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.spec_set_shadow_ = spec_set_shadow;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecShadowArchive.spec_set_shadow)
}

// optional .TSD.SpecShadowSetAngleArchive spec_shadow_set_angle = 2;
inline bool SpecShadowArchive::_internal_has_spec_shadow_set_angle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_shadow_set_angle_ != nullptr);
  return value;
}
inline bool SpecShadowArchive::has_spec_shadow_set_angle() const {
  return _internal_has_spec_shadow_set_angle();
}
inline const ::TSD::SpecShadowSetAngleArchive& SpecShadowArchive::_internal_spec_shadow_set_angle() const {
  const ::TSD::SpecShadowSetAngleArchive* p = _impl_.spec_shadow_set_angle_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecShadowSetAngleArchive&>(
      ::TSD::_SpecShadowSetAngleArchive_default_instance_);
}
inline const ::TSD::SpecShadowSetAngleArchive& SpecShadowArchive::spec_shadow_set_angle() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecShadowArchive.spec_shadow_set_angle)
  return _internal_spec_shadow_set_angle();
}
inline void SpecShadowArchive::unsafe_arena_set_allocated_spec_shadow_set_angle(
    ::TSD::SpecShadowSetAngleArchive* spec_shadow_set_angle) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_shadow_set_angle_);
  }
  _impl_.spec_shadow_set_angle_ = spec_shadow_set_angle;
  if (spec_shadow_set_angle) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecShadowArchive.spec_shadow_set_angle)
}
inline ::TSD::SpecShadowSetAngleArchive* SpecShadowArchive::release_spec_shadow_set_angle() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSD::SpecShadowSetAngleArchive* temp = _impl_.spec_shadow_set_angle_;
  _impl_.spec_shadow_set_angle_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecShadowSetAngleArchive* SpecShadowArchive::unsafe_arena_release_spec_shadow_set_angle() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecShadowArchive.spec_shadow_set_angle)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSD::SpecShadowSetAngleArchive* temp = _impl_.spec_shadow_set_angle_;
  _impl_.spec_shadow_set_angle_ = nullptr;
  return temp;
}
inline ::TSD::SpecShadowSetAngleArchive* SpecShadowArchive::_internal_mutable_spec_shadow_set_angle() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.spec_shadow_set_angle_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecShadowSetAngleArchive>(GetArenaForAllocation());
    _impl_.spec_shadow_set_angle_ = p;
  }
  return _impl_.spec_shadow_set_angle_;
}
inline ::TSD::SpecShadowSetAngleArchive* SpecShadowArchive::mutable_spec_shadow_set_angle() {
  ::TSD::SpecShadowSetAngleArchive* _msg = _internal_mutable_spec_shadow_set_angle();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecShadowArchive.spec_shadow_set_angle)
  return _msg;
}
inline void SpecShadowArchive::set_allocated_spec_shadow_set_angle(::TSD::SpecShadowSetAngleArchive* spec_shadow_set_angle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_shadow_set_angle_);
  }
  if (spec_shadow_set_angle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_shadow_set_angle));
    if (message_arena != submessage_arena) {
      spec_shadow_set_angle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_shadow_set_angle, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.spec_shadow_set_angle_ = spec_shadow_set_angle;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecShadowArchive.spec_shadow_set_angle)
}

// optional .TSD.SpecShadowSetColorArchive spec_shadow_set_color = 3;
inline bool SpecShadowArchive::_internal_has_spec_shadow_set_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_shadow_set_color_ != nullptr);
  return value;
}
inline bool SpecShadowArchive::has_spec_shadow_set_color() const {
  return _internal_has_spec_shadow_set_color();
}
inline const ::TSD::SpecShadowSetColorArchive& SpecShadowArchive::_internal_spec_shadow_set_color() const {
  const ::TSD::SpecShadowSetColorArchive* p = _impl_.spec_shadow_set_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecShadowSetColorArchive&>(
      ::TSD::_SpecShadowSetColorArchive_default_instance_);
}
inline const ::TSD::SpecShadowSetColorArchive& SpecShadowArchive::spec_shadow_set_color() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecShadowArchive.spec_shadow_set_color)
  return _internal_spec_shadow_set_color();
}
inline void SpecShadowArchive::unsafe_arena_set_allocated_spec_shadow_set_color(
    ::TSD::SpecShadowSetColorArchive* spec_shadow_set_color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_shadow_set_color_);
  }
  _impl_.spec_shadow_set_color_ = spec_shadow_set_color;
  if (spec_shadow_set_color) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecShadowArchive.spec_shadow_set_color)
}
inline ::TSD::SpecShadowSetColorArchive* SpecShadowArchive::release_spec_shadow_set_color() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSD::SpecShadowSetColorArchive* temp = _impl_.spec_shadow_set_color_;
  _impl_.spec_shadow_set_color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecShadowSetColorArchive* SpecShadowArchive::unsafe_arena_release_spec_shadow_set_color() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecShadowArchive.spec_shadow_set_color)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSD::SpecShadowSetColorArchive* temp = _impl_.spec_shadow_set_color_;
  _impl_.spec_shadow_set_color_ = nullptr;
  return temp;
}
inline ::TSD::SpecShadowSetColorArchive* SpecShadowArchive::_internal_mutable_spec_shadow_set_color() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.spec_shadow_set_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecShadowSetColorArchive>(GetArenaForAllocation());
    _impl_.spec_shadow_set_color_ = p;
  }
  return _impl_.spec_shadow_set_color_;
}
inline ::TSD::SpecShadowSetColorArchive* SpecShadowArchive::mutable_spec_shadow_set_color() {
  ::TSD::SpecShadowSetColorArchive* _msg = _internal_mutable_spec_shadow_set_color();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecShadowArchive.spec_shadow_set_color)
  return _msg;
}
inline void SpecShadowArchive::set_allocated_spec_shadow_set_color(::TSD::SpecShadowSetColorArchive* spec_shadow_set_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_shadow_set_color_);
  }
  if (spec_shadow_set_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_shadow_set_color));
    if (message_arena != submessage_arena) {
      spec_shadow_set_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_shadow_set_color, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.spec_shadow_set_color_ = spec_shadow_set_color;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecShadowArchive.spec_shadow_set_color)
}

// optional .TSD.SpecShadowSetOffsetArchive spec_shadow_set_offset = 4;
inline bool SpecShadowArchive::_internal_has_spec_shadow_set_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_shadow_set_offset_ != nullptr);
  return value;
}
inline bool SpecShadowArchive::has_spec_shadow_set_offset() const {
  return _internal_has_spec_shadow_set_offset();
}
inline const ::TSD::SpecShadowSetOffsetArchive& SpecShadowArchive::_internal_spec_shadow_set_offset() const {
  const ::TSD::SpecShadowSetOffsetArchive* p = _impl_.spec_shadow_set_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecShadowSetOffsetArchive&>(
      ::TSD::_SpecShadowSetOffsetArchive_default_instance_);
}
inline const ::TSD::SpecShadowSetOffsetArchive& SpecShadowArchive::spec_shadow_set_offset() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecShadowArchive.spec_shadow_set_offset)
  return _internal_spec_shadow_set_offset();
}
inline void SpecShadowArchive::unsafe_arena_set_allocated_spec_shadow_set_offset(
    ::TSD::SpecShadowSetOffsetArchive* spec_shadow_set_offset) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_shadow_set_offset_);
  }
  _impl_.spec_shadow_set_offset_ = spec_shadow_set_offset;
  if (spec_shadow_set_offset) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecShadowArchive.spec_shadow_set_offset)
}
inline ::TSD::SpecShadowSetOffsetArchive* SpecShadowArchive::release_spec_shadow_set_offset() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSD::SpecShadowSetOffsetArchive* temp = _impl_.spec_shadow_set_offset_;
  _impl_.spec_shadow_set_offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecShadowSetOffsetArchive* SpecShadowArchive::unsafe_arena_release_spec_shadow_set_offset() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecShadowArchive.spec_shadow_set_offset)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSD::SpecShadowSetOffsetArchive* temp = _impl_.spec_shadow_set_offset_;
  _impl_.spec_shadow_set_offset_ = nullptr;
  return temp;
}
inline ::TSD::SpecShadowSetOffsetArchive* SpecShadowArchive::_internal_mutable_spec_shadow_set_offset() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.spec_shadow_set_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecShadowSetOffsetArchive>(GetArenaForAllocation());
    _impl_.spec_shadow_set_offset_ = p;
  }
  return _impl_.spec_shadow_set_offset_;
}
inline ::TSD::SpecShadowSetOffsetArchive* SpecShadowArchive::mutable_spec_shadow_set_offset() {
  ::TSD::SpecShadowSetOffsetArchive* _msg = _internal_mutable_spec_shadow_set_offset();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecShadowArchive.spec_shadow_set_offset)
  return _msg;
}
inline void SpecShadowArchive::set_allocated_spec_shadow_set_offset(::TSD::SpecShadowSetOffsetArchive* spec_shadow_set_offset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_shadow_set_offset_);
  }
  if (spec_shadow_set_offset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_shadow_set_offset));
    if (message_arena != submessage_arena) {
      spec_shadow_set_offset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_shadow_set_offset, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.spec_shadow_set_offset_ = spec_shadow_set_offset;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecShadowArchive.spec_shadow_set_offset)
}

// optional .TSD.SpecShadowSetOpacityArchive spec_shadow_set_opacity = 5;
inline bool SpecShadowArchive::_internal_has_spec_shadow_set_opacity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_shadow_set_opacity_ != nullptr);
  return value;
}
inline bool SpecShadowArchive::has_spec_shadow_set_opacity() const {
  return _internal_has_spec_shadow_set_opacity();
}
inline const ::TSD::SpecShadowSetOpacityArchive& SpecShadowArchive::_internal_spec_shadow_set_opacity() const {
  const ::TSD::SpecShadowSetOpacityArchive* p = _impl_.spec_shadow_set_opacity_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecShadowSetOpacityArchive&>(
      ::TSD::_SpecShadowSetOpacityArchive_default_instance_);
}
inline const ::TSD::SpecShadowSetOpacityArchive& SpecShadowArchive::spec_shadow_set_opacity() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecShadowArchive.spec_shadow_set_opacity)
  return _internal_spec_shadow_set_opacity();
}
inline void SpecShadowArchive::unsafe_arena_set_allocated_spec_shadow_set_opacity(
    ::TSD::SpecShadowSetOpacityArchive* spec_shadow_set_opacity) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_shadow_set_opacity_);
  }
  _impl_.spec_shadow_set_opacity_ = spec_shadow_set_opacity;
  if (spec_shadow_set_opacity) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecShadowArchive.spec_shadow_set_opacity)
}
inline ::TSD::SpecShadowSetOpacityArchive* SpecShadowArchive::release_spec_shadow_set_opacity() {
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::TSD::SpecShadowSetOpacityArchive* temp = _impl_.spec_shadow_set_opacity_;
  _impl_.spec_shadow_set_opacity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecShadowSetOpacityArchive* SpecShadowArchive::unsafe_arena_release_spec_shadow_set_opacity() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecShadowArchive.spec_shadow_set_opacity)
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::TSD::SpecShadowSetOpacityArchive* temp = _impl_.spec_shadow_set_opacity_;
  _impl_.spec_shadow_set_opacity_ = nullptr;
  return temp;
}
inline ::TSD::SpecShadowSetOpacityArchive* SpecShadowArchive::_internal_mutable_spec_shadow_set_opacity() {
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.spec_shadow_set_opacity_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecShadowSetOpacityArchive>(GetArenaForAllocation());
    _impl_.spec_shadow_set_opacity_ = p;
  }
  return _impl_.spec_shadow_set_opacity_;
}
inline ::TSD::SpecShadowSetOpacityArchive* SpecShadowArchive::mutable_spec_shadow_set_opacity() {
  ::TSD::SpecShadowSetOpacityArchive* _msg = _internal_mutable_spec_shadow_set_opacity();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecShadowArchive.spec_shadow_set_opacity)
  return _msg;
}
inline void SpecShadowArchive::set_allocated_spec_shadow_set_opacity(::TSD::SpecShadowSetOpacityArchive* spec_shadow_set_opacity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_shadow_set_opacity_);
  }
  if (spec_shadow_set_opacity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_shadow_set_opacity));
    if (message_arena != submessage_arena) {
      spec_shadow_set_opacity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_shadow_set_opacity, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.spec_shadow_set_opacity_ = spec_shadow_set_opacity;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecShadowArchive.spec_shadow_set_opacity)
}

// optional .TSD.SpecShadowSetRadiusArchive spec_shadow_set_radius = 6;
inline bool SpecShadowArchive::_internal_has_spec_shadow_set_radius() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_shadow_set_radius_ != nullptr);
  return value;
}
inline bool SpecShadowArchive::has_spec_shadow_set_radius() const {
  return _internal_has_spec_shadow_set_radius();
}
inline const ::TSD::SpecShadowSetRadiusArchive& SpecShadowArchive::_internal_spec_shadow_set_radius() const {
  const ::TSD::SpecShadowSetRadiusArchive* p = _impl_.spec_shadow_set_radius_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecShadowSetRadiusArchive&>(
      ::TSD::_SpecShadowSetRadiusArchive_default_instance_);
}
inline const ::TSD::SpecShadowSetRadiusArchive& SpecShadowArchive::spec_shadow_set_radius() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecShadowArchive.spec_shadow_set_radius)
  return _internal_spec_shadow_set_radius();
}
inline void SpecShadowArchive::unsafe_arena_set_allocated_spec_shadow_set_radius(
    ::TSD::SpecShadowSetRadiusArchive* spec_shadow_set_radius) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_shadow_set_radius_);
  }
  _impl_.spec_shadow_set_radius_ = spec_shadow_set_radius;
  if (spec_shadow_set_radius) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecShadowArchive.spec_shadow_set_radius)
}
inline ::TSD::SpecShadowSetRadiusArchive* SpecShadowArchive::release_spec_shadow_set_radius() {
  _impl_._has_bits_[0] &= ~0x00000020u;
  ::TSD::SpecShadowSetRadiusArchive* temp = _impl_.spec_shadow_set_radius_;
  _impl_.spec_shadow_set_radius_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecShadowSetRadiusArchive* SpecShadowArchive::unsafe_arena_release_spec_shadow_set_radius() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecShadowArchive.spec_shadow_set_radius)
  _impl_._has_bits_[0] &= ~0x00000020u;
  ::TSD::SpecShadowSetRadiusArchive* temp = _impl_.spec_shadow_set_radius_;
  _impl_.spec_shadow_set_radius_ = nullptr;
  return temp;
}
inline ::TSD::SpecShadowSetRadiusArchive* SpecShadowArchive::_internal_mutable_spec_shadow_set_radius() {
  _impl_._has_bits_[0] |= 0x00000020u;
  if (_impl_.spec_shadow_set_radius_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecShadowSetRadiusArchive>(GetArenaForAllocation());
    _impl_.spec_shadow_set_radius_ = p;
  }
  return _impl_.spec_shadow_set_radius_;
}
inline ::TSD::SpecShadowSetRadiusArchive* SpecShadowArchive::mutable_spec_shadow_set_radius() {
  ::TSD::SpecShadowSetRadiusArchive* _msg = _internal_mutable_spec_shadow_set_radius();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecShadowArchive.spec_shadow_set_radius)
  return _msg;
}
inline void SpecShadowArchive::set_allocated_spec_shadow_set_radius(::TSD::SpecShadowSetRadiusArchive* spec_shadow_set_radius) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_shadow_set_radius_);
  }
  if (spec_shadow_set_radius) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_shadow_set_radius));
    if (message_arena != submessage_arena) {
      spec_shadow_set_radius = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_shadow_set_radius, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.spec_shadow_set_radius_ = spec_shadow_set_radius;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecShadowArchive.spec_shadow_set_radius)
}

// -------------------------------------------------------------------

// SpecStrokeArchive

// optional .TSD.SpecFrameSetAssetScaleArchive spec_frame_set_asset_scale = 1;
inline bool SpecStrokeArchive::_internal_has_spec_frame_set_asset_scale() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_frame_set_asset_scale_ != nullptr);
  return value;
}
inline bool SpecStrokeArchive::has_spec_frame_set_asset_scale() const {
  return _internal_has_spec_frame_set_asset_scale();
}
inline const ::TSD::SpecFrameSetAssetScaleArchive& SpecStrokeArchive::_internal_spec_frame_set_asset_scale() const {
  const ::TSD::SpecFrameSetAssetScaleArchive* p = _impl_.spec_frame_set_asset_scale_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecFrameSetAssetScaleArchive&>(
      ::TSD::_SpecFrameSetAssetScaleArchive_default_instance_);
}
inline const ::TSD::SpecFrameSetAssetScaleArchive& SpecStrokeArchive::spec_frame_set_asset_scale() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecStrokeArchive.spec_frame_set_asset_scale)
  return _internal_spec_frame_set_asset_scale();
}
inline void SpecStrokeArchive::unsafe_arena_set_allocated_spec_frame_set_asset_scale(
    ::TSD::SpecFrameSetAssetScaleArchive* spec_frame_set_asset_scale) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_frame_set_asset_scale_);
  }
  _impl_.spec_frame_set_asset_scale_ = spec_frame_set_asset_scale;
  if (spec_frame_set_asset_scale) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecStrokeArchive.spec_frame_set_asset_scale)
}
inline ::TSD::SpecFrameSetAssetScaleArchive* SpecStrokeArchive::release_spec_frame_set_asset_scale() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::SpecFrameSetAssetScaleArchive* temp = _impl_.spec_frame_set_asset_scale_;
  _impl_.spec_frame_set_asset_scale_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecFrameSetAssetScaleArchive* SpecStrokeArchive::unsafe_arena_release_spec_frame_set_asset_scale() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecStrokeArchive.spec_frame_set_asset_scale)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSD::SpecFrameSetAssetScaleArchive* temp = _impl_.spec_frame_set_asset_scale_;
  _impl_.spec_frame_set_asset_scale_ = nullptr;
  return temp;
}
inline ::TSD::SpecFrameSetAssetScaleArchive* SpecStrokeArchive::_internal_mutable_spec_frame_set_asset_scale() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.spec_frame_set_asset_scale_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecFrameSetAssetScaleArchive>(GetArenaForAllocation());
    _impl_.spec_frame_set_asset_scale_ = p;
  }
  return _impl_.spec_frame_set_asset_scale_;
}
inline ::TSD::SpecFrameSetAssetScaleArchive* SpecStrokeArchive::mutable_spec_frame_set_asset_scale() {
  ::TSD::SpecFrameSetAssetScaleArchive* _msg = _internal_mutable_spec_frame_set_asset_scale();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecStrokeArchive.spec_frame_set_asset_scale)
  return _msg;
}
inline void SpecStrokeArchive::set_allocated_spec_frame_set_asset_scale(::TSD::SpecFrameSetAssetScaleArchive* spec_frame_set_asset_scale) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_frame_set_asset_scale_);
  }
  if (spec_frame_set_asset_scale) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_frame_set_asset_scale));
    if (message_arena != submessage_arena) {
      spec_frame_set_asset_scale = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_frame_set_asset_scale, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.spec_frame_set_asset_scale_ = spec_frame_set_asset_scale;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecStrokeArchive.spec_frame_set_asset_scale)
}

// optional .TSDSOS.SpecSetStrokeArchive spec_set_stroke = 2;
inline bool SpecStrokeArchive::_internal_has_spec_set_stroke() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_set_stroke_ != nullptr);
  return value;
}
inline bool SpecStrokeArchive::has_spec_set_stroke() const {
  return _internal_has_spec_set_stroke();
}
inline void SpecStrokeArchive::clear_spec_set_stroke() {
  if (_impl_.spec_set_stroke_ != nullptr) _impl_.spec_set_stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::TSDSOS::SpecSetStrokeArchive& SpecStrokeArchive::_internal_spec_set_stroke() const {
  const ::TSDSOS::SpecSetStrokeArchive* p = _impl_.spec_set_stroke_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecSetStrokeArchive&>(
      ::TSDSOS::_SpecSetStrokeArchive_default_instance_);
}
inline const ::TSDSOS::SpecSetStrokeArchive& SpecStrokeArchive::spec_set_stroke() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecStrokeArchive.spec_set_stroke)
  return _internal_spec_set_stroke();
}
inline void SpecStrokeArchive::unsafe_arena_set_allocated_spec_set_stroke(
    ::TSDSOS::SpecSetStrokeArchive* spec_set_stroke) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_set_stroke_);
  }
  _impl_.spec_set_stroke_ = spec_set_stroke;
  if (spec_set_stroke) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecStrokeArchive.spec_set_stroke)
}
inline ::TSDSOS::SpecSetStrokeArchive* SpecStrokeArchive::release_spec_set_stroke() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSDSOS::SpecSetStrokeArchive* temp = _impl_.spec_set_stroke_;
  _impl_.spec_set_stroke_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecSetStrokeArchive* SpecStrokeArchive::unsafe_arena_release_spec_set_stroke() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecStrokeArchive.spec_set_stroke)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSDSOS::SpecSetStrokeArchive* temp = _impl_.spec_set_stroke_;
  _impl_.spec_set_stroke_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecSetStrokeArchive* SpecStrokeArchive::_internal_mutable_spec_set_stroke() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.spec_set_stroke_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecSetStrokeArchive>(GetArenaForAllocation());
    _impl_.spec_set_stroke_ = p;
  }
  return _impl_.spec_set_stroke_;
}
inline ::TSDSOS::SpecSetStrokeArchive* SpecStrokeArchive::mutable_spec_set_stroke() {
  ::TSDSOS::SpecSetStrokeArchive* _msg = _internal_mutable_spec_set_stroke();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecStrokeArchive.spec_set_stroke)
  return _msg;
}
inline void SpecStrokeArchive::set_allocated_spec_set_stroke(::TSDSOS::SpecSetStrokeArchive* spec_set_stroke) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.spec_set_stroke_;
  }
  if (spec_set_stroke) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(spec_set_stroke);
    if (message_arena != submessage_arena) {
      spec_set_stroke = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_set_stroke, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.spec_set_stroke_ = spec_set_stroke;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecStrokeArchive.spec_set_stroke)
}

// optional .TSD.SpecStrokeSetColorArchive spec_stroke_set_color = 3;
inline bool SpecStrokeArchive::_internal_has_spec_stroke_set_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_stroke_set_color_ != nullptr);
  return value;
}
inline bool SpecStrokeArchive::has_spec_stroke_set_color() const {
  return _internal_has_spec_stroke_set_color();
}
inline const ::TSD::SpecStrokeSetColorArchive& SpecStrokeArchive::_internal_spec_stroke_set_color() const {
  const ::TSD::SpecStrokeSetColorArchive* p = _impl_.spec_stroke_set_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecStrokeSetColorArchive&>(
      ::TSD::_SpecStrokeSetColorArchive_default_instance_);
}
inline const ::TSD::SpecStrokeSetColorArchive& SpecStrokeArchive::spec_stroke_set_color() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecStrokeArchive.spec_stroke_set_color)
  return _internal_spec_stroke_set_color();
}
inline void SpecStrokeArchive::unsafe_arena_set_allocated_spec_stroke_set_color(
    ::TSD::SpecStrokeSetColorArchive* spec_stroke_set_color) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_stroke_set_color_);
  }
  _impl_.spec_stroke_set_color_ = spec_stroke_set_color;
  if (spec_stroke_set_color) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecStrokeArchive.spec_stroke_set_color)
}
inline ::TSD::SpecStrokeSetColorArchive* SpecStrokeArchive::release_spec_stroke_set_color() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSD::SpecStrokeSetColorArchive* temp = _impl_.spec_stroke_set_color_;
  _impl_.spec_stroke_set_color_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecStrokeSetColorArchive* SpecStrokeArchive::unsafe_arena_release_spec_stroke_set_color() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecStrokeArchive.spec_stroke_set_color)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSD::SpecStrokeSetColorArchive* temp = _impl_.spec_stroke_set_color_;
  _impl_.spec_stroke_set_color_ = nullptr;
  return temp;
}
inline ::TSD::SpecStrokeSetColorArchive* SpecStrokeArchive::_internal_mutable_spec_stroke_set_color() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.spec_stroke_set_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecStrokeSetColorArchive>(GetArenaForAllocation());
    _impl_.spec_stroke_set_color_ = p;
  }
  return _impl_.spec_stroke_set_color_;
}
inline ::TSD::SpecStrokeSetColorArchive* SpecStrokeArchive::mutable_spec_stroke_set_color() {
  ::TSD::SpecStrokeSetColorArchive* _msg = _internal_mutable_spec_stroke_set_color();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecStrokeArchive.spec_stroke_set_color)
  return _msg;
}
inline void SpecStrokeArchive::set_allocated_spec_stroke_set_color(::TSD::SpecStrokeSetColorArchive* spec_stroke_set_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_stroke_set_color_);
  }
  if (spec_stroke_set_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_stroke_set_color));
    if (message_arena != submessage_arena) {
      spec_stroke_set_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_stroke_set_color, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.spec_stroke_set_color_ = spec_stroke_set_color;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecStrokeArchive.spec_stroke_set_color)
}

// optional .TSD.SpecStrokeSetPatternArchive spec_stroke_set_pattern = 4;
inline bool SpecStrokeArchive::_internal_has_spec_stroke_set_pattern() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_stroke_set_pattern_ != nullptr);
  return value;
}
inline bool SpecStrokeArchive::has_spec_stroke_set_pattern() const {
  return _internal_has_spec_stroke_set_pattern();
}
inline const ::TSD::SpecStrokeSetPatternArchive& SpecStrokeArchive::_internal_spec_stroke_set_pattern() const {
  const ::TSD::SpecStrokeSetPatternArchive* p = _impl_.spec_stroke_set_pattern_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecStrokeSetPatternArchive&>(
      ::TSD::_SpecStrokeSetPatternArchive_default_instance_);
}
inline const ::TSD::SpecStrokeSetPatternArchive& SpecStrokeArchive::spec_stroke_set_pattern() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecStrokeArchive.spec_stroke_set_pattern)
  return _internal_spec_stroke_set_pattern();
}
inline void SpecStrokeArchive::unsafe_arena_set_allocated_spec_stroke_set_pattern(
    ::TSD::SpecStrokeSetPatternArchive* spec_stroke_set_pattern) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_stroke_set_pattern_);
  }
  _impl_.spec_stroke_set_pattern_ = spec_stroke_set_pattern;
  if (spec_stroke_set_pattern) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecStrokeArchive.spec_stroke_set_pattern)
}
inline ::TSD::SpecStrokeSetPatternArchive* SpecStrokeArchive::release_spec_stroke_set_pattern() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSD::SpecStrokeSetPatternArchive* temp = _impl_.spec_stroke_set_pattern_;
  _impl_.spec_stroke_set_pattern_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecStrokeSetPatternArchive* SpecStrokeArchive::unsafe_arena_release_spec_stroke_set_pattern() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecStrokeArchive.spec_stroke_set_pattern)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSD::SpecStrokeSetPatternArchive* temp = _impl_.spec_stroke_set_pattern_;
  _impl_.spec_stroke_set_pattern_ = nullptr;
  return temp;
}
inline ::TSD::SpecStrokeSetPatternArchive* SpecStrokeArchive::_internal_mutable_spec_stroke_set_pattern() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.spec_stroke_set_pattern_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecStrokeSetPatternArchive>(GetArenaForAllocation());
    _impl_.spec_stroke_set_pattern_ = p;
  }
  return _impl_.spec_stroke_set_pattern_;
}
inline ::TSD::SpecStrokeSetPatternArchive* SpecStrokeArchive::mutable_spec_stroke_set_pattern() {
  ::TSD::SpecStrokeSetPatternArchive* _msg = _internal_mutable_spec_stroke_set_pattern();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecStrokeArchive.spec_stroke_set_pattern)
  return _msg;
}
inline void SpecStrokeArchive::set_allocated_spec_stroke_set_pattern(::TSD::SpecStrokeSetPatternArchive* spec_stroke_set_pattern) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_stroke_set_pattern_);
  }
  if (spec_stroke_set_pattern) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_stroke_set_pattern));
    if (message_arena != submessage_arena) {
      spec_stroke_set_pattern = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_stroke_set_pattern, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.spec_stroke_set_pattern_ = spec_stroke_set_pattern;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecStrokeArchive.spec_stroke_set_pattern)
}

// optional .TSD.SpecStrokeSetWidthArchive spec_stroke_set_width = 5;
inline bool SpecStrokeArchive::_internal_has_spec_stroke_set_width() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spec_stroke_set_width_ != nullptr);
  return value;
}
inline bool SpecStrokeArchive::has_spec_stroke_set_width() const {
  return _internal_has_spec_stroke_set_width();
}
inline const ::TSD::SpecStrokeSetWidthArchive& SpecStrokeArchive::_internal_spec_stroke_set_width() const {
  const ::TSD::SpecStrokeSetWidthArchive* p = _impl_.spec_stroke_set_width_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSD::SpecStrokeSetWidthArchive&>(
      ::TSD::_SpecStrokeSetWidthArchive_default_instance_);
}
inline const ::TSD::SpecStrokeSetWidthArchive& SpecStrokeArchive::spec_stroke_set_width() const {
  // @@protoc_insertion_point(field_get:TSDSOS.SpecStrokeArchive.spec_stroke_set_width)
  return _internal_spec_stroke_set_width();
}
inline void SpecStrokeArchive::unsafe_arena_set_allocated_spec_stroke_set_width(
    ::TSD::SpecStrokeSetWidthArchive* spec_stroke_set_width) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_stroke_set_width_);
  }
  _impl_.spec_stroke_set_width_ = spec_stroke_set_width;
  if (spec_stroke_set_width) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.SpecStrokeArchive.spec_stroke_set_width)
}
inline ::TSD::SpecStrokeSetWidthArchive* SpecStrokeArchive::release_spec_stroke_set_width() {
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::TSD::SpecStrokeSetWidthArchive* temp = _impl_.spec_stroke_set_width_;
  _impl_.spec_stroke_set_width_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSD::SpecStrokeSetWidthArchive* SpecStrokeArchive::unsafe_arena_release_spec_stroke_set_width() {
  // @@protoc_insertion_point(field_release:TSDSOS.SpecStrokeArchive.spec_stroke_set_width)
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::TSD::SpecStrokeSetWidthArchive* temp = _impl_.spec_stroke_set_width_;
  _impl_.spec_stroke_set_width_ = nullptr;
  return temp;
}
inline ::TSD::SpecStrokeSetWidthArchive* SpecStrokeArchive::_internal_mutable_spec_stroke_set_width() {
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.spec_stroke_set_width_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSD::SpecStrokeSetWidthArchive>(GetArenaForAllocation());
    _impl_.spec_stroke_set_width_ = p;
  }
  return _impl_.spec_stroke_set_width_;
}
inline ::TSD::SpecStrokeSetWidthArchive* SpecStrokeArchive::mutable_spec_stroke_set_width() {
  ::TSD::SpecStrokeSetWidthArchive* _msg = _internal_mutable_spec_stroke_set_width();
  // @@protoc_insertion_point(field_mutable:TSDSOS.SpecStrokeArchive.spec_stroke_set_width)
  return _msg;
}
inline void SpecStrokeArchive::set_allocated_spec_stroke_set_width(::TSD::SpecStrokeSetWidthArchive* spec_stroke_set_width) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spec_stroke_set_width_);
  }
  if (spec_stroke_set_width) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spec_stroke_set_width));
    if (message_arena != submessage_arena) {
      spec_stroke_set_width = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spec_stroke_set_width, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.spec_stroke_set_width_ = spec_stroke_set_width;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.SpecStrokeArchive.spec_stroke_set_width)
}

// -------------------------------------------------------------------

// BaseShapeStylePropertyChangeSetArchive

// optional .TSDSOS.SpecFillArchive fill = 1;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_fill() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fill_ != nullptr);
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_fill() const {
  return _internal_has_fill();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_fill() {
  if (_impl_.fill_ != nullptr) _impl_.fill_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::TSDSOS::SpecFillArchive& BaseShapeStylePropertyChangeSetArchive::_internal_fill() const {
  const ::TSDSOS::SpecFillArchive* p = _impl_.fill_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecFillArchive&>(
      ::TSDSOS::_SpecFillArchive_default_instance_);
}
inline const ::TSDSOS::SpecFillArchive& BaseShapeStylePropertyChangeSetArchive::fill() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.fill)
  return _internal_fill();
}
inline void BaseShapeStylePropertyChangeSetArchive::unsafe_arena_set_allocated_fill(
    ::TSDSOS::SpecFillArchive* fill) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.fill_);
  }
  _impl_.fill_ = fill;
  if (fill) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.fill)
}
inline ::TSDSOS::SpecFillArchive* BaseShapeStylePropertyChangeSetArchive::release_fill() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecFillArchive* temp = _impl_.fill_;
  _impl_.fill_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecFillArchive* BaseShapeStylePropertyChangeSetArchive::unsafe_arena_release_fill() {
  // @@protoc_insertion_point(field_release:TSDSOS.BaseShapeStylePropertyChangeSetArchive.fill)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecFillArchive* temp = _impl_.fill_;
  _impl_.fill_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecFillArchive* BaseShapeStylePropertyChangeSetArchive::_internal_mutable_fill() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.fill_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecFillArchive>(GetArenaForAllocation());
    _impl_.fill_ = p;
  }
  return _impl_.fill_;
}
inline ::TSDSOS::SpecFillArchive* BaseShapeStylePropertyChangeSetArchive::mutable_fill() {
  ::TSDSOS::SpecFillArchive* _msg = _internal_mutable_fill();
  // @@protoc_insertion_point(field_mutable:TSDSOS.BaseShapeStylePropertyChangeSetArchive.fill)
  return _msg;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_allocated_fill(::TSDSOS::SpecFillArchive* fill) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.fill_;
  }
  if (fill) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fill);
    if (message_arena != submessage_arena) {
      fill = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fill, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.fill_ = fill;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.fill)
}

// optional bool fill_undefined = 2;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_fill_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_fill_undefined() const {
  return _internal_has_fill_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_fill_undefined() {
  _impl_.fill_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_fill_undefined() const {
  return _impl_.fill_undefined_;
}
inline bool BaseShapeStylePropertyChangeSetArchive::fill_undefined() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.fill_undefined)
  return _internal_fill_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::_internal_set_fill_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.fill_undefined_ = value;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_fill_undefined(bool value) {
  _internal_set_fill_undefined(value);
  // @@protoc_insertion_point(field_set:TSDSOS.BaseShapeStylePropertyChangeSetArchive.fill_undefined)
}

// optional .TSDSOS.SpecStrokeArchive stroke = 3;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_stroke() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stroke_ != nullptr);
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_stroke() const {
  return _internal_has_stroke();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_stroke() {
  if (_impl_.stroke_ != nullptr) _impl_.stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::TSDSOS::SpecStrokeArchive& BaseShapeStylePropertyChangeSetArchive::_internal_stroke() const {
  const ::TSDSOS::SpecStrokeArchive* p = _impl_.stroke_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecStrokeArchive&>(
      ::TSDSOS::_SpecStrokeArchive_default_instance_);
}
inline const ::TSDSOS::SpecStrokeArchive& BaseShapeStylePropertyChangeSetArchive::stroke() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.stroke)
  return _internal_stroke();
}
inline void BaseShapeStylePropertyChangeSetArchive::unsafe_arena_set_allocated_stroke(
    ::TSDSOS::SpecStrokeArchive* stroke) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stroke_);
  }
  _impl_.stroke_ = stroke;
  if (stroke) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.stroke)
}
inline ::TSDSOS::SpecStrokeArchive* BaseShapeStylePropertyChangeSetArchive::release_stroke() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSDSOS::SpecStrokeArchive* temp = _impl_.stroke_;
  _impl_.stroke_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecStrokeArchive* BaseShapeStylePropertyChangeSetArchive::unsafe_arena_release_stroke() {
  // @@protoc_insertion_point(field_release:TSDSOS.BaseShapeStylePropertyChangeSetArchive.stroke)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSDSOS::SpecStrokeArchive* temp = _impl_.stroke_;
  _impl_.stroke_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecStrokeArchive* BaseShapeStylePropertyChangeSetArchive::_internal_mutable_stroke() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.stroke_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecStrokeArchive>(GetArenaForAllocation());
    _impl_.stroke_ = p;
  }
  return _impl_.stroke_;
}
inline ::TSDSOS::SpecStrokeArchive* BaseShapeStylePropertyChangeSetArchive::mutable_stroke() {
  ::TSDSOS::SpecStrokeArchive* _msg = _internal_mutable_stroke();
  // @@protoc_insertion_point(field_mutable:TSDSOS.BaseShapeStylePropertyChangeSetArchive.stroke)
  return _msg;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_allocated_stroke(::TSDSOS::SpecStrokeArchive* stroke) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.stroke_;
  }
  if (stroke) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(stroke);
    if (message_arena != submessage_arena) {
      stroke = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stroke, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.stroke_ = stroke;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.stroke)
}

// optional bool stroke_undefined = 4;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_stroke_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_stroke_undefined() const {
  return _internal_has_stroke_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_stroke_undefined() {
  _impl_.stroke_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_stroke_undefined() const {
  return _impl_.stroke_undefined_;
}
inline bool BaseShapeStylePropertyChangeSetArchive::stroke_undefined() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.stroke_undefined)
  return _internal_stroke_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::_internal_set_stroke_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.stroke_undefined_ = value;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_stroke_undefined(bool value) {
  _internal_set_stroke_undefined(value);
  // @@protoc_insertion_point(field_set:TSDSOS.BaseShapeStylePropertyChangeSetArchive.stroke_undefined)
}

// optional .TSSSOS.SpecDoubleArchive opacity = 5;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_opacity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.opacity_ != nullptr);
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_opacity() const {
  return _internal_has_opacity();
}
inline const ::TSSSOS::SpecDoubleArchive& BaseShapeStylePropertyChangeSetArchive::_internal_opacity() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.opacity_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& BaseShapeStylePropertyChangeSetArchive::opacity() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.opacity)
  return _internal_opacity();
}
inline void BaseShapeStylePropertyChangeSetArchive::unsafe_arena_set_allocated_opacity(
    ::TSSSOS::SpecDoubleArchive* opacity) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.opacity_);
  }
  _impl_.opacity_ = opacity;
  if (opacity) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.opacity)
}
inline ::TSSSOS::SpecDoubleArchive* BaseShapeStylePropertyChangeSetArchive::release_opacity() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.opacity_;
  _impl_.opacity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* BaseShapeStylePropertyChangeSetArchive::unsafe_arena_release_opacity() {
  // @@protoc_insertion_point(field_release:TSDSOS.BaseShapeStylePropertyChangeSetArchive.opacity)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.opacity_;
  _impl_.opacity_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* BaseShapeStylePropertyChangeSetArchive::_internal_mutable_opacity() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.opacity_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.opacity_ = p;
  }
  return _impl_.opacity_;
}
inline ::TSSSOS::SpecDoubleArchive* BaseShapeStylePropertyChangeSetArchive::mutable_opacity() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_opacity();
  // @@protoc_insertion_point(field_mutable:TSDSOS.BaseShapeStylePropertyChangeSetArchive.opacity)
  return _msg;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_allocated_opacity(::TSSSOS::SpecDoubleArchive* opacity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.opacity_);
  }
  if (opacity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(opacity));
    if (message_arena != submessage_arena) {
      opacity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, opacity, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.opacity_ = opacity;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.opacity)
}

// optional bool opacity_undefined = 6;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_opacity_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_opacity_undefined() const {
  return _internal_has_opacity_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_opacity_undefined() {
  _impl_.opacity_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_opacity_undefined() const {
  return _impl_.opacity_undefined_;
}
inline bool BaseShapeStylePropertyChangeSetArchive::opacity_undefined() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.opacity_undefined)
  return _internal_opacity_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::_internal_set_opacity_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.opacity_undefined_ = value;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_opacity_undefined(bool value) {
  _internal_set_opacity_undefined(value);
  // @@protoc_insertion_point(field_set:TSDSOS.BaseShapeStylePropertyChangeSetArchive.opacity_undefined)
}

// optional .TSDSOS.SpecShadowArchive shadow = 7;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_shadow() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_ != nullptr);
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_shadow() const {
  return _internal_has_shadow();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_shadow() {
  if (_impl_.shadow_ != nullptr) _impl_.shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::TSDSOS::SpecShadowArchive& BaseShapeStylePropertyChangeSetArchive::_internal_shadow() const {
  const ::TSDSOS::SpecShadowArchive* p = _impl_.shadow_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecShadowArchive&>(
      ::TSDSOS::_SpecShadowArchive_default_instance_);
}
inline const ::TSDSOS::SpecShadowArchive& BaseShapeStylePropertyChangeSetArchive::shadow() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.shadow)
  return _internal_shadow();
}
inline void BaseShapeStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow(
    ::TSDSOS::SpecShadowArchive* shadow) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_);
  }
  _impl_.shadow_ = shadow;
  if (shadow) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.shadow)
}
inline ::TSDSOS::SpecShadowArchive* BaseShapeStylePropertyChangeSetArchive::release_shadow() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSDSOS::SpecShadowArchive* temp = _impl_.shadow_;
  _impl_.shadow_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecShadowArchive* BaseShapeStylePropertyChangeSetArchive::unsafe_arena_release_shadow() {
  // @@protoc_insertion_point(field_release:TSDSOS.BaseShapeStylePropertyChangeSetArchive.shadow)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSDSOS::SpecShadowArchive* temp = _impl_.shadow_;
  _impl_.shadow_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecShadowArchive* BaseShapeStylePropertyChangeSetArchive::_internal_mutable_shadow() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.shadow_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecShadowArchive>(GetArenaForAllocation());
    _impl_.shadow_ = p;
  }
  return _impl_.shadow_;
}
inline ::TSDSOS::SpecShadowArchive* BaseShapeStylePropertyChangeSetArchive::mutable_shadow() {
  ::TSDSOS::SpecShadowArchive* _msg = _internal_mutable_shadow();
  // @@protoc_insertion_point(field_mutable:TSDSOS.BaseShapeStylePropertyChangeSetArchive.shadow)
  return _msg;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_allocated_shadow(::TSDSOS::SpecShadowArchive* shadow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.shadow_;
  }
  if (shadow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(shadow);
    if (message_arena != submessage_arena) {
      shadow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.shadow_ = shadow;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.shadow)
}

// optional bool shadow_undefined = 8;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_shadow_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_shadow_undefined() const {
  return _internal_has_shadow_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_shadow_undefined() {
  _impl_.shadow_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_shadow_undefined() const {
  return _impl_.shadow_undefined_;
}
inline bool BaseShapeStylePropertyChangeSetArchive::shadow_undefined() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.shadow_undefined)
  return _internal_shadow_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::_internal_set_shadow_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.shadow_undefined_ = value;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_shadow_undefined(bool value) {
  _internal_set_shadow_undefined(value);
  // @@protoc_insertion_point(field_set:TSDSOS.BaseShapeStylePropertyChangeSetArchive.shadow_undefined)
}

// optional .TSDSOS.SpecReflectionArchive reflection = 9;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_reflection() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.reflection_ != nullptr);
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_reflection() const {
  return _internal_has_reflection();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_reflection() {
  if (_impl_.reflection_ != nullptr) _impl_.reflection_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::TSDSOS::SpecReflectionArchive& BaseShapeStylePropertyChangeSetArchive::_internal_reflection() const {
  const ::TSDSOS::SpecReflectionArchive* p = _impl_.reflection_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecReflectionArchive&>(
      ::TSDSOS::_SpecReflectionArchive_default_instance_);
}
inline const ::TSDSOS::SpecReflectionArchive& BaseShapeStylePropertyChangeSetArchive::reflection() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.reflection)
  return _internal_reflection();
}
inline void BaseShapeStylePropertyChangeSetArchive::unsafe_arena_set_allocated_reflection(
    ::TSDSOS::SpecReflectionArchive* reflection) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reflection_);
  }
  _impl_.reflection_ = reflection;
  if (reflection) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.reflection)
}
inline ::TSDSOS::SpecReflectionArchive* BaseShapeStylePropertyChangeSetArchive::release_reflection() {
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::TSDSOS::SpecReflectionArchive* temp = _impl_.reflection_;
  _impl_.reflection_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecReflectionArchive* BaseShapeStylePropertyChangeSetArchive::unsafe_arena_release_reflection() {
  // @@protoc_insertion_point(field_release:TSDSOS.BaseShapeStylePropertyChangeSetArchive.reflection)
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::TSDSOS::SpecReflectionArchive* temp = _impl_.reflection_;
  _impl_.reflection_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecReflectionArchive* BaseShapeStylePropertyChangeSetArchive::_internal_mutable_reflection() {
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.reflection_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecReflectionArchive>(GetArenaForAllocation());
    _impl_.reflection_ = p;
  }
  return _impl_.reflection_;
}
inline ::TSDSOS::SpecReflectionArchive* BaseShapeStylePropertyChangeSetArchive::mutable_reflection() {
  ::TSDSOS::SpecReflectionArchive* _msg = _internal_mutable_reflection();
  // @@protoc_insertion_point(field_mutable:TSDSOS.BaseShapeStylePropertyChangeSetArchive.reflection)
  return _msg;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_allocated_reflection(::TSDSOS::SpecReflectionArchive* reflection) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.reflection_;
  }
  if (reflection) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(reflection);
    if (message_arena != submessage_arena) {
      reflection = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reflection, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.reflection_ = reflection;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.reflection)
}

// optional bool reflection_undefined = 10;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_reflection_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_reflection_undefined() const {
  return _internal_has_reflection_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_reflection_undefined() {
  _impl_.reflection_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_reflection_undefined() const {
  return _impl_.reflection_undefined_;
}
inline bool BaseShapeStylePropertyChangeSetArchive::reflection_undefined() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.reflection_undefined)
  return _internal_reflection_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::_internal_set_reflection_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.reflection_undefined_ = value;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_reflection_undefined(bool value) {
  _internal_set_reflection_undefined(value);
  // @@protoc_insertion_point(field_set:TSDSOS.BaseShapeStylePropertyChangeSetArchive.reflection_undefined)
}

// optional .TSDSOS.SpecLineEndArchive head_line_end = 11;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_head_line_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.head_line_end_ != nullptr);
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_head_line_end() const {
  return _internal_has_head_line_end();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_head_line_end() {
  if (_impl_.head_line_end_ != nullptr) _impl_.head_line_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::TSDSOS::SpecLineEndArchive& BaseShapeStylePropertyChangeSetArchive::_internal_head_line_end() const {
  const ::TSDSOS::SpecLineEndArchive* p = _impl_.head_line_end_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecLineEndArchive&>(
      ::TSDSOS::_SpecLineEndArchive_default_instance_);
}
inline const ::TSDSOS::SpecLineEndArchive& BaseShapeStylePropertyChangeSetArchive::head_line_end() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.head_line_end)
  return _internal_head_line_end();
}
inline void BaseShapeStylePropertyChangeSetArchive::unsafe_arena_set_allocated_head_line_end(
    ::TSDSOS::SpecLineEndArchive* head_line_end) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.head_line_end_);
  }
  _impl_.head_line_end_ = head_line_end;
  if (head_line_end) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.head_line_end)
}
inline ::TSDSOS::SpecLineEndArchive* BaseShapeStylePropertyChangeSetArchive::release_head_line_end() {
  _impl_._has_bits_[0] &= ~0x00000020u;
  ::TSDSOS::SpecLineEndArchive* temp = _impl_.head_line_end_;
  _impl_.head_line_end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecLineEndArchive* BaseShapeStylePropertyChangeSetArchive::unsafe_arena_release_head_line_end() {
  // @@protoc_insertion_point(field_release:TSDSOS.BaseShapeStylePropertyChangeSetArchive.head_line_end)
  _impl_._has_bits_[0] &= ~0x00000020u;
  ::TSDSOS::SpecLineEndArchive* temp = _impl_.head_line_end_;
  _impl_.head_line_end_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecLineEndArchive* BaseShapeStylePropertyChangeSetArchive::_internal_mutable_head_line_end() {
  _impl_._has_bits_[0] |= 0x00000020u;
  if (_impl_.head_line_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecLineEndArchive>(GetArenaForAllocation());
    _impl_.head_line_end_ = p;
  }
  return _impl_.head_line_end_;
}
inline ::TSDSOS::SpecLineEndArchive* BaseShapeStylePropertyChangeSetArchive::mutable_head_line_end() {
  ::TSDSOS::SpecLineEndArchive* _msg = _internal_mutable_head_line_end();
  // @@protoc_insertion_point(field_mutable:TSDSOS.BaseShapeStylePropertyChangeSetArchive.head_line_end)
  return _msg;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_allocated_head_line_end(::TSDSOS::SpecLineEndArchive* head_line_end) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.head_line_end_;
  }
  if (head_line_end) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(head_line_end);
    if (message_arena != submessage_arena) {
      head_line_end = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, head_line_end, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.head_line_end_ = head_line_end;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.head_line_end)
}

// optional bool head_line_end_undefined = 12;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_head_line_end_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_head_line_end_undefined() const {
  return _internal_has_head_line_end_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_head_line_end_undefined() {
  _impl_.head_line_end_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_head_line_end_undefined() const {
  return _impl_.head_line_end_undefined_;
}
inline bool BaseShapeStylePropertyChangeSetArchive::head_line_end_undefined() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.head_line_end_undefined)
  return _internal_head_line_end_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::_internal_set_head_line_end_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.head_line_end_undefined_ = value;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_head_line_end_undefined(bool value) {
  _internal_set_head_line_end_undefined(value);
  // @@protoc_insertion_point(field_set:TSDSOS.BaseShapeStylePropertyChangeSetArchive.head_line_end_undefined)
}

// optional .TSDSOS.SpecLineEndArchive tail_line_end = 13;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_tail_line_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tail_line_end_ != nullptr);
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_tail_line_end() const {
  return _internal_has_tail_line_end();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_tail_line_end() {
  if (_impl_.tail_line_end_ != nullptr) _impl_.tail_line_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::TSDSOS::SpecLineEndArchive& BaseShapeStylePropertyChangeSetArchive::_internal_tail_line_end() const {
  const ::TSDSOS::SpecLineEndArchive* p = _impl_.tail_line_end_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecLineEndArchive&>(
      ::TSDSOS::_SpecLineEndArchive_default_instance_);
}
inline const ::TSDSOS::SpecLineEndArchive& BaseShapeStylePropertyChangeSetArchive::tail_line_end() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.tail_line_end)
  return _internal_tail_line_end();
}
inline void BaseShapeStylePropertyChangeSetArchive::unsafe_arena_set_allocated_tail_line_end(
    ::TSDSOS::SpecLineEndArchive* tail_line_end) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.tail_line_end_);
  }
  _impl_.tail_line_end_ = tail_line_end;
  if (tail_line_end) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.tail_line_end)
}
inline ::TSDSOS::SpecLineEndArchive* BaseShapeStylePropertyChangeSetArchive::release_tail_line_end() {
  _impl_._has_bits_[0] &= ~0x00000040u;
  ::TSDSOS::SpecLineEndArchive* temp = _impl_.tail_line_end_;
  _impl_.tail_line_end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecLineEndArchive* BaseShapeStylePropertyChangeSetArchive::unsafe_arena_release_tail_line_end() {
  // @@protoc_insertion_point(field_release:TSDSOS.BaseShapeStylePropertyChangeSetArchive.tail_line_end)
  _impl_._has_bits_[0] &= ~0x00000040u;
  ::TSDSOS::SpecLineEndArchive* temp = _impl_.tail_line_end_;
  _impl_.tail_line_end_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecLineEndArchive* BaseShapeStylePropertyChangeSetArchive::_internal_mutable_tail_line_end() {
  _impl_._has_bits_[0] |= 0x00000040u;
  if (_impl_.tail_line_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecLineEndArchive>(GetArenaForAllocation());
    _impl_.tail_line_end_ = p;
  }
  return _impl_.tail_line_end_;
}
inline ::TSDSOS::SpecLineEndArchive* BaseShapeStylePropertyChangeSetArchive::mutable_tail_line_end() {
  ::TSDSOS::SpecLineEndArchive* _msg = _internal_mutable_tail_line_end();
  // @@protoc_insertion_point(field_mutable:TSDSOS.BaseShapeStylePropertyChangeSetArchive.tail_line_end)
  return _msg;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_allocated_tail_line_end(::TSDSOS::SpecLineEndArchive* tail_line_end) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.tail_line_end_;
  }
  if (tail_line_end) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(tail_line_end);
    if (message_arena != submessage_arena) {
      tail_line_end = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tail_line_end, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.tail_line_end_ = tail_line_end;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.BaseShapeStylePropertyChangeSetArchive.tail_line_end)
}

// optional bool tail_line_end_undefined = 14;
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_has_tail_line_end_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool BaseShapeStylePropertyChangeSetArchive::has_tail_line_end_undefined() const {
  return _internal_has_tail_line_end_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::clear_tail_line_end_undefined() {
  _impl_.tail_line_end_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline bool BaseShapeStylePropertyChangeSetArchive::_internal_tail_line_end_undefined() const {
  return _impl_.tail_line_end_undefined_;
}
inline bool BaseShapeStylePropertyChangeSetArchive::tail_line_end_undefined() const {
  // @@protoc_insertion_point(field_get:TSDSOS.BaseShapeStylePropertyChangeSetArchive.tail_line_end_undefined)
  return _internal_tail_line_end_undefined();
}
inline void BaseShapeStylePropertyChangeSetArchive::_internal_set_tail_line_end_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.tail_line_end_undefined_ = value;
}
inline void BaseShapeStylePropertyChangeSetArchive::set_tail_line_end_undefined(bool value) {
  _internal_set_tail_line_end_undefined(value);
  // @@protoc_insertion_point(field_set:TSDSOS.BaseShapeStylePropertyChangeSetArchive.tail_line_end_undefined)
}

// -------------------------------------------------------------------

// MediaStylePropertyChangeSetArchive

// optional .TSDSOS.SpecStrokeArchive stroke = 1;
inline bool MediaStylePropertyChangeSetArchive::_internal_has_stroke() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stroke_ != nullptr);
  return value;
}
inline bool MediaStylePropertyChangeSetArchive::has_stroke() const {
  return _internal_has_stroke();
}
inline void MediaStylePropertyChangeSetArchive::clear_stroke() {
  if (_impl_.stroke_ != nullptr) _impl_.stroke_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::TSDSOS::SpecStrokeArchive& MediaStylePropertyChangeSetArchive::_internal_stroke() const {
  const ::TSDSOS::SpecStrokeArchive* p = _impl_.stroke_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecStrokeArchive&>(
      ::TSDSOS::_SpecStrokeArchive_default_instance_);
}
inline const ::TSDSOS::SpecStrokeArchive& MediaStylePropertyChangeSetArchive::stroke() const {
  // @@protoc_insertion_point(field_get:TSDSOS.MediaStylePropertyChangeSetArchive.stroke)
  return _internal_stroke();
}
inline void MediaStylePropertyChangeSetArchive::unsafe_arena_set_allocated_stroke(
    ::TSDSOS::SpecStrokeArchive* stroke) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.stroke_);
  }
  _impl_.stroke_ = stroke;
  if (stroke) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.MediaStylePropertyChangeSetArchive.stroke)
}
inline ::TSDSOS::SpecStrokeArchive* MediaStylePropertyChangeSetArchive::release_stroke() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecStrokeArchive* temp = _impl_.stroke_;
  _impl_.stroke_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecStrokeArchive* MediaStylePropertyChangeSetArchive::unsafe_arena_release_stroke() {
  // @@protoc_insertion_point(field_release:TSDSOS.MediaStylePropertyChangeSetArchive.stroke)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::TSDSOS::SpecStrokeArchive* temp = _impl_.stroke_;
  _impl_.stroke_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecStrokeArchive* MediaStylePropertyChangeSetArchive::_internal_mutable_stroke() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.stroke_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecStrokeArchive>(GetArenaForAllocation());
    _impl_.stroke_ = p;
  }
  return _impl_.stroke_;
}
inline ::TSDSOS::SpecStrokeArchive* MediaStylePropertyChangeSetArchive::mutable_stroke() {
  ::TSDSOS::SpecStrokeArchive* _msg = _internal_mutable_stroke();
  // @@protoc_insertion_point(field_mutable:TSDSOS.MediaStylePropertyChangeSetArchive.stroke)
  return _msg;
}
inline void MediaStylePropertyChangeSetArchive::set_allocated_stroke(::TSDSOS::SpecStrokeArchive* stroke) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.stroke_;
  }
  if (stroke) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(stroke);
    if (message_arena != submessage_arena) {
      stroke = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stroke, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.stroke_ = stroke;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.MediaStylePropertyChangeSetArchive.stroke)
}

// optional bool stroke_undefined = 2;
inline bool MediaStylePropertyChangeSetArchive::_internal_has_stroke_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MediaStylePropertyChangeSetArchive::has_stroke_undefined() const {
  return _internal_has_stroke_undefined();
}
inline void MediaStylePropertyChangeSetArchive::clear_stroke_undefined() {
  _impl_.stroke_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool MediaStylePropertyChangeSetArchive::_internal_stroke_undefined() const {
  return _impl_.stroke_undefined_;
}
inline bool MediaStylePropertyChangeSetArchive::stroke_undefined() const {
  // @@protoc_insertion_point(field_get:TSDSOS.MediaStylePropertyChangeSetArchive.stroke_undefined)
  return _internal_stroke_undefined();
}
inline void MediaStylePropertyChangeSetArchive::_internal_set_stroke_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.stroke_undefined_ = value;
}
inline void MediaStylePropertyChangeSetArchive::set_stroke_undefined(bool value) {
  _internal_set_stroke_undefined(value);
  // @@protoc_insertion_point(field_set:TSDSOS.MediaStylePropertyChangeSetArchive.stroke_undefined)
}

// optional .TSSSOS.SpecDoubleArchive opacity = 3;
inline bool MediaStylePropertyChangeSetArchive::_internal_has_opacity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.opacity_ != nullptr);
  return value;
}
inline bool MediaStylePropertyChangeSetArchive::has_opacity() const {
  return _internal_has_opacity();
}
inline const ::TSSSOS::SpecDoubleArchive& MediaStylePropertyChangeSetArchive::_internal_opacity() const {
  const ::TSSSOS::SpecDoubleArchive* p = _impl_.opacity_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSSSOS::SpecDoubleArchive&>(
      ::TSSSOS::_SpecDoubleArchive_default_instance_);
}
inline const ::TSSSOS::SpecDoubleArchive& MediaStylePropertyChangeSetArchive::opacity() const {
  // @@protoc_insertion_point(field_get:TSDSOS.MediaStylePropertyChangeSetArchive.opacity)
  return _internal_opacity();
}
inline void MediaStylePropertyChangeSetArchive::unsafe_arena_set_allocated_opacity(
    ::TSSSOS::SpecDoubleArchive* opacity) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.opacity_);
  }
  _impl_.opacity_ = opacity;
  if (opacity) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.MediaStylePropertyChangeSetArchive.opacity)
}
inline ::TSSSOS::SpecDoubleArchive* MediaStylePropertyChangeSetArchive::release_opacity() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.opacity_;
  _impl_.opacity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MediaStylePropertyChangeSetArchive::unsafe_arena_release_opacity() {
  // @@protoc_insertion_point(field_release:TSDSOS.MediaStylePropertyChangeSetArchive.opacity)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::TSSSOS::SpecDoubleArchive* temp = _impl_.opacity_;
  _impl_.opacity_ = nullptr;
  return temp;
}
inline ::TSSSOS::SpecDoubleArchive* MediaStylePropertyChangeSetArchive::_internal_mutable_opacity() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.opacity_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSSSOS::SpecDoubleArchive>(GetArenaForAllocation());
    _impl_.opacity_ = p;
  }
  return _impl_.opacity_;
}
inline ::TSSSOS::SpecDoubleArchive* MediaStylePropertyChangeSetArchive::mutable_opacity() {
  ::TSSSOS::SpecDoubleArchive* _msg = _internal_mutable_opacity();
  // @@protoc_insertion_point(field_mutable:TSDSOS.MediaStylePropertyChangeSetArchive.opacity)
  return _msg;
}
inline void MediaStylePropertyChangeSetArchive::set_allocated_opacity(::TSSSOS::SpecDoubleArchive* opacity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.opacity_);
  }
  if (opacity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(opacity));
    if (message_arena != submessage_arena) {
      opacity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, opacity, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.opacity_ = opacity;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.MediaStylePropertyChangeSetArchive.opacity)
}

// optional bool opacity_undefined = 4;
inline bool MediaStylePropertyChangeSetArchive::_internal_has_opacity_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MediaStylePropertyChangeSetArchive::has_opacity_undefined() const {
  return _internal_has_opacity_undefined();
}
inline void MediaStylePropertyChangeSetArchive::clear_opacity_undefined() {
  _impl_.opacity_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool MediaStylePropertyChangeSetArchive::_internal_opacity_undefined() const {
  return _impl_.opacity_undefined_;
}
inline bool MediaStylePropertyChangeSetArchive::opacity_undefined() const {
  // @@protoc_insertion_point(field_get:TSDSOS.MediaStylePropertyChangeSetArchive.opacity_undefined)
  return _internal_opacity_undefined();
}
inline void MediaStylePropertyChangeSetArchive::_internal_set_opacity_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.opacity_undefined_ = value;
}
inline void MediaStylePropertyChangeSetArchive::set_opacity_undefined(bool value) {
  _internal_set_opacity_undefined(value);
  // @@protoc_insertion_point(field_set:TSDSOS.MediaStylePropertyChangeSetArchive.opacity_undefined)
}

// optional .TSDSOS.SpecShadowArchive shadow = 5;
inline bool MediaStylePropertyChangeSetArchive::_internal_has_shadow() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.shadow_ != nullptr);
  return value;
}
inline bool MediaStylePropertyChangeSetArchive::has_shadow() const {
  return _internal_has_shadow();
}
inline void MediaStylePropertyChangeSetArchive::clear_shadow() {
  if (_impl_.shadow_ != nullptr) _impl_.shadow_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::TSDSOS::SpecShadowArchive& MediaStylePropertyChangeSetArchive::_internal_shadow() const {
  const ::TSDSOS::SpecShadowArchive* p = _impl_.shadow_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecShadowArchive&>(
      ::TSDSOS::_SpecShadowArchive_default_instance_);
}
inline const ::TSDSOS::SpecShadowArchive& MediaStylePropertyChangeSetArchive::shadow() const {
  // @@protoc_insertion_point(field_get:TSDSOS.MediaStylePropertyChangeSetArchive.shadow)
  return _internal_shadow();
}
inline void MediaStylePropertyChangeSetArchive::unsafe_arena_set_allocated_shadow(
    ::TSDSOS::SpecShadowArchive* shadow) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.shadow_);
  }
  _impl_.shadow_ = shadow;
  if (shadow) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.MediaStylePropertyChangeSetArchive.shadow)
}
inline ::TSDSOS::SpecShadowArchive* MediaStylePropertyChangeSetArchive::release_shadow() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSDSOS::SpecShadowArchive* temp = _impl_.shadow_;
  _impl_.shadow_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecShadowArchive* MediaStylePropertyChangeSetArchive::unsafe_arena_release_shadow() {
  // @@protoc_insertion_point(field_release:TSDSOS.MediaStylePropertyChangeSetArchive.shadow)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::TSDSOS::SpecShadowArchive* temp = _impl_.shadow_;
  _impl_.shadow_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecShadowArchive* MediaStylePropertyChangeSetArchive::_internal_mutable_shadow() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.shadow_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecShadowArchive>(GetArenaForAllocation());
    _impl_.shadow_ = p;
  }
  return _impl_.shadow_;
}
inline ::TSDSOS::SpecShadowArchive* MediaStylePropertyChangeSetArchive::mutable_shadow() {
  ::TSDSOS::SpecShadowArchive* _msg = _internal_mutable_shadow();
  // @@protoc_insertion_point(field_mutable:TSDSOS.MediaStylePropertyChangeSetArchive.shadow)
  return _msg;
}
inline void MediaStylePropertyChangeSetArchive::set_allocated_shadow(::TSDSOS::SpecShadowArchive* shadow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.shadow_;
  }
  if (shadow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(shadow);
    if (message_arena != submessage_arena) {
      shadow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shadow, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.shadow_ = shadow;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.MediaStylePropertyChangeSetArchive.shadow)
}

// optional bool shadow_undefined = 6;
inline bool MediaStylePropertyChangeSetArchive::_internal_has_shadow_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MediaStylePropertyChangeSetArchive::has_shadow_undefined() const {
  return _internal_has_shadow_undefined();
}
inline void MediaStylePropertyChangeSetArchive::clear_shadow_undefined() {
  _impl_.shadow_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool MediaStylePropertyChangeSetArchive::_internal_shadow_undefined() const {
  return _impl_.shadow_undefined_;
}
inline bool MediaStylePropertyChangeSetArchive::shadow_undefined() const {
  // @@protoc_insertion_point(field_get:TSDSOS.MediaStylePropertyChangeSetArchive.shadow_undefined)
  return _internal_shadow_undefined();
}
inline void MediaStylePropertyChangeSetArchive::_internal_set_shadow_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.shadow_undefined_ = value;
}
inline void MediaStylePropertyChangeSetArchive::set_shadow_undefined(bool value) {
  _internal_set_shadow_undefined(value);
  // @@protoc_insertion_point(field_set:TSDSOS.MediaStylePropertyChangeSetArchive.shadow_undefined)
}

// optional .TSDSOS.SpecReflectionArchive reflection = 7;
inline bool MediaStylePropertyChangeSetArchive::_internal_has_reflection() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.reflection_ != nullptr);
  return value;
}
inline bool MediaStylePropertyChangeSetArchive::has_reflection() const {
  return _internal_has_reflection();
}
inline void MediaStylePropertyChangeSetArchive::clear_reflection() {
  if (_impl_.reflection_ != nullptr) _impl_.reflection_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::TSDSOS::SpecReflectionArchive& MediaStylePropertyChangeSetArchive::_internal_reflection() const {
  const ::TSDSOS::SpecReflectionArchive* p = _impl_.reflection_;
  return p != nullptr ? *p : reinterpret_cast<const ::TSDSOS::SpecReflectionArchive&>(
      ::TSDSOS::_SpecReflectionArchive_default_instance_);
}
inline const ::TSDSOS::SpecReflectionArchive& MediaStylePropertyChangeSetArchive::reflection() const {
  // @@protoc_insertion_point(field_get:TSDSOS.MediaStylePropertyChangeSetArchive.reflection)
  return _internal_reflection();
}
inline void MediaStylePropertyChangeSetArchive::unsafe_arena_set_allocated_reflection(
    ::TSDSOS::SpecReflectionArchive* reflection) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reflection_);
  }
  _impl_.reflection_ = reflection;
  if (reflection) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TSDSOS.MediaStylePropertyChangeSetArchive.reflection)
}
inline ::TSDSOS::SpecReflectionArchive* MediaStylePropertyChangeSetArchive::release_reflection() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSDSOS::SpecReflectionArchive* temp = _impl_.reflection_;
  _impl_.reflection_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TSDSOS::SpecReflectionArchive* MediaStylePropertyChangeSetArchive::unsafe_arena_release_reflection() {
  // @@protoc_insertion_point(field_release:TSDSOS.MediaStylePropertyChangeSetArchive.reflection)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::TSDSOS::SpecReflectionArchive* temp = _impl_.reflection_;
  _impl_.reflection_ = nullptr;
  return temp;
}
inline ::TSDSOS::SpecReflectionArchive* MediaStylePropertyChangeSetArchive::_internal_mutable_reflection() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.reflection_ == nullptr) {
    auto* p = CreateMaybeMessage<::TSDSOS::SpecReflectionArchive>(GetArenaForAllocation());
    _impl_.reflection_ = p;
  }
  return _impl_.reflection_;
}
inline ::TSDSOS::SpecReflectionArchive* MediaStylePropertyChangeSetArchive::mutable_reflection() {
  ::TSDSOS::SpecReflectionArchive* _msg = _internal_mutable_reflection();
  // @@protoc_insertion_point(field_mutable:TSDSOS.MediaStylePropertyChangeSetArchive.reflection)
  return _msg;
}
inline void MediaStylePropertyChangeSetArchive::set_allocated_reflection(::TSDSOS::SpecReflectionArchive* reflection) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.reflection_;
  }
  if (reflection) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(reflection);
    if (message_arena != submessage_arena) {
      reflection = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reflection, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.reflection_ = reflection;
  // @@protoc_insertion_point(field_set_allocated:TSDSOS.MediaStylePropertyChangeSetArchive.reflection)
}

// optional bool reflection_undefined = 8;
inline bool MediaStylePropertyChangeSetArchive::_internal_has_reflection_undefined() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MediaStylePropertyChangeSetArchive::has_reflection_undefined() const {
  return _internal_has_reflection_undefined();
}
inline void MediaStylePropertyChangeSetArchive::clear_reflection_undefined() {
  _impl_.reflection_undefined_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool MediaStylePropertyChangeSetArchive::_internal_reflection_undefined() const {
  return _impl_.reflection_undefined_;
}
inline bool MediaStylePropertyChangeSetArchive::reflection_undefined() const {
  // @@protoc_insertion_point(field_get:TSDSOS.MediaStylePropertyChangeSetArchive.reflection_undefined)
  return _internal_reflection_undefined();
}
inline void MediaStylePropertyChangeSetArchive::_internal_set_reflection_undefined(bool value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.reflection_undefined_ = value;
}
inline void MediaStylePropertyChangeSetArchive::set_reflection_undefined(bool value) {
  _internal_set_reflection_undefined(value);
  // @@protoc_insertion_point(field_set:TSDSOS.MediaStylePropertyChangeSetArchive.reflection_undefined)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TSDSOS

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_TSDArchives_2esos_2eproto
